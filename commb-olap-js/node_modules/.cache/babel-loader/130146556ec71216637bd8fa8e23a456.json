{"ast":null,"code":"import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * This is a file to create MDX query for the provided OLAP datasource\n * @hidden\n */\n\n/** @hidden */\n\nvar MDXQuery = function () {\n  function MDXQuery() {}\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n\n\n  MDXQuery.getCellSets = function (dataSourceSettings, olapEngine, refPaging, drillInfo, isQueryUpdate) {\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n    this.engine = olapEngine;\n    this.isMondrian = olapEngine.isMondrian;\n    this.isMeasureAvail = olapEngine.isMeasureAvail;\n    this.isPaging = olapEngine.isPaging;\n    this.pageSettings = olapEngine.pageSettings;\n    this.rows = olapEngine.rows;\n    this.columns = olapEngine.columns;\n    this.values = olapEngine.values;\n    this.filters = olapEngine.filters;\n    this.allowLabelFilter = olapEngine.allowLabelFilter;\n    this.allowValueFilter = olapEngine.allowValueFilter;\n    this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n    this.drilledMembers = olapEngine.updateDrilledItems(dataSourceSettings.drilledMembers);\n    this.calculatedFieldSettings = olapEngine.calculatedFieldSettings;\n    this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'rows' : 'columns';\n\n    if (drillInfo) {\n      drillInfo.axis = drillInfo.axis === 'row' ? 'rows' : 'columns';\n    }\n\n    this.filterMembers = extend({}, olapEngine.filterMembers, null, true);\n    this.fieldDataObj = olapEngine.fieldListObj;\n    this.fieldList = olapEngine.fieldList;\n    this.cellSetInfo = '\\nDIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n    var measureQuery = this.getMeasuresQuery(this.values);\n    /* eslint-disable */\n\n    var rowQuery = this.getDimensionsQuery(this.rows, measureQuery, 'rows', drillInfo).replace(/\\&/g, '&amp;');\n    var columnQuery = this.getDimensionsQuery(this.columns, measureQuery, 'columns', drillInfo).replace(/\\&/g, '&amp;');\n    /* eslint-enable */\n\n    if (this.isPaging && refPaging && this.pageSettings !== undefined) {\n      var pagingQuery = this.getPagingQuery(rowQuery, columnQuery);\n      rowQuery = pagingQuery.rowQuery;\n      columnQuery = pagingQuery.columnQuery;\n    } else if (this.isPaging && !refPaging && this.pageSettings !== undefined) {\n      var pagingQuery = this.getPagingCountQuery(rowQuery, columnQuery);\n      rowQuery = pagingQuery.rowQuery;\n      columnQuery = pagingQuery.columnQuery;\n    }\n    /* eslint-disable */\n\n\n    rowQuery = rowQuery.length > 0 ? rowQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON ROWS') : '';\n    columnQuery = columnQuery.length > 0 ? columnQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON COLUMNS') : '';\n    var slicerQuery = this.getSlicersQuery(this.filters, 'filters').replace(/\\&/g, '&amp;');\n    var filterQuery = this.getfilterQuery(this.filterMembers, dataSourceSettings.cube).replace(/\\&/g, '&amp;').replace(/\\>/g, '&gt;').replace(/\\</g, '&lt;');\n    var caclQuery = this.getCalculatedFieldQuery(this.calculatedFieldSettings).replace(/\\&/g, '&amp;');\n    /* eslint-enable */\n\n    var query = this.frameMDXQuery(rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging);\n    var args = {\n      catalog: dataSourceSettings.catalog,\n      cube: dataSourceSettings.cube,\n      url: dataSourceSettings.url,\n      request: query,\n\n      /* eslint-disable */\n      LCID: dataSourceSettings.localeIdentifier.toString()\n    };\n    olapEngine.mdxQuery = query.replace(/\\&amp;/g, '&').replace(/\\&gt;/g, '>').replace(/\\&lt;/g, '<').replace(/%280/g, '\\\"'); // console.log(olapEngine.mdxQuery);\n\n    if (drillInfo) {\n      drillInfo.axis = drillInfo.axis === 'rows' ? 'row' : 'column';\n    }\n\n    if (!isQueryUpdate) {\n      this.getTableCellData(args, this.isPaging && !refPaging ? this.engine.generatePagingData.bind(this.engine) : this.engine.generateEngine.bind(this.engine), drillInfo ? {\n        action: drillInfo.action,\n        drillInfo: drillInfo\n      } : {\n        dataSourceSettings: dataSourceSettings,\n        action: 'loadTableElements'\n      });\n    }\n  };\n\n  MDXQuery.getTableCellData = function (args, successMethod, customArgs) {\n    var connectionString = this.engine.getConnectionInfo(args.url, args.LCID);\n    var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"> <Header></Header> <Body> <Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"> <Command> <Statement>' + args.request + '</Statement> </Command> <Properties> <PropertyList> <Catalog>' + args.catalog + '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier> </PropertyList> </Properties></Execute> </Body> </Envelope>';\n    this.engine.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n  };\n  /* eslint-enable */\n\n\n  MDXQuery.frameMDXQuery = function (rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging) {\n    var query = this.isPaging && !refPaging ? caclQuery !== '' ? '' : '\\nWITH' : '\\nSelect ';\n\n    if (columnQuery.length > 0) {\n      query = query + columnQuery;\n    }\n\n    if (rowQuery.length > 0) {\n      query = query + (columnQuery.length > 0 ? this.isPaging && !refPaging ? '' : ', ' : '') + rowQuery;\n    }\n\n    query = caclQuery + query + (this.isPaging && !refPaging ? '\\nMEMBER [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] AS Count([e16a30d0-2174-4874-8dae-a5085a75a3e2]) ' + 'MEMBER [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] AS Count ([d1876d2b-e50e-4547-85fe-5b8ed9d629de])' + '\\nSELECT { [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] , [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] } ON AXIS(0)' : '') + filterQuery + slicerQuery + '\\nCELL PROPERTIES VALUE, FORMAT_STRING, FORMATTED_VALUE\\n';\n    return query;\n  };\n\n  MDXQuery.getPagingQuery = function (rowQuery, columnQuery) {\n    // let colCurrentPage: number = (Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage || this.pageSettings.columnCurrentPage === 0) ? ((Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage && this.engine.columnCount > 0) ? Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) : this.pageSettings.columnCurrentPage) : this.pageSettings.columnCurrentPage;\n    // let rowCurrentPage: number = (Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage || this.pageSettings.rowCurrentPage === 0) ? ((Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage && this.engine.rowCount > 0) ? Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) : this.pageSettings.rowSize) : this.pageSettings.rowCurrentPage;\n    rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n    columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n    var rowQueryCpy = rowQuery; // let axisQuery: pagingQuery = {\n    //     rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (((rowCurrentPage === 0 ? 1 : rowCurrentPage) - 1) * (this.pageSettings.rowSize)) + ',' + this.pageSettings.rowSize + ')') : '',\n    //     columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (((colCurrentPage === 0 ? 1 : colCurrentPage) - 1) * (this.pageSettings.columnSize)) + ',' + this.pageSettings.columnSize + ')') : ''\n    // }\n\n    var calRowPage = (this.pageSettings.rowCurrentPage - 1) * this.pageSettings.rowSize;\n    var calColPage = (this.pageSettings.columnCurrentPage - 1) * this.pageSettings.columnSize;\n    var calRowSize = this.pageSettings.rowSize * 3;\n    var calColumnSize = this.pageSettings.columnSize * 3;\n    calRowPage = this.engine.rowCount < calRowPage + calRowSize ? this.engine.rowCount > calRowSize ? this.engine.rowCount - calRowSize : 0 : calRowPage;\n    this.engine.pageRowStartPos = calRowPage;\n    calColPage = this.engine.columnCount < calColPage + calColumnSize ? this.engine.columnCount > calColumnSize ? this.engine.columnCount - calColumnSize : 0 : calColPage;\n    this.engine.pageColStartPos = calColPage;\n    var axisQuery = {\n      rowQuery: rowQuery !== '' ? '\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + calRowPage + ',' + calRowSize + ')' : '',\n      columnQuery: columnQuery !== '' ? '\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + calColPage + ',' + calColumnSize + ')' : ''\n    };\n    return axisQuery;\n  };\n\n  MDXQuery.getPagingCountQuery = function (rowQuery, columnQuery) {\n    /* eslint-disable */\n    rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n    columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n    var rowQueryCpy = rowQuery;\n    'WITH  SET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as';\n    'SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as';\n    var axisQuery = {\n      rowQuery: rowQuery !== '' ? '\\SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')\\n' : '',\n      columnQuery: columnQuery !== '' ? '\\nSET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')\\n' : ''\n    };\n    return axisQuery;\n    /* eslint-enable */\n  };\n  /* eslint-enable max-len */\n\n\n  MDXQuery.getDimensionsQuery = function (dimensions, measureQuery, axis, drillInfo) {\n    var query = '';\n\n    if (dimensions.length > 0) {\n      query = '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n      var i = 0;\n\n      while (i < dimensions.length) {\n        var hierarchy = '';\n\n        if (i === 0) {\n          if (dimensions[i].name.toLowerCase() === '[measures]') {\n            if (measureQuery !== '') {\n              query = query + measureQuery;\n            }\n          } else {\n            hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n            query = query + hierarchy;\n          }\n        } else {\n          if (dimensions[i].name.toLowerCase() === '[measures]') {\n            if (measureQuery !== '') {\n              query = query + ' * ' + measureQuery;\n            }\n          } else {\n            hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n            query = query + ' * ' + hierarchy;\n          }\n        }\n\n        i++;\n      }\n\n      var drillQueryObj = this.getDrillQuery(dimensions, measureQuery, axis, drillInfo);\n      query = drillInfo && drillInfo.axis === axis ? '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '') + drillQueryObj.query : query + (drillQueryObj.query !== '' ? ',' : '') + drillQueryObj.query;\n      var drillQuery = this.getAttributeDrillQuery(dimensions, measureQuery, axis, drillInfo);\n      query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) + (this.isPaging ? (drillQuery !== '' ? '-' : '') + drillQuery : '') + (this.drilledMembers.length > 0 ? '})' : '') + (!this.isPaging ? (drillQuery !== '' ? '-' : '') + drillQuery : '') + ')';\n    }\n\n    return query;\n  };\n\n  MDXQuery.getAttributeDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n    var query = '';\n    var drilledMembers = [];\n    var isOnDemandDrill = false;\n    /* eslint-disable */\n\n    if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n      isOnDemandDrill = true;\n      drilledMembers = [{\n        name: drillInfo.fieldName,\n        items: [drillInfo.memberName],\n        delimiter: '~~'\n      }];\n    } else {\n      drilledMembers = this.drilledMembers;\n    }\n    /* eslint-enable */\n\n\n    var measurePos = axis === this.valueAxis ? this.getMeasurePos(axis) : 0;\n\n    for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n      var field = drilledMembers_1[_i];\n      var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n\n      if (isHierarchy) {\n        for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n          var item = _b[_a];\n          var drillQuery = [];\n          var drillInfo_1 = item.split(field.delimiter ? field.delimiter : '~~');\n          var result = this.getDrillLevel(dimensions, drillInfo_1);\n          var fieldPosition = this.getDimensionPos(axis, field.name);\n          var index = dimensions.length - (measurePos > fieldPosition ? 1 : 0);\n          var isExist = this.isPaging ? this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), field.delimiter, drillInfo_1, axis) : false;\n\n          while (result.level > 0 && result.isDrill && fieldPosition + 1 !== measurePos && !isExist) {\n            var levelQuery = [];\n            var i = 0;\n\n            while (i < dimensions.length) {\n              if (dimensions[i].name.toLowerCase() === '[measures]') {\n                if (measureQuery !== '') {\n                  levelQuery.push('({{' + drillInfo_1[i] + '}})');\n                }\n              } else if (drillInfo_1[i] && (drillInfo_1[i].indexOf(dimensions[i].name) !== -1 || dimensions[i].isNamedSet && this.fieldList[dimensions[i].name] && drillInfo_1[i].indexOf(this.fieldList[dimensions[i].name].pid.split('Sets_')[1]) !== -1)) {\n                levelQuery.push(this.getHierarchyQuery(drillInfo_1[i], false, false, false, result.level, true));\n              } else if (!drillInfo_1[i] && dimensions[i]) {\n                levelQuery.push(this.getHierarchyQuery(dimensions[i].name, this.isPaging && result.level === 2 || !this.isPaging && index > i ? true : false, dimensions[i].isNamedSet, dimensions[i].isCalculatedField, result.level, false));\n                /* eslint-disable-line */\n              } else {\n                levelQuery = [];\n                break;\n              }\n\n              i++;\n            }\n\n            if (levelQuery.length > 0) {\n              drillQuery.push('(' + levelQuery.join('*') + ')');\n            }\n\n            result.level--;\n            index--;\n          }\n\n          if (drillQuery.length > 0) {\n            query = query + (query !== '' ? '-' : '') + drillQuery.join(this.isPaging ? '+' : '-');\n          }\n        }\n      }\n    }\n\n    return query;\n  };\n\n  MDXQuery.getDimensionPos = function (axis, field) {\n    var position = 0;\n    var dimensions = axis === 'rows' ? this.rows : this.columns;\n\n    for (var i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].name === field) {\n        position = i;\n        break;\n      }\n    }\n\n    return position;\n  };\n\n  MDXQuery.getMeasurePos = function (axis) {\n    var position = 0;\n    var dimensions = axis === 'rows' ? this.rows : this.columns;\n\n    for (var i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].name.indexOf('[Measures]') === 0) {\n        position = i;\n        break;\n      }\n    }\n\n    return position;\n  };\n\n  MDXQuery.getDrillLevel = function (dimensions, drillInfo) {\n    var level = dimensions.length;\n    var isDrill = false;\n    var i = 0;\n\n    while (i < dimensions.length) {\n      if (drillInfo[i] && drillInfo[i].indexOf(dimensions[i].name) !== -1) {\n        level -= 1;\n\n        if (dimensions[i + 1] && !(dimensions[i + 1].isNamedSet || dimensions[i + 1].name.indexOf('[Measures]') === 0 || this.fieldList[dimensions[i + 1].name] && !this.fieldList[dimensions[i + 1].name].hasAllMember)) {\n          isDrill = true;\n        }\n      } else if (dimensions[i].isNamedSet || dimensions[i].name.indexOf('[Measures]') === 0 || this.fieldList[dimensions[i].name] && !this.fieldList[dimensions[i].name].hasAllMember) {\n        level -= 1;\n      }\n\n      i++;\n    }\n\n    return {\n      level: this.isPaging ? 2 : level,\n      isDrill: isDrill\n    };\n  };\n\n  MDXQuery.getHierarchyQuery = function (name, isChildren, isNamedSet, isCalculatedField, level, isDrill) {\n    name = isCalculatedField ? this.fieldList[name].tag : name;\n    return this.fieldList[name] && !this.fieldList[name].hasAllMember && !isNamedSet && !isCalculatedField ? '((' + name + ').levels(0).AllMembers)' : isNamedSet || isCalculatedField ? '({' + name + '})' : this.isPaging ? '({' + name + (isChildren ? '.CHILDREN})' : !isDrill && level === 1 ? '.[All]})' : '})') : '({DrilldownLevel({' + name + (isChildren ? '.CHILDREN' : '') + '},,,INCLUDE_CALC_MEMBERS' + ')})';\n  };\n\n  MDXQuery.isAttributeMemberExist = function (hierarchy, item, delimiter, drillInfo, axis) {\n    item.splice(drillInfo.length - 1, 1);\n    var isAvailable = false;\n\n    if (item.join(delimiter) !== '' && !(this.isPaging && item.length === 1 && item.join(delimiter) === '[Measures]') && this.engine.fieldList[hierarchy] && this.engine.fieldList[hierarchy].hasAllMember) {\n      var hierarchyPosition = this.getDimensionPos(axis, hierarchy);\n\n      for (var i = 0; i < this.drilledMembers.length; i++) {\n        if (hierarchy !== this.drilledMembers[i].name) {\n          var isHierarchy = this.engine.fieldList[this.drilledMembers[i].name] ? this.engine.fieldList[this.drilledMembers[i].name].isHierarchy : false;\n\n          if (isHierarchy) {\n            var fieldPosition = this.getDimensionPos(axis, this.drilledMembers[i].name);\n\n            for (var j = 0; j < this.drilledMembers[i].items.length; j++) {\n              var result = this.getDrillLevel(axis === 'rows' ? this.rows : this.columns, this.drilledMembers[i].items[j].split(this.drilledMembers[i].delimiter ? this.drilledMembers[i].delimiter : '~~'));\n\n              if ((this.isPaging ? fieldPosition < hierarchyPosition && result.isDrill : true) && (this.drilledMembers[i].items[j].indexOf(item.join(delimiter)) === 0 || item.join(delimiter).indexOf(this.drilledMembers[i].items[j]) === 0)) {\n                /* eslint-disable-line */\n                isAvailable = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return isAvailable;\n  };\n\n  MDXQuery.getDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n    var query = '';\n    var rawDrillQuery = [];\n    var drilledMembers = [];\n    var isOnDemandDrill = false;\n    var onDemandDrillQuery = '';\n\n    if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n      isOnDemandDrill = true;\n      drilledMembers = [{\n        name: drillInfo.fieldName,\n        items: [drillInfo.memberName],\n        delimiter: '~~'\n      }];\n    } else {\n      drilledMembers = this.drilledMembers;\n    }\n\n    for (var _i = 0, drilledMembers_2 = drilledMembers; _i < drilledMembers_2.length; _i++) {\n      var field = drilledMembers_2[_i];\n      var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n\n      if (!isHierarchy) {\n        for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n          var item = _b[_a];\n          var drillQuery = [];\n          var rawQuery = [];\n          var i = 0;\n          var drillInfo_2 = item.split(field.delimiter ? field.delimiter : '~~');\n          var isExist = this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), field.delimiter ? field.delimiter : '~~', drillInfo_2, axis);\n\n          while (i < dimensions.length && !isExist) {\n            if (drillInfo_2[i] && drillInfo_2[i].indexOf(dimensions[i].name) !== -1) {\n              if (drillInfo_2[drillInfo_2.length - 1].indexOf(dimensions[i].name) !== -1) {\n                if (isOnDemandDrill) {\n                  onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '.CHILDREN})';\n                } else {\n                  drillQuery.push('(' + drillInfo_2[i] + '.CHILDREN)');\n                  rawQuery.push('(' + drillInfo_2[i] + ')');\n                }\n              } else {\n                if (drillInfo_2[i].toLowerCase() === '[measures]' && measureQuery !== '') {\n                  if (isOnDemandDrill) {\n                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                  } else {\n                    drillQuery.push('(' + measureQuery + ')');\n                    rawQuery.push('(' + measureQuery + ')');\n                  }\n                } else if (drillInfo_2[i].toLowerCase().indexOf('[measures]') !== -1) {\n                  if (isOnDemandDrill) {\n                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                  } else {\n                    drillQuery.push('({' + drillInfo_2[i] + '})');\n                    rawQuery.push('({' + drillInfo_2[i] + '})');\n                  }\n                } else {\n                  if (isOnDemandDrill) {\n                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                  } else {\n                    drillQuery.push('(' + drillInfo_2[i] + ')');\n                    rawQuery.push('(' + drillInfo_2[i] + ')');\n                  }\n                }\n              }\n            } else if (!drillInfo_2[i] && dimensions[i]) {\n              if (dimensions[i].name.toLowerCase() === '[measures]' && measureQuery !== '') {\n                if (isOnDemandDrill) {\n                  onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                } else {\n                  drillQuery.push('(' + measureQuery + ')');\n                  rawQuery.push('(' + measureQuery + ')');\n                }\n              } else {\n                if (isOnDemandDrill) {\n                  onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                } else {\n                  drillQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                  rawQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                }\n              }\n            } else {\n              drillQuery = [];\n              break;\n            }\n\n            i++;\n          }\n\n          if (drillQuery.length > 0 && drillQuery.length < drillInfo_2.length) {\n            drillQuery = [];\n            rawQuery = [];\n          } // query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString().replace(/\\&/g, \"&amp;\") + ')' : '');\n\n\n          query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString() + ')' : '');\n          /* eslint-enable max-len */\n\n          if (rawQuery.length > 0) {\n            rawDrillQuery.push('(' + rawQuery.toString() + ')');\n          }\n        }\n      }\n    } // return (isOnDemandDrill ? onDemandDrillQuery.replace(/\\&/g, \"&amp;\") : query);\n\n\n    var queryCollection = {\n      query: isOnDemandDrill ? onDemandDrillQuery : query,\n      collection: isOnDemandDrill ? [onDemandDrillQuery] : rawDrillQuery\n    };\n    return queryCollection;\n  };\n\n  MDXQuery.updateValueSortQuery = function (query, valueSortSettings) {\n    if (valueSortSettings && valueSortSettings.measure && valueSortSettings.measure !== '') {\n      var heirarchize = this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '';\n      var measure = this.fieldList[valueSortSettings.measure].isCalculatedField ? this.fieldList[valueSortSettings.measure].tag : valueSortSettings.measure;\n\n      switch (valueSortSettings.sortOrder) {\n        case 'Ascending':\n          query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n          query = query + '},(' + measure + '), ASC)'; // query = query + '},(' + valueSortSettings.measure + '), ' +\n          //     (valueSortSettings.preserveHierarchy ? 'BASC' : 'ASC') + ')';\n\n          break;\n\n        case 'Descending':\n          query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n          query = query + '},(' + measure + '), DESC)'; // query = query + '},(' + valueSortSettings.measure + '), ' +\n          //     (valueSortSettings.preserveHierarchy ? 'BDESC' : 'DESC') + ')';\n\n          break;\n      }\n    }\n\n    return query;\n  };\n  /* eslint-disable */\n\n\n  MDXQuery.getSlicersQuery = function (slicers, axis) {\n    var _this = this;\n\n    var query = '';\n    var dataFields = extend([], this.rows, null, true);\n    dataFields = dataFields.concat(this.columns);\n\n    if (slicers.length > 0) {\n      var i_1 = 0;\n\n      while (i_1 < slicers.length) {\n        var isCol = dataFields.filter(function (field) {\n          var colUqName = _this.getDimensionUniqueName(field.name);\n\n          var slicerUqName = _this.getDimensionUniqueName(slicers[i_1].name);\n\n          var isMatch = false;\n          isMatch = colUqName === slicerUqName && !(_this.isMondrian && slicerUqName === '' && colUqName === '');\n          return isMatch;\n        }).length > 0;\n\n        if (!isCol) {\n          if (slicers[i_1].name !== undefined && !this.filterMembers[slicers[i_1].name]) {\n            query = query + (query !== '' ? ' * ' : '') + '{' + this.getDimensionQuery(slicers[i_1], axis) + '}';\n          } else if (this.filterMembers[slicers[i_1].name]) {\n            query = query + (query !== '' ? ' * ' : '') + '{' + this.filterMembers[slicers[i_1].name].toString() + '}';\n          }\n        }\n\n        i_1++;\n      }\n\n      query = query === '' ? '' : '\\nWHERE (' + query.replace(/DrilldownLevel/g, '') + ')';\n    }\n\n    return query;\n  };\n  /* eslint-enable */\n\n\n  MDXQuery.getDimensionQuery = function (dimension, axis) {\n    var query = '';\n    var name = dimension.isCalculatedField ? this.fieldList[dimension.name].tag : dimension.name;\n    var hasAllMember = this.fieldList[dimension.name].hasAllMember;\n\n    if (!hasAllMember && !dimension.isNamedSet && !dimension.isCalculatedField) {\n      query = '((' + name + ').levels(0).AllMembers)';\n    } else {\n      query = dimension.isNamedSet ? '{' + name + '}' : this.isPaging ? name + '.CHILDREN' : 'DrilldownLevel({' + name + '}' + (axis === 'rows' || axis === 'columns' ? ',,,INCLUDE_CALC_MEMBERS' : '') + ')';\n    }\n\n    return query;\n  };\n\n  MDXQuery.getDimensionUniqueName = function (headerText) {\n    var hierarchyNode = this.fieldDataObj.hierarchy;\n    var curElement = [];\n\n    if (hierarchyNode) {\n      // let curElement: IOlapField[] = hierarchyNode.filter((item: IOlapField) => {\n      //     return (item.id.toLowerCase() === headerText.toLowerCase());\n      // });\n      for (var _i = 0, hierarchyNode_1 = hierarchyNode; _i < hierarchyNode_1.length; _i++) {\n        var item = hierarchyNode_1[_i];\n\n        if (item.id.toLowerCase() === headerText.toLowerCase()) {\n          curElement.push(item);\n        }\n      }\n\n      return curElement.length > 0 ? curElement[0].pid : '';\n    } else {\n      return headerText.split('.')[0];\n    }\n  };\n\n  MDXQuery.getMeasuresQuery = function (measures) {\n    var query = '';\n\n    if (measures.length > 0) {\n      query = '{{';\n      var values = '';\n\n      for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n        var measure = measures_1[_i];\n        var name_1 = measure.isCalculatedField ? this.fieldList[measure.name].tag : measure.name;\n\n        if (values.length > 0) {\n          values = values + ', ' + name_1;\n        } else {\n          values = name_1;\n        }\n      }\n\n      query = query + values + '}}';\n    }\n\n    return query;\n  };\n\n  MDXQuery.getfilterQuery = function (filters, cube) {\n    var query = '\\nFROM [' + cube + ']';\n    var filterQuery = '\\nFROM( SELECT (';\n    var advancedFilters = [];\n    var advancedFilterQuery = [];\n    var rowFilter = [];\n    var columnFilter = [];\n\n    for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n      var field = _a[_i];\n\n      if (filters[field.name] && filters[field.name].length > 0) {\n        if (typeof filters[field.name][0] === 'string') {\n          rowFilter.push(filters[field.name]);\n        } else {\n          filters[field.name][1] = filters[field.name][0].type;\n          advancedFilters.push(filters[field.name]);\n          delete filters[field.name];\n        }\n      }\n    }\n\n    for (var _b = 0, _c = this.columns; _b < _c.length; _b++) {\n      var field = _c[_b];\n\n      if (filters[field.name] && filters[field.name].length > 0) {\n        if (typeof filters[field.name][0] === 'string') {\n          columnFilter.push(filters[field.name]);\n        } else {\n          /* eslint-disable @typescript-eslint/no-explicit-any */\n          var filter = filters[field.name];\n          /* eslint-enable @typescript-eslint/no-explicit-any */\n\n          filter[1] = filter[0].type;\n          advancedFilters.push(filters[field.name]);\n          delete filters[field.name];\n        }\n      }\n    }\n\n    for (var _d = 0, _e = this.filters; _d < _e.length; _d++) {\n      var field = _e[_d];\n      var isFound = false;\n\n      for (var _f = 0, _g = this.columns; _f < _g.length; _f++) {\n        var column = _g[_f];\n\n        if (this.getDimensionUniqueName(column.name) === this.getDimensionUniqueName(field.name)) {\n          if (filters[field.name]) {\n            columnFilter.push(filters[field.name]);\n            isFound = true;\n          }\n        }\n      }\n\n      if (!isFound) {\n        for (var _h = 0, _j = this.rows; _h < _j.length; _h++) {\n          var row = _j[_h];\n\n          if (this.getDimensionUniqueName(row.name) === this.getDimensionUniqueName(field.name)) {\n            if (filters[field.name]) {\n              rowFilter.push(filters[field.name]);\n            }\n          }\n        }\n      }\n    }\n\n    if ((this.allowLabelFilter || this.allowValueFilter) && advancedFilters.length > 0) {\n      var axes = ['Value', 'Label'];\n\n      for (var _k = 0, axes_1 = axes; _k < axes_1.length; _k++) {\n        var axis = axes_1[_k];\n\n        for (var _l = 0, advancedFilters_1 = advancedFilters; _l < advancedFilters_1.length; _l++) {\n          var filterItems = advancedFilters_1[_l];\n\n          if (filterItems && filterItems.length === 2 && typeof filterItems[1] === 'string' && filterItems[1] === axis) {\n            advancedFilterQuery.push(this.getAdvancedFilterQuery(filterItems[0], filterQuery, 'COLUMNS'));\n          }\n        }\n      }\n    }\n\n    for (var i = 0, cnt = columnFilter.length; i < cnt; i++) {\n      filterQuery = i === 0 ? filterQuery + '{' + columnFilter[i].toString() + '}' : filterQuery + ',{' + columnFilter[i].toString() + '}';\n    }\n\n    if (columnFilter.length > 0) {\n      filterQuery = rowFilter.length > 0 ? filterQuery + ' ) ON COLUMNS ' + ',(' : filterQuery + ' ) ON COLUMNS';\n    }\n\n    for (var i = 0, cnt = rowFilter.length; i < cnt; i++) {\n      filterQuery = i > 0 ? filterQuery + ',{' + rowFilter[i].toString() + '}' : filterQuery + '{' + rowFilter[i].toString() + '}';\n    }\n\n    filterQuery = columnFilter.length > 0 && rowFilter.length > 0 ? filterQuery = filterQuery + ') ON ROWS ' : columnFilter.length === 0 && rowFilter.length > 0 ? filterQuery + ') ON COLUMNS ' : filterQuery;\n    var updatedFilterQuery = '';\n\n    if (advancedFilterQuery.length > 0) {\n      updatedFilterQuery = advancedFilterQuery.join(' ') + ' ' + (columnFilter.length > 0 || rowFilter.length > 0 ? filterQuery : '') + ' ' + query + Array(advancedFilterQuery.length + 1 + (columnFilter.length > 0 || rowFilter.length > 0 ? 1 : 0)).join(')');\n    }\n\n    query = columnFilter.length === 0 && rowFilter.length === 0 ? query : filterQuery + query + ')';\n    return updatedFilterQuery.length > 0 ? updatedFilterQuery : query;\n  };\n\n  MDXQuery.getAdvancedFilterQuery = function (filterItem, query, currentAxis) {\n    var filterQuery = '\\nFROM (SELECT Filter(' + filterItem.selectedField + '.AllMembers, ' + this.getAdvancedFilterCondtions(filterItem.name, filterItem.condition, filterItem.value1, filterItem.value2, filterItem.type, filterItem.measure) +\n    /* eslint-disable-line */\n    ')) on ' + currentAxis;\n    return filterQuery;\n  };\n  /* eslint-disable */\n\n\n  MDXQuery.getAdvancedFilterCondtions = function (fieldName, filterOperator, value1, value2, filterType, measures) {\n    var advancedFilterQuery = '';\n\n    switch (filterOperator) {\n      case 'Equals':\n        advancedFilterQuery = '(' + (filterType !== 'Value' ? fieldName + '.CurrentMember.member_caption =\\\"' + value1 + '\\\"' : measures + ' = ' + value1);\n        break;\n\n      case 'DoesNotEquals':\n        advancedFilterQuery = '(' + (filterType !== 'Value' ? fieldName + '.CurrentMember.member_caption <>\\\"' + value1 + '\\\"' : measures + ' <>' + value1);\n        break;\n\n      case 'Contains':\n        advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n        break;\n\n      case 'DoesNotContains':\n        advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\")=0';\n        break;\n\n      case 'BeginWith':\n        advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n        break;\n\n      case 'DoesNotBeginWith':\n        advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n        break;\n\n      case 'EndsWith':\n        advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n        break;\n\n      case 'DoesNotEndsWith':\n        advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n        break;\n\n      case 'GreaterThan':\n        advancedFilterQuery = '(' + (filterType !== 'Value' ? fieldName + '.CurrentMember.member_caption >\\\"' + value1 + '\\\"' : measures + ' >' + value1 + '');\n        break;\n\n      case 'GreaterThanOrEqualTo':\n        advancedFilterQuery = '(' + (filterType !== 'Value' ? fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"' : measures + ' >=' + value1 + '');\n        break;\n\n      case 'LessThan':\n        advancedFilterQuery = '(' + (filterType !== 'Value' ? fieldName + '.CurrentMember.member_caption <\\\"' + value1 + '\\\"' : measures + ' <' + value1 + '');\n        break;\n\n      case 'LessThanOrEqualTo':\n        advancedFilterQuery = '(' + (filterType !== 'Value' ? fieldName + '.CurrentMember.member_caption <=\\\"' + value1 + '\\\"' : measures + ' <=' + value1 + '');\n        break;\n\n      case 'Between':\n        advancedFilterQuery = '(' + (filterType !== 'Value' ? fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"AND ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"' : measures + ' >=' + value1 + ' AND ' + measures + ' <=' + value2);\n        break;\n\n      case 'NotBetween':\n        advancedFilterQuery = '(' + (filterType !== 'Value' ? fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"OR ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"' : measures + ' >=' + value1 + ' OR ' + measures + ' <=' + value2);\n        break;\n\n      default:\n        advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n        break;\n    }\n\n    return advancedFilterQuery;\n  };\n  /* eslint-enable max-len */\n\n\n  MDXQuery.getCalculatedFieldQuery = function (calcMembers) {\n    var calcQuery = '';\n\n    if (calcMembers.length > 0) {\n      calcQuery = '\\nWITH';\n\n      for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n        var member = calcMembers_1[_i];\n        var prefixName = member.formula.indexOf('Measure') > -1 ? '[Measures].' : member.hierarchyUniqueName + '.';\n        var aliasName = prefixName + '[' + member.name + ']';\n        var formatString = !isNullOrUndefined(member.formatString) ? member.formatString : null;\n        calcQuery += '\\nMEMBER ' + aliasName + 'as (' + member.formula + ') ' + (!isNullOrUndefined(formatString) ? ', FORMAT_STRING =\\\"' + formatString.trim() + '\\\"' : '');\n      }\n    }\n\n    return calcQuery;\n  };\n\n  return MDXQuery;\n}();\n\nexport { MDXQuery };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-pivotview/src/base/olap/mdx-query.js"],"names":["extend","isNullOrUndefined","MDXQuery","getCellSets","dataSourceSettings","olapEngine","refPaging","drillInfo","isQueryUpdate","engine","isMondrian","isMeasureAvail","isPaging","pageSettings","rows","columns","values","filters","allowLabelFilter","allowValueFilter","valueSortSettings","undefined","drilledMembers","updateDrilledItems","calculatedFieldSettings","valueAxis","axis","filterMembers","fieldDataObj","fieldListObj","fieldList","cellSetInfo","measureQuery","getMeasuresQuery","rowQuery","getDimensionsQuery","replace","columnQuery","pagingQuery","getPagingQuery","getPagingCountQuery","length","slicerQuery","getSlicersQuery","filterQuery","getfilterQuery","cube","caclQuery","getCalculatedFieldQuery","query","frameMDXQuery","args","catalog","url","request","LCID","localeIdentifier","toString","mdxQuery","getTableCellData","generatePagingData","bind","generateEngine","action","successMethod","customArgs","connectionString","getConnectionInfo","soapMessage","doAjaxPost","slice","rowQueryCpy","calRowPage","rowCurrentPage","rowSize","calColPage","columnCurrentPage","columnSize","calRowSize","calColumnSize","rowCount","pageRowStartPos","columnCount","pageColStartPos","axisQuery","dimensions","i","hierarchy","name","toLowerCase","getDimensionQuery","drillQueryObj","getDrillQuery","drillQuery","getAttributeDrillQuery","updateValueSortQuery","isOnDemandDrill","fieldName","items","memberName","delimiter","measurePos","getMeasurePos","_i","drilledMembers_1","field","isHierarchy","_a","_b","item","drillInfo_1","split","result","getDrillLevel","fieldPosition","getDimensionPos","index","isExist","isAttributeMemberExist","level","isDrill","levelQuery","push","indexOf","isNamedSet","pid","getHierarchyQuery","isCalculatedField","join","position","hasAllMember","isChildren","tag","splice","isAvailable","hierarchyPosition","j","rawDrillQuery","onDemandDrillQuery","drilledMembers_2","rawQuery","drillInfo_2","queryCollection","collection","measure","heirarchize","sortOrder","slicers","_this","dataFields","concat","i_1","isCol","filter","colUqName","getDimensionUniqueName","slicerUqName","isMatch","dimension","headerText","hierarchyNode","curElement","hierarchyNode_1","id","measures","measures_1","name_1","advancedFilters","advancedFilterQuery","rowFilter","columnFilter","type","_c","_d","_e","isFound","_f","_g","column","_h","_j","row","axes","_k","axes_1","_l","advancedFilters_1","filterItems","getAdvancedFilterQuery","cnt","updatedFilterQuery","Array","filterItem","currentAxis","selectedField","getAdvancedFilterCondtions","condition","value1","value2","filterOperator","filterType","calcMembers","calcQuery","calcMembers_1","member","prefixName","formula","hierarchyUniqueName","aliasName","formatString","trim"],"mappings":"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","sourcesContent":["import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * This is a file to create MDX query for the provided OLAP datasource\n * @hidden\n */\n/** @hidden */\nvar MDXQuery = /** @class */ (function () {\n    function MDXQuery() {\n    }\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    MDXQuery.getCellSets = function (dataSourceSettings, olapEngine, refPaging, drillInfo, isQueryUpdate) {\n        /* eslint-enable @typescript-eslint/no-explicit-any */\n        this.engine = olapEngine;\n        this.isMondrian = olapEngine.isMondrian;\n        this.isMeasureAvail = olapEngine.isMeasureAvail;\n        this.isPaging = olapEngine.isPaging;\n        this.pageSettings = olapEngine.pageSettings;\n        this.rows = olapEngine.rows;\n        this.columns = olapEngine.columns;\n        this.values = olapEngine.values;\n        this.filters = olapEngine.filters;\n        this.allowLabelFilter = olapEngine.allowLabelFilter;\n        this.allowValueFilter = olapEngine.allowValueFilter;\n        this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n        this.drilledMembers = olapEngine.updateDrilledItems(dataSourceSettings.drilledMembers);\n        this.calculatedFieldSettings = olapEngine.calculatedFieldSettings;\n        this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'rows' : 'columns';\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'row' ? 'rows' : 'columns';\n        }\n        this.filterMembers = extend({}, olapEngine.filterMembers, null, true);\n        this.fieldDataObj = olapEngine.fieldListObj;\n        this.fieldList = olapEngine.fieldList;\n        this.cellSetInfo = '\\nDIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var measureQuery = this.getMeasuresQuery(this.values);\n        /* eslint-disable */\n        var rowQuery = this.getDimensionsQuery(this.rows, measureQuery, 'rows', drillInfo).replace(/\\&/g, '&amp;');\n        var columnQuery = this.getDimensionsQuery(this.columns, measureQuery, 'columns', drillInfo).replace(/\\&/g, '&amp;');\n        /* eslint-enable */\n        if (this.isPaging && refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        else if (this.isPaging && !refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingCountQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        /* eslint-disable */\n        rowQuery = (rowQuery.length > 0 ? rowQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON ROWS') : '');\n        columnQuery = (columnQuery.length > 0 ? columnQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON COLUMNS') : '');\n        var slicerQuery = this.getSlicersQuery(this.filters, 'filters').replace(/\\&/g, '&amp;');\n        var filterQuery = this.getfilterQuery(this.filterMembers, dataSourceSettings.cube).replace(/\\&/g, '&amp;').replace(/\\>/g, '&gt;').replace(/\\</g, '&lt;');\n        var caclQuery = this.getCalculatedFieldQuery(this.calculatedFieldSettings).replace(/\\&/g, '&amp;');\n        /* eslint-enable */\n        var query = this.frameMDXQuery(rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging);\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            request: query,\n            /* eslint-disable */\n            LCID: dataSourceSettings.localeIdentifier.toString()\n        };\n        olapEngine.mdxQuery = query.replace(/\\&amp;/g, '&').replace(/\\&gt;/g, '>').replace(/\\&lt;/g, '<').replace(/%280/g, '\\\"');\n        // console.log(olapEngine.mdxQuery);\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'rows' ? 'row' : 'column';\n        }\n        if (!isQueryUpdate) {\n            this.getTableCellData(args, (this.isPaging && !refPaging ? this.engine.generatePagingData.bind(this.engine) : this.engine.generateEngine.bind(this.engine)), drillInfo ? { action: drillInfo.action, drillInfo: drillInfo } : { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n    };\n    MDXQuery.getTableCellData = function (args, successMethod, customArgs) {\n        var connectionString = this.engine.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"> <Header></Header> <Body> <Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"> <Command> <Statement>' +\n            args.request + '</Statement> </Command> <Properties> <PropertyList> <Catalog>' +\n            args.catalog + '</Catalog> <LocaleIdentifier>' + connectionString.LCID +\n            '</LocaleIdentifier> </PropertyList> </Properties></Execute> </Body> </Envelope>';\n        this.engine.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    /* eslint-enable */\n    MDXQuery.frameMDXQuery = function (rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging) {\n        var query = ((this.isPaging && !refPaging) ? caclQuery !== '' ? '' : '\\nWITH' : '\\nSelect ');\n        if (columnQuery.length > 0) {\n            query = query + columnQuery;\n        }\n        if (rowQuery.length > 0) {\n            query = query + (columnQuery.length > 0 ? this.isPaging && !refPaging ? '' : ', ' : '') + rowQuery;\n        }\n        query = caclQuery + query + (this.isPaging && !refPaging ? '\\nMEMBER [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] AS Count([e16a30d0-2174-4874-8dae-a5085a75a3e2]) ' +\n            'MEMBER [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] AS Count ([d1876d2b-e50e-4547-85fe-5b8ed9d629de])' +\n            '\\nSELECT { [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] , [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] } ON AXIS(0)' : '') +\n            filterQuery + slicerQuery + '\\nCELL PROPERTIES VALUE, FORMAT_STRING, FORMATTED_VALUE\\n';\n        return query;\n    };\n    MDXQuery.getPagingQuery = function (rowQuery, columnQuery) {\n        // let colCurrentPage: number = (Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage || this.pageSettings.columnCurrentPage === 0) ? ((Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage && this.engine.columnCount > 0) ? Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) : this.pageSettings.columnCurrentPage) : this.pageSettings.columnCurrentPage;\n        // let rowCurrentPage: number = (Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage || this.pageSettings.rowCurrentPage === 0) ? ((Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage && this.engine.rowCount > 0) ? Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) : this.pageSettings.rowSize) : this.pageSettings.rowCurrentPage;\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        // let axisQuery: pagingQuery = {\n        //     rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (((rowCurrentPage === 0 ? 1 : rowCurrentPage) - 1) * (this.pageSettings.rowSize)) + ',' + this.pageSettings.rowSize + ')') : '',\n        //     columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (((colCurrentPage === 0 ? 1 : colCurrentPage) - 1) * (this.pageSettings.columnSize)) + ',' + this.pageSettings.columnSize + ')') : ''\n        // }\n        var calRowPage = (this.pageSettings.rowCurrentPage - 1) * this.pageSettings.rowSize;\n        var calColPage = (this.pageSettings.columnCurrentPage - 1) * this.pageSettings.columnSize;\n        var calRowSize = this.pageSettings.rowSize * 3;\n        var calColumnSize = this.pageSettings.columnSize * 3;\n        calRowPage = (this.engine.rowCount < (calRowPage + calRowSize)) ?\n            (this.engine.rowCount > calRowSize ? (this.engine.rowCount - calRowSize) : 0) : calRowPage;\n        this.engine.pageRowStartPos = calRowPage;\n        calColPage = (this.engine.columnCount < (calColPage + calColumnSize)) ?\n            (this.engine.columnCount > calColumnSize ? (this.engine.columnCount - calColumnSize) : 0) : calColPage;\n        this.engine.pageColStartPos = calColPage;\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (calRowPage) + ',' + calRowSize + ')') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (calColPage) + ',' + calColumnSize + ')') : ''\n        };\n        return axisQuery;\n    };\n    MDXQuery.getPagingCountQuery = function (rowQuery, columnQuery) {\n        /* eslint-disable */\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        'WITH  SET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as';\n        'SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as';\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')\\n') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')\\n') : ''\n        };\n        return axisQuery;\n        /* eslint-enable */\n    };\n    /* eslint-enable max-len */\n    MDXQuery.getDimensionsQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        if (dimensions.length > 0) {\n            query = '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var i = 0;\n            while (i < dimensions.length) {\n                var hierarchy = '';\n                if (i === 0) {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + hierarchy;\n                    }\n                }\n                else {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + ' * ' + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + ' * ' + hierarchy;\n                    }\n                }\n                i++;\n            }\n            var drillQueryObj = this.getDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (drillInfo && drillInfo.axis === axis ? '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '') + drillQueryObj.query : query + (drillQueryObj.query !== '' ? ',' : '') + drillQueryObj.query);\n            var drillQuery = this.getAttributeDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n                (this.isPaging ? ((drillQuery !== '' ? '-' : '') + drillQuery) : '') + (this.drilledMembers.length > 0 ? '})' : '') + (!this.isPaging ? ((drillQuery !== '' ? '-' : '') + drillQuery) : '') + ')';\n        }\n        return query;\n    };\n    MDXQuery.getAttributeDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        /* eslint-disable */\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        /* eslint-enable */\n        var measurePos = axis === this.valueAxis ? this.getMeasurePos(axis) : 0;\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var field = drilledMembers_1[_i];\n            var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n            if (isHierarchy) {\n                for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                    var item = _b[_a];\n                    var drillQuery = [];\n                    var drillInfo_1 = item.split(field.delimiter ? field.delimiter : '~~');\n                    var result = this.getDrillLevel(dimensions, drillInfo_1);\n                    var fieldPosition = this.getDimensionPos(axis, field.name);\n                    var index = dimensions.length - (measurePos > fieldPosition ? 1 : 0);\n                    var isExist = this.isPaging ? this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), field.delimiter, drillInfo_1, axis) : false;\n                    while (result.level > 0 && result.isDrill && (fieldPosition + 1) !== measurePos && !isExist) {\n                        var levelQuery = [];\n                        var i = 0;\n                        while (i < dimensions.length) {\n                            if (dimensions[i].name.toLowerCase() === '[measures]') {\n                                if (measureQuery !== '') {\n                                    levelQuery.push('({{' + drillInfo_1[i] + '}})');\n                                }\n                            }\n                            else if (drillInfo_1[i] && (drillInfo_1[i].indexOf(dimensions[i].name) !== -1 ||\n                                (dimensions[i].isNamedSet && this.fieldList[dimensions[i].name] && drillInfo_1[i].indexOf(this.fieldList[dimensions[i].name].pid.split('Sets_')[1]) !== -1))) {\n                                levelQuery.push(this.getHierarchyQuery(drillInfo_1[i], false, false, false, result.level, true));\n                            }\n                            else if (!drillInfo_1[i] && dimensions[i]) {\n                                levelQuery.push(this.getHierarchyQuery(dimensions[i].name, ((this.isPaging && result.level === 2) || (!this.isPaging && index > i) ? true : false), dimensions[i].isNamedSet, dimensions[i].isCalculatedField, result.level, false)); /* eslint-disable-line */\n                            }\n                            else {\n                                levelQuery = [];\n                                break;\n                            }\n                            i++;\n                        }\n                        if (levelQuery.length > 0) {\n                            drillQuery.push('(' + levelQuery.join('*') + ')');\n                        }\n                        result.level--;\n                        index--;\n                    }\n                    if (drillQuery.length > 0) {\n                        query = query + (query !== '' ? '-' : '') + drillQuery.join(this.isPaging ? '+' : '-');\n                    }\n                }\n            }\n        }\n        return query;\n    };\n    MDXQuery.getDimensionPos = function (axis, field) {\n        var position = 0;\n        var dimensions = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < dimensions.length; i++) {\n            if (dimensions[i].name === field) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    MDXQuery.getMeasurePos = function (axis) {\n        var position = 0;\n        var dimensions = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < dimensions.length; i++) {\n            if (dimensions[i].name.indexOf('[Measures]') === 0) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    MDXQuery.getDrillLevel = function (dimensions, drillInfo) {\n        var level = dimensions.length;\n        var isDrill = false;\n        var i = 0;\n        while (i < dimensions.length) {\n            if (drillInfo[i] && drillInfo[i].indexOf(dimensions[i].name) !== -1) {\n                level -= 1;\n                if (dimensions[i + 1] && !(dimensions[i + 1].isNamedSet || dimensions[i + 1].name.indexOf('[Measures]') === 0 || (this.fieldList[dimensions[i + 1].name] && !this.fieldList[dimensions[i + 1].name].hasAllMember))) {\n                    isDrill = true;\n                }\n            }\n            else if (dimensions[i].isNamedSet || dimensions[i].name.indexOf('[Measures]') === 0 || (this.fieldList[dimensions[i].name] && !this.fieldList[dimensions[i].name].hasAllMember)) {\n                level -= 1;\n            }\n            i++;\n        }\n        return { level: this.isPaging ? 2 : level, isDrill: isDrill };\n    };\n    MDXQuery.getHierarchyQuery = function (name, isChildren, isNamedSet, isCalculatedField, level, isDrill) {\n        name = isCalculatedField ? this.fieldList[name].tag : name;\n        return ((this.fieldList[name] && !this.fieldList[name].hasAllMember && !isNamedSet && !isCalculatedField) ? '((' + name + ').levels(0).AllMembers)' : (isNamedSet || isCalculatedField) ? ('({' + name + '})') : this.isPaging ? ('({' + name) + (isChildren ? '.CHILDREN})' : (!isDrill && level === 1) ? '.[All]})' : '})') : ('({DrilldownLevel({' + name + (isChildren ? '.CHILDREN' : '') + '},,,INCLUDE_CALC_MEMBERS' + ')})'));\n    };\n    MDXQuery.isAttributeMemberExist = function (hierarchy, item, delimiter, drillInfo, axis) {\n        item.splice(drillInfo.length - 1, 1);\n        var isAvailable = false;\n        if (item.join(delimiter) !== '' && !(this.isPaging && item.length === 1 && item.join(delimiter) === '[Measures]') && this.engine.fieldList[hierarchy] && this.engine.fieldList[hierarchy].hasAllMember) {\n            var hierarchyPosition = this.getDimensionPos(axis, hierarchy);\n            for (var i = 0; i < this.drilledMembers.length; i++) {\n                if (hierarchy !== this.drilledMembers[i].name) {\n                    var isHierarchy = this.engine.fieldList[this.drilledMembers[i].name] ?\n                        this.engine.fieldList[this.drilledMembers[i].name].isHierarchy : false;\n                    if (isHierarchy) {\n                        var fieldPosition = this.getDimensionPos(axis, this.drilledMembers[i].name);\n                        for (var j = 0; j < this.drilledMembers[i].items.length; j++) {\n                            var result = this.getDrillLevel(axis === 'rows' ? this.rows : this.columns, this.drilledMembers[i].items[j].split(this.drilledMembers[i].delimiter ? this.drilledMembers[i].delimiter : '~~'));\n                            if ((this.isPaging ? (fieldPosition < hierarchyPosition && result.isDrill) : true) && (this.drilledMembers[i].items[j].indexOf(item.join(delimiter)) === 0 || item.join(delimiter).indexOf(this.drilledMembers[i].items[j]) === 0)) { /* eslint-disable-line */\n                                isAvailable = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isAvailable;\n    };\n    MDXQuery.getDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var rawDrillQuery = [];\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        var onDemandDrillQuery = '';\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        for (var _i = 0, drilledMembers_2 = drilledMembers; _i < drilledMembers_2.length; _i++) {\n            var field = drilledMembers_2[_i];\n            var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n            if (!isHierarchy) {\n                for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                    var item = _b[_a];\n                    var drillQuery = [];\n                    var rawQuery = [];\n                    var i = 0;\n                    var drillInfo_2 = item.split(field.delimiter ? field.delimiter : '~~');\n                    var isExist = this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), (field.delimiter ? field.delimiter : '~~'), drillInfo_2, axis);\n                    while (i < dimensions.length && !isExist) {\n                        if (drillInfo_2[i] && drillInfo_2[i].indexOf(dimensions[i].name) !== -1) {\n                            if (drillInfo_2[drillInfo_2.length - 1].indexOf(dimensions[i].name) !== -1) {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '.CHILDREN})';\n                                }\n                                else {\n                                    drillQuery.push('(' + drillInfo_2[i] + '.CHILDREN)');\n                                    rawQuery.push('(' + drillInfo_2[i] + ')');\n                                }\n                            }\n                            else {\n                                if (drillInfo_2[i].toLowerCase() === '[measures]' && measureQuery !== '') {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                    }\n                                    else {\n                                        drillQuery.push('(' + measureQuery + ')');\n                                        rawQuery.push('(' + measureQuery + ')');\n                                    }\n                                }\n                                else if (drillInfo_2[i].toLowerCase().indexOf('[measures]') !== -1) {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                                    }\n                                    else {\n                                        drillQuery.push('({' + drillInfo_2[i] + '})');\n                                        rawQuery.push('({' + drillInfo_2[i] + '})');\n                                    }\n                                }\n                                else {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                                    }\n                                    else {\n                                        drillQuery.push('(' + drillInfo_2[i] + ')');\n                                        rawQuery.push('(' + drillInfo_2[i] + ')');\n                                    }\n                                }\n                            }\n                        }\n                        else if (!drillInfo_2[i] && dimensions[i]) {\n                            if (dimensions[i].name.toLowerCase() === '[measures]' && measureQuery !== '') {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                }\n                                else {\n                                    drillQuery.push('(' + measureQuery + ')');\n                                    rawQuery.push('(' + measureQuery + ')');\n                                }\n                            }\n                            else {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                                }\n                                else {\n                                    drillQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                    rawQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                }\n                            }\n                        }\n                        else {\n                            drillQuery = [];\n                            break;\n                        }\n                        i++;\n                    }\n                    if (drillQuery.length > 0 && drillQuery.length < drillInfo_2.length) {\n                        drillQuery = [];\n                        rawQuery = [];\n                    }\n                    // query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString().replace(/\\&/g, \"&amp;\") + ')' : '');\n                    query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString() + ')' : '');\n                    /* eslint-enable max-len */\n                    if (rawQuery.length > 0) {\n                        rawDrillQuery.push(('(' + rawQuery.toString() + ')'));\n                    }\n                }\n            }\n        }\n        // return (isOnDemandDrill ? onDemandDrillQuery.replace(/\\&/g, \"&amp;\") : query);\n        var queryCollection = {\n            query: (isOnDemandDrill ? onDemandDrillQuery : query),\n            collection: (isOnDemandDrill ? [onDemandDrillQuery] : rawDrillQuery)\n        };\n        return queryCollection;\n    };\n    MDXQuery.updateValueSortQuery = function (query, valueSortSettings) {\n        if (valueSortSettings && valueSortSettings.measure && valueSortSettings.measure !== '') {\n            var heirarchize = (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var measure = (this.fieldList[valueSortSettings.measure].isCalculatedField ?\n                this.fieldList[valueSortSettings.measure].tag : valueSortSettings.measure);\n            switch (valueSortSettings.sortOrder) {\n                case 'Ascending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), ASC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BASC' : 'ASC') + ')';\n                    break;\n                case 'Descending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), DESC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BDESC' : 'DESC') + ')';\n                    break;\n            }\n        }\n        return query;\n    };\n    /* eslint-disable */\n    MDXQuery.getSlicersQuery = function (slicers, axis) {\n        var _this = this;\n        var query = '';\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (slicers.length > 0) {\n            var i_1 = 0;\n            while (i_1 < slicers.length) {\n                var isCol = dataFields.filter(function (field) {\n                    var colUqName = _this.getDimensionUniqueName(field.name);\n                    var slicerUqName = _this.getDimensionUniqueName(slicers[i_1].name);\n                    var isMatch = false;\n                    isMatch = colUqName === slicerUqName &&\n                        !(_this.isMondrian && slicerUqName === '' && colUqName === '');\n                    return (isMatch);\n                }).length > 0;\n                if (!isCol) {\n                    if (slicers[i_1].name !== undefined && !this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + this.getDimensionQuery(slicers[i_1], axis) + '}';\n                    }\n                    else if (this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + (this.filterMembers[slicers[i_1].name].toString()) + '}';\n                    }\n                }\n                i_1++;\n            }\n            query = query === '' ? '' : '\\nWHERE (' + query.replace(/DrilldownLevel/g, '') + ')';\n        }\n        return query;\n    };\n    /* eslint-enable */\n    MDXQuery.getDimensionQuery = function (dimension, axis) {\n        var query = '';\n        var name = dimension.isCalculatedField ? this.fieldList[dimension.name].tag : dimension.name;\n        var hasAllMember = this.fieldList[dimension.name].hasAllMember;\n        if (!hasAllMember && !dimension.isNamedSet && !dimension.isCalculatedField) {\n            query = '((' + name + ').levels(0).AllMembers)';\n        }\n        else {\n            query = (dimension.isNamedSet ? '{' + name + '}' : this.isPaging ? name + '.CHILDREN' :\n                'DrilldownLevel({' + name + '}' + ((axis === 'rows' || axis === 'columns') ? ',,,INCLUDE_CALC_MEMBERS' : '') + ')');\n        }\n        return query;\n    };\n    MDXQuery.getDimensionUniqueName = function (headerText) {\n        var hierarchyNode = this.fieldDataObj.hierarchy;\n        var curElement = [];\n        if (hierarchyNode) {\n            // let curElement: IOlapField[] = hierarchyNode.filter((item: IOlapField) => {\n            //     return (item.id.toLowerCase() === headerText.toLowerCase());\n            // });\n            for (var _i = 0, hierarchyNode_1 = hierarchyNode; _i < hierarchyNode_1.length; _i++) {\n                var item = hierarchyNode_1[_i];\n                if (item.id.toLowerCase() === headerText.toLowerCase()) {\n                    curElement.push(item);\n                }\n            }\n            return (curElement.length > 0 ? curElement[0].pid : '');\n        }\n        else {\n            return headerText.split('.')[0];\n        }\n    };\n    MDXQuery.getMeasuresQuery = function (measures) {\n        var query = '';\n        if (measures.length > 0) {\n            query = '{{';\n            var values = '';\n            for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n                var measure = measures_1[_i];\n                var name_1 = (measure.isCalculatedField ? this.fieldList[measure.name].tag : measure.name);\n                if (values.length > 0) {\n                    values = values + ', ' + name_1;\n                }\n                else {\n                    values = name_1;\n                }\n            }\n            query = query + values + '}}';\n        }\n        return query;\n    };\n    MDXQuery.getfilterQuery = function (filters, cube) {\n        var query = '\\nFROM [' + cube + ']';\n        var filterQuery = '\\nFROM( SELECT (';\n        var advancedFilters = [];\n        var advancedFilterQuery = [];\n        var rowFilter = [];\n        var columnFilter = [];\n        for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    rowFilter.push(filters[field.name]);\n                }\n                else {\n                    filters[field.name][1] = filters[field.name][0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _b = 0, _c = this.columns; _b < _c.length; _b++) {\n            var field = _c[_b];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    columnFilter.push(filters[field.name]);\n                }\n                else {\n                    /* eslint-disable @typescript-eslint/no-explicit-any */\n                    var filter = filters[field.name];\n                    /* eslint-enable @typescript-eslint/no-explicit-any */\n                    filter[1] = filter[0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _d = 0, _e = this.filters; _d < _e.length; _d++) {\n            var field = _e[_d];\n            var isFound = false;\n            for (var _f = 0, _g = this.columns; _f < _g.length; _f++) {\n                var column = _g[_f];\n                if (this.getDimensionUniqueName(column.name) === this.getDimensionUniqueName(field.name)) {\n                    if (filters[field.name]) {\n                        columnFilter.push(filters[field.name]);\n                        isFound = true;\n                    }\n                }\n            }\n            if (!isFound) {\n                for (var _h = 0, _j = this.rows; _h < _j.length; _h++) {\n                    var row = _j[_h];\n                    if (this.getDimensionUniqueName(row.name) === this.getDimensionUniqueName(field.name)) {\n                        if (filters[field.name]) {\n                            rowFilter.push(filters[field.name]);\n                        }\n                    }\n                }\n            }\n        }\n        if ((this.allowLabelFilter || this.allowValueFilter) && advancedFilters.length > 0) {\n            var axes = ['Value', 'Label'];\n            for (var _k = 0, axes_1 = axes; _k < axes_1.length; _k++) {\n                var axis = axes_1[_k];\n                for (var _l = 0, advancedFilters_1 = advancedFilters; _l < advancedFilters_1.length; _l++) {\n                    var filterItems = advancedFilters_1[_l];\n                    if (filterItems && filterItems.length === 2 &&\n                        typeof filterItems[1] === 'string' && filterItems[1] === axis) {\n                        advancedFilterQuery.push(this.getAdvancedFilterQuery(filterItems[0], filterQuery, 'COLUMNS'));\n                    }\n                }\n            }\n        }\n        for (var i = 0, cnt = columnFilter.length; i < cnt; i++) {\n            filterQuery = i === 0 ? filterQuery + '{' + columnFilter[i].toString() + '}' : filterQuery + ',{' + columnFilter[i].toString() + '}';\n        }\n        if (columnFilter.length > 0) {\n            filterQuery = (rowFilter.length > 0) ? filterQuery + ' ) ON COLUMNS ' + ',(' : filterQuery + ' ) ON COLUMNS';\n        }\n        for (var i = 0, cnt = rowFilter.length; i < cnt; i++) {\n            filterQuery = (i > 0) ? filterQuery + ',{' + rowFilter[i].toString() + '}' : filterQuery + '{' + rowFilter[i].toString() + '}';\n        }\n        filterQuery = (columnFilter.length > 0 && rowFilter.length > 0) ?\n            filterQuery = filterQuery + ') ON ROWS ' : (columnFilter.length === 0 && rowFilter.length > 0) ?\n            filterQuery + ') ON COLUMNS ' : filterQuery;\n        var updatedFilterQuery = '';\n        if (advancedFilterQuery.length > 0) {\n            updatedFilterQuery = advancedFilterQuery.join(' ') + ' ' +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? filterQuery : '') + ' '\n                + query + Array(advancedFilterQuery.length + 1 +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? 1 : 0)).join(')');\n        }\n        query = (columnFilter.length === 0 && rowFilter.length === 0) ? query : filterQuery + query + ')';\n        return (updatedFilterQuery.length > 0) ? updatedFilterQuery : query;\n    };\n    MDXQuery.getAdvancedFilterQuery = function (filterItem, query, currentAxis) {\n        var filterQuery = '\\nFROM (SELECT Filter(' + filterItem.selectedField + '.AllMembers, ' +\n            this.getAdvancedFilterCondtions(filterItem.name, filterItem.condition, filterItem.value1, filterItem.value2, filterItem.type, filterItem.measure) + /* eslint-disable-line */\n            ')) on ' + currentAxis;\n        return filterQuery;\n    };\n    /* eslint-disable */\n    MDXQuery.getAdvancedFilterCondtions = function (fieldName, filterOperator, value1, value2, filterType, measures) {\n        var advancedFilterQuery = '';\n        switch (filterOperator) {\n            case 'Equals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption =\\\"' + value1 + '\\\"') : (measures + ' = ' + value1));\n                break;\n            case 'DoesNotEquals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <>\\\"' + value1 + '\\\"') : (measures + ' <>' + value1));\n                break;\n            case 'Contains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n            case 'DoesNotContains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\")=0';\n                break;\n            case 'BeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotBeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'EndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotEndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'GreaterThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >\\\"' + value1 + '\\\"') : (measures + ' >' + value1 + ''));\n                break;\n            case 'GreaterThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"') : (measures + ' >=' + value1 + ''));\n                break;\n            case 'LessThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <\\\"' + value1 + '\\\"') : (measures + ' <' + value1 + ''));\n                break;\n            case 'LessThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <=\\\"' + value1 + '\\\"') : (measures + ' <=' + value1 + ''));\n                break;\n            case 'Between':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"AND ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' AND ' + measures + ' <=' + value2));\n                break;\n            case 'NotBetween':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"OR ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' OR ' + measures + ' <=' + value2));\n                break;\n            default:\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n        }\n        return advancedFilterQuery;\n    };\n    /* eslint-enable max-len */\n    MDXQuery.getCalculatedFieldQuery = function (calcMembers) {\n        var calcQuery = '';\n        if (calcMembers.length > 0) {\n            calcQuery = '\\nWITH';\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var member = calcMembers_1[_i];\n                var prefixName = (member.formula.indexOf('Measure') > -1 ? '[Measures].' : member.hierarchyUniqueName + '.');\n                var aliasName = prefixName + '[' + member.name + ']';\n                var formatString = (!isNullOrUndefined(member.formatString) ? member.formatString : null);\n                calcQuery += ('\\nMEMBER ' + aliasName + 'as (' + member.formula + ') ' + (!isNullOrUndefined(formatString) ? ', FORMAT_STRING =\\\"' + formatString.trim() + '\\\"' : ''));\n            }\n        }\n        return calcQuery;\n    };\n    return MDXQuery;\n}());\nexport { MDXQuery };\n"]},"metadata":{},"sourceType":"module"}