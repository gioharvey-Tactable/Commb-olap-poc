{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable @typescript-eslint/ban-types */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable jsdoc/require-param */\n\n\nimport { withInRange, getPoint, TransformToVisible } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from './line-base';\n/**\n * `LineSeries` module used to render the line series.\n */\n\nvar LineSeries = function (_super) {\n  __extends(LineSeries, _super);\n\n  function LineSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Render Line Series.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  LineSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n    var point1;\n    var point2;\n    var direction = '';\n    var prevPoint = null;\n    var startPoint = 'M';\n    var isPolar = series.chart && series.chart.chartAreaType === 'PolarRadar';\n    var isDrop = series.emptyPointSettings && series.emptyPointSettings.mode === 'Drop';\n    var getCoordinate = isPolar ? TransformToVisible : getPoint;\n    var visiblePoints = series.category === 'TrendLine' ? series.points : this.enableComplexProperty(series);\n\n    for (var _i = 0, visiblePoints_1 = visiblePoints; _i < visiblePoints_1.length; _i++) {\n      var point = visiblePoints_1[_i];\n      point.regions = [];\n      point.symbolLocations = [];\n\n      if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n        direction += this.getLineDirection(prevPoint, point, series, isInverted, getCoordinate, startPoint);\n        startPoint = prevPoint ? 'L' : startPoint;\n        prevPoint = point;\n        this.storePointLocation(point, series, isInverted, getCoordinate);\n      } else {\n        prevPoint = isDrop ? prevPoint : null;\n        startPoint = isDrop ? startPoint : 'M';\n      }\n    }\n\n    if (isPolar) {\n      if (series.isClosed) {\n        var points = this.getFirstLastVisiblePoint(visiblePoints);\n        point2 = getCoordinate(points.last.xValue, points.last.yValue, xAxis, yAxis, isInverted, series);\n        point1 = getCoordinate(points.first.xValue, points.first.yValue, xAxis, yAxis, isInverted, series);\n        direction = direction.concat(startPoint + ' ' + point2.x + ' ' + point2.y + ' ' + 'L' + ' ' + point1.x + ' ' + point1.y);\n      }\n    }\n\n    var name = series.category === 'Indicator' ? series.chart.element.id + '_Indicator_' + series.index + '_' + series.name : series.category === 'TrendLine' ? series.chart.element.id + '_Series_' + series.sourceIndex + '_TrendLine_' + series.index : series.chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index);\n    var options = new PathOption(name, 'none', series.width, series.interior, series.opacity, series.dashArray, direction);\n    this.appendLinePath(options, series, '');\n    this.renderMarker(series);\n  };\n  /**\n   * Animates the series.\n   *\n   * @param  {Series} series - Defines the series to animate.\n   * @returns {void}\n   */\n\n\n  LineSeries.prototype.doAnimation = function (series) {\n    var option = series.animation;\n    this.doProgressiveAnimation(series, option);\n  };\n  /**\n   * Get module name.\n   */\n\n\n  LineSeries.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'LineSeries';\n  };\n  /**\n   * To destroy the line series.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  LineSeries.prototype.destroy = function () {\n    /**\n     * Destroy method performed here\n     */\n  };\n\n  return LineSeries;\n}(LineBase);\n\nexport { LineSeries };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-charts/src/chart/series/line-series.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","withInRange","getPoint","TransformToVisible","PathOption","LineBase","LineSeries","_super","apply","arguments","render","series","xAxis","yAxis","isInverted","point1","point2","direction","prevPoint","startPoint","isPolar","chart","chartAreaType","isDrop","emptyPointSettings","mode","getCoordinate","visiblePoints","category","points","enableComplexProperty","_i","visiblePoints_1","length","point","regions","symbolLocations","visible","index","getLineDirection","storePointLocation","isClosed","getFirstLastVisiblePoint","last","xValue","yValue","first","concat","x","y","name","element","id","sourceIndex","undefined","options","width","interior","opacity","dashArray","appendLinePath","renderMarker","doAnimation","option","animation","doProgressiveAnimation","getModuleName","destroy"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;AAaA;;AACA;;AACA;;AACA;;;AACA,SAASI,WAAT,EAAsBC,QAAtB,EAAgCC,kBAAhC,QAA0D,2BAA1D;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAkB,UAAUC,MAAV,EAAkB;AAC9CpB,EAAAA,SAAS,CAACmB,UAAD,EAAaC,MAAb,CAAT;;AACA,WAASD,UAAT,GAAsB;AAClB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIH,EAAAA,UAAU,CAACP,SAAX,CAAqBW,MAArB,GAA8B,UAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,UAAhC,EAA4C;AACtE,QAAIC,MAAJ;AACA,QAAIC,MAAJ;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,SAAS,GAAG,IAAhB;AACA,QAAIC,UAAU,GAAG,GAAjB;AACA,QAAIC,OAAO,GAAIT,MAAM,CAACU,KAAP,IAAgBV,MAAM,CAACU,KAAP,CAAaC,aAAb,KAA+B,YAA9D;AACA,QAAIC,MAAM,GAAIZ,MAAM,CAACa,kBAAP,IAA6Bb,MAAM,CAACa,kBAAP,CAA0BC,IAA1B,KAAmC,MAA9E;AACA,QAAIC,aAAa,GAAGN,OAAO,GAAGjB,kBAAH,GAAwBD,QAAnD;AACA,QAAIyB,aAAa,GAAGhB,MAAM,CAACiB,QAAP,KAAoB,WAApB,GAAkCjB,MAAM,CAACkB,MAAzC,GAAkD,KAAKC,qBAAL,CAA2BnB,MAA3B,CAAtE;;AACA,SAAK,IAAIoB,EAAE,GAAG,CAAT,EAAYC,eAAe,GAAGL,aAAnC,EAAkDI,EAAE,GAAGC,eAAe,CAACC,MAAvE,EAA+EF,EAAE,EAAjF,EAAqF;AACjF,UAAIG,KAAK,GAAGF,eAAe,CAACD,EAAD,CAA3B;AACAG,MAAAA,KAAK,CAACC,OAAN,GAAgB,EAAhB;AACAD,MAAAA,KAAK,CAACE,eAAN,GAAwB,EAAxB;;AACA,UAAIF,KAAK,CAACG,OAAN,IAAiBpC,WAAW,CAAC0B,aAAa,CAACO,KAAK,CAACI,KAAN,GAAc,CAAf,CAAd,EAAiCJ,KAAjC,EAAwCP,aAAa,CAACO,KAAK,CAACI,KAAN,GAAc,CAAf,CAArD,EAAwE3B,MAAxE,CAAhC,EAAiH;AAC7GM,QAAAA,SAAS,IAAI,KAAKsB,gBAAL,CAAsBrB,SAAtB,EAAiCgB,KAAjC,EAAwCvB,MAAxC,EAAgDG,UAAhD,EAA4DY,aAA5D,EAA2EP,UAA3E,CAAb;AACAA,QAAAA,UAAU,GAAGD,SAAS,GAAG,GAAH,GAASC,UAA/B;AACAD,QAAAA,SAAS,GAAGgB,KAAZ;AACA,aAAKM,kBAAL,CAAwBN,KAAxB,EAA+BvB,MAA/B,EAAuCG,UAAvC,EAAmDY,aAAnD;AACH,OALD,MAMK;AACDR,QAAAA,SAAS,GAAGK,MAAM,GAAGL,SAAH,GAAe,IAAjC;AACAC,QAAAA,UAAU,GAAGI,MAAM,GAAGJ,UAAH,GAAgB,GAAnC;AACH;AACJ;;AACD,QAAIC,OAAJ,EAAa;AACT,UAAIT,MAAM,CAAC8B,QAAX,EAAqB;AACjB,YAAIZ,MAAM,GAAG,KAAKa,wBAAL,CAA8Bf,aAA9B,CAAb;AACAX,QAAAA,MAAM,GAAGU,aAAa,CAACG,MAAM,CAACc,IAAP,CAAYC,MAAb,EAAqBf,MAAM,CAACc,IAAP,CAAYE,MAAjC,EAAyCjC,KAAzC,EAAgDC,KAAhD,EAAuDC,UAAvD,EAAmEH,MAAnE,CAAtB;AACAI,QAAAA,MAAM,GAAGW,aAAa,CAACG,MAAM,CAACiB,KAAP,CAAaF,MAAd,EAAsBf,MAAM,CAACiB,KAAP,CAAaD,MAAnC,EAA2CjC,KAA3C,EAAkDC,KAAlD,EAAyDC,UAAzD,EAAqEH,MAArE,CAAtB;AACAM,QAAAA,SAAS,GAAGA,SAAS,CAAC8B,MAAV,CAAiB5B,UAAU,GAAG,GAAb,GAAmBH,MAAM,CAACgC,CAA1B,GAA8B,GAA9B,GAAoChC,MAAM,CAACiC,CAA3C,GAA+C,GAA/C,GAAqD,GAArD,GAA2D,GAA3D,GAAiElC,MAAM,CAACiC,CAAxE,GAA4E,GAA5E,GAAkFjC,MAAM,CAACkC,CAA1G,CAAZ;AACH;AACJ;;AACD,QAAIC,IAAI,GAAGvC,MAAM,CAACiB,QAAP,KAAoB,WAApB,GAAkCjB,MAAM,CAACU,KAAP,CAAa8B,OAAb,CAAqBC,EAArB,GAA0B,aAA1B,GAA0CzC,MAAM,CAAC2B,KAAjD,GAAyD,GAAzD,GAA+D3B,MAAM,CAACuC,IAAxG,GACPvC,MAAM,CAACiB,QAAP,KAAoB,WAApB,GAAkCjB,MAAM,CAACU,KAAP,CAAa8B,OAAb,CAAqBC,EAArB,GAA0B,UAA1B,GAAuCzC,MAAM,CAAC0C,WAA9C,GAA4D,aAA5D,GAA4E1C,MAAM,CAAC2B,KAArH,GACI3B,MAAM,CAACU,KAAP,CAAa8B,OAAb,CAAqBC,EAArB,GAA0B,UAA1B,IAAwCzC,MAAM,CAAC2B,KAAP,KAAiBgB,SAAjB,GAA6B3C,MAAM,CAACiB,QAApC,GAA+CjB,MAAM,CAAC2B,KAA9F,CAFR;AAGA,QAAIiB,OAAO,GAAG,IAAInD,UAAJ,CAAe8C,IAAf,EAAqB,MAArB,EAA6BvC,MAAM,CAAC6C,KAApC,EAA2C7C,MAAM,CAAC8C,QAAlD,EAA4D9C,MAAM,CAAC+C,OAAnE,EAA4E/C,MAAM,CAACgD,SAAnF,EAA8F1C,SAA9F,CAAd;AACA,SAAK2C,cAAL,CAAoBL,OAApB,EAA6B5C,MAA7B,EAAqC,EAArC;AACA,SAAKkD,YAAL,CAAkBlD,MAAlB;AACH,GAvCD;AAwCA;AACJ;AACA;AACA;AACA;AACA;;;AACIL,EAAAA,UAAU,CAACP,SAAX,CAAqB+D,WAArB,GAAmC,UAAUnD,MAAV,EAAkB;AACjD,QAAIoD,MAAM,GAAGpD,MAAM,CAACqD,SAApB;AACA,SAAKC,sBAAL,CAA4BtD,MAA5B,EAAoCoD,MAApC;AACH,GAHD;AAIA;AACJ;AACA;;;AACIzD,EAAAA,UAAU,CAACP,SAAX,CAAqBmE,aAArB,GAAqC,YAAY;AAC7C;AACR;AACA;AACQ,WAAO,YAAP;AACH,GALD;AAMA;AACJ;AACA;AACA;AACA;AACA;;;AACI5D,EAAAA,UAAU,CAACP,SAAX,CAAqBoE,OAArB,GAA+B,YAAY;AACvC;AACR;AACA;AACK,GAJD;;AAKA,SAAO7D,UAAP;AACH,CAlF+B,CAkF9BD,QAlF8B,CAAhC;;AAmFA,SAASC,UAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { withInRange, getPoint, TransformToVisible } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from './line-base';\n/**\n * `LineSeries` module used to render the line series.\n */\nvar LineSeries = /** @class */ (function (_super) {\n    __extends(LineSeries, _super);\n    function LineSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Render Line Series.\n     *\n     * @returns {void}\n     * @private\n     */\n    LineSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n        var point1;\n        var point2;\n        var direction = '';\n        var prevPoint = null;\n        var startPoint = 'M';\n        var isPolar = (series.chart && series.chart.chartAreaType === 'PolarRadar');\n        var isDrop = (series.emptyPointSettings && series.emptyPointSettings.mode === 'Drop');\n        var getCoordinate = isPolar ? TransformToVisible : getPoint;\n        var visiblePoints = series.category === 'TrendLine' ? series.points : this.enableComplexProperty(series);\n        for (var _i = 0, visiblePoints_1 = visiblePoints; _i < visiblePoints_1.length; _i++) {\n            var point = visiblePoints_1[_i];\n            point.regions = [];\n            point.symbolLocations = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                direction += this.getLineDirection(prevPoint, point, series, isInverted, getCoordinate, startPoint);\n                startPoint = prevPoint ? 'L' : startPoint;\n                prevPoint = point;\n                this.storePointLocation(point, series, isInverted, getCoordinate);\n            }\n            else {\n                prevPoint = isDrop ? prevPoint : null;\n                startPoint = isDrop ? startPoint : 'M';\n            }\n        }\n        if (isPolar) {\n            if (series.isClosed) {\n                var points = this.getFirstLastVisiblePoint(visiblePoints);\n                point2 = getCoordinate(points.last.xValue, points.last.yValue, xAxis, yAxis, isInverted, series);\n                point1 = getCoordinate(points.first.xValue, points.first.yValue, xAxis, yAxis, isInverted, series);\n                direction = direction.concat(startPoint + ' ' + point2.x + ' ' + point2.y + ' ' + 'L' + ' ' + point1.x + ' ' + point1.y);\n            }\n        }\n        var name = series.category === 'Indicator' ? series.chart.element.id + '_Indicator_' + series.index + '_' + series.name :\n            series.category === 'TrendLine' ? series.chart.element.id + '_Series_' + series.sourceIndex + '_TrendLine_' + series.index :\n                series.chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index);\n        var options = new PathOption(name, 'none', series.width, series.interior, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    };\n    /**\n     * Animates the series.\n     *\n     * @param  {Series} series - Defines the series to animate.\n     * @returns {void}\n     */\n    LineSeries.prototype.doAnimation = function (series) {\n        var option = series.animation;\n        this.doProgressiveAnimation(series, option);\n    };\n    /**\n     * Get module name.\n     */\n    LineSeries.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'LineSeries';\n    };\n    /**\n     * To destroy the line series.\n     *\n     * @returns {void}\n     * @private\n     */\n    LineSeries.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    return LineSeries;\n}(LineBase));\nexport { LineSeries };\n"]},"metadata":{},"sourceType":"module"}