{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable @typescript-eslint/ban-types */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable jsdoc/require-param */\n\n\nimport { getPoint, withInRange, TransformToVisible } from '../../common/utils/helper';\nimport { PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from './line-base';\n/**\n * `StackingLineSeries` module used to render the Stacking Line series.\n */\n\nvar StackingLineSeries = function (_super) {\n  __extends(StackingLineSeries, _super);\n\n  function StackingLineSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Render the Stacking line series.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  StackingLineSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n    var polarType = series.chart.chartAreaType === 'PolarRadar';\n    var getCoordinate = polarType ? TransformToVisible : getPoint;\n    var direction = '';\n    var visiblePts = this.enableComplexProperty(series);\n    var pointsLength = visiblePts.length;\n    var stackedvalue = series.stackedValues;\n    var point1;\n    var point2;\n\n    for (var i = 0; i < pointsLength; i++) {\n      visiblePts[i].regions = [];\n      visiblePts[i].symbolLocations = [];\n\n      if (visiblePts[i].visible && withInRange(visiblePts[i - 1], visiblePts[i], visiblePts[i + 1], series)) {\n        point1 = getCoordinate(visiblePts[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series);\n        direction = direction.concat((i ? 'L' : 'M') + ' ' + point1.x + ' ' + point1.y + ' ');\n        visiblePts[i].symbolLocations.push(getCoordinate(visiblePts[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series));\n        visiblePts[i].regions.push(new Rect(visiblePts[i].symbolLocations[0].x - series.marker.width, visiblePts[i].symbolLocations[0].y - series.marker.height, 2 * series.marker.width, 2 * series.marker.height));\n      } else {\n        if (series.emptyPointSettings.mode !== 'Drop') {\n          if (visiblePts[i + 1] && visiblePts[i + 1].visible) {\n            point1 = getCoordinate(visiblePts[i + 1].xValue, stackedvalue.endValues[i + 1], xAxis, yAxis, isInverted, series);\n            direction = direction.concat('M' + ' ' + point1.x + ' ' + point1.y + ' ');\n          }\n        }\n      }\n    }\n\n    if (series.chart.chartAreaType === 'PolarRadar' && visiblePts.length > 1) {\n      point1 = {\n        'y': stackedvalue.endValues[0],\n        'x': series.points[0].xValue\n      };\n      point2 = getCoordinate(point1.x, point1.y, xAxis, yAxis, isInverted, series);\n      direction += 'L' + ' ' + point2.x + ' ' + point2.y + ' ';\n    }\n\n    var options = new PathOption(series.chart.element.id + '_Series_' + series.index, 'none', series.width, series.interior, series.opacity, series.dashArray, direction);\n    this.appendLinePath(options, series, '');\n    this.renderMarker(series);\n  };\n  /**\n   * Animates the series.\n   *\n   * @param  {Series} series - Defines the series to animate.\n   * @returns {void}\n   */\n\n\n  StackingLineSeries.prototype.doAnimation = function (series) {\n    var option = series.animation;\n    this.doLinearAnimation(series, option);\n  };\n  /**\n   * To destroy the stacking line.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  StackingLineSeries.prototype.destroy = function () {\n    /**\n     * Destroy method calling here\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  StackingLineSeries.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'StackingLineSeries';\n  };\n\n  return StackingLineSeries;\n}(LineBase);\n\nexport { StackingLineSeries };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-charts/src/chart/series/stacking-line-series.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","getPoint","withInRange","TransformToVisible","PathOption","Rect","LineBase","StackingLineSeries","_super","apply","arguments","render","series","xAxis","yAxis","isInverted","polarType","chart","chartAreaType","getCoordinate","direction","visiblePts","enableComplexProperty","pointsLength","length","stackedvalue","stackedValues","point1","point2","i","regions","symbolLocations","visible","xValue","endValues","concat","x","y","push","marker","width","height","emptyPointSettings","mode","points","options","element","id","index","interior","opacity","dashArray","appendLinePath","renderMarker","doAnimation","option","animation","doLinearAnimation","destroy","getModuleName"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { getPoint, withInRange, TransformToVisible } from '../../common/utils/helper';\nimport { PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from './line-base';\n/**\n * `StackingLineSeries` module used to render the Stacking Line series.\n */\nvar StackingLineSeries = /** @class */ (function (_super) {\n    __extends(StackingLineSeries, _super);\n    function StackingLineSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Render the Stacking line series.\n     *\n     * @returns {void}\n     * @private\n     */\n    StackingLineSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n        var polarType = series.chart.chartAreaType === 'PolarRadar';\n        var getCoordinate = polarType ? TransformToVisible : getPoint;\n        var direction = '';\n        var visiblePts = this.enableComplexProperty(series);\n        var pointsLength = visiblePts.length;\n        var stackedvalue = series.stackedValues;\n        var point1;\n        var point2;\n        for (var i = 0; i < pointsLength; i++) {\n            visiblePts[i].regions = [];\n            visiblePts[i].symbolLocations = [];\n            if (visiblePts[i].visible && withInRange(visiblePts[i - 1], visiblePts[i], visiblePts[i + 1], series)) {\n                point1 = getCoordinate(visiblePts[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series);\n                direction = direction.concat((i ? 'L' : 'M') + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                visiblePts[i].symbolLocations.push(getCoordinate(visiblePts[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series));\n                visiblePts[i].regions.push(new Rect(visiblePts[i].symbolLocations[0].x - series.marker.width, visiblePts[i].symbolLocations[0].y - series.marker.height, 2 * series.marker.width, 2 * series.marker.height));\n            }\n            else {\n                if (series.emptyPointSettings.mode !== 'Drop') {\n                    if (visiblePts[i + 1] && visiblePts[i + 1].visible) {\n                        point1 = getCoordinate(visiblePts[i + 1].xValue, stackedvalue.endValues[i + 1], xAxis, yAxis, isInverted, series);\n                        direction = direction.concat('M' + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                    }\n                }\n            }\n        }\n        if (series.chart.chartAreaType === 'PolarRadar' && visiblePts.length > 1) {\n            point1 = { 'y': stackedvalue.endValues[0], 'x': series.points[0].xValue };\n            point2 = getCoordinate(point1.x, point1.y, xAxis, yAxis, isInverted, series);\n            direction += ('L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n        }\n        var options = new PathOption(series.chart.element.id + '_Series_' + series.index, 'none', series.width, series.interior, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    };\n    /**\n     * Animates the series.\n     *\n     * @param  {Series} series - Defines the series to animate.\n     * @returns {void}\n     */\n    StackingLineSeries.prototype.doAnimation = function (series) {\n        var option = series.animation;\n        this.doLinearAnimation(series, option);\n    };\n    /**\n     * To destroy the stacking line.\n     *\n     * @returns {void}\n     * @private\n     */\n    StackingLineSeries.prototype.destroy = function () {\n        /**\n         * Destroy method calling here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    StackingLineSeries.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'StackingLineSeries';\n    };\n    return StackingLineSeries;\n}(LineBase));\nexport { StackingLineSeries };\n"]},"metadata":{},"sourceType":"module"}