{"ast":null,"code":"import { EventHandler, Browser, createElement } from '@syncfusion/ej2-base';\nimport { getRectLocation, minMax, getElement, ChartLocation, RectOption } from '../../common/utils/helper';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { Toolkit } from './zooming-toolkit';\nimport { zoomComplete, onZooming } from '../../common/model/constants';\nimport { withInBounds } from '../../common/utils/helper';\n/**\n * `Zooming` module handles the zooming for chart.\n */\n\nvar Zoom = function () {\n  /**\n   * Constructor for Zooming module.\n   *\n   * @private\n   */\n  function Zoom(chart) {\n    this.zoomCompleteEvtCollection = [];\n    this.chart = chart;\n    this.isPointer = Browser.isPointer;\n    this.browserName = Browser.info.name;\n    this.wheelEvent = this.browserName === 'mozilla' ? this.isPointer ? 'mousewheel' : 'DOMMouseScroll' : 'mousewheel';\n    this.cancelEvent = this.isPointer ? 'pointerleave' : 'mouseleave';\n    this.addEventListener();\n    this.isDevice = Browser.isDevice;\n    var zooming = chart.zoomSettings;\n    this.toolkit = new Toolkit(chart);\n    this.zooming = zooming;\n    this.elementId = chart.element.id;\n    this.zoomingRect = new Rect(0, 0, 0, 0);\n    this.zoomAxes = [];\n    this.zoomkitOpacity = 0.3;\n    this.isIOS = Browser.isIos || Browser.isIos7;\n    this.isZoomed = this.performedUI = this.zooming.enablePan && this.zooming.enableSelectionZooming;\n\n    if (zooming.enableScrollbar) {\n      chart.scrollElement = createElement('div', {\n        id: chart.element.id + '_scrollElement'\n      });\n    }\n  }\n  /**\n   * Function that handles the Rectangular zooming.\n   *\n   * @returns {void}\n   */\n\n\n  Zoom.prototype.renderZooming = function (e, chart, isTouch) {\n    this.calculateZoomAxesRange(chart);\n\n    if (this.zooming.enableSelectionZooming && (!isTouch || chart.isDoubleTap && this.touchStartList.length === 1) && (!this.isPanning || chart.isDoubleTap)) {\n      this.isPanning = this.isDevice ? true : this.isPanning;\n      this.performedUI = true;\n      this.drawZoomingRectangle(chart);\n    } else if (this.isPanning && chart.isChartDrag) {\n      if (!isTouch || isTouch && this.touchStartList.length === 1) {\n        this.pinchTarget = isTouch ? e.target : null;\n        this.doPan(chart, chart.axisCollections);\n      }\n    }\n  }; // Zooming rectangle drawn here\n\n\n  Zoom.prototype.drawZoomingRectangle = function (chart) {\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var startLocation = new ChartLocation(chart.previousMouseMoveX, chart.previousMouseMoveY);\n    var endLocation = new ChartLocation(chart.mouseX, chart.mouseY);\n    var rect = this.zoomingRect = getRectLocation(startLocation, endLocation, areaBounds);\n\n    if (rect.width > 0 && rect.height > 0) {\n      this.isZoomed = true;\n      chart.disableTrackTooltip = true;\n      chart.svgObject.setAttribute('cursor', 'crosshair');\n\n      if (this.zooming.mode === 'X') {\n        rect.height = areaBounds.height;\n        rect.y = areaBounds.y;\n      } else if (this.zooming.mode === 'Y') {\n        rect.width = areaBounds.width;\n        rect.x = areaBounds.x;\n      }\n\n      var svg = chart.enableCanvas ? document.getElementById(this.elementId + '_tooltip_svg') : chart.svgObject;\n      svg.appendChild(chart.svgRenderer.drawRectangle(new RectOption(this.elementId + '_ZoomArea', chart.themeStyle.selectionRectFill, {\n        color: chart.themeStyle.selectionRectStroke,\n        width: 1\n      }, 1, rect, 0, 0, '', '3')));\n    }\n  }; // Panning performed here\n\n\n  Zoom.prototype.doPan = function (chart, axes) {\n    var _this = this;\n\n    if (chart.startMove && chart.crosshair.enable) {\n      return null;\n    }\n\n    var currentScale;\n    var offset;\n    this.isZoomed = true;\n    this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n    chart.delayRedraw = true;\n    this.zoomCompleteEvtCollection = [];\n    chart.disableTrackTooltip = true;\n    var argsData;\n    var zoomedAxisCollection = [];\n\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        previousVisibleRange: axis.visibleRange,\n        currentVisibleRange: null\n      };\n      currentScale = Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1);\n\n      if (axis.orientation === 'Horizontal') {\n        offset = (chart.previousMouseMoveX - chart.mouseX) / axis.rect.width / currentScale;\n        argsData.currentZoomPosition = minMax(axis.zoomPosition + offset, 0, 1 - axis.zoomFactor);\n      } else {\n        offset = (chart.previousMouseMoveY - chart.mouseY) / axis.rect.height / currentScale;\n        argsData.currentZoomPosition = minMax(axis.zoomPosition - offset, 0, 1 - axis.zoomFactor);\n      }\n\n      if (!argsData.cancel) {\n        axis.zoomFactor = argsData.currentZoomFactor;\n        axis.zoomPosition = argsData.currentZoomPosition;\n        this.zoomCompleteEvtCollection.push(argsData);\n      }\n\n      zoomedAxisCollection.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n\n    var zoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n\n    if (!zoomingEventArgs.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, zoomingEventArgs, function () {\n        _this.performDefferedZoom(chart);\n      });\n    } else {\n      this.performDefferedZoom(chart);\n      this.redrawOnZooming(chart, false);\n    }\n  };\n\n  Zoom.prototype.performDefferedZoom = function (chart) {\n    var translateX;\n    var translateY;\n\n    if (this.zooming.enableDeferredZooming) {\n      translateX = chart.mouseX - chart.mouseDownX;\n      translateY = chart.mouseY - chart.mouseDownY;\n\n      switch (this.zooming.mode) {\n        case 'X':\n          translateY = 0;\n          break;\n\n        case 'Y':\n          translateX = 0;\n          break;\n      }\n\n      this.setTransform(translateX, translateY, null, null, chart, false);\n      this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n\n      if (chart.enableCanvas) {\n        this.performZoomRedraw(chart);\n      }\n    } else {\n      this.performZoomRedraw(chart);\n    }\n\n    chart.previousMouseMoveX = chart.mouseX;\n    chart.previousMouseMoveY = chart.mouseY;\n  };\n  /**\n   * Redraw the chart on zooming.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Zoom.prototype.performZoomRedraw = function (chart) {\n    var rect = this.zoomingRect;\n    chart.animateSeries = false;\n\n    if (this.isZoomed) {\n      if (rect.width > 0 && rect.height > 0) {\n        this.performedUI = true;\n        chart.svgObject.setAttribute('cursor', 'auto');\n        this.doZoom(chart, chart.axisCollections, chart.chartAxisLayoutPanel.seriesClipRect);\n        chart.isDoubleTap = false;\n      } else if (chart.disableTrackTooltip) {\n        chart.disableTrackTooltip = false;\n        chart.delayRedraw = false;\n        chart.enableCanvas ? chart.createChartSvg() : chart.removeSvg();\n        chart.refreshAxis();\n        chart.refreshBound();\n      }\n    }\n  };\n\n  Zoom.prototype.refreshAxis = function (layout, chart, axes) {\n    var mode = chart.zoomSettings.mode;\n    layout.measureAxis(new Rect(chart.initialClipRect.x, chart.initialClipRect.y, chart.initialClipRect.width, chart.initialClipRect.height));\n    axes.map(function (axis, index) {\n      if (axis.orientation === 'Horizontal' && mode !== 'Y') {\n        layout.drawXAxisLabels(axis, index, null, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n      }\n\n      if (axis.orientation === 'Vertical' && mode !== 'X') {\n        layout.drawYAxisLabels(axis, index, null, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n      }\n    });\n  }; // Rectangular zoom calculated here performed here\n\n\n  Zoom.prototype.doZoom = function (chart, axes, bounds) {\n    var _this = this;\n\n    var zoomRect = this.zoomingRect;\n    var mode = this.zooming.mode;\n    var argsData;\n    this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n    var zoomedAxisCollections = [];\n    this.zoomCompleteEvtCollection = [];\n\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        previousVisibleRange: axis.visibleRange,\n        currentVisibleRange: null\n      };\n\n      if (axis.orientation === 'Horizontal') {\n        if (mode !== 'Y') {\n          argsData.currentZoomPosition += Math.abs((zoomRect.x - bounds.x) / bounds.width) * axis.zoomFactor;\n          argsData.currentZoomFactor *= zoomRect.width / bounds.width;\n        }\n      } else {\n        if (mode !== 'X') {\n          argsData.currentZoomPosition += (1 - Math.abs((zoomRect.height + (zoomRect.y - bounds.y)) / bounds.height)) * axis.zoomFactor;\n          argsData.currentZoomFactor *= zoomRect.height / bounds.height;\n        }\n      }\n\n      if (parseFloat(argsData.currentZoomFactor.toFixed(3)) <= 0.001) {\n        argsData.currentZoomFactor = argsData.previousZoomFactor;\n        argsData.currentZoomPosition = argsData.previousZoomPosition;\n      }\n\n      if (!argsData.cancel) {\n        axis.zoomFactor = argsData.currentZoomFactor;\n        axis.zoomPosition = argsData.currentZoomPosition;\n        this.zoomCompleteEvtCollection.push(argsData);\n      }\n\n      zoomedAxisCollections.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n\n    var onZoomingEventArg = {\n      cancel: false,\n      axisCollection: zoomedAxisCollections,\n      name: onZooming\n    };\n\n    if (!onZoomingEventArg.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, onZoomingEventArg, function () {\n        _this.zoomingRect = new Rect(0, 0, 0, 0);\n\n        _this.performZoomRedraw(chart);\n      });\n    } else {\n      this.zoomingRect = new Rect(0, 0, 0, 0);\n      this.redrawOnZooming(chart);\n    }\n  };\n  /** It is used to redraw the chart and trigger zoomComplete event */\n\n\n  Zoom.prototype.redrawOnZooming = function (chart, isRedraw, isMouseUp) {\n    if (isRedraw === void 0) {\n      isRedraw = true;\n    }\n\n    if (isMouseUp === void 0) {\n      isMouseUp = false;\n    }\n\n    var zoomCompleteCollection = isMouseUp ? this.toolkit.zoomCompleteEvtCollection : this.zoomCompleteEvtCollection;\n\n    if (isRedraw) {\n      this.performZoomRedraw(chart);\n    }\n\n    var argsData;\n\n    for (var i = 0; i < zoomCompleteCollection.length; i++) {\n      if (!zoomCompleteCollection[i].cancel) {\n        argsData = {\n          cancel: false,\n          name: zoomComplete,\n          axis: chart.axisCollections[i],\n          previousZoomFactor: zoomCompleteCollection[i].previousZoomFactor,\n          previousZoomPosition: zoomCompleteCollection[i].previousZoomPosition,\n          currentZoomFactor: chart.axisCollections[i].zoomFactor,\n          currentZoomPosition: chart.axisCollections[i].zoomPosition,\n          currentVisibleRange: chart.axisCollections[i].visibleRange,\n          previousVisibleRange: zoomCompleteCollection[i].previousVisibleRange\n        };\n        chart.trigger(zoomComplete, argsData);\n      }\n    }\n  };\n  /**\n   * Function that handles the Mouse wheel zooming.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Zoom.prototype.performMouseWheelZooming = function (e, mouseX, mouseY, chart, axes) {\n    var _this = this;\n\n    var direction = this.browserName === 'mozilla' && !this.isPointer ? -e.detail / 3 > 0 ? 1 : -1 : e['wheelDelta'] > 0 ? 1 : -1;\n    var mode = this.zooming.mode;\n    var origin = 0.5;\n    var cumulative;\n    var zoomFactor;\n    var zoomPosition;\n    this.isZoomed = true;\n    this.calculateZoomAxesRange(chart);\n    chart.disableTrackTooltip = true;\n    this.performedUI = true;\n    this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n    this.zoomCompleteEvtCollection = [];\n    var argsData;\n    var zoomedAxisCollection = [];\n\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        currentVisibleRange: null,\n        previousVisibleRange: axis.visibleRange\n      };\n\n      if (axis.orientation === 'Vertical' && mode !== 'X' || axis.orientation === 'Horizontal' && mode !== 'Y') {\n        cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + 0.25 * direction, 1);\n\n        if (cumulative >= 1) {\n          origin = axis.orientation === 'Horizontal' ? mouseX / axis.rect.width : 1 - mouseY / axis.rect.height;\n          origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n          zoomFactor = cumulative === 1 ? 1 : minMax((direction > 0 ? 0.9 : 1.1) / cumulative, 0, 1);\n          zoomPosition = cumulative === 1 ? 0 : axis.zoomPosition + (axis.zoomFactor - zoomFactor) * origin;\n\n          if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n            zoomFactor = zoomPosition + zoomFactor > 1 ? 1 - zoomPosition : zoomFactor;\n          }\n\n          argsData.currentZoomFactor = zoomFactor;\n          argsData.currentZoomPosition = zoomPosition;\n        }\n\n        if (!argsData.cancel) {\n          axis.zoomFactor = argsData.currentZoomFactor;\n          axis.zoomPosition = argsData.currentZoomPosition;\n          this.zoomCompleteEvtCollection.push(argsData);\n        }\n      }\n\n      zoomedAxisCollection.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n\n    var onZoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n\n    if (!onZoomingEventArgs.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, onZoomingEventArgs, function () {\n        _this.performZoomRedraw(chart);\n      });\n    } else {\n      this.redrawOnZooming(chart);\n    }\n  };\n  /**\n   * Function that handles the Pinch zooming.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Zoom.prototype.performPinchZooming = function (e, chart) {\n    if (this.zoomingRect.width > 0 && this.zoomingRect.height > 0 || chart.startMove && chart.crosshair.enable) {\n      return false;\n    }\n\n    this.calculateZoomAxesRange(chart);\n    this.isZoomed = true;\n    this.isPanning = true;\n    this.performedUI = true;\n    this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n    chart.delayRedraw = true;\n    chart.disableTrackTooltip = true;\n    var elementOffset = chart.element.getBoundingClientRect();\n    var touchDown = this.touchStartList;\n    var touchMove = this.touchMoveList;\n    var touch0StartX = touchDown[0].pageX - elementOffset.left;\n    var touch0StartY = touchDown[0].pageY - elementOffset.top;\n    var touch0EndX = touchMove[0].pageX - elementOffset.left;\n    var touch0EndY = touchMove[0].pageY - elementOffset.top;\n    var touch1StartX = touchDown[1].pageX - elementOffset.left;\n    var touch1StartY = touchDown[1].pageY - elementOffset.top;\n    var touch1EndX = touchMove[1].pageX - elementOffset.left;\n    var touch1EndY = touchMove[1].pageY - elementOffset.top;\n    var scaleX = Math.abs(touch0EndX - touch1EndX) / Math.abs(touch0StartX - touch1StartX);\n    var scaleY = Math.abs(touch0EndY - touch1EndY) / Math.abs(touch0StartY - touch1StartY);\n    var clipX = (this.offset.x - touch0EndX) / scaleX + touch0StartX;\n    var clipY = (this.offset.y - touch0EndY) / scaleY + touch0StartY;\n    var pinchRect = new Rect(clipX, clipY, this.offset.width / scaleX, this.offset.height / scaleY);\n    var translateXValue = touch0EndX - scaleX * touch0StartX;\n    var translateYValue = touch0EndY - scaleY * touch0StartY;\n\n    if (!isNaN(scaleX - scaleX) && !isNaN(scaleY - scaleY)) {\n      switch (this.zooming.mode) {\n        case 'XY':\n          this.setTransform(translateXValue, translateYValue, scaleX, scaleY, chart, true);\n          break;\n\n        case 'X':\n          this.setTransform(translateXValue, 0, scaleX, 1, chart, true);\n          break;\n\n        case 'Y':\n          this.setTransform(0, translateYValue, 1, scaleY, chart, true);\n          break;\n      }\n    }\n\n    this.calculatePinchZoomFactor(chart, pinchRect);\n    this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n    this.redrawOnZooming(chart, false);\n    return true;\n  };\n\n  Zoom.prototype.calculatePinchZoomFactor = function (chart, pinchRect) {\n    var mode = this.zooming.mode;\n    var selectionMin;\n    var selectionMax;\n    var rangeMin;\n    var rangeMax;\n    var value;\n    var axisTrans;\n    var argsData;\n    var currentZF;\n    var currentZP;\n    var zoomedAxisCollection = [];\n    this.zoomCompleteEvtCollection = [];\n\n    for (var index = 0; index < chart.axisCollections.length; index++) {\n      var axis = chart.axisCollections[index];\n\n      if (axis.orientation === 'Horizontal' && mode !== 'Y' || axis.orientation === 'Vertical' && mode !== 'X') {\n        currentZF = axis.zoomFactor;\n        currentZP = axis.zoomPosition;\n        argsData = {\n          cancel: false,\n          name: zoomComplete,\n          axis: axis,\n          previousZoomFactor: axis.zoomFactor,\n          previousZoomPosition: axis.zoomPosition,\n          currentZoomFactor: currentZF,\n          currentZoomPosition: currentZP,\n          previousVisibleRange: axis.visibleRange,\n          currentVisibleRange: null\n        };\n\n        if (axis.orientation === 'Horizontal') {\n          value = pinchRect.x - this.offset.x;\n          axisTrans = axis.rect.width / this.zoomAxes[index].delta;\n          rangeMin = value / axisTrans + this.zoomAxes[index].min;\n          value = pinchRect.x + pinchRect.width - this.offset.x;\n          rangeMax = value / axisTrans + this.zoomAxes[index].min;\n        } else {\n          value = pinchRect.y - this.offset.y;\n          axisTrans = axis.rect.height / this.zoomAxes[index].delta;\n          rangeMin = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n          value = pinchRect.y + pinchRect.height - this.offset.y;\n          rangeMax = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n        }\n\n        selectionMin = Math.min(rangeMin, rangeMax);\n        selectionMax = Math.max(rangeMin, rangeMax);\n        currentZP = (selectionMin - this.zoomAxes[index].actualMin) / this.zoomAxes[index].actualDelta;\n        currentZF = (selectionMax - selectionMin) / this.zoomAxes[index].actualDelta;\n        argsData.currentZoomPosition = currentZP < 0 ? 0 : currentZP;\n        argsData.currentZoomFactor = currentZF > 1 ? 1 : currentZF;\n\n        if (!argsData.cancel) {\n          axis.zoomFactor = argsData.currentZoomFactor;\n          axis.zoomPosition = argsData.currentZoomPosition;\n          this.zoomCompleteEvtCollection.push(argsData);\n        }\n\n        zoomedAxisCollection.push({\n          zoomFactor: axis.zoomFactor,\n          zoomPosition: axis.zoomFactor,\n          axisName: axis.name,\n          axisRange: axis.visibleRange\n        });\n      }\n    }\n\n    var onZoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n\n    if (!onZoomingEventArgs.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, onZoomingEventArgs);\n    }\n  }; // Series transformation style applied here.\n\n\n  Zoom.prototype.setTransform = function (transX, transY, scaleX, scaleY, chart, isPinch) {\n    if (!chart.enableCanvas) {\n      chart.seriesElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n    }\n\n    if (chart.indicatorElements) {\n      chart.indicatorElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n    }\n\n    var translate;\n    var xAxisLoc;\n    var yAxisLoc;\n    var element;\n\n    if (transX !== null && transY !== null) {\n      for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n        var value = _a[_i];\n        xAxisLoc = chart.requireInvertedAxis ? value.yAxis.rect.x : value.xAxis.rect.x;\n        yAxisLoc = chart.requireInvertedAxis ? value.xAxis.rect.y : value.yAxis.rect.y;\n        translate = 'translate(' + (transX + (isPinch ? scaleX * xAxisLoc : xAxisLoc)) + ',' + (transY + (isPinch ? scaleY * yAxisLoc : yAxisLoc)) + ')';\n        translate = scaleX || scaleY ? translate + ' scale(' + scaleX + ' ' + scaleY + ')' : translate;\n\n        if (value.visible) {\n          if (value.category === 'Indicator') {\n            value.seriesElement.parentNode.setAttribute('transform', translate);\n          } else {\n            if (!chart.enableCanvas) {\n              value.seriesElement.setAttribute('transform', translate);\n            }\n          }\n\n          element = getElement(chart.element.id + '_Series_' + value.index + '_DataLabelCollections');\n\n          if (value.errorBarElement) {\n            value.errorBarElement.setAttribute('transform', translate);\n          }\n\n          if (value.symbolElement) {\n            value.symbolElement.setAttribute('transform', translate);\n          }\n\n          if (value.textElement) {\n            value.textElement.setAttribute('visibility', 'hidden');\n            value.shapeElement.setAttribute('visibility', 'hidden');\n          }\n\n          if (element) {\n            element.style.visibility = 'hidden';\n          }\n        }\n      }\n    }\n  };\n\n  Zoom.prototype.calculateZoomAxesRange = function (chart) {\n    var range;\n    var axisRange;\n\n    for (var index = 0; index < chart.axisCollections.length; index++) {\n      var axis = chart.axisCollections[index];\n      axisRange = axis.visibleRange;\n\n      if (this.zoomAxes[index]) {\n        if (!chart.delayRedraw) {\n          this.zoomAxes[index].min = axisRange.min;\n          this.zoomAxes[index].delta = axisRange.delta;\n        }\n      } else {\n        range = {\n          actualMin: axis.actualRange.min,\n          actualDelta: axis.actualRange.delta,\n          min: axisRange.min,\n          delta: axisRange.delta\n        };\n        this.zoomAxes[index] = range;\n      }\n    }\n  }; // Zooming Toolkit created here\n\n\n  Zoom.prototype.showZoomingToolkit = function (chart) {\n    var toolboxItems = this.zooming.toolbarItems;\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var spacing = 5;\n    var render = chart.svgRenderer;\n    var length = this.isDevice ? 1 : toolboxItems.length;\n    var iconSize = this.isDevice ? measureText('Reset Zoom', {\n      size: '12px'\n    }).width : 16;\n    var height = this.isDevice ? measureText('Reset Zoom', {\n      size: '12px'\n    }).height : 22;\n    var width = length * iconSize + (length + 1) * spacing + (length - 1) * spacing;\n    var transX = areaBounds.x + areaBounds.width - width - spacing;\n    var transY = areaBounds.y + spacing;\n    var xPosition = spacing;\n    var toolkit = this.toolkit;\n    var element;\n    var shadowElement = '<filter id=\"chart_shadow\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>';\n    shadowElement += '<feOffset dx=\"-3\" dy=\"4\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/>';\n    shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n\n    if (length === 0 || getElement(this.elementId + '_Zooming_KitCollection')) {\n      return false;\n    }\n\n    var defElement = render.createDefs();\n    toolboxItems = this.isDevice ? ['Reset'] : toolboxItems;\n    defElement.innerHTML = shadowElement;\n    this.toolkitElements = render.createGroup({\n      id: this.elementId + '_Zooming_KitCollection',\n      transform: 'translate(' + transX + ',' + transY + ')'\n    });\n    this.toolkitElements.appendChild(defElement);\n    var zoomFillColor = this.chart.theme === 'Tailwind' ? '#F3F4F6' : this.chart.theme === 'TailwindDark' ? '#374151' : '#fafafa';\n    this.toolkitElements.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, {\n      color: 'transparent',\n      width: 1\n    }, 1, new Rect(0, 0, width, height + spacing * 2), 0, 0)));\n    var outerElement = render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, {\n      color: 'transparent',\n      width: 1\n    }, 0.1, new Rect(0, 0, width, height + spacing * 2), 0, 0));\n\n    if (this.chart.theme === 'Tailwind' || this.chart.theme === 'TailwindDark') {\n      outerElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\n    } else {\n      outerElement.setAttribute('filter', 'url(#chart_shadow)');\n    }\n\n    this.toolkitElements.appendChild(outerElement);\n    var currentItem;\n    var panIcon = false;\n\n    for (var i = 1; i <= length; i++) {\n      currentItem = toolboxItems[i - 1];\n      element = render.createGroup({\n        transform: 'translate(' + xPosition + ',' + (this.isDevice ? spacing : spacing + 3) + ')'\n      }); // for desktop toolkit hight is 32 and top padding is 8 icon size 16\n\n      switch (currentItem) {\n        case 'Pan':\n          toolkit.createPanButton(element, this.toolkitElements);\n          panIcon = true;\n          break;\n\n        case 'Zoom':\n          toolkit.createZoomButton(element, this.toolkitElements);\n          break;\n\n        case 'ZoomIn':\n          toolkit.createZoomInButton(element, this.toolkitElements, chart);\n          break;\n\n        case 'ZoomOut':\n          toolkit.createZoomOutButton(element, this.toolkitElements, chart);\n          break;\n\n        case 'Reset':\n          toolkit.createResetButton(element, this.toolkitElements, chart, this.isDevice);\n          break;\n      }\n\n      xPosition += iconSize + spacing * 2;\n    }\n\n    this.toolkitElements.setAttribute('opacity', this.isDevice ? '1' : '' + this.zoomkitOpacity);\n    this.toolkitElements.setAttribute('cursor', 'auto');\n\n    if (chart.enableCanvas) {\n      var zoomDiv = document.createElement('div');\n      zoomDiv.id = chart.element.id + '_zoom';\n      zoomDiv.setAttribute('style', 'position:absolute; z-index:1');\n      var zoomheight = chart.availableSize.height / 2;\n      var svg = chart.svgRenderer.createSvg({\n        id: chart.element.id + '_zoomkit_svg',\n        width: chart.availableSize.width,\n        height: zoomheight\n      });\n      svg.setAttribute('style', 'position:absolute');\n      svg.appendChild(this.toolkitElements);\n      zoomDiv.appendChild(svg);\n      document.getElementById(this.elementId + '_Secondary_Element').appendChild(zoomDiv);\n    } else {\n      chart.svgObject.appendChild(this.toolkitElements);\n    }\n\n    if (!this.isDevice) {\n      EventHandler.add(this.toolkitElements, 'mousemove touchstart', this.zoomToolkitMove, this);\n      EventHandler.add(this.toolkitElements, 'mouseleave touchend', this.zoomToolkitLeave, this);\n\n      if (this.isPanning && panIcon) {\n        toolkit.pan();\n      }\n    }\n\n    return true;\n  };\n  /**\n   * To the show the zooming toolkit.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Zoom.prototype.applyZoomToolkit = function (chart, axes) {\n    var showToolkit = this.isAxisZoomed(axes);\n\n    if (showToolkit) {\n      this.showZoomingToolkit(chart);\n      this.isZoomed = true;\n    } else {\n      this.toolkit.removeTooltip();\n      this.isPanning = false;\n      this.isZoomed = false;\n      chart.svgObject.setAttribute('cursor', 'auto');\n    }\n  };\n  /**\n   * Return boolean property to show zooming toolkit.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Zoom.prototype.isAxisZoomed = function (axes) {\n    var showToolkit = false;\n\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      showToolkit = showToolkit || axis.zoomFactor !== 1 || axis.zoomPosition !== 0;\n    }\n\n    return showToolkit;\n  };\n\n  Zoom.prototype.zoomToolkitMove = function () {\n    var element = this.toolkitElements;\n    this.zoomkitOpacity = 1;\n    element.setAttribute('opacity', '' + this.zoomkitOpacity);\n    return false;\n  };\n\n  Zoom.prototype.zoomToolkitLeave = function () {\n    var element = this.toolkitElements;\n    this.zoomkitOpacity = 0.3;\n    element.setAttribute('opacity', '' + this.zoomkitOpacity);\n    return false;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Zoom.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n\n    EventHandler.add(this.chart.element, this.wheelEvent, this.chartMouseWheel, this);\n    this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n    this.chart.on(Browser.touchStartEvent, this.mouseDownHandler, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    this.chart.on(this.cancelEvent, this.mouseCancelHandler, this);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Zoom.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n\n    EventHandler.remove(this.chart.element, this.wheelEvent, this.chartMouseWheel);\n    this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n    this.chart.off(Browser.touchStartEvent, this.mouseDownHandler);\n    this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n    this.chart.off(this.cancelEvent, this.mouseCancelHandler);\n  };\n  /**\n   * Handles the mouse wheel on chart.\n   *\n   * @returns {boolean} false\n   * @private\n   */\n\n\n  Zoom.prototype.chartMouseWheel = function (e) {\n    var chart = this.chart;\n    var offset = chart.element.getBoundingClientRect();\n    var svgRect = getElement(chart.svgId).getBoundingClientRect();\n    var mouseX = e.clientX - offset.left - Math.max(svgRect.left - offset.left, 0);\n    var mouseY = e.clientY - offset.top - Math.max(svgRect.top - offset.top, 0);\n\n    if (this.zooming.enableMouseWheelZooming && withInBounds(mouseX, mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n      e.preventDefault();\n      this.performMouseWheelZooming(e, mouseX, mouseY, chart, chart.axisCollections);\n    }\n\n    return false;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Zoom.prototype.mouseMoveHandler = function (e) {\n    //Zooming for chart\n    var chart = this.chart;\n    var touches = null;\n\n    if (e.type === 'touchmove') {\n      if (e.preventDefault && this.isIOS && (this.isPanning || chart.isDoubleTap || this.zooming.enablePinchZooming && this.touchStartList.length > 1)) {\n        e.preventDefault();\n      }\n\n      touches = e.touches;\n    }\n\n    if (chart.isChartDrag) {\n      if (chart.isTouch) {\n        this.touchMoveList = this.addTouchPointer(this.touchMoveList, e, touches);\n\n        if (this.zooming.enablePinchZooming && this.touchMoveList.length > 1 && this.touchStartList.length > 1) {\n          this.performPinchZooming(e, chart);\n        }\n      }\n\n      this.renderZooming(e, chart, chart.isTouch);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Zoom.prototype.mouseDownHandler = function (e) {\n    //Zooming for chart\n    var chart = this.chart;\n    var touches = null;\n    var target;\n\n    if (e.type === 'touchstart') {\n      touches = e.touches;\n      target = e.target;\n    } else {\n      target = e.target;\n    }\n\n    if (target.id.indexOf(chart.element.id + '_Zooming_') === -1 && withInBounds(chart.previousMouseMoveX, chart.previousMouseMoveY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n      chart.isChartDrag = true;\n    }\n\n    if (chart.isTouch) {\n      this.touchStartList = this.addTouchPointer(this.touchStartList, e, touches);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Zoom.prototype.mouseUpHandler = function (e) {\n    var chart = this.chart;\n    var performZoomRedraw = e.target.id.indexOf(chart.element.id + '_ZoomOut_') === -1 || e.target.id.indexOf(chart.element.id + '_ZoomIn_') === -1;\n\n    if (chart.isChartDrag || performZoomRedraw) {\n      this.redrawOnZooming(chart, true, true);\n    }\n\n    if (chart.isTouch) {\n      if (chart.isDoubleTap && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect) && this.touchStartList.length === 1 && this.isZoomed) {\n        this.toolkit.reset();\n      }\n\n      this.touchStartList = [];\n      chart.isDoubleTap = false;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Zoom.prototype.mouseCancelHandler = function () {\n    if (this.isZoomed) {\n      this.performZoomRedraw(this.chart);\n    }\n\n    this.pinchTarget = null;\n    this.touchStartList = [];\n    this.touchMoveList = [];\n  };\n  /**\n   * Handles the touch pointer.\n   *\n   * @returns {ITouches[]} touchList collection\n   * @private\n   */\n\n\n  Zoom.prototype.addTouchPointer = function (touchList, e, touches) {\n    if (touches) {\n      touchList = [];\n\n      for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({\n          pageX: touches[i].clientX,\n          pageY: touches[i].clientY,\n          pointerId: null\n        });\n      }\n    } else {\n      touchList = touchList ? touchList : [];\n\n      if (touchList.length === 0) {\n        touchList.push({\n          pageX: e.clientX,\n          pageY: e.clientY,\n          pointerId: e.pointerId\n        });\n      } else {\n        for (var i = 0, length_2 = touchList.length; i < length_2; i++) {\n          if (touchList[i].pointerId === e.pointerId) {\n            touchList[i] = {\n              pageX: e.clientX,\n              pageY: e.clientY,\n              pointerId: e.pointerId\n            };\n          } else {\n            touchList.push({\n              pageX: e.clientX,\n              pageY: e.clientY,\n              pointerId: e.pointerId\n            });\n          }\n        }\n      }\n    }\n\n    return touchList;\n  };\n  /**\n   * Get module name.\n   */\n\n\n  Zoom.prototype.getModuleName = function () {\n    // Returns te module name\n    return 'Zoom';\n  };\n  /**\n   * To destroy the zooming.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Zoom.prototype.destroy = function () {\n    // Destroy method performed here\n    this.removeEventListener();\n  };\n\n  return Zoom;\n}();\n\nexport { Zoom };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-charts/src/chart/user-interaction/zooming.js"],"names":["EventHandler","Browser","createElement","getRectLocation","minMax","getElement","ChartLocation","RectOption","Rect","measureText","Toolkit","zoomComplete","onZooming","withInBounds","Zoom","chart","zoomCompleteEvtCollection","isPointer","browserName","info","name","wheelEvent","cancelEvent","addEventListener","isDevice","zooming","zoomSettings","toolkit","elementId","element","id","zoomingRect","zoomAxes","zoomkitOpacity","isIOS","isIos","isIos7","isZoomed","performedUI","enablePan","enableSelectionZooming","enableScrollbar","scrollElement","prototype","renderZooming","e","isTouch","calculateZoomAxesRange","isDoubleTap","touchStartList","length","isPanning","drawZoomingRectangle","isChartDrag","pinchTarget","target","doPan","axisCollections","areaBounds","chartAxisLayoutPanel","seriesClipRect","startLocation","previousMouseMoveX","previousMouseMoveY","endLocation","mouseX","mouseY","rect","width","height","disableTrackTooltip","svgObject","setAttribute","mode","y","x","svg","enableCanvas","document","getElementById","appendChild","svgRenderer","drawRectangle","themeStyle","selectionRectFill","color","selectionRectStroke","axes","_this","startMove","crosshair","enable","currentScale","offset","delayRedraw","argsData","zoomedAxisCollection","_i","_a","axis","cancel","previousZoomFactor","zoomFactor","previousZoomPosition","zoomPosition","currentZoomFactor","currentZoomPosition","previousVisibleRange","visibleRange","currentVisibleRange","Math","max","orientation","push","axisName","axisRange","zoomingEventArgs","axisCollection","isBlazor","trigger","performDefferedZoom","redrawOnZooming","translateX","translateY","enableDeferredZooming","mouseDownX","mouseDownY","setTransform","refreshAxis","performZoomRedraw","animateSeries","doZoom","createChartSvg","removeSvg","refreshBound","layout","measureAxis","initialClipRect","map","index","drawXAxisLabels","placeNextToAxisLine","updatedRect","drawYAxisLabels","bounds","zoomRect","zoomedAxisCollections","abs","parseFloat","toFixed","onZoomingEventArg","isRedraw","isMouseUp","zoomCompleteCollection","i","performMouseWheelZooming","direction","detail","origin","cumulative","onZoomingEventArgs","performPinchZooming","elementOffset","getBoundingClientRect","touchDown","touchMove","touchMoveList","touch0StartX","pageX","left","touch0StartY","pageY","top","touch0EndX","touch0EndY","touch1StartX","touch1StartY","touch1EndX","touch1EndY","scaleX","scaleY","clipX","clipY","pinchRect","translateXValue","translateYValue","isNaN","calculatePinchZoomFactor","selectionMin","selectionMax","rangeMin","rangeMax","value","axisTrans","currentZF","currentZP","delta","min","actualMin","actualDelta","transX","transY","isPinch","seriesElements","indicatorElements","translate","xAxisLoc","yAxisLoc","visibleSeries","requireInvertedAxis","yAxis","xAxis","visible","category","seriesElement","parentNode","errorBarElement","symbolElement","textElement","shapeElement","style","visibility","range","actualRange","showZoomingToolkit","toolboxItems","toolbarItems","spacing","render","iconSize","size","xPosition","shadowElement","defElement","createDefs","innerHTML","toolkitElements","createGroup","transform","zoomFillColor","theme","outerElement","currentItem","panIcon","createPanButton","createZoomButton","createZoomInButton","createZoomOutButton","createResetButton","zoomDiv","zoomheight","availableSize","createSvg","add","zoomToolkitMove","zoomToolkitLeave","pan","applyZoomToolkit","showToolkit","isAxisZoomed","removeTooltip","isDestroyed","chartMouseWheel","on","touchMoveEvent","mouseMoveHandler","touchStartEvent","mouseDownHandler","touchEndEvent","mouseUpHandler","mouseCancelHandler","removeEventListener","remove","off","svgRect","svgId","clientX","clientY","enableMouseWheelZooming","preventDefault","touches","type","enablePinchZooming","addTouchPointer","indexOf","reset","touchList","length_1","pointerId","length_2","getModuleName","destroy"],"mappings":"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","sourcesContent":["import { EventHandler, Browser, createElement } from '@syncfusion/ej2-base';\nimport { getRectLocation, minMax, getElement, ChartLocation, RectOption } from '../../common/utils/helper';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { Toolkit } from './zooming-toolkit';\nimport { zoomComplete, onZooming } from '../../common/model/constants';\nimport { withInBounds } from '../../common/utils/helper';\n/**\n * `Zooming` module handles the zooming for chart.\n */\nvar Zoom = /** @class */ (function () {\n    /**\n     * Constructor for Zooming module.\n     *\n     * @private\n     */\n    function Zoom(chart) {\n        this.zoomCompleteEvtCollection = [];\n        this.chart = chart;\n        this.isPointer = Browser.isPointer;\n        this.browserName = Browser.info.name;\n        this.wheelEvent = this.browserName === 'mozilla' ? (this.isPointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        this.cancelEvent = this.isPointer ? 'pointerleave' : 'mouseleave';\n        this.addEventListener();\n        this.isDevice = Browser.isDevice;\n        var zooming = chart.zoomSettings;\n        this.toolkit = new Toolkit(chart);\n        this.zooming = zooming;\n        this.elementId = chart.element.id;\n        this.zoomingRect = new Rect(0, 0, 0, 0);\n        this.zoomAxes = [];\n        this.zoomkitOpacity = 0.3;\n        this.isIOS = Browser.isIos || Browser.isIos7;\n        this.isZoomed = this.performedUI = this.zooming.enablePan && this.zooming.enableSelectionZooming;\n        if (zooming.enableScrollbar) {\n            chart.scrollElement = createElement('div', { id: chart.element.id + '_scrollElement' });\n        }\n    }\n    /**\n     * Function that handles the Rectangular zooming.\n     *\n     * @returns {void}\n     */\n    Zoom.prototype.renderZooming = function (e, chart, isTouch) {\n        this.calculateZoomAxesRange(chart);\n        if (this.zooming.enableSelectionZooming && (!isTouch\n            || (chart.isDoubleTap && this.touchStartList.length === 1)) && (!this.isPanning || chart.isDoubleTap)) {\n            this.isPanning = this.isDevice ? true : this.isPanning;\n            this.performedUI = true;\n            this.drawZoomingRectangle(chart);\n        }\n        else if (this.isPanning && chart.isChartDrag) {\n            if (!isTouch || (isTouch && this.touchStartList.length === 1)) {\n                this.pinchTarget = isTouch ? e.target : null;\n                this.doPan(chart, chart.axisCollections);\n            }\n        }\n    };\n    // Zooming rectangle drawn here\n    Zoom.prototype.drawZoomingRectangle = function (chart) {\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var startLocation = new ChartLocation(chart.previousMouseMoveX, chart.previousMouseMoveY);\n        var endLocation = new ChartLocation(chart.mouseX, chart.mouseY);\n        var rect = this.zoomingRect = getRectLocation(startLocation, endLocation, areaBounds);\n        if (rect.width > 0 && rect.height > 0) {\n            this.isZoomed = true;\n            chart.disableTrackTooltip = true;\n            chart.svgObject.setAttribute('cursor', 'crosshair');\n            if (this.zooming.mode === 'X') {\n                rect.height = areaBounds.height;\n                rect.y = areaBounds.y;\n            }\n            else if (this.zooming.mode === 'Y') {\n                rect.width = areaBounds.width;\n                rect.x = areaBounds.x;\n            }\n            var svg = chart.enableCanvas ? document.getElementById(this.elementId + '_tooltip_svg') : chart.svgObject;\n            svg.appendChild(chart.svgRenderer.drawRectangle(new RectOption(this.elementId + '_ZoomArea', chart.themeStyle.selectionRectFill, { color: chart.themeStyle.selectionRectStroke, width: 1 }, 1, rect, 0, 0, '', '3')));\n        }\n    };\n    // Panning performed here\n    Zoom.prototype.doPan = function (chart, axes) {\n        var _this = this;\n        if (chart.startMove && chart.crosshair.enable) {\n            return null;\n        }\n        var currentScale;\n        var offset;\n        this.isZoomed = true;\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n        chart.delayRedraw = true;\n        this.zoomCompleteEvtCollection = [];\n        chart.disableTrackTooltip = true;\n        var argsData;\n        var zoomedAxisCollection = [];\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                previousZoomPosition: axis.zoomPosition, currentZoomFactor: axis.zoomFactor,\n                currentZoomPosition: axis.zoomPosition, previousVisibleRange: axis.visibleRange,\n                currentVisibleRange: null\n            };\n            currentScale = Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1);\n            if (axis.orientation === 'Horizontal') {\n                offset = (chart.previousMouseMoveX - chart.mouseX) / axis.rect.width / currentScale;\n                argsData.currentZoomPosition = minMax(axis.zoomPosition + offset, 0, (1 - axis.zoomFactor));\n            }\n            else {\n                offset = (chart.previousMouseMoveY - chart.mouseY) / axis.rect.height / currentScale;\n                argsData.currentZoomPosition = minMax(axis.zoomPosition - offset, 0, (1 - axis.zoomFactor));\n            }\n            if (!argsData.cancel) {\n                axis.zoomFactor = argsData.currentZoomFactor;\n                axis.zoomPosition = argsData.currentZoomPosition;\n                this.zoomCompleteEvtCollection.push(argsData);\n            }\n            zoomedAxisCollection.push({\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                axisRange: axis.visibleRange\n            });\n        }\n        var zoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\n        if (!zoomingEventArgs.cancel && this.chart.isBlazor) {\n            this.chart.trigger(onZooming, zoomingEventArgs, function () {\n                _this.performDefferedZoom(chart);\n            });\n        }\n        else {\n            this.performDefferedZoom(chart);\n            this.redrawOnZooming(chart, false);\n        }\n    };\n    Zoom.prototype.performDefferedZoom = function (chart) {\n        var translateX;\n        var translateY;\n        if (this.zooming.enableDeferredZooming) {\n            translateX = chart.mouseX - chart.mouseDownX;\n            translateY = chart.mouseY - chart.mouseDownY;\n            switch (this.zooming.mode) {\n                case 'X':\n                    translateY = 0;\n                    break;\n                case 'Y':\n                    translateX = 0;\n                    break;\n            }\n            this.setTransform(translateX, translateY, null, null, chart, false);\n            this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n            if (chart.enableCanvas) {\n                this.performZoomRedraw(chart);\n            }\n        }\n        else {\n            this.performZoomRedraw(chart);\n        }\n        chart.previousMouseMoveX = chart.mouseX;\n        chart.previousMouseMoveY = chart.mouseY;\n    };\n    /**\n     * Redraw the chart on zooming.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.performZoomRedraw = function (chart) {\n        var rect = this.zoomingRect;\n        chart.animateSeries = false;\n        if (this.isZoomed) {\n            if (rect.width > 0 && rect.height > 0) {\n                this.performedUI = true;\n                chart.svgObject.setAttribute('cursor', 'auto');\n                this.doZoom(chart, chart.axisCollections, chart.chartAxisLayoutPanel.seriesClipRect);\n                chart.isDoubleTap = false;\n            }\n            else if (chart.disableTrackTooltip) {\n                chart.disableTrackTooltip = false;\n                chart.delayRedraw = false;\n                chart.enableCanvas ? chart.createChartSvg() : chart.removeSvg();\n                chart.refreshAxis();\n                chart.refreshBound();\n            }\n        }\n    };\n    Zoom.prototype.refreshAxis = function (layout, chart, axes) {\n        var mode = chart.zoomSettings.mode;\n        layout.measureAxis(new Rect(chart.initialClipRect.x, chart.initialClipRect.y, chart.initialClipRect.width, chart.initialClipRect.height));\n        axes.map(function (axis, index) {\n            if (axis.orientation === 'Horizontal' && mode !== 'Y') {\n                layout.drawXAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n            }\n            if (axis.orientation === 'Vertical' && mode !== 'X') {\n                layout.drawYAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n            }\n        });\n    };\n    // Rectangular zoom calculated here performed here\n    Zoom.prototype.doZoom = function (chart, axes, bounds) {\n        var _this = this;\n        var zoomRect = this.zoomingRect;\n        var mode = this.zooming.mode;\n        var argsData;\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n        var zoomedAxisCollections = [];\n        this.zoomCompleteEvtCollection = [];\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis,\n                previousZoomFactor: axis.zoomFactor,\n                previousZoomPosition: axis.zoomPosition,\n                currentZoomFactor: axis.zoomFactor,\n                currentZoomPosition: axis.zoomPosition,\n                previousVisibleRange: axis.visibleRange, currentVisibleRange: null\n            };\n            if (axis.orientation === 'Horizontal') {\n                if (mode !== 'Y') {\n                    argsData.currentZoomPosition += Math.abs((zoomRect.x - bounds.x) / (bounds.width)) * axis.zoomFactor;\n                    argsData.currentZoomFactor *= (zoomRect.width / bounds.width);\n                }\n            }\n            else {\n                if (mode !== 'X') {\n                    argsData.currentZoomPosition += (1 - Math.abs((zoomRect.height + (zoomRect.y - bounds.y)) / (bounds.height)))\n                        * axis.zoomFactor;\n                    argsData.currentZoomFactor *= (zoomRect.height / bounds.height);\n                }\n            }\n            if (parseFloat(argsData.currentZoomFactor.toFixed(3)) <= 0.001) {\n                argsData.currentZoomFactor = argsData.previousZoomFactor;\n                argsData.currentZoomPosition = argsData.previousZoomPosition;\n            }\n            if (!argsData.cancel) {\n                axis.zoomFactor = argsData.currentZoomFactor;\n                axis.zoomPosition = argsData.currentZoomPosition;\n                this.zoomCompleteEvtCollection.push(argsData);\n            }\n            zoomedAxisCollections.push({\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                axisRange: axis.visibleRange\n            });\n        }\n        var onZoomingEventArg = { cancel: false, axisCollection: zoomedAxisCollections, name: onZooming };\n        if (!onZoomingEventArg.cancel && this.chart.isBlazor) {\n            this.chart.trigger(onZooming, onZoomingEventArg, function () {\n                _this.zoomingRect = new Rect(0, 0, 0, 0);\n                _this.performZoomRedraw(chart);\n            });\n        }\n        else {\n            this.zoomingRect = new Rect(0, 0, 0, 0);\n            this.redrawOnZooming(chart);\n        }\n    };\n    /** It is used to redraw the chart and trigger zoomComplete event */\n    Zoom.prototype.redrawOnZooming = function (chart, isRedraw, isMouseUp) {\n        if (isRedraw === void 0) { isRedraw = true; }\n        if (isMouseUp === void 0) { isMouseUp = false; }\n        var zoomCompleteCollection = isMouseUp ? this.toolkit.zoomCompleteEvtCollection :\n            this.zoomCompleteEvtCollection;\n        if (isRedraw) {\n            this.performZoomRedraw(chart);\n        }\n        var argsData;\n        for (var i = 0; i < zoomCompleteCollection.length; i++) {\n            if (!zoomCompleteCollection[i].cancel) {\n                argsData = {\n                    cancel: false, name: zoomComplete,\n                    axis: chart.axisCollections[i],\n                    previousZoomFactor: zoomCompleteCollection[i].previousZoomFactor,\n                    previousZoomPosition: zoomCompleteCollection[i].previousZoomPosition,\n                    currentZoomFactor: chart.axisCollections[i].zoomFactor,\n                    currentZoomPosition: chart.axisCollections[i].zoomPosition,\n                    currentVisibleRange: chart.axisCollections[i].visibleRange,\n                    previousVisibleRange: zoomCompleteCollection[i].previousVisibleRange\n                };\n                chart.trigger(zoomComplete, argsData);\n            }\n        }\n    };\n    /**\n     * Function that handles the Mouse wheel zooming.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.performMouseWheelZooming = function (e, mouseX, mouseY, chart, axes) {\n        var _this = this;\n        var direction = (this.browserName === 'mozilla' && !this.isPointer) ?\n            -(e.detail) / 3 > 0 ? 1 : -1 : (e['wheelDelta'] > 0 ? 1 : -1);\n        var mode = this.zooming.mode;\n        var origin = 0.5;\n        var cumulative;\n        var zoomFactor;\n        var zoomPosition;\n        this.isZoomed = true;\n        this.calculateZoomAxesRange(chart);\n        chart.disableTrackTooltip = true;\n        this.performedUI = true;\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n        this.zoomCompleteEvtCollection = [];\n        var argsData;\n        var zoomedAxisCollection = [];\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                previousZoomPosition: axis.zoomPosition,\n                currentZoomFactor: axis.zoomFactor,\n                currentZoomPosition: axis.zoomPosition, currentVisibleRange: null,\n                previousVisibleRange: axis.visibleRange\n            };\n            if ((axis.orientation === 'Vertical' && mode !== 'X') ||\n                (axis.orientation === 'Horizontal' && mode !== 'Y')) {\n                cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * direction), 1);\n                if (cumulative >= 1) {\n                    origin = axis.orientation === 'Horizontal' ? mouseX / axis.rect.width : 1 - (mouseY / axis.rect.height);\n                    origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n                    zoomFactor = (cumulative === 1) ? 1 : minMax((direction > 0 ? 0.9 : 1.1) / cumulative, 0, 1);\n                    zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - zoomFactor) * origin);\n                    if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n                        zoomFactor = (zoomPosition + zoomFactor) > 1 ? (1 - zoomPosition) : zoomFactor;\n                    }\n                    argsData.currentZoomFactor = zoomFactor;\n                    argsData.currentZoomPosition = zoomPosition;\n                }\n                if (!argsData.cancel) {\n                    axis.zoomFactor = argsData.currentZoomFactor;\n                    axis.zoomPosition = argsData.currentZoomPosition;\n                    this.zoomCompleteEvtCollection.push(argsData);\n                }\n            }\n            zoomedAxisCollection.push({\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                axisRange: axis.visibleRange\n            });\n        }\n        var onZoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\n        if (!onZoomingEventArgs.cancel && this.chart.isBlazor) {\n            this.chart.trigger(onZooming, onZoomingEventArgs, function () { _this.performZoomRedraw(chart); });\n        }\n        else {\n            this.redrawOnZooming(chart);\n        }\n    };\n    /**\n     * Function that handles the Pinch zooming.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.performPinchZooming = function (e, chart) {\n        if ((this.zoomingRect.width > 0 && this.zoomingRect.height > 0) || (chart.startMove && chart.crosshair.enable)) {\n            return false;\n        }\n        this.calculateZoomAxesRange(chart);\n        this.isZoomed = true;\n        this.isPanning = true;\n        this.performedUI = true;\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n        chart.delayRedraw = true;\n        chart.disableTrackTooltip = true;\n        var elementOffset = chart.element.getBoundingClientRect();\n        var touchDown = this.touchStartList;\n        var touchMove = this.touchMoveList;\n        var touch0StartX = touchDown[0].pageX - elementOffset.left;\n        var touch0StartY = touchDown[0].pageY - elementOffset.top;\n        var touch0EndX = touchMove[0].pageX - elementOffset.left;\n        var touch0EndY = touchMove[0].pageY - elementOffset.top;\n        var touch1StartX = touchDown[1].pageX - elementOffset.left;\n        var touch1StartY = touchDown[1].pageY - elementOffset.top;\n        var touch1EndX = touchMove[1].pageX - elementOffset.left;\n        var touch1EndY = touchMove[1].pageY - elementOffset.top;\n        var scaleX = Math.abs(touch0EndX - touch1EndX) / Math.abs(touch0StartX - touch1StartX);\n        var scaleY = Math.abs(touch0EndY - touch1EndY) / Math.abs(touch0StartY - touch1StartY);\n        var clipX = ((this.offset.x - touch0EndX) / scaleX) + touch0StartX;\n        var clipY = ((this.offset.y - touch0EndY) / scaleY) + touch0StartY;\n        var pinchRect = new Rect(clipX, clipY, this.offset.width / scaleX, this.offset.height / scaleY);\n        var translateXValue = (touch0EndX - (scaleX * touch0StartX));\n        var translateYValue = (touch0EndY - (scaleY * touch0StartY));\n        if (!isNaN(scaleX - scaleX) && !isNaN(scaleY - scaleY)) {\n            switch (this.zooming.mode) {\n                case 'XY':\n                    this.setTransform(translateXValue, translateYValue, scaleX, scaleY, chart, true);\n                    break;\n                case 'X':\n                    this.setTransform(translateXValue, 0, scaleX, 1, chart, true);\n                    break;\n                case 'Y':\n                    this.setTransform(0, translateYValue, 1, scaleY, chart, true);\n                    break;\n            }\n        }\n        this.calculatePinchZoomFactor(chart, pinchRect);\n        this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n        this.redrawOnZooming(chart, false);\n        return true;\n    };\n    Zoom.prototype.calculatePinchZoomFactor = function (chart, pinchRect) {\n        var mode = this.zooming.mode;\n        var selectionMin;\n        var selectionMax;\n        var rangeMin;\n        var rangeMax;\n        var value;\n        var axisTrans;\n        var argsData;\n        var currentZF;\n        var currentZP;\n        var zoomedAxisCollection = [];\n        this.zoomCompleteEvtCollection = [];\n        for (var index = 0; index < chart.axisCollections.length; index++) {\n            var axis = chart.axisCollections[index];\n            if ((axis.orientation === 'Horizontal' && mode !== 'Y') ||\n                (axis.orientation === 'Vertical' && mode !== 'X')) {\n                currentZF = axis.zoomFactor;\n                currentZP = axis.zoomPosition;\n                argsData = {\n                    cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                    previousZoomPosition: axis.zoomPosition, currentZoomFactor: currentZF,\n                    currentZoomPosition: currentZP, previousVisibleRange: axis.visibleRange,\n                    currentVisibleRange: null\n                };\n                if (axis.orientation === 'Horizontal') {\n                    value = pinchRect.x - this.offset.x;\n                    axisTrans = axis.rect.width / this.zoomAxes[index].delta;\n                    rangeMin = value / axisTrans + this.zoomAxes[index].min;\n                    value = pinchRect.x + pinchRect.width - this.offset.x;\n                    rangeMax = value / axisTrans + this.zoomAxes[index].min;\n                }\n                else {\n                    value = pinchRect.y - this.offset.y;\n                    axisTrans = axis.rect.height / this.zoomAxes[index].delta;\n                    rangeMin = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n                    value = pinchRect.y + pinchRect.height - this.offset.y;\n                    rangeMax = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n                }\n                selectionMin = Math.min(rangeMin, rangeMax);\n                selectionMax = Math.max(rangeMin, rangeMax);\n                currentZP = (selectionMin - this.zoomAxes[index].actualMin) / this.zoomAxes[index].actualDelta;\n                currentZF = (selectionMax - selectionMin) / this.zoomAxes[index].actualDelta;\n                argsData.currentZoomPosition = currentZP < 0 ? 0 : currentZP;\n                argsData.currentZoomFactor = currentZF > 1 ? 1 : currentZF;\n                if (!argsData.cancel) {\n                    axis.zoomFactor = argsData.currentZoomFactor;\n                    axis.zoomPosition = argsData.currentZoomPosition;\n                    this.zoomCompleteEvtCollection.push(argsData);\n                }\n                zoomedAxisCollection.push({\n                    zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                    axisRange: axis.visibleRange\n                });\n            }\n        }\n        var onZoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\n        if (!onZoomingEventArgs.cancel && this.chart.isBlazor) {\n            this.chart.trigger(onZooming, onZoomingEventArgs);\n        }\n    };\n    // Series transformation style applied here.\n    Zoom.prototype.setTransform = function (transX, transY, scaleX, scaleY, chart, isPinch) {\n        if (!chart.enableCanvas) {\n            chart.seriesElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n        }\n        if (chart.indicatorElements) {\n            chart.indicatorElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n        }\n        var translate;\n        var xAxisLoc;\n        var yAxisLoc;\n        var element;\n        if (transX !== null && transY !== null) {\n            for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n                var value = _a[_i];\n                xAxisLoc = chart.requireInvertedAxis ? value.yAxis.rect.x : value.xAxis.rect.x;\n                yAxisLoc = chart.requireInvertedAxis ? value.xAxis.rect.y : value.yAxis.rect.y;\n                translate = 'translate(' + (transX + (isPinch ? (scaleX * xAxisLoc) : xAxisLoc)) +\n                    ',' + (transY + (isPinch ? (scaleY * yAxisLoc) : yAxisLoc)) + ')';\n                translate = (scaleX || scaleY) ? translate + ' scale(' + scaleX + ' ' + scaleY + ')' : translate;\n                if (value.visible) {\n                    if (value.category === 'Indicator') {\n                        value.seriesElement.parentNode.setAttribute('transform', translate);\n                    }\n                    else {\n                        if (!chart.enableCanvas) {\n                            value.seriesElement.setAttribute('transform', translate);\n                        }\n                    }\n                    element = getElement(chart.element.id + '_Series_' + value.index + '_DataLabelCollections');\n                    if (value.errorBarElement) {\n                        value.errorBarElement.setAttribute('transform', translate);\n                    }\n                    if (value.symbolElement) {\n                        value.symbolElement.setAttribute('transform', translate);\n                    }\n                    if (value.textElement) {\n                        value.textElement.setAttribute('visibility', 'hidden');\n                        value.shapeElement.setAttribute('visibility', 'hidden');\n                    }\n                    if (element) {\n                        element.style.visibility = 'hidden';\n                    }\n                }\n            }\n        }\n    };\n    Zoom.prototype.calculateZoomAxesRange = function (chart) {\n        var range;\n        var axisRange;\n        for (var index = 0; index < chart.axisCollections.length; index++) {\n            var axis = chart.axisCollections[index];\n            axisRange = axis.visibleRange;\n            if (this.zoomAxes[index]) {\n                if (!chart.delayRedraw) {\n                    this.zoomAxes[index].min = axisRange.min;\n                    this.zoomAxes[index].delta = axisRange.delta;\n                }\n            }\n            else {\n                range = {\n                    actualMin: axis.actualRange.min,\n                    actualDelta: axis.actualRange.delta,\n                    min: axisRange.min,\n                    delta: axisRange.delta\n                };\n                this.zoomAxes[index] = range;\n            }\n        }\n    };\n    // Zooming Toolkit created here\n    Zoom.prototype.showZoomingToolkit = function (chart) {\n        var toolboxItems = this.zooming.toolbarItems;\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var spacing = 5;\n        var render = chart.svgRenderer;\n        var length = this.isDevice ? 1 : toolboxItems.length;\n        var iconSize = this.isDevice ? measureText('Reset Zoom', { size: '12px' }).width : 16;\n        var height = this.isDevice ? measureText('Reset Zoom', { size: '12px' }).height : 22;\n        var width = (length * iconSize) + ((length + 1) * spacing) + ((length - 1) * spacing);\n        var transX = areaBounds.x + areaBounds.width - width - spacing;\n        var transY = (areaBounds.y + spacing);\n        var xPosition = spacing;\n        var toolkit = this.toolkit;\n        var element;\n        var shadowElement = '<filter id=\"chart_shadow\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>';\n        shadowElement += '<feOffset dx=\"-3\" dy=\"4\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/>';\n        shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n        if (length === 0 || getElement(this.elementId + '_Zooming_KitCollection')) {\n            return false;\n        }\n        var defElement = render.createDefs();\n        toolboxItems = this.isDevice ? ['Reset'] : toolboxItems;\n        defElement.innerHTML = shadowElement;\n        this.toolkitElements = render.createGroup({\n            id: this.elementId + '_Zooming_KitCollection',\n            transform: 'translate(' + transX + ',' + transY + ')'\n        });\n        this.toolkitElements.appendChild(defElement);\n        var zoomFillColor = this.chart.theme === 'Tailwind' ? '#F3F4F6' :\n            this.chart.theme === 'TailwindDark' ? '#374151' : '#fafafa';\n        this.toolkitElements.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, { color: 'transparent', width: 1 }, 1, new Rect(0, 0, width, (height + (spacing * 2))), 0, 0)));\n        var outerElement = render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, { color: 'transparent', width: 1 }, 0.1, new Rect(0, 0, width, (height + (spacing * 2))), 0, 0));\n        if (this.chart.theme === 'Tailwind' || this.chart.theme === 'TailwindDark') {\n            outerElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\n        }\n        else {\n            outerElement.setAttribute('filter', 'url(#chart_shadow)');\n        }\n        this.toolkitElements.appendChild(outerElement);\n        var currentItem;\n        var panIcon = false;\n        for (var i = 1; i <= length; i++) {\n            currentItem = toolboxItems[i - 1];\n            element = render.createGroup({\n                transform: 'translate(' + xPosition + ',' + (this.isDevice ? spacing : (spacing + 3)) + ')'\n            });\n            // for desktop toolkit hight is 32 and top padding is 8 icon size 16\n            switch (currentItem) {\n                case 'Pan':\n                    toolkit.createPanButton(element, this.toolkitElements);\n                    panIcon = true;\n                    break;\n                case 'Zoom':\n                    toolkit.createZoomButton(element, this.toolkitElements);\n                    break;\n                case 'ZoomIn':\n                    toolkit.createZoomInButton(element, this.toolkitElements, chart);\n                    break;\n                case 'ZoomOut':\n                    toolkit.createZoomOutButton(element, this.toolkitElements, chart);\n                    break;\n                case 'Reset':\n                    toolkit.createResetButton(element, this.toolkitElements, chart, this.isDevice);\n                    break;\n            }\n            xPosition += iconSize + (spacing * 2);\n        }\n        this.toolkitElements.setAttribute('opacity', this.isDevice ? '1' : '' + this.zoomkitOpacity);\n        this.toolkitElements.setAttribute('cursor', 'auto');\n        if (chart.enableCanvas) {\n            var zoomDiv = document.createElement('div');\n            zoomDiv.id = chart.element.id + '_zoom';\n            zoomDiv.setAttribute('style', 'position:absolute; z-index:1');\n            var zoomheight = chart.availableSize.height / 2;\n            var svg = chart.svgRenderer.createSvg({\n                id: chart.element.id + '_zoomkit_svg',\n                width: chart.availableSize.width,\n                height: zoomheight\n            });\n            svg.setAttribute('style', 'position:absolute');\n            svg.appendChild(this.toolkitElements);\n            zoomDiv.appendChild(svg);\n            document.getElementById(this.elementId + '_Secondary_Element').appendChild(zoomDiv);\n        }\n        else {\n            chart.svgObject.appendChild(this.toolkitElements);\n        }\n        if (!this.isDevice) {\n            EventHandler.add(this.toolkitElements, 'mousemove touchstart', this.zoomToolkitMove, this);\n            EventHandler.add(this.toolkitElements, 'mouseleave touchend', this.zoomToolkitLeave, this);\n            if (this.isPanning && panIcon) {\n                toolkit.pan();\n            }\n        }\n        return true;\n    };\n    /**\n     * To the show the zooming toolkit.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.applyZoomToolkit = function (chart, axes) {\n        var showToolkit = this.isAxisZoomed(axes);\n        if (showToolkit) {\n            this.showZoomingToolkit(chart);\n            this.isZoomed = true;\n        }\n        else {\n            this.toolkit.removeTooltip();\n            this.isPanning = false;\n            this.isZoomed = false;\n            chart.svgObject.setAttribute('cursor', 'auto');\n        }\n    };\n    /**\n     * Return boolean property to show zooming toolkit.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.isAxisZoomed = function (axes) {\n        var showToolkit = false;\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            showToolkit = (showToolkit || (axis.zoomFactor !== 1 || axis.zoomPosition !== 0));\n        }\n        return showToolkit;\n    };\n    Zoom.prototype.zoomToolkitMove = function () {\n        var element = this.toolkitElements;\n        this.zoomkitOpacity = 1;\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\n        return false;\n    };\n    Zoom.prototype.zoomToolkitLeave = function () {\n        var element = this.toolkitElements;\n        this.zoomkitOpacity = 0.3;\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        EventHandler.add(this.chart.element, this.wheelEvent, this.chartMouseWheel, this);\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchStartEvent, this.mouseDownHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.chart.on(this.cancelEvent, this.mouseCancelHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        EventHandler.remove(this.chart.element, this.wheelEvent, this.chartMouseWheel);\n        this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n        this.chart.off(Browser.touchStartEvent, this.mouseDownHandler);\n        this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n        this.chart.off(this.cancelEvent, this.mouseCancelHandler);\n    };\n    /**\n     * Handles the mouse wheel on chart.\n     *\n     * @returns {boolean} false\n     * @private\n     */\n    Zoom.prototype.chartMouseWheel = function (e) {\n        var chart = this.chart;\n        var offset = chart.element.getBoundingClientRect();\n        var svgRect = getElement(chart.svgId).getBoundingClientRect();\n        var mouseX = (e.clientX - offset.left) - Math.max(svgRect.left - offset.left, 0);\n        var mouseY = (e.clientY - offset.top) - Math.max(svgRect.top - offset.top, 0);\n        if (this.zooming.enableMouseWheelZooming &&\n            withInBounds(mouseX, mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            e.preventDefault();\n            this.performMouseWheelZooming(e, mouseX, mouseY, chart, chart.axisCollections);\n        }\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.mouseMoveHandler = function (e) {\n        //Zooming for chart\n        var chart = this.chart;\n        var touches = null;\n        if (e.type === 'touchmove') {\n            if (e.preventDefault && this.isIOS &&\n                (this.isPanning || (chart.isDoubleTap)\n                    || (this.zooming.enablePinchZooming && this.touchStartList.length > 1))) {\n                e.preventDefault();\n            }\n            touches = e.touches;\n        }\n        if (chart.isChartDrag) {\n            if (chart.isTouch) {\n                this.touchMoveList = this.addTouchPointer(this.touchMoveList, e, touches);\n                if (this.zooming.enablePinchZooming && this.touchMoveList.length > 1\n                    && this.touchStartList.length > 1) {\n                    this.performPinchZooming(e, chart);\n                }\n            }\n            this.renderZooming(e, chart, chart.isTouch);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.mouseDownHandler = function (e) {\n        //Zooming for chart\n        var chart = this.chart;\n        var touches = null;\n        var target;\n        if (e.type === 'touchstart') {\n            touches = e.touches;\n            target = e.target;\n        }\n        else {\n            target = e.target;\n        }\n        if (target.id.indexOf(chart.element.id + '_Zooming_') === -1 &&\n            withInBounds(chart.previousMouseMoveX, chart.previousMouseMoveY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            chart.isChartDrag = true;\n        }\n        if (chart.isTouch) {\n            this.touchStartList = this.addTouchPointer(this.touchStartList, e, touches);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.mouseUpHandler = function (e) {\n        var chart = this.chart;\n        var performZoomRedraw = e.target.id.indexOf(chart.element.id + '_ZoomOut_') === -1 ||\n            e.target.id.indexOf(chart.element.id + '_ZoomIn_') === -1;\n        if (chart.isChartDrag || performZoomRedraw) {\n            this.redrawOnZooming(chart, true, true);\n        }\n        if (chart.isTouch) {\n            if (chart.isDoubleTap && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)\n                && this.touchStartList.length === 1 && this.isZoomed) {\n                this.toolkit.reset();\n            }\n            this.touchStartList = [];\n            chart.isDoubleTap = false;\n        }\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.mouseCancelHandler = function () {\n        if (this.isZoomed) {\n            this.performZoomRedraw(this.chart);\n        }\n        this.pinchTarget = null;\n        this.touchStartList = [];\n        this.touchMoveList = [];\n    };\n    /**\n     * Handles the touch pointer.\n     *\n     * @returns {ITouches[]} touchList collection\n     * @private\n     */\n    Zoom.prototype.addTouchPointer = function (touchList, e, touches) {\n        if (touches) {\n            touchList = [];\n            for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n                touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n            }\n        }\n        else {\n            touchList = touchList ? touchList : [];\n            if (touchList.length === 0) {\n                touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\n            }\n            else {\n                for (var i = 0, length_2 = touchList.length; i < length_2; i++) {\n                    if (touchList[i].pointerId === e.pointerId) {\n                        touchList[i] = { pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId };\n                    }\n                    else {\n                        touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\n                    }\n                }\n            }\n        }\n        return touchList;\n    };\n    /**\n     * Get module name.\n     */\n    Zoom.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Zoom';\n    };\n    /**\n     * To destroy the zooming.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.destroy = function () {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return Zoom;\n}());\nexport { Zoom };\n"]},"metadata":{},"sourceType":"module"}