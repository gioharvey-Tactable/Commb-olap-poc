{"ast":null,"code":"import { createElement, remove, Droppable, setStyleAttribute, removeClass, select, selectAll } from '@syncfusion/ej2-base';\nimport { EventHandler, Touch, closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass, formatUnit } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { AxisFields } from './axis-field-renderer';\nimport { Toolbar } from '@syncfusion/ej2-navigations';\n/**\n * Module for GroupingBar rendering\n */\n\n/** @hidden */\n\nvar GroupingBar = function () {\n  /** Constructor for GroupingBar module */\n  function GroupingBar(parent) {\n    /* eslint-enable */\n    this.parent = parent;\n    this.parent.groupingBarModule = this;\n    this.resColWidth = this.parent.isAdaptive ? 180 : 249;\n    this.addEventListener();\n    this.parent.axisFieldModule = new AxisFields(this.parent);\n    this.touchObj = new Touch(this.parent.element, {\n      tapHold: this.tapHoldHandler.bind(this)\n    });\n  }\n  /**\n   * For internal use only - Get the module name.\n   * @returns {string} - Module name.\n   * @private\n   */\n\n\n  GroupingBar.prototype.getModuleName = function () {\n    return 'groupingBar';\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  GroupingBar.prototype.renderLayout = function () {\n    this.groupingTable = createElement('div', {\n      className: cls.GROUPING_BAR_CLASS\n    });\n    this.leftAxisPanel = createElement('div', {\n      className: cls.LEFT_AXIS_PANEL_CLASS\n    });\n    this.rightAxisPanel = createElement('div', {\n      className: cls.RIGHT_AXIS_PANEL_CLASS\n    });\n    var rowAxisPanel = createElement('div', {\n      className: cls.AXIS_ROW_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n    });\n    var columnAxisPanel = createElement('div', {\n      className: cls.AXIS_COLUMN_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n    });\n    var valueAxisPanel = createElement('div', {\n      className: cls.AXIS_VALUE_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n    });\n    var filterAxisPanel = createElement('div', {\n      className: cls.AXIS_FILTER_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n    });\n    this.rowPanel = createElement('div', {\n      className: cls.GROUP_ROW_CLASS + ' ' + cls.ROW_AXIS_CLASS\n    });\n    this.columnPanel = createElement('div', {\n      className: cls.GROUP_COLUMN_CLASS + ' ' + cls.COLUMN_AXIS_CLASS\n    });\n    this.valuePanel = createElement('div', {\n      className: cls.GROUP_VALUE_CLASS + ' ' + cls.VALUE_AXIS_CLASS\n    });\n    this.filterPanel = createElement('div', {\n      className: cls.GROUP_FILTER_CLASS + ' ' + cls.FILTER_AXIS_CLASS\n    });\n    rowAxisPanel.appendChild(this.rowPanel);\n    columnAxisPanel.appendChild(this.columnPanel);\n    valueAxisPanel.appendChild(this.valuePanel);\n    filterAxisPanel.appendChild(this.filterPanel);\n    this.rowAxisPanel = rowAxisPanel;\n    this.columnAxisPanel = columnAxisPanel;\n    this.valueAxisPanel = valueAxisPanel;\n    this.filterAxisPanel = filterAxisPanel;\n    this.leftAxisPanel.appendChild(valueAxisPanel);\n    this.leftAxisPanel.appendChild(rowAxisPanel);\n    this.rightAxisPanel.appendChild(filterAxisPanel);\n    this.rightAxisPanel.appendChild(columnAxisPanel);\n    this.groupingTable.appendChild(createElement('div', {\n      styles: 'display:flex;'\n    }));\n    this.groupingTable.firstElementChild.appendChild(this.leftAxisPanel);\n    this.groupingTable.firstElementChild.appendChild(this.rightAxisPanel);\n\n    if (this.parent.dataType === 'pivot' && this.parent.groupingBarSettings != null && this.parent.groupingBarSettings.showFieldsPanel) {\n      this.gridPanel = this.createToolbarUI(this.groupingTable);\n    }\n\n    this.groupingTable.classList.add(cls.GRID_GROUPING_BAR_CLASS);\n    this.groupingTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_PIVOT_ROW);\n    var axisPanels = [this.rowPanel, this.columnPanel, this.valuePanel, this.filterPanel];\n\n    for (var _i = 0, axisPanels_1 = axisPanels; _i < axisPanels_1.length; _i++) {\n      var element = axisPanels_1[_i];\n\n      if (this.parent.groupingBarSettings.allowDragAndDrop) {\n        new Droppable(element, {});\n      }\n\n      this.unWireEvent(element);\n      this.wireEvent(element);\n    }\n\n    if (this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n      this.groupingChartTable = this.groupingTable.cloneNode(true);\n\n      if (select('#' + this.parent.element.id + '_AllFields', this.groupingChartTable)) {\n        select('#' + this.parent.element.id + '_AllFields', this.groupingChartTable).remove();\n        this.chartPanel = this.createToolbarUI(this.groupingChartTable);\n      }\n\n      this.groupingChartTable.classList.add(cls.CHART_GROUPING_BAR_CLASS);\n      this.groupingChartTable.classList.remove(cls.GRID_GROUPING_BAR_CLASS);\n      this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_CHART_ROW);\n      this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.remove(cls.GROUP_PIVOT_ROW);\n\n      if (this.parent.chartSettings.enableMultipleAxis && this.parent.chartSettings.chartSeries && ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) {\n        this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_MULTI_VALUE);\n      } else {\n        this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_VALUE);\n      }\n\n      if (this.parent.chartSettings.chartSeries && ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n        this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_COLUMN);\n      } else {\n        this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_ACCUMULATION_COLUMN);\n      }\n\n      this.groupingChartTable.querySelector('.' + cls.GROUP_FILTER_CLASS).classList.add(cls.GROUP_CHART_FILTER);\n    } else {\n      this.groupingChartTable = undefined;\n    }\n\n    if (this.parent.displayOption.view === 'Chart' || this.parent.groupingBarSettings.displayMode === 'Chart') {\n      this.groupingTable = undefined;\n    }\n  };\n  /* eslint-disable  */\n\n\n  GroupingBar.prototype.appendToElement = function () {\n    if (this.parent.element.querySelector('.' + cls.GRID_CLASS) || this.parent.element.querySelector('.' + cls.PIVOTCHART)) {\n      if (this.parent.showGroupingBar) {\n        if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n          for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUPING_BAR_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            remove(element);\n          }\n        }\n\n        if (this.groupingChartTable) {\n          if (select('#' + this.parent.element.id + '_chart', this.parent.element)) {\n            setStyleAttribute(this.groupingChartTable, {\n              width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            this.parent.element.insertBefore(this.groupingChartTable, select('#' + this.parent.element.id + '_chart', this.parent.element));\n\n            if (this.groupingChartTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n              this.chartPanel.width = this.parent.grid ? this.parent.getGridWidthAsNumber() - 2 : this.parent.getWidthAsNumber() - 2;\n              this.chartPanel.refreshOverflow();\n            }\n          } else {\n            this.groupingChartTable = undefined;\n          }\n        }\n\n        if (this.parent.displayOption.view !== 'Chart' && this.groupingTable) {\n          if (this.parent.isAdaptive) {\n            this.leftAxisPanel.style.minWidth = '180px';\n            this.valuePanel.style.minWidth = '180px';\n          }\n\n          if (this.parent.firstColWidth) {\n            this.leftAxisPanel.style.minWidth = 'auto';\n            this.valuePanel.style.minWidth = 'auto';\n          }\n\n          this.filterPanel.removeAttribute('style');\n          this.columnPanel.removeAttribute('style');\n          this.rowPanel.removeAttribute('style');\n          this.filterPanel.removeAttribute('style');\n          var emptyRowCount = void 0;\n\n          if (this.parent.dataType === 'olap') {\n            emptyRowCount = this.parent.olapEngineModule.headerContent ? Object.keys(this.parent.olapEngineModule.headerContent).length : 0;\n          } else {\n            emptyRowCount = this.parent.engineModule.headerContent ? Object.keys(this.parent.engineModule.headerContent).length : 0;\n          }\n\n          if (!isNullOrUndefined(emptyRowCount)) {\n            var emptyHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n            emptyHeader.removeAttribute('style');\n            addClass([emptyHeader.querySelector('.e-headercell')], 'e-group-row');\n            emptyHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n            emptyHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv').style.display = 'none';\n            emptyHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv').style.display = 'none';\n          }\n\n          this.parent.element.insertBefore(this.groupingTable, this.parent.element.querySelector('.' + cls.GRID_CLASS));\n          setStyleAttribute(this.groupingTable, {\n            width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n          });\n\n          if (this.groupingTable && this.groupingTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n            this.gridPanel.width = this.parent.grid ? this.parent.getGridWidthAsNumber() - 2 : this.parent.getWidthAsNumber() - 2;\n            this.gridPanel.refreshOverflow();\n          }\n\n          this.groupingTable.style.minWidth = '400px';\n          this.parent.axisFieldModule.render();\n          this.setGridRowWidth();\n          var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n          var rightAxisPanelWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n          setStyleAttribute(this.valuePanel, {\n            width: colGroupElement.style.width\n          });\n          setStyleAttribute(this.rightAxisPanel, {\n            width: rightAxisPanelWidth\n          });\n          var rightPanelHeight = this.valuePanel.offsetHeight / 2;\n\n          if (rightPanelHeight > this.columnPanel.offsetHeight) {\n            setStyleAttribute(this.filterPanel, {\n              height: formatUnit(rightPanelHeight)\n            });\n            setStyleAttribute(this.columnPanel, {\n              height: formatUnit(rightPanelHeight + 2)\n            });\n          }\n\n          var topLeftHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n          setStyleAttribute(this.rowPanel, {\n            height: topLeftHeight + 'px'\n          });\n\n          if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n            this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height = topLeftHeight + 'px';\n          }\n\n          var colRows = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n          var columnRows = colRows.filter(function (trCell) {\n            return trCell.childNodes.length > 0;\n          });\n          var colHeight = topLeftHeight / columnRows.length;\n\n          for (var _b = 0, columnRows_1 = columnRows; _b < columnRows_1.length; _b++) {\n            var element = columnRows_1[_b];\n            setStyleAttribute(element, {\n              'height': colHeight + 'px'\n            });\n            var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n\n            for (var _c = 0, rowHeader_1 = rowHeader; _c < rowHeader_1.length; _c++) {\n              var rhElement = rowHeader_1[_c];\n              setStyleAttribute(rhElement, {\n                'height': colHeight + 'px'\n              });\n            }\n          }\n        } else {\n          this.parent.axisFieldModule.render();\n        }\n\n        if (this.parent.showToolbar && this.parent.displayOption.view === 'Both') {\n          if (this.parent.currentView === 'Table') {\n            this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n          } else {\n            this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  GroupingBar.prototype.refreshUI = function () {\n    if (this.groupingChartTable) {\n      setStyleAttribute(this.groupingChartTable, {\n        width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n      });\n\n      if (this.groupingChartTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n        this.chartPanel.width = this.parent.grid ? this.parent.getGridWidthAsNumber() - 2 : this.parent.getWidthAsNumber() - 2;\n        this.chartPanel.refreshOverflow();\n      }\n    }\n\n    if (this.groupingTable) {\n      setStyleAttribute(this.groupingTable, {\n        width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n      });\n\n      if (this.groupingTable && this.groupingTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n        this.gridPanel.width = this.parent.grid ? this.parent.getGridWidthAsNumber() - 2 : this.parent.getWidthAsNumber() - 2;\n        this.gridPanel.refreshOverflow();\n      }\n\n      this.groupingTable.style.minWidth = '400px';\n      var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n      var rightAxisWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n      setStyleAttribute(this.valuePanel, {\n        width: colGroupElement.style.width\n      });\n      setStyleAttribute(this.rightAxisPanel, {\n        width: rightAxisWidth\n      });\n\n      if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n      }\n\n      if (!this.parent.grid.element.querySelector('.e-group-row')) {\n        var emptyRowHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n        addClass([emptyRowHeader.querySelector('.e-headercell')], 'e-group-row');\n        setStyleAttribute(this.rowPanel, {\n          height: this.parent.element.querySelector('.e-headercontent').offsetHeight + 'px'\n        });\n        emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n        setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv'), {\n          display: 'none'\n        });\n        setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv'), {\n          display: 'none'\n        });\n        var groupHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n        setStyleAttribute(this.rowPanel, {\n          height: groupHeight + 'px'\n        });\n\n        if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n          this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height = groupHeight + 'px';\n        }\n\n        var colRowElements = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n        var columnRows = colRowElements.filter(function (trCell) {\n          return trCell.childNodes.length > 0;\n        });\n        var colHeight = groupHeight / columnRows.length;\n\n        for (var _i = 0, columnRows_2 = columnRows; _i < columnRows_2.length; _i++) {\n          var element = columnRows_2[_i];\n          setStyleAttribute(element, {\n            'height': colHeight + 'px'\n          });\n          var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n\n          for (var _a = 0, rowHeader_2 = rowHeader; _a < rowHeader_2.length; _a++) {\n            var handlerElement = rowHeader_2[_a];\n            setStyleAttribute(handlerElement, {\n              'height': colHeight + 'px'\n            });\n          }\n        }\n      }\n    }\n  };\n  /** @hidden */\n\n\n  GroupingBar.prototype.alignIcon = function () {\n    var element = this.parent.pivotFieldListModule.element;\n    var currentWidth;\n\n    if (this.parent.currentView === 'Table') {\n      currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n    } else {\n      currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n    }\n\n    if (currentWidth) {\n      var actWidth = currentWidth < 400 ? 400 : currentWidth;\n      setStyleAttribute(element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n        left: formatUnit(this.parent.enableRtl ? -Math.abs(actWidth - element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) : actWidth - element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n      });\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  GroupingBar.prototype.setGridRowWidth = function () {\n    var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n\n    if (this.rowPanel.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n      if (!this.parent.isAdaptive) {\n        var pivotButtons = [].slice.call(this.rowPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n        var lastButton = pivotButtons[pivotButtons.length - 1];\n        var lastButtonWidth = lastButton.querySelector('.' + cls.PIVOT_BUTTON_CLASS).offsetWidth + lastButton.querySelector('.e-indent-div').offsetWidth + 20;\n        var buttonWidth = formatUnit(lastButtonWidth < this.resColWidth ? this.resColWidth : lastButtonWidth);\n        var rowHeaderTable = this.parent.element.querySelector('.e-frozenheader').querySelector('table');\n        var rowContentTable = this.parent.element.querySelector('.e-frozencontent').querySelector('table');\n        var rowContent = this.parent.element.querySelector('.e-frozencontent').querySelector('colgroup').children[0];\n        var colwidth = parseInt(buttonWidth, 10);\n        var gridColumn = this.parent.grid.columns;\n\n        if (gridColumn && gridColumn.length > 0) {\n          gridColumn[0].width = gridColumn[0].width >= this.resColWidth ? colwidth > this.resColWidth ? colwidth : this.resColWidth : colwidth > this.resColWidth ? colwidth : this.resColWidth;\n        }\n\n        var valueColWidth = void 0;\n\n        if (this.parent.dataType === 'olap') {\n          valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.olapEngineModule.pivotValues.length > 0 ? this.parent.olapEngineModule.pivotValues[0].length : 2);\n        } else {\n          valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.dataSourceSettings.values.length > 0 && this.parent.engineModule.pivotValues.length > 0 ? this.parent.engineModule.pivotValues[0].length : 2);\n        }\n\n        for (var cCnt = 0; cCnt < gridColumn.length; cCnt++) {\n          if (cCnt !== 0) {\n            if (gridColumn[cCnt].columns) {\n              this.setColWidth(gridColumn[cCnt].columns, valueColWidth);\n            } else {\n              if (gridColumn[cCnt].width !== 'auto') {\n                /* eslint-disable @typescript-eslint/no-explicit-any */\n                var levelName = gridColumn[cCnt].customAttributes ? gridColumn[cCnt].customAttributes.cell.valueSort.levelName : '';\n                gridColumn[cCnt].width = this.parent.renderModule.setSavedWidth(levelName, valueColWidth);\n                /* eslint-enable @typescript-eslint/no-explicit-any */\n              } else {\n                gridColumn[cCnt].minWidth = valueColWidth;\n              }\n            }\n          }\n        }\n\n        this.parent.posCount = 0;\n        this.parent.setGridColumns(this.parent.grid.columns);\n        this.parent.grid.headerModule.refreshUI();\n\n        if (!this.parent.firstColWidth) {\n          colGroupElement.style.width = buttonWidth;\n          rowContent.style.width = buttonWidth;\n          rowHeaderTable.style.width = buttonWidth;\n          rowContentTable.style.width = buttonWidth;\n          setStyleAttribute(rowHeaderTable, {\n            'width': buttonWidth\n          });\n          setStyleAttribute(rowContentTable, {\n            'width': buttonWidth\n          });\n        }\n      } else {\n        if (!this.parent.firstColWidth) {\n          var gridColumn = this.parent.grid.columns;\n\n          if (gridColumn && gridColumn.length > 0) {\n            gridColumn[0].width = this.resColWidth;\n          }\n\n          this.parent.posCount = 0;\n          this.parent.grid.headerModule.refreshUI();\n        }\n      }\n    } else {\n      if (this.parent.grid.columns && this.parent.grid.columns.length > 0) {\n        this.parent.grid.columns[0].width = this.parent.grid.columns[0].width > this.resColWidth ? this.parent.grid.columns[0].width : this.resColWidth;\n      }\n\n      this.parent.grid.headerModule.refreshUI();\n    }\n\n    if (this.groupingTable) {\n      this.refreshUI();\n    }\n  };\n\n  GroupingBar.prototype.setColWidth = function (columns, width) {\n    for (var cCnt = 0; cCnt < columns.length; cCnt++) {\n      if (columns[cCnt].columns) {\n        this.setColWidth(columns[cCnt].columns, width);\n      } else {\n        if (columns[cCnt].width != \"auto\") {\n          columns[cCnt].width = width;\n        } else {\n          columns[cCnt].minWidth = width;\n        }\n      }\n    }\n  };\n\n  GroupingBar.prototype.wireEvent = function (element) {\n    EventHandler.add(element, 'mouseover', this.dropIndicatorUpdate, this);\n    EventHandler.add(element, 'mouseleave', this.dropIndicatorUpdate, this);\n  };\n\n  GroupingBar.prototype.unWireEvent = function (element) {\n    EventHandler.remove(element, 'mouseover', this.dropIndicatorUpdate);\n    EventHandler.remove(element, 'mouseleave', this.dropIndicatorUpdate);\n  };\n\n  GroupingBar.prototype.dropIndicatorUpdate = function (e) {\n    if (this.parent.isDragging && e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseover' || e.type === 'mouseleave') {\n      removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n      removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n    }\n  };\n\n  GroupingBar.prototype.tapHoldHandler = function (e) {\n    var target = closest(e.originalEvent.target, '.' + cls.PIVOT_BUTTON_CLASS);\n\n    if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n      var pos = target.getBoundingClientRect();\n      this.parent.contextMenuModule.fieldElement = target;\n      this.parent.contextMenuModule.menuObj.open(pos.top, pos.left);\n      return;\n    }\n  };\n\n  GroupingBar.prototype.RefreshFieldsPanel = function () {\n    if (this.parent.dataType === 'pivot' && this.parent.groupingBarSettings != null) {\n      if (selectAll('#' + this.parent.element.id + '_AllFields', this.parent.element).length > 0) {\n        for (var _i = 0, _a = selectAll('#' + this.parent.element.id + '_AllFields', this.parent.element); _i < _a.length; _i++) {\n          var element = _a[_i];\n          element.remove();\n        }\n      }\n\n      if (this.parent.groupingBarSettings.showFieldsPanel) {\n        if (this.groupingChartTable && this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n          this.chartPanel = this.createToolbarUI(this.groupingChartTable);\n        }\n\n        if (this.groupingTable) {\n          this.gridPanel = this.createToolbarUI(this.groupingTable);\n        }\n\n        this.parent.axisFieldModule.render();\n        this.refreshUI();\n      }\n    }\n  };\n\n  GroupingBar.prototype.createToolbarUI = function (element) {\n    if (select('#' + this.parent.element.id + '_AllFields', element)) {\n      select('#' + this.parent.element.id + '_AllFields', element).remove();\n    }\n\n    element.prepend(createElement('div', {\n      id: this.parent.element.id + '_AllFields'\n    }));\n    var toolbarObj = new Toolbar({\n      cssClass: cls.ALL_FIELDS_PANEL_CLASS,\n      enableRtl: this.parent.enableRtl,\n      items: [{\n        template: '<div class=' + cls.GROUP_ALL_FIELDS_CLASS + '></div>'\n      }],\n      allowKeyboard: false,\n      width: this.parent.grid ? this.parent.getGridWidthAsNumber() - 2 : this.parent.getWidthAsNumber() - 2\n    });\n    toolbarObj.appendTo(select('#' + this.parent.element.id + '_AllFields', element));\n    return toolbarObj;\n  };\n  /**\n   * @hidden\n   */\n\n\n  GroupingBar.prototype.addEventListener = function () {\n    this.handlers = {\n      load: this.renderLayout,\n      end: this.appendToElement\n    };\n\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.initSubComponent, this.handlers.load, this); //For initial rendering\n\n    this.parent.on(events.uiUpdate, this.handlers.end, this);\n  };\n  /**\n   * @hidden\n   */\n\n\n  GroupingBar.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.uiUpdate, this.handlers.end);\n    this.parent.off(events.initSubComponent, this.handlers.load);\n  };\n  /**\n   * To destroy the groupingbar\n   * @returns {void}\n   * @hidden\n   */\n\n\n  GroupingBar.prototype.destroy = function () {\n    this.removeEventListener();\n\n    if (this.parent.pivotButtonModule) {\n      this.parent.pivotButtonModule.destroy();\n    }\n\n    if (this.groupingTable && this.groupingTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n      this.gridPanel.destroy();\n      this.gridPanel = null;\n    }\n\n    if (this.groupingChartTable && this.groupingChartTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n      this.chartPanel.destroy();\n      this.chartPanel = null;\n    }\n\n    if (this.touchObj && !this.touchObj.isDestroyed) {\n      this.touchObj.destroy();\n    }\n\n    if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n      remove(this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS));\n    }\n  };\n\n  return GroupingBar;\n}();\n\nexport { GroupingBar };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-pivotview/src/common/grouping-bar/grouping-bar.js"],"names":["createElement","remove","Droppable","setStyleAttribute","removeClass","select","selectAll","EventHandler","Touch","closest","isNullOrUndefined","addClass","formatUnit","events","cls","AxisFields","Toolbar","GroupingBar","parent","groupingBarModule","resColWidth","isAdaptive","addEventListener","axisFieldModule","touchObj","element","tapHold","tapHoldHandler","bind","prototype","getModuleName","renderLayout","groupingTable","className","GROUPING_BAR_CLASS","leftAxisPanel","LEFT_AXIS_PANEL_CLASS","rightAxisPanel","RIGHT_AXIS_PANEL_CLASS","rowAxisPanel","AXIS_ROW_CLASS","AXIS_ICON_CLASS","columnAxisPanel","AXIS_COLUMN_CLASS","valueAxisPanel","AXIS_VALUE_CLASS","filterAxisPanel","AXIS_FILTER_CLASS","rowPanel","GROUP_ROW_CLASS","ROW_AXIS_CLASS","columnPanel","GROUP_COLUMN_CLASS","COLUMN_AXIS_CLASS","valuePanel","GROUP_VALUE_CLASS","VALUE_AXIS_CLASS","filterPanel","GROUP_FILTER_CLASS","FILTER_AXIS_CLASS","appendChild","styles","firstElementChild","dataType","groupingBarSettings","showFieldsPanel","gridPanel","createToolbarUI","classList","add","GRID_GROUPING_BAR_CLASS","querySelector","GROUP_PIVOT_ROW","axisPanels","_i","axisPanels_1","length","allowDragAndDrop","unWireEvent","wireEvent","displayOption","view","displayMode","groupingChartTable","cloneNode","id","chartPanel","CHART_GROUPING_BAR_CLASS","GROUP_CHART_ROW","chartSettings","enableMultipleAxis","chartSeries","indexOf","type","GROUP_CHART_MULTI_VALUE","GROUP_CHART_VALUE","GROUP_CHART_COLUMN","GROUP_CHART_ACCUMULATION_COLUMN","GROUP_CHART_FILTER","undefined","appendToElement","GRID_CLASS","PIVOTCHART","showGroupingBar","_a","querySelectorAll","width","grid","getGridWidthAsNumber","getWidthAsNumber","insertBefore","ALL_FIELDS_PANEL_CLASS","isDestroyed","refreshOverflow","style","minWidth","firstColWidth","removeAttribute","emptyRowCount","olapEngineModule","headerContent","Object","keys","engineModule","emptyHeader","display","render","setGridRowWidth","colGroupElement","children","rightAxisPanelWidth","offsetWidth","parseInt","rightPanelHeight","offsetHeight","height","topLeftHeight","colRows","slice","call","columnRows","filter","trCell","childNodes","colHeight","_b","columnRows_1","rowHeader","_c","rowHeader_1","rhElement","showToolbar","currentView","refreshUI","rightAxisWidth","showFieldList","pivotFieldListModule","clearTimeout","timeOutObj","setTimeout","alignIcon","emptyRowHeader","groupHeight","colRowElements","columnRows_2","rowHeader_2","handlerElement","currentWidth","chart","chartModule","calculatedWidth","actWidth","TOGGLE_FIELD_LIST_CLASS","left","enableRtl","Math","abs","PIVOT_BUTTON_CLASS","pivotButtons","PIVOT_BUTTON_WRAPPER_CLASS","lastButton","lastButtonWidth","buttonWidth","rowHeaderTable","rowContentTable","rowContent","colwidth","gridColumn","columns","valueColWidth","renderModule","calculateColWidth","pivotValues","dataSourceSettings","values","cCnt","setColWidth","levelName","customAttributes","cell","valueSort","setSavedWidth","posCount","setGridColumns","headerModule","dropIndicatorUpdate","e","isDragging","target","contains","DROPPABLE_CLASS","DROP_INDICATOR_CLASS","INDICATOR_HOVER_CLASS","originalEvent","pos","getBoundingClientRect","contextMenuModule","fieldElement","menuObj","open","top","RefreshFieldsPanel","prepend","toolbarObj","cssClass","items","template","GROUP_ALL_FIELDS_CLASS","allowKeyboard","appendTo","handlers","load","end","on","initSubComponent","uiUpdate","removeEventListener","off","destroy","pivotButtonModule"],"mappings":"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","sourcesContent":["import { createElement, remove, Droppable, setStyleAttribute, removeClass, select, selectAll } from '@syncfusion/ej2-base';\nimport { EventHandler, Touch, closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass, formatUnit } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { AxisFields } from './axis-field-renderer';\nimport { Toolbar } from '@syncfusion/ej2-navigations';\n/**\n * Module for GroupingBar rendering\n */\n/** @hidden */\nvar GroupingBar = /** @class */ (function () {\n    /** Constructor for GroupingBar module */\n    function GroupingBar(parent) {\n        /* eslint-enable */\n        this.parent = parent;\n        this.parent.groupingBarModule = this;\n        this.resColWidth = (this.parent.isAdaptive ? 180 : 249);\n        this.addEventListener();\n        this.parent.axisFieldModule = new AxisFields(this.parent);\n        this.touchObj = new Touch(this.parent.element, {\n            tapHold: this.tapHoldHandler.bind(this)\n        });\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @returns {string} - Module name.\n     * @private\n     */\n    GroupingBar.prototype.getModuleName = function () {\n        return 'groupingBar';\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    GroupingBar.prototype.renderLayout = function () {\n        this.groupingTable = createElement('div', { className: cls.GROUPING_BAR_CLASS });\n        this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n        this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n        var rowAxisPanel = createElement('div', { className: cls.AXIS_ROW_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper' });\n        var columnAxisPanel = createElement('div', {\n            className: cls.AXIS_COLUMN_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var valueAxisPanel = createElement('div', {\n            className: cls.AXIS_VALUE_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var filterAxisPanel = createElement('div', {\n            className: cls.AXIS_FILTER_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        this.rowPanel = createElement('div', { className: cls.GROUP_ROW_CLASS + ' ' + cls.ROW_AXIS_CLASS });\n        this.columnPanel = createElement('div', { className: cls.GROUP_COLUMN_CLASS + ' ' + cls.COLUMN_AXIS_CLASS });\n        this.valuePanel = createElement('div', { className: cls.GROUP_VALUE_CLASS + ' ' + cls.VALUE_AXIS_CLASS });\n        this.filterPanel = createElement('div', { className: cls.GROUP_FILTER_CLASS + ' ' + cls.FILTER_AXIS_CLASS });\n        rowAxisPanel.appendChild(this.rowPanel);\n        columnAxisPanel.appendChild(this.columnPanel);\n        valueAxisPanel.appendChild(this.valuePanel);\n        filterAxisPanel.appendChild(this.filterPanel);\n        this.rowAxisPanel = rowAxisPanel;\n        this.columnAxisPanel = columnAxisPanel;\n        this.valueAxisPanel = valueAxisPanel;\n        this.filterAxisPanel = filterAxisPanel;\n        this.leftAxisPanel.appendChild(valueAxisPanel);\n        this.leftAxisPanel.appendChild(rowAxisPanel);\n        this.rightAxisPanel.appendChild(filterAxisPanel);\n        this.rightAxisPanel.appendChild(columnAxisPanel);\n        this.groupingTable.appendChild(createElement('div', { styles: 'display:flex;' }));\n        this.groupingTable.firstElementChild.appendChild(this.leftAxisPanel);\n        this.groupingTable.firstElementChild.appendChild(this.rightAxisPanel);\n        if (this.parent.dataType === 'pivot' && this.parent.groupingBarSettings != null && this.parent.groupingBarSettings.showFieldsPanel) {\n            this.gridPanel = this.createToolbarUI(this.groupingTable);\n        }\n        this.groupingTable.classList.add(cls.GRID_GROUPING_BAR_CLASS);\n        this.groupingTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_PIVOT_ROW);\n        var axisPanels = [this.rowPanel, this.columnPanel, this.valuePanel, this.filterPanel];\n        for (var _i = 0, axisPanels_1 = axisPanels; _i < axisPanels_1.length; _i++) {\n            var element = axisPanels_1[_i];\n            if (this.parent.groupingBarSettings.allowDragAndDrop) {\n                new Droppable(element, {});\n            }\n            this.unWireEvent(element);\n            this.wireEvent(element);\n        }\n        if (this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n            this.groupingChartTable = this.groupingTable.cloneNode(true);\n            if (select('#' + this.parent.element.id + '_AllFields', this.groupingChartTable)) {\n                select('#' + this.parent.element.id + '_AllFields', this.groupingChartTable).remove();\n                this.chartPanel = this.createToolbarUI(this.groupingChartTable);\n            }\n            this.groupingChartTable.classList.add(cls.CHART_GROUPING_BAR_CLASS);\n            this.groupingChartTable.classList.remove(cls.GRID_GROUPING_BAR_CLASS);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_CHART_ROW);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.remove(cls.GROUP_PIVOT_ROW);\n            if (this.parent.chartSettings.enableMultipleAxis && this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_MULTI_VALUE);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_VALUE);\n            }\n            if (this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_COLUMN);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_ACCUMULATION_COLUMN);\n            }\n            this.groupingChartTable.querySelector('.' + cls.GROUP_FILTER_CLASS).classList.add(cls.GROUP_CHART_FILTER);\n        }\n        else {\n            this.groupingChartTable = undefined;\n        }\n        if (this.parent.displayOption.view === 'Chart' || this.parent.groupingBarSettings.displayMode === 'Chart') {\n            this.groupingTable = undefined;\n        }\n    };\n    /* eslint-disable  */\n    GroupingBar.prototype.appendToElement = function () {\n        if (this.parent.element.querySelector('.' + cls.GRID_CLASS) || this.parent.element.querySelector('.' + cls.PIVOTCHART)) {\n            if (this.parent.showGroupingBar) {\n                if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUPING_BAR_CLASS); _i < _a.length; _i++) {\n                        var element = _a[_i];\n                        remove(element);\n                    }\n                }\n                if (this.groupingChartTable) {\n                    if (select('#' + this.parent.element.id + '_chart', this.parent.element)) {\n                        setStyleAttribute(this.groupingChartTable, {\n                            width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                        });\n                        this.parent.element.insertBefore(this.groupingChartTable, select('#' + this.parent.element.id + '_chart', this.parent.element));\n                        if (this.groupingChartTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n                            this.chartPanel.width = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2);\n                            this.chartPanel.refreshOverflow();\n                        }\n                    }\n                    else {\n                        this.groupingChartTable = undefined;\n                    }\n                }\n                if (this.parent.displayOption.view !== 'Chart' && this.groupingTable) {\n                    if (this.parent.isAdaptive) {\n                        this.leftAxisPanel.style.minWidth = '180px';\n                        this.valuePanel.style.minWidth = '180px';\n                    }\n                    if (this.parent.firstColWidth) {\n                        this.leftAxisPanel.style.minWidth = 'auto';\n                        this.valuePanel.style.minWidth = 'auto';\n                    }\n                    this.filterPanel.removeAttribute('style');\n                    this.columnPanel.removeAttribute('style');\n                    this.rowPanel.removeAttribute('style');\n                    this.filterPanel.removeAttribute('style');\n                    var emptyRowCount = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        emptyRowCount = this.parent.olapEngineModule.headerContent ?\n                            Object.keys(this.parent.olapEngineModule.headerContent).length : 0;\n                    }\n                    else {\n                        emptyRowCount = this.parent.engineModule.headerContent ?\n                            Object.keys(this.parent.engineModule.headerContent).length : 0;\n                    }\n                    if (!isNullOrUndefined(emptyRowCount)) {\n                        var emptyHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                        emptyHeader.removeAttribute('style');\n                        addClass([emptyHeader.querySelector('.e-headercell')], 'e-group-row');\n                        emptyHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv').style.display = 'none';\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv').style.display = 'none';\n                    }\n                    this.parent.element.insertBefore(this.groupingTable, this.parent.element.querySelector('.' + cls.GRID_CLASS));\n                    setStyleAttribute(this.groupingTable, {\n                        width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                    });\n                    if (this.groupingTable && this.groupingTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n                        this.gridPanel.width = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2);\n                        this.gridPanel.refreshOverflow();\n                    }\n                    this.groupingTable.style.minWidth = '400px';\n                    this.parent.axisFieldModule.render();\n                    this.setGridRowWidth();\n                    var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n                    var rightAxisPanelWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n                    setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n                    setStyleAttribute(this.rightAxisPanel, { width: rightAxisPanelWidth });\n                    var rightPanelHeight = (this.valuePanel.offsetHeight / 2);\n                    if (rightPanelHeight > this.columnPanel.offsetHeight) {\n                        setStyleAttribute(this.filterPanel, { height: formatUnit(rightPanelHeight) });\n                        setStyleAttribute(this.columnPanel, { height: formatUnit(rightPanelHeight + 2) });\n                    }\n                    var topLeftHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                    setStyleAttribute(this.rowPanel, {\n                        height: topLeftHeight + 'px'\n                    });\n                    if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                        this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                            topLeftHeight + 'px';\n                    }\n                    var colRows = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                    var columnRows = colRows.filter(function (trCell) {\n                        return (trCell.childNodes.length > 0);\n                    });\n                    var colHeight = topLeftHeight / columnRows.length;\n                    for (var _b = 0, columnRows_1 = columnRows; _b < columnRows_1.length; _b++) {\n                        var element = columnRows_1[_b];\n                        setStyleAttribute(element, { 'height': colHeight + 'px' });\n                        var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                        for (var _c = 0, rowHeader_1 = rowHeader; _c < rowHeader_1.length; _c++) {\n                            var rhElement = rowHeader_1[_c];\n                            setStyleAttribute(rhElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n                else {\n                    this.parent.axisFieldModule.render();\n                }\n                if (this.parent.showToolbar && this.parent.displayOption.view === 'Both') {\n                    if (this.parent.currentView === 'Table') {\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    else {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.refreshUI = function () {\n        if (this.groupingChartTable) {\n            setStyleAttribute(this.groupingChartTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            if (this.groupingChartTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n                this.chartPanel.width = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2);\n                this.chartPanel.refreshOverflow();\n            }\n        }\n        if (this.groupingTable) {\n            setStyleAttribute(this.groupingTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            if (this.groupingTable && this.groupingTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n                this.gridPanel.width = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2);\n                this.gridPanel.refreshOverflow();\n            }\n            this.groupingTable.style.minWidth = '400px';\n            var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n            var rightAxisWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n            setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n            setStyleAttribute(this.rightAxisPanel, { width: rightAxisWidth });\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n            if (!this.parent.grid.element.querySelector('.e-group-row')) {\n                var emptyRowHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                addClass([emptyRowHeader.querySelector('.e-headercell')], 'e-group-row');\n                setStyleAttribute(this.rowPanel, {\n                    height: this.parent.element.querySelector('.e-headercontent').offsetHeight + 'px'\n                });\n                emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv'), {\n                    display: 'none'\n                });\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv'), {\n                    display: 'none'\n                });\n                var groupHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                setStyleAttribute(this.rowPanel, {\n                    height: groupHeight + 'px'\n                });\n                if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                    this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                        groupHeight + 'px';\n                }\n                var colRowElements = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                var columnRows = colRowElements.filter(function (trCell) {\n                    return (trCell.childNodes.length > 0);\n                });\n                var colHeight = groupHeight / columnRows.length;\n                for (var _i = 0, columnRows_2 = columnRows; _i < columnRows_2.length; _i++) {\n                    var element = columnRows_2[_i];\n                    setStyleAttribute(element, { 'height': colHeight + 'px' });\n                    var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                    for (var _a = 0, rowHeader_2 = rowHeader; _a < rowHeader_2.length; _a++) {\n                        var handlerElement = rowHeader_2[_a];\n                        setStyleAttribute(handlerElement, { 'height': colHeight + 'px' });\n                    }\n                }\n            }\n        }\n    };\n    /** @hidden */\n    GroupingBar.prototype.alignIcon = function () {\n        var element = this.parent.pivotFieldListModule.element;\n        var currentWidth;\n        if (this.parent.currentView === 'Table') {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        if (currentWidth) {\n            var actWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.setGridRowWidth = function () {\n        var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n        if (this.rowPanel.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (!this.parent.isAdaptive) {\n                var pivotButtons = [].slice.call(this.rowPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n                var lastButton = pivotButtons[pivotButtons.length - 1];\n                var lastButtonWidth = (lastButton.querySelector('.' + cls.PIVOT_BUTTON_CLASS).offsetWidth +\n                    lastButton.querySelector('.e-indent-div').offsetWidth + 20);\n                var buttonWidth = formatUnit(lastButtonWidth < this.resColWidth ? this.resColWidth : lastButtonWidth);\n                var rowHeaderTable = this.parent.element.querySelector('.e-frozenheader').querySelector('table');\n                var rowContentTable = this.parent.element.querySelector('.e-frozencontent').querySelector('table');\n                var rowContent = this.parent.element.querySelector('.e-frozencontent').querySelector('colgroup').children[0];\n                var colwidth = parseInt(buttonWidth, 10);\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = (gridColumn[0].width >= this.resColWidth ?\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth) :\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth));\n                }\n                var valueColWidth = void 0;\n                if (this.parent.dataType === 'olap') {\n                    valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.olapEngineModule.pivotValues.length > 0 ?\n                        this.parent.olapEngineModule.pivotValues[0].length : 2);\n                }\n                else {\n                    valueColWidth = this.parent.renderModule.calculateColWidth((this.parent.dataSourceSettings.values.length > 0 &&\n                        this.parent.engineModule.pivotValues.length > 0) ?\n                        this.parent.engineModule.pivotValues[0].length : 2);\n                }\n                for (var cCnt = 0; cCnt < gridColumn.length; cCnt++) {\n                    if (cCnt !== 0) {\n                        if (gridColumn[cCnt].columns) {\n                            this.setColWidth(gridColumn[cCnt].columns, valueColWidth);\n                        }\n                        else {\n                            if (gridColumn[cCnt].width !== 'auto') {\n                                /* eslint-disable @typescript-eslint/no-explicit-any */\n                                var levelName = gridColumn[cCnt].customAttributes ?\n                                    gridColumn[cCnt].customAttributes.cell.valueSort.levelName : '';\n                                gridColumn[cCnt].width = this.parent.renderModule.setSavedWidth(levelName, valueColWidth);\n                                /* eslint-enable @typescript-eslint/no-explicit-any */\n                            }\n                            else {\n                                gridColumn[cCnt].minWidth = valueColWidth;\n                            }\n                        }\n                    }\n                }\n                this.parent.posCount = 0;\n                this.parent.setGridColumns(this.parent.grid.columns);\n                this.parent.grid.headerModule.refreshUI();\n                if (!this.parent.firstColWidth) {\n                    colGroupElement.style.width = buttonWidth;\n                    rowContent.style.width = buttonWidth;\n                    rowHeaderTable.style.width = buttonWidth;\n                    rowContentTable.style.width = buttonWidth;\n                    setStyleAttribute(rowHeaderTable, { 'width': buttonWidth });\n                    setStyleAttribute(rowContentTable, { 'width': buttonWidth });\n                }\n            }\n            else {\n                if (!this.parent.firstColWidth) {\n                    var gridColumn = this.parent.grid.columns;\n                    if (gridColumn && gridColumn.length > 0) {\n                        gridColumn[0].width = this.resColWidth;\n                    }\n                    this.parent.posCount = 0;\n                    this.parent.grid.headerModule.refreshUI();\n                }\n            }\n        }\n        else {\n            if (this.parent.grid.columns && this.parent.grid.columns.length > 0) {\n                this.parent.grid.columns[0].width = this.parent.grid.columns[0].width > this.resColWidth ?\n                    this.parent.grid.columns[0].width : this.resColWidth;\n            }\n            this.parent.grid.headerModule.refreshUI();\n        }\n        if (this.groupingTable) {\n            this.refreshUI();\n        }\n    };\n    GroupingBar.prototype.setColWidth = function (columns, width) {\n        for (var cCnt = 0; cCnt < columns.length; cCnt++) {\n            if (columns[cCnt].columns) {\n                this.setColWidth(columns[cCnt].columns, width);\n            }\n            else {\n                if (columns[cCnt].width != \"auto\") {\n                    columns[cCnt].width = width;\n                }\n                else {\n                    columns[cCnt].minWidth = width;\n                }\n            }\n        }\n    };\n    GroupingBar.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.dropIndicatorUpdate, this);\n        EventHandler.add(element, 'mouseleave', this.dropIndicatorUpdate, this);\n    };\n    GroupingBar.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.dropIndicatorUpdate);\n        EventHandler.remove(element, 'mouseleave', this.dropIndicatorUpdate);\n    };\n    GroupingBar.prototype.dropIndicatorUpdate = function (e) {\n        if ((this.parent.isDragging && e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseover') ||\n            e.type === 'mouseleave') {\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    GroupingBar.prototype.tapHoldHandler = function (e) {\n        var target = closest(e.originalEvent.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n            var pos = target.getBoundingClientRect();\n            this.parent.contextMenuModule.fieldElement = target;\n            this.parent.contextMenuModule.menuObj.open(pos.top, pos.left);\n            return;\n        }\n    };\n    GroupingBar.prototype.RefreshFieldsPanel = function () {\n        if (this.parent.dataType === 'pivot' && this.parent.groupingBarSettings != null) {\n            if (selectAll('#' + this.parent.element.id + '_AllFields', this.parent.element).length > 0) {\n                for (var _i = 0, _a = selectAll('#' + this.parent.element.id + '_AllFields', this.parent.element); _i < _a.length; _i++) {\n                    var element = _a[_i];\n                    element.remove();\n                }\n            }\n            if (this.parent.groupingBarSettings.showFieldsPanel) {\n                if (this.groupingChartTable && this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n                    this.chartPanel = this.createToolbarUI(this.groupingChartTable);\n                }\n                if (this.groupingTable) {\n                    this.gridPanel = this.createToolbarUI(this.groupingTable);\n                }\n                this.parent.axisFieldModule.render();\n                this.refreshUI();\n            }\n        }\n    };\n    GroupingBar.prototype.createToolbarUI = function (element) {\n        if (select('#' + this.parent.element.id + '_AllFields', element)) {\n            select('#' + this.parent.element.id + '_AllFields', element).remove();\n        }\n        element.prepend(createElement('div', { id: this.parent.element.id + '_AllFields' }));\n        var toolbarObj = new Toolbar({\n            cssClass: cls.ALL_FIELDS_PANEL_CLASS,\n            enableRtl: this.parent.enableRtl,\n            items: [{ template: '<div class=' + cls.GROUP_ALL_FIELDS_CLASS + '></div>' }],\n            allowKeyboard: false,\n            width: this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2)\n        });\n        toolbarObj.appendTo(select('#' + this.parent.element.id + '_AllFields', element));\n        return toolbarObj;\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderLayout,\n            end: this.appendToElement,\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this); //For initial rendering\n        this.parent.on(events.uiUpdate, this.handlers.end, this);\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.handlers.end);\n        this.parent.off(events.initSubComponent, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotButtonModule) {\n            this.parent.pivotButtonModule.destroy();\n        }\n        if (this.groupingTable && this.groupingTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n            this.gridPanel.destroy();\n            this.gridPanel = null;\n        }\n        if (this.groupingChartTable && this.groupingChartTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n            this.chartPanel.destroy();\n            this.chartPanel = null;\n        }\n        if (this.touchObj && !this.touchObj.isDestroyed) {\n            this.touchObj.destroy();\n        }\n        if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            remove(this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS));\n        }\n    };\n    return GroupingBar;\n}());\nexport { GroupingBar };\n"]},"metadata":{},"sourceType":"module"}