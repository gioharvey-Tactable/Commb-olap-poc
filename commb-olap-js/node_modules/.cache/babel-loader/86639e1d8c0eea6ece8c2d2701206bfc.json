{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { valueToCoefficient, inside, isOverlap, textTrim } from '../../common/utils/helper';\nimport { appendChildElement } from '../../common/utils/helper';\nimport { CircleOption } from '../../common/utils/helper';\nimport { Size, measureText, TextOption, PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from '../series/line-base';\nimport { textElement, ChartLocation, valueToPolarCoefficient, CoefficientToVector, getElement } from '../../common/utils/helper';\n/**\n * Specifies the Polar Axis Layout.\n */\n\nvar PolarRadarPanel = function (_super) {\n  __extends(PolarRadarPanel, _super);\n\n  function PolarRadarPanel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** @private */\n\n\n    _this.visibleAxisLabelRect = [];\n    return _this;\n  }\n  /**\n   * Measure the polar radar axis size.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.measureAxis = function (rect) {\n    var chart = this.chart;\n    this.initialClipRect = rect;\n    this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height); //Measure axis size calculation\n\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.calculateAxisSize();\n  };\n\n  PolarRadarPanel.prototype.measureRowAxis = function (chart, rect) {\n    this.calculateRowSize(rect);\n    var row = chart.rows[0];\n    this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n  };\n\n  PolarRadarPanel.prototype.measureColumnAxis = function (chart, rect) {\n    this.calculateColumnSize(rect);\n    var column = chart.columns[0];\n    this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n  };\n  /**\n   * Measure the column and row in chart.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.measureDefinition = function (definition, chart, size) {\n    for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      axis.getModule(chart);\n      axis.baseModule.calculateRangeAndInterval(size, axis);\n    }\n  };\n  /**\n   * Measure the axis.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.calculateAxisSize = function () {\n    var chart = this.chart;\n    var axis;\n    var padding = 5;\n    this.centerX = this.initialClipRect.width * 0.5 + this.initialClipRect.x;\n    this.centerY = this.initialClipRect.height * 0.5 + this.initialClipRect.y;\n    chart.radius = Math.min(this.initialClipRect.width, this.initialClipRect.height) / 2 - padding - chart.primaryXAxis.majorTickLines.height - chart.primaryXAxis.maxLabelSize.height;\n    chart.radius = chart.primaryXAxis.coefficient * chart.radius / 100;\n    this.seriesClipRect.y = this.centerY - chart.radius;\n    this.seriesClipRect.x = this.centerX - chart.radius;\n    this.seriesClipRect.height = 2 * chart.radius;\n    this.seriesClipRect.width = 2 * chart.radius;\n    this.calculateRowSize(this.seriesClipRect);\n    axis = chart.primaryYAxis;\n    axis.rect = this.seriesClipRect;\n    this.calculateColumnSize(this.seriesClipRect);\n    axis = chart.primaryXAxis;\n    axis.rect = this.seriesClipRect;\n  };\n  /**\n   * Measure the axis.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.measure = function () {\n    var chart = this.chart;\n    chart.verticalAxes.push(chart.primaryYAxis);\n    var row = chart.rows[0];\n    row.axes[0] = chart.primaryYAxis;\n    chart.rows[0] = row;\n    chart.horizontalAxes.push(chart.primaryXAxis);\n    var column = chart.columns[0];\n    column.axes[0] = chart.primaryXAxis;\n    chart.columns[0] = column;\n  };\n  /**\n   * Measure the row size.\n   *\n   * @returns {void}\n   */\n\n\n  PolarRadarPanel.prototype.calculateRowSize = function (rect) {\n    /*! Calculate row size */\n    var chart = this.chart;\n    var row = chart.rows[0];\n    row.computedHeight = rect.height / 2;\n    row.computedTop = rect.y;\n    chart.rows[0] = row;\n  };\n  /**\n   * Measure the row size.\n   *\n   * @returns {void}\n   */\n\n\n  PolarRadarPanel.prototype.calculateColumnSize = function (rect) {\n    /*! Calculate column size */\n    var chart = this.chart;\n    var column = chart.columns[0];\n    column.computedLeft = rect.x;\n    column.computedWidth = rect.width;\n    chart.columns[0] = column;\n  };\n  /**\n   * To render the axis element.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.renderAxes = function () {\n    var axis;\n    var chart = this.chart;\n    this.startAngle = chart.primaryXAxis.startAngle;\n    var axisElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisCollection'\n    });\n    var axisLineElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisOutsideCollection'\n    });\n\n    for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n      this.element = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i\n      });\n      axis = chart.axisCollections[i];\n\n      if (axis.orientation === 'Horizontal') {\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n          this.drawXAxisGridLine(axis, i);\n        }\n\n        if (axis.visible && axis.internalVisibility) {\n          this.drawXAxisLabels(axis, i);\n        }\n      } else {\n        this.drawYAxisGridLine(axis, i);\n\n        if (axis.lineStyle.width > 0) {\n          this.drawYAxisLine(axis, i);\n        }\n\n        if (axis.visible && axis.internalVisibility) {\n          this.drawYAxisLabels(axis, i);\n        }\n      }\n\n      axisElement.appendChild(this.element);\n    }\n\n    axisElement.appendChild(this.element);\n    appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n    return axisLineElement;\n  };\n\n  PolarRadarPanel.prototype.drawYAxisLine = function (axis, index) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n    var axisLine = 'M ' + this.centerX + ' ' + this.centerY + 'L ' + (this.centerX + chart.radius * vector.x) + ' ' + (this.centerY + chart.radius * vector.y);\n    optionsLine = {\n      'id': chart.element.id + 'AxisLine_' + index,\n      'd': axisLine,\n      'stroke-dasharray': axis.lineStyle.dashArray,\n      'stroke-width': axis.lineStyle.width,\n      'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n    };\n    /**\n     * I252450\n     * When we click the center of the marker which is plotted in the axis line, selection did not work is fixed\n     * Cause: Instead of marker id, axis  line id is obtained while clicking\n     * Fix: Pointer events set to none for axis lines\n     */\n\n    var element = chart.renderer.drawPath(optionsLine);\n    this.setPointerEventNone(element);\n    chart.yAxisElements.appendChild(element);\n  };\n\n  PolarRadarPanel.prototype.drawYAxisLabels = function (axis, index) {\n    var chart = this.chart;\n    var elementSize;\n    var options;\n    var pointX = 0;\n    var pointY = 0;\n    var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n    var anchor = 'middle';\n    var radius;\n    var padding = 5;\n    var isIntersect;\n    var labelRegions = [];\n    var isLabelVisible = [];\n    isLabelVisible[0] = true;\n    var intersectType = axis.labelIntersectAction;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      isIntersect = false;\n      radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n      elementSize = axis.visibleLabels[i].size;\n      radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n      pointX = this.centerX + radius * vector.x + (axis.majorTickLines.height + elementSize.width / 2 + padding / 2) * Math.cos(angle * Math.PI / 180) * (axis.labelPosition === 'Inside' ? 1 : -1);\n      pointY = this.centerY + radius * vector.y + (axis.majorTickLines.height + elementSize.height / 2) * Math.sin(angle * Math.PI / 180) * (axis.labelPosition === 'Inside' ? 1 : -1);\n      pointY += elementSize.height / 4;\n      labelRegions[i] = this.getLabelRegion(pointX, pointY, axis.visibleLabels[i], anchor);\n\n      if (i !== 0 && intersectType === 'Hide') {\n        for (var j = i; j >= 0; j--) {\n          j = j === 0 ? 0 : j === i ? j - 1 : j;\n\n          if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n            isIntersect = true;\n            isLabelVisible[i] = false;\n            break;\n          } else {\n            isLabelVisible[i] = true;\n          }\n        }\n\n        if (isIntersect) {\n          continue; // If the label is intersect, the label render is ignored.\n        } // To check Y axis label with visible X axis label\n\n\n        for (var _i = 0, _a = this.visibleAxisLabelRect; _i < _a.length; _i++) {\n          var rect = _a[_i];\n\n          if (isOverlap(labelRegions[i], rect)) {\n            isIntersect = true;\n            break;\n          }\n        }\n      }\n\n      if (isIntersect) {\n        continue;\n      }\n\n      this.visibleAxisLabelRect.push(labelRegions[i]);\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor, axis.visibleLabels[i].text);\n      textElement(chart.renderer, options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n    }\n\n    chart.yAxisElements.appendChild(labelElement);\n  };\n\n  PolarRadarPanel.prototype.drawYAxisGridLine = function (axis, index) {\n    var chart = this.chart;\n    var options;\n    var radius;\n    var majorTick = '';\n    var majorGrid = '';\n    var vector;\n    var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var border = {\n      color: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n      width: axis.majorGridLines.width\n    };\n    var previousValue;\n    var element;\n\n    if (axis.majorGridLines.width > 0) {\n      if (chart.visibleSeries[0].type === 'Polar') {\n        for (var j = 0; j < axis.visibleLabels.length; j++) {\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n          previousValue = element ? element.getAttribute('r') : null;\n          radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n          options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, radius);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n        }\n\n        if (radius !== chart.radius) {\n          options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length + 1, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, chart.radius);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n        }\n      } else {\n        for (var j = 0; j < axis.visibleLabels.length; j++) {\n          radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n          majorGrid = this.renderRadarGrid(radius, '', chart);\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n          previousValue = element ? element.getAttribute('d') : null;\n          options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n        }\n\n        if (radius !== chart.radius) {\n          majorGrid = this.renderRadarGrid(chart.radius, '', chart);\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length);\n          previousValue = element ? element.getAttribute('d') : null;\n          options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n        }\n      }\n    }\n\n    if (axis.majorTickLines.width > 0) {\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n\n      for (var i = 0; i < axis.visibleLabels.length; i++) {\n        radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n        x1 = this.centerX + radius * vector.x;\n        y1 = this.centerY + radius * vector.y;\n        x2 = x1 + axis.majorTickLines.height * Math.cos(angle * Math.PI / 180) * (axis.tickPosition === 'Inside' ? 1 : -1);\n        y2 = y1 + axis.majorTickLines.height * Math.sin(angle * Math.PI / 180) * (axis.tickPosition === 'Inside' ? 1 : -1);\n        majorTick = 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n        this.renderTickLine(axis, index, majorTick, '', i);\n      }\n    }\n  };\n\n  PolarRadarPanel.prototype.renderRadarGrid = function (radius, majorGrid, chart) {\n    var vector;\n    var vector2;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n\n    for (var i = 0, len = chart.primaryXAxis.visibleLabels.length; i < len; i++) {\n      vector = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i].value, chart.primaryXAxis), this.startAngle);\n\n      if (i + 1 < len) {\n        vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i + 1].value, chart.primaryXAxis), this.startAngle);\n      } else {\n        vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[0].value, chart.primaryXAxis), this.startAngle);\n      }\n\n      x1 = this.centerX + radius * vector.x;\n      y1 = this.centerY + radius * vector.y;\n      x2 = this.centerX + radius * vector2.x;\n      y2 = this.centerY + radius * vector2.y;\n      majorGrid = majorGrid.concat((i ? 'L ' : 'M ') + ' ' + x1 + ' ' + y1 + ' ' + 'L ' + ' ' + x2 + ' ' + y2 + ' ');\n    }\n\n    return majorGrid;\n  };\n\n  PolarRadarPanel.prototype.drawXAxisGridLine = function (axis, index) {\n    var chart = this.chart;\n    var tempInterval;\n    var vector;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorGirdLine = '';\n    var minorTickLine = '';\n    var x1 = this.centerX;\n    var x2;\n    var y1 = this.centerY;\n    var y2;\n    var minorDirection;\n    var length = axis.visibleLabels.length; //Gridlines\n\n    for (var i = 0; i < length; i++) {\n      tempInterval = axis.visibleLabels[i].value;\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value, axis), this.startAngle);\n      x2 = this.centerX + chart.radius * vector.x;\n      y2 = this.centerY + chart.radius * vector.y;\n      var xLoc = x2 + axis.majorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1);\n      var yLoc = y2 + axis.majorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1);\n      majorGrid = 'M ' + x1 + ' ' + y1 + ' ' + 'L ' + x2 + ' ' + y2;\n      majorTick = 'M ' + x2 + ' ' + y2 + ' L ' + xLoc + ' ' + yLoc;\n\n      if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0) && axis.valueType !== 'Category' && chart.visibleSeries[0].type !== 'Radar') {\n        minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGirdLine, minorTickLine);\n        minorGirdLine = minorDirection[0];\n        minorTickLine = minorDirection[1];\n      }\n\n      this.renderTickLine(axis, index, majorTick, minorTickLine, i);\n      this.renderGridLine(axis, index, majorGrid, minorGirdLine, i);\n    }\n  };\n\n  PolarRadarPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, minorGird, minorTick) {\n    var value = tempInterval;\n    var x;\n    var y;\n    var vector;\n    var range = axis.visibleRange;\n    var direction = [];\n\n    for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n      value += (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval) / (axis.minorTicksPerInterval + 1);\n\n      if (inside(value, range)) {\n        vector = CoefficientToVector(valueToPolarCoefficient(value, axis), this.startAngle);\n        x = this.centerX + this.chart.radius * vector.x;\n        y = this.centerY + this.chart.radius * vector.y;\n        var tickXSize = x + axis.minorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1);\n        var tickYSize = y + axis.minorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1);\n        minorGird = minorGird.concat('M' + ' ' + this.centerX + ' ' + this.centerY + 'L ' + x + ' ' + y);\n        minorTick = minorTick.concat('M' + ' ' + x + ' ' + y + 'L' + ' ' + tickXSize + ' ' + tickYSize);\n      }\n    }\n\n    direction.push(minorGird);\n    direction.push(minorTick);\n    return direction;\n  };\n  /**\n   * To render the axis label.\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.drawXAxisLabels = function (axis, index) {\n    this.visibleAxisLabelRect = [];\n    var legendRect;\n\n    if (this.chart.legendModule) {\n      legendRect = this.chart.legendModule.legendBounds;\n    }\n\n    var chart = this.chart;\n    var pointX = 0;\n    var pointY = 0;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var options;\n    var vector;\n    var labelText;\n    var firstLabelX;\n    var islabelInside = axis.labelPosition === 'Inside';\n    var padding = 5;\n    var lastLabelX;\n    var label;\n    var textAnchor = '';\n    var isIntersect;\n    var labelRegions = [];\n    var isLabelVisible = [];\n    isLabelVisible[0] = true;\n    var intersectType = axis.labelIntersectAction;\n    var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    var radius = chart.radius + axis.majorTickLines.height;\n    radius = islabelInside ? -radius : radius;\n\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      isIntersect = false;\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis), this.startAngle);\n\n      if (!isNaN(vector.x) && !isNaN(vector.y)) {\n        pointX = this.centerX + (radius + axis.majorTickLines.height + padding) * vector.x;\n        pointY = this.centerY + (radius + axis.majorTickLines.height + padding) * vector.y;\n        textAnchor = parseFloat(pointX.toFixed(1)) === parseFloat(this.centerX.toFixed(1)) ? 'middle' : pointX < this.centerX && !islabelInside || pointX > this.centerX && islabelInside ? 'end' : 'start';\n      }\n\n      label = axis.visibleLabels[i];\n      labelText = label.text; // to trim axis labels based on available size\n\n      if (axis.enableTrim || intersectType === 'Trim') {\n        var originalText = axis.visibleLabels[i].originalText;\n        var trimText = void 0;\n        var size = void 0;\n        var labelPosition = axis.labelPosition;\n        var chartWidth = chart.availableSize.width;\n        var textLength = originalText.length;\n\n        for (var i_1 = textLength - 1; i_1 >= 0; --i_1) {\n          trimText = originalText.substring(0, i_1) + '...';\n          size = measureText(trimText, axis.labelStyle).width;\n\n          if (pointX === chartWidth / 2 ? pointX - size / 2 >= 0 && pointX + size / 2 <= chartWidth : labelPosition === 'Outside' && (pointX >= chartWidth / 2 && pointX + size <= chartWidth || pointX <= chartWidth / 2 && pointX - size >= 0) || labelPosition === 'Inside' && (pointX + size <= chartWidth / 2 || pointX - size >= chartWidth / 2)) {\n            labelText = i_1 === textLength - 1 ? originalText : trimText;\n            label.size.width = measureText(labelText, axis.labelStyle).width;\n            label.text = labelText;\n            break;\n          }\n        }\n      } // fix for label style not working in axisLabelRender event issue\n\n\n      labelRegions[i] = this.getLabelRegion(pointX, pointY, label, textAnchor);\n\n      if (i === 0) {\n        firstLabelX = pointX;\n      } else if (i === axis.visibleLabels.length - 1 && axis.valueType !== 'Category') {\n        lastLabelX = measureText(labelText, axis.labelStyle).height;\n        lastLabelX += pointX;\n        labelText = lastLabelX > firstLabelX ? '' : labelText;\n      } // Label intersect action (Hide) perform here\n\n\n      if (i !== 0 && intersectType === 'Hide') {\n        for (var j = i; j >= 0; j--) {\n          j = j === 0 ? 0 : j === i ? j - 1 : j;\n\n          if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n            isIntersect = true;\n            isLabelVisible[i] = false;\n            break;\n          } else {\n            isLabelVisible[i] = true;\n          }\n        }\n      }\n\n      if (!isIntersect && legendRect) {\n        isIntersect = isOverlap(labelRegions[i], legendRect);\n\n        if (isIntersect) {\n          var width = this.getAvailableSpaceToTrim(legendRect, labelRegions[i]);\n\n          if (width > 0) {\n            labelText = textTrim(width, axis.visibleLabels[i].originalText, axis.labelStyle);\n            isIntersect = false;\n          }\n        }\n      }\n\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, textAnchor, labelText, '', 'central');\n\n      if (isIntersect) {\n        continue; // If the label is intersect, the label render is ignored.\n      }\n\n      this.visibleAxisLabelRect.push(labelRegions[i]);\n      textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n    }\n\n    this.element.appendChild(labelElement);\n  };\n  /**\n   * To get available space to trim.\n   *\n   * @param {Rect} legendRect legendRect\n   * @param {Rect} labelRect labelRect\n   * @returns {number} available space value\n   */\n\n\n  PolarRadarPanel.prototype.getAvailableSpaceToTrim = function (legendRect, labelRect) {\n    var legendX1 = legendRect.x;\n    var legendX2 = legendX1 + legendRect.width;\n    var labelX1 = labelRect.x;\n    var labelX2 = labelX1 + labelRect.width;\n    var width = 0;\n\n    if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 > legendX2) {\n      width = labelX2 - legendX2;\n    } else if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 < legendX2) {\n      width = 0;\n    } else if (labelX2 > legendX1 && labelX2 < legendX2 && labelX1 < legendX1) {\n      width = legendX1 - labelX1;\n    } else if (labelX2 > legendX1 && labelX2 > legendX2 && labelX1 < legendX1) {\n      width = legendX1 - labelX1;\n    }\n\n    return width;\n  };\n  /**\n   * Getting axis label bounds\n   *\n   * @param {number} pointX pointX\n   * @param {number} pointY pointY\n   * @param {VisibleLabels} label label\n   * @param {string} anchor anchor\n   * @returns {Rect} label region\n   */\n\n\n  PolarRadarPanel.prototype.getLabelRegion = function (pointX, pointY, label, anchor) {\n    if (anchor === 'middle') {\n      pointX -= label.size.width / 2;\n    } else if (anchor === 'end') {\n      pointX -= label.size.width;\n    } else {\n      // eslint-disable-next-line no-self-assign\n      pointX = pointX;\n    }\n\n    pointY -= label.size.height / 2;\n    return new Rect(pointX, pointY, label.size.width, label.size.height);\n  };\n\n  PolarRadarPanel.prototype.renderTickLine = function (axis, index, majorTickLine, minorTickLine, gridIndex) {\n    var tickOptions;\n    var chart = this.chart;\n    var direction;\n    var element;\n\n    if (axis.majorTickLines.width > 0) {\n      element = getElement(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      tickOptions = new PathOption(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTickLine);\n      /**\n       * I252450\n       * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n       * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n       * Fix: Pointer events set to none for tick lines\n       */\n\n      element = chart.renderer.drawPath(tickOptions);\n      this.setPointerEventNone(element);\n      appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n    }\n\n    if (axis.minorTickLines.width > 0) {\n      element = getElement(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      tickOptions = new PathOption(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTickLine);\n      /**\n       * I252450\n       * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n       * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n       * Fix: Pointer events set to none for tick lines\n       */\n\n      element = chart.renderer.drawPath(tickOptions);\n      this.setPointerEventNone(element);\n      appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n    }\n  };\n\n  PolarRadarPanel.prototype.renderGridLine = function (axis, index, majorGrid, minorGird, gridIndex) {\n    var chart = this.chart;\n    var gridOptions;\n    var direction;\n    var element;\n\n    if (axis.majorGridLines.width > 0) {\n      element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      gridOptions = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n      appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n    }\n\n    if (axis.minorGridLines.width > 0) {\n      element = getElement(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      gridOptions = new PathOption(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n      appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n    }\n  };\n\n  PolarRadarPanel.prototype.setPointerEventNone = function (element) {\n    if (element) {\n      element.setAttribute('style', 'pointer-events:none');\n    }\n  };\n\n  return PolarRadarPanel;\n}(LineBase);\n\nexport { PolarRadarPanel };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-charts/src/chart/axis/polar-radar-panel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","valueToCoefficient","inside","isOverlap","textTrim","appendChildElement","CircleOption","Size","measureText","TextOption","PathOption","Rect","LineBase","textElement","ChartLocation","valueToPolarCoefficient","CoefficientToVector","getElement","PolarRadarPanel","_super","_this","apply","arguments","visibleAxisLabelRect","measureAxis","rect","chart","initialClipRect","seriesClipRect","x","y","width","height","measureRowAxis","measureColumnAxis","calculateAxisSize","calculateRowSize","row","rows","measureDefinition","availableSize","computedHeight","calculateColumnSize","column","columns","computedWidth","definition","size","_i","_a","axes","length","axis","getModule","baseModule","calculateRangeAndInterval","padding","centerX","centerY","radius","Math","min","primaryXAxis","majorTickLines","maxLabelSize","coefficient","primaryYAxis","measure","verticalAxes","push","horizontalAxes","computedTop","computedLeft","renderAxes","startAngle","axisElement","renderer","createGroup","id","element","axisLineElement","i","len","axisCollections","orientation","majorGridLines","drawXAxisGridLine","visible","internalVisibility","drawXAxisLabels","drawYAxisGridLine","lineStyle","drawYAxisLine","drawYAxisLabels","appendChild","enableCanvas","svgObject","redraw","index","optionsLine","vector","visibleLabels","value","axisLine","dashArray","color","themeStyle","drawPath","setPointerEventNone","yAxisElements","elementSize","options","pointX","pointY","angle","anchor","isIntersect","labelRegions","isLabelVisible","intersectType","labelIntersectAction","labelElement","cos","PI","labelPosition","sin","getLabelRegion","j","text","labelStyle","axisLabel","majorTick","majorGrid","x1","y1","x2","y2","border","majorGridLine","previousValue","visibleSeries","type","getAttribute","drawCircle","renderRadarGrid","tickPosition","renderTickLine","vector2","concat","tempInterval","minorGirdLine","minorTickLine","minorDirection","xLoc","yLoc","minorTicksPerInterval","minorGridLines","minorTickLines","valueType","drawAxisMinorLine","renderGridLine","minorGird","minorTick","range","visibleRange","direction","dateTimeInterval","interval","tickXSize","tickYSize","legendRect","legendModule","legendBounds","labelText","firstLabelX","islabelInside","lastLabelX","label","textAnchor","ticksbwtLabel","labelPlacement","isNaN","parseFloat","toFixed","enableTrim","originalText","trimText","chartWidth","textLength","i_1","substring","getAvailableSpaceToTrim","labelRect","legendX1","legendX2","labelX1","labelX2","majorTickLine","gridIndex","tickOptions","gridOptions","minorGridLine","setAttribute"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { valueToCoefficient, inside, isOverlap, textTrim } from '../../common/utils/helper';\nimport { appendChildElement } from '../../common/utils/helper';\nimport { CircleOption } from '../../common/utils/helper';\nimport { Size, measureText, TextOption, PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from '../series/line-base';\nimport { textElement, ChartLocation, valueToPolarCoefficient, CoefficientToVector, getElement } from '../../common/utils/helper';\n/**\n * Specifies the Polar Axis Layout.\n */\nvar PolarRadarPanel = /** @class */ (function (_super) {\n    __extends(PolarRadarPanel, _super);\n    function PolarRadarPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleAxisLabelRect = [];\n        return _this;\n    }\n    /**\n     * Measure the polar radar axis size.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measureAxis = function (rect) {\n        var chart = this.chart;\n        this.initialClipRect = rect;\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        //Measure axis size calculation\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.calculateAxisSize();\n    };\n    PolarRadarPanel.prototype.measureRowAxis = function (chart, rect) {\n        this.calculateRowSize(rect);\n        var row = chart.rows[0];\n        this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n    };\n    PolarRadarPanel.prototype.measureColumnAxis = function (chart, rect) {\n        this.calculateColumnSize(rect);\n        var column = chart.columns[0];\n        this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n    };\n    /**\n     * Measure the column and row in chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measureDefinition = function (definition, chart, size) {\n        for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n        }\n    };\n    /**\n     * Measure the axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.calculateAxisSize = function () {\n        var chart = this.chart;\n        var axis;\n        var padding = 5;\n        this.centerX = this.initialClipRect.width * 0.5 + this.initialClipRect.x;\n        this.centerY = this.initialClipRect.height * 0.5 + this.initialClipRect.y;\n        chart.radius = Math.min(this.initialClipRect.width, this.initialClipRect.height) / 2 - padding -\n            chart.primaryXAxis.majorTickLines.height - chart.primaryXAxis.maxLabelSize.height;\n        chart.radius = (chart.primaryXAxis.coefficient * chart.radius) / 100;\n        this.seriesClipRect.y = this.centerY - chart.radius;\n        this.seriesClipRect.x = this.centerX - chart.radius;\n        this.seriesClipRect.height = 2 * chart.radius;\n        this.seriesClipRect.width = 2 * chart.radius;\n        this.calculateRowSize(this.seriesClipRect);\n        axis = chart.primaryYAxis;\n        axis.rect = this.seriesClipRect;\n        this.calculateColumnSize(this.seriesClipRect);\n        axis = chart.primaryXAxis;\n        axis.rect = this.seriesClipRect;\n    };\n    /**\n     * Measure the axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measure = function () {\n        var chart = this.chart;\n        chart.verticalAxes.push(chart.primaryYAxis);\n        var row = chart.rows[0];\n        row.axes[0] = chart.primaryYAxis;\n        chart.rows[0] = row;\n        chart.horizontalAxes.push(chart.primaryXAxis);\n        var column = chart.columns[0];\n        column.axes[0] = chart.primaryXAxis;\n        chart.columns[0] = column;\n    };\n    /**\n     * Measure the row size.\n     *\n     * @returns {void}\n     */\n    PolarRadarPanel.prototype.calculateRowSize = function (rect) {\n        /*! Calculate row size */\n        var chart = this.chart;\n        var row = chart.rows[0];\n        row.computedHeight = rect.height / 2;\n        row.computedTop = rect.y;\n        chart.rows[0] = row;\n    };\n    /**\n     * Measure the row size.\n     *\n     * @returns {void}\n     */\n    PolarRadarPanel.prototype.calculateColumnSize = function (rect) {\n        /*! Calculate column size */\n        var chart = this.chart;\n        var column = chart.columns[0];\n        column.computedLeft = rect.x;\n        column.computedWidth = rect.width;\n        chart.columns[0] = column;\n    };\n    /**\n     * To render the axis element.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.renderAxes = function () {\n        var axis;\n        var chart = this.chart;\n        this.startAngle = chart.primaryXAxis.startAngle;\n        var axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisCollection' });\n        var axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i });\n            axis = chart.axisCollections[i];\n            if (axis.orientation === 'Horizontal') {\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawXAxisLabels(axis, i);\n                }\n            }\n            else {\n                this.drawYAxisGridLine(axis, i);\n                if (axis.lineStyle.width > 0) {\n                    this.drawYAxisLine(axis, i);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawYAxisLabels(axis, i);\n                }\n            }\n            axisElement.appendChild(this.element);\n        }\n        axisElement.appendChild(this.element);\n        appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n        return axisLineElement;\n    };\n    PolarRadarPanel.prototype.drawYAxisLine = function (axis, index) {\n        var chart = this.chart;\n        var optionsLine = {};\n        var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        var axisLine = 'M ' + this.centerX + ' ' + this.centerY + 'L ' +\n            (this.centerX + chart.radius * vector.x) + ' ' + (this.centerY + chart.radius * vector.y);\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            'd': axisLine,\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        /**\n         * I252450\n         * When we click the center of the marker which is plotted in the axis line, selection did not work is fixed\n         * Cause: Instead of marker id, axis  line id is obtained while clicking\n         * Fix: Pointer events set to none for axis lines\n         */\n        var element = chart.renderer.drawPath(optionsLine);\n        this.setPointerEventNone(element);\n        chart.yAxisElements.appendChild(element);\n    };\n    PolarRadarPanel.prototype.drawYAxisLabels = function (axis, index) {\n        var chart = this.chart;\n        var elementSize;\n        var options;\n        var pointX = 0;\n        var pointY = 0;\n        var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        var anchor = 'middle';\n        var radius;\n        var padding = 5;\n        var isIntersect;\n        var labelRegions = [];\n        var isLabelVisible = [];\n        isLabelVisible[0] = true;\n        var intersectType = axis.labelIntersectAction;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            isIntersect = false;\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            elementSize = axis.visibleLabels[i].size;\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            pointX = (this.centerX + radius * vector.x) + ((axis.majorTickLines.height + elementSize.width / 2 + padding / 2)\n                * (Math.cos(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            pointY = (this.centerY + radius * vector.y) + ((axis.majorTickLines.height + elementSize.height / 2)\n                * (Math.sin(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            pointY += (elementSize.height / 4);\n            labelRegions[i] = this.getLabelRegion(pointX, pointY, axis.visibleLabels[i], anchor);\n            if (i !== 0 && intersectType === 'Hide') {\n                for (var j = i; j >= 0; j--) {\n                    j = (j === 0) ? 0 : (j === i) ? (j - 1) : j;\n                    if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n                        isIntersect = true;\n                        isLabelVisible[i] = false;\n                        break;\n                    }\n                    else {\n                        isLabelVisible[i] = true;\n                    }\n                }\n                if (isIntersect) {\n                    continue; // If the label is intersect, the label render is ignored.\n                }\n                // To check Y axis label with visible X axis label\n                for (var _i = 0, _a = this.visibleAxisLabelRect; _i < _a.length; _i++) {\n                    var rect = _a[_i];\n                    if (isOverlap(labelRegions[i], rect)) {\n                        isIntersect = true;\n                        break;\n                    }\n                }\n            }\n            if (isIntersect) {\n                continue;\n            }\n            this.visibleAxisLabelRect.push(labelRegions[i]);\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor, axis.visibleLabels[i].text);\n            textElement(chart.renderer, options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n        }\n        chart.yAxisElements.appendChild(labelElement);\n    };\n    PolarRadarPanel.prototype.drawYAxisGridLine = function (axis, index) {\n        var chart = this.chart;\n        var options;\n        var radius;\n        var majorTick = '';\n        var majorGrid = '';\n        var vector;\n        var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var border = {\n            color: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n            width: axis.majorGridLines.width\n        };\n        var previousValue;\n        var element;\n        if (axis.majorGridLines.width > 0) {\n            if (chart.visibleSeries[0].type === 'Polar') {\n                for (var j = 0; j < axis.visibleLabels.length; j++) {\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n                    previousValue = element ? element.getAttribute('r') : null;\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, radius);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n                }\n                if (radius !== chart.radius) {\n                    options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length + 1, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, chart.radius);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n                }\n            }\n            else {\n                for (var j = 0; j < axis.visibleLabels.length; j++) {\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    majorGrid = this.renderRadarGrid(radius, '', chart);\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n                    previousValue = element ? element.getAttribute('d') : null;\n                    options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n                }\n                if (radius !== chart.radius) {\n                    majorGrid = this.renderRadarGrid(chart.radius, '', chart);\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length);\n                    previousValue = element ? element.getAttribute('d') : null;\n                    options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n                }\n            }\n        }\n        if (axis.majorTickLines.width > 0) {\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n            for (var i = 0; i < axis.visibleLabels.length; i++) {\n                radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n                x1 = this.centerX + radius * vector.x;\n                y1 = this.centerY + radius * vector.y;\n                x2 = x1 + (axis.majorTickLines.height * (Math.cos(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                y2 = y1 + (axis.majorTickLines.height * (Math.sin(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                majorTick = 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n                this.renderTickLine(axis, index, majorTick, '', i);\n            }\n        }\n    };\n    PolarRadarPanel.prototype.renderRadarGrid = function (radius, majorGrid, chart) {\n        var vector;\n        var vector2;\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        for (var i = 0, len = chart.primaryXAxis.visibleLabels.length; i < len; i++) {\n            vector = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i].value, chart.primaryXAxis), this.startAngle);\n            if (i + 1 < len) {\n                vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i + 1].value, chart.primaryXAxis), this.startAngle);\n            }\n            else {\n                vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[0].value, chart.primaryXAxis), this.startAngle);\n            }\n            x1 = this.centerX + radius * vector.x;\n            y1 = this.centerY + radius * vector.y;\n            x2 = this.centerX + radius * vector2.x;\n            y2 = this.centerY + radius * vector2.y;\n            majorGrid = majorGrid.concat((i ? 'L ' : 'M ') + ' ' + x1 + ' ' + y1 + ' ' + 'L ' + ' ' + x2 + ' ' + y2 + ' ');\n        }\n        return majorGrid;\n    };\n    PolarRadarPanel.prototype.drawXAxisGridLine = function (axis, index) {\n        var chart = this.chart;\n        var tempInterval;\n        var vector;\n        var majorGrid = '';\n        var majorTick = '';\n        var minorGirdLine = '';\n        var minorTickLine = '';\n        var x1 = this.centerX;\n        var x2;\n        var y1 = this.centerY;\n        var y2;\n        var minorDirection;\n        var length = axis.visibleLabels.length;\n        //Gridlines\n        for (var i = 0; i < length; i++) {\n            tempInterval = axis.visibleLabels[i].value;\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value, axis), this.startAngle);\n            x2 = this.centerX + chart.radius * vector.x;\n            y2 = this.centerY + chart.radius * vector.y;\n            var xLoc = x2 + (axis.majorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n            var yLoc = y2 + (axis.majorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n            majorGrid = 'M ' + x1 + ' ' + y1 + ' ' + 'L ' + x2 + ' ' + y2;\n            majorTick = 'M ' + x2 + ' ' + y2 + ' L ' + xLoc + ' ' + yLoc;\n            if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)\n                && axis.valueType !== 'Category' && chart.visibleSeries[0].type !== 'Radar') {\n                minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGirdLine, minorTickLine);\n                minorGirdLine = minorDirection[0];\n                minorTickLine = minorDirection[1];\n            }\n            this.renderTickLine(axis, index, majorTick, minorTickLine, i);\n            this.renderGridLine(axis, index, majorGrid, minorGirdLine, i);\n        }\n    };\n    PolarRadarPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, minorGird, minorTick) {\n        var value = tempInterval;\n        var x;\n        var y;\n        var vector;\n        var range = axis.visibleRange;\n        var direction = [];\n        for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n            value += (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval) /\n                (axis.minorTicksPerInterval + 1);\n            if (inside(value, range)) {\n                vector = CoefficientToVector(valueToPolarCoefficient(value, axis), this.startAngle);\n                x = this.centerX + this.chart.radius * vector.x;\n                y = this.centerY + this.chart.radius * vector.y;\n                var tickXSize = x + (axis.minorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n                var tickYSize = y + (axis.minorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n                minorGird = minorGird.concat('M' + ' ' + this.centerX + ' ' + this.centerY\n                    + 'L ' + x + ' ' + y);\n                minorTick = minorTick.concat('M' + ' ' + x + ' ' + y + 'L' + ' ' + (tickXSize) + ' ' +\n                    (tickYSize));\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    };\n    /**\n     * To render the axis label.\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.drawXAxisLabels = function (axis, index) {\n        this.visibleAxisLabelRect = [];\n        var legendRect;\n        if (this.chart.legendModule) {\n            legendRect = this.chart.legendModule.legendBounds;\n        }\n        var chart = this.chart;\n        var pointX = 0;\n        var pointY = 0;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var options;\n        var vector;\n        var labelText;\n        var firstLabelX;\n        var islabelInside = axis.labelPosition === 'Inside';\n        var padding = 5;\n        var lastLabelX;\n        var label;\n        var textAnchor = '';\n        var isIntersect;\n        var labelRegions = [];\n        var isLabelVisible = [];\n        isLabelVisible[0] = true;\n        var intersectType = axis.labelIntersectAction;\n        var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n        var radius = chart.radius + axis.majorTickLines.height;\n        radius = (islabelInside) ? -radius : radius;\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            isIntersect = false;\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis), this.startAngle);\n            if (!isNaN(vector.x) && !isNaN(vector.y)) {\n                pointX = this.centerX + (radius + axis.majorTickLines.height + padding) * vector.x;\n                pointY = this.centerY + (radius + axis.majorTickLines.height + padding) * vector.y;\n                textAnchor = parseFloat(pointX.toFixed(1)) === parseFloat(this.centerX.toFixed(1)) ? 'middle' :\n                    ((pointX < this.centerX && !islabelInside) || (pointX > this.centerX && islabelInside)) ? 'end' : 'start';\n            }\n            label = axis.visibleLabels[i];\n            labelText = label.text;\n            // to trim axis labels based on available size\n            if (axis.enableTrim || intersectType === 'Trim') {\n                var originalText = axis.visibleLabels[i].originalText;\n                var trimText = void 0;\n                var size = void 0;\n                var labelPosition = axis.labelPosition;\n                var chartWidth = chart.availableSize.width;\n                var textLength = originalText.length;\n                for (var i_1 = textLength - 1; i_1 >= 0; --i_1) {\n                    trimText = originalText.substring(0, i_1) + '...';\n                    size = measureText(trimText, axis.labelStyle).width;\n                    if (pointX === chartWidth / 2 ? (pointX - size / 2 >= 0 && pointX + size / 2 <= chartWidth) :\n                        ((labelPosition === 'Outside' && ((pointX >= chartWidth / 2 && pointX + size <= chartWidth) ||\n                            (pointX <= chartWidth / 2 && pointX - size >= 0))) || (labelPosition === 'Inside' &&\n                            (pointX + size <= chartWidth / 2 || pointX - size >= chartWidth / 2)))) {\n                        labelText = i_1 === textLength - 1 ? originalText : trimText;\n                        label.size.width = measureText(labelText, axis.labelStyle).width;\n                        label.text = labelText;\n                        break;\n                    }\n                }\n            }\n            // fix for label style not working in axisLabelRender event issue\n            labelRegions[i] = this.getLabelRegion(pointX, pointY, label, textAnchor);\n            if (i === 0) {\n                firstLabelX = pointX;\n            }\n            else if (i === axis.visibleLabels.length - 1 && axis.valueType !== 'Category') {\n                lastLabelX = measureText(labelText, axis.labelStyle).height;\n                lastLabelX += pointX;\n                labelText = (lastLabelX > firstLabelX) ? '' : labelText;\n            }\n            // Label intersect action (Hide) perform here\n            if (i !== 0 && intersectType === 'Hide') {\n                for (var j = i; j >= 0; j--) {\n                    j = (j === 0) ? 0 : ((j === i) ? (j - 1) : j);\n                    if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n                        isIntersect = true;\n                        isLabelVisible[i] = false;\n                        break;\n                    }\n                    else {\n                        isLabelVisible[i] = true;\n                    }\n                }\n            }\n            if (!isIntersect && legendRect) {\n                isIntersect = isOverlap(labelRegions[i], legendRect);\n                if (isIntersect) {\n                    var width = this.getAvailableSpaceToTrim(legendRect, labelRegions[i]);\n                    if (width > 0) {\n                        labelText = textTrim(width, axis.visibleLabels[i].originalText, axis.labelStyle);\n                        isIntersect = false;\n                    }\n                }\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, textAnchor, labelText, '', 'central');\n            if (isIntersect) {\n                continue; // If the label is intersect, the label render is ignored.\n            }\n            this.visibleAxisLabelRect.push(labelRegions[i]);\n            textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n        }\n        this.element.appendChild(labelElement);\n    };\n    /**\n     * To get available space to trim.\n     *\n     * @param {Rect} legendRect legendRect\n     * @param {Rect} labelRect labelRect\n     * @returns {number} available space value\n     */\n    PolarRadarPanel.prototype.getAvailableSpaceToTrim = function (legendRect, labelRect) {\n        var legendX1 = legendRect.x;\n        var legendX2 = legendX1 + legendRect.width;\n        var labelX1 = labelRect.x;\n        var labelX2 = labelX1 + labelRect.width;\n        var width = 0;\n        if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 > legendX2) {\n            width = labelX2 - legendX2;\n        }\n        else if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 < legendX2) {\n            width = 0;\n        }\n        else if (labelX2 > legendX1 && labelX2 < legendX2 && labelX1 < legendX1) {\n            width = legendX1 - labelX1;\n        }\n        else if (labelX2 > legendX1 && labelX2 > legendX2 && labelX1 < legendX1) {\n            width = legendX1 - labelX1;\n        }\n        return width;\n    };\n    /**\n     * Getting axis label bounds\n     *\n     * @param {number} pointX pointX\n     * @param {number} pointY pointY\n     * @param {VisibleLabels} label label\n     * @param {string} anchor anchor\n     * @returns {Rect} label region\n     */\n    PolarRadarPanel.prototype.getLabelRegion = function (pointX, pointY, label, anchor) {\n        if (anchor === 'middle') {\n            pointX -= (label.size.width / 2);\n        }\n        else if (anchor === 'end') {\n            pointX -= label.size.width;\n        }\n        else {\n            // eslint-disable-next-line no-self-assign\n            pointX = pointX;\n        }\n        pointY -= (label.size.height / 2);\n        return new Rect(pointX, pointY, label.size.width, label.size.height);\n    };\n    PolarRadarPanel.prototype.renderTickLine = function (axis, index, majorTickLine, minorTickLine, gridIndex) {\n        var tickOptions;\n        var chart = this.chart;\n        var direction;\n        var element;\n        if (axis.majorTickLines.width > 0) {\n            element = getElement(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            tickOptions = new PathOption(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTickLine);\n            /**\n             * I252450\n             * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n             * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n             * Fix: Pointer events set to none for tick lines\n             */\n            element = chart.renderer.drawPath(tickOptions);\n            this.setPointerEventNone(element);\n            appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n        }\n        if (axis.minorTickLines.width > 0) {\n            element = getElement(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            tickOptions = new PathOption(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTickLine);\n            /**\n             * I252450\n             * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n             * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n             * Fix: Pointer events set to none for tick lines\n             */\n            element = chart.renderer.drawPath(tickOptions);\n            this.setPointerEventNone(element);\n            appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n        }\n    };\n    PolarRadarPanel.prototype.renderGridLine = function (axis, index, majorGrid, minorGird, gridIndex) {\n        var chart = this.chart;\n        var gridOptions;\n        var direction;\n        var element;\n        if (axis.majorGridLines.width > 0) {\n            element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            gridOptions = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n            appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n        }\n        if (axis.minorGridLines.width > 0) {\n            element = getElement(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            gridOptions = new PathOption(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n            appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n        }\n    };\n    PolarRadarPanel.prototype.setPointerEventNone = function (element) {\n        if (element) {\n            element.setAttribute('style', 'pointer-events:none');\n        }\n    };\n    return PolarRadarPanel;\n}(LineBase));\nexport { PolarRadarPanel };\n"]},"metadata":{},"sourceType":"module"}