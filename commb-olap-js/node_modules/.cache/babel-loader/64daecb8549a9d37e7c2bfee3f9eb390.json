{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `TmaIndicator` module is used to render TMA indicator.\n */\n\nvar TmaIndicator = function (_super) {\n  __extends(TmaIndicator, _super);\n\n  function TmaIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the predictions based on TMA approach\n   *\n   * @private\n   */\n\n\n  TmaIndicator.prototype.initDataSource = function (indicator, chart) {\n    var tmaPoints = [];\n    var field = firstToLowerCase(indicator.field);\n    var xField = 'x'; //prepare data\n\n    var validData = indicator.points;\n\n    if (validData && validData.length && validData.length >= indicator.period) {\n      var signalSeries = indicator.targetSeries[0]; //prepare data\n\n      var validData_1 = indicator.points;\n\n      if (validData_1.length && validData_1.length >= indicator.period) {\n        var sum = 0;\n        var smaValues = []; //sma values\n\n        var index = 0;\n        var length_1 = validData_1.length;\n        var period = indicator.period;\n\n        while (length_1 >= period) {\n          sum = 0;\n          index = validData_1.length - length_1;\n\n          for (var j = index; j < index + period; j++) {\n            sum = sum + validData_1[j][field];\n          }\n\n          sum = sum / period;\n          smaValues.push(sum);\n          length_1--;\n        } //initial values\n\n\n        for (var k = 0; k < period - 1; k++) {\n          sum = 0;\n\n          for (var j = 0; j < k + 1; j++) {\n            sum = sum + validData_1[j][field];\n          }\n\n          sum = sum / (k + 1);\n          smaValues.splice(k, 0, sum);\n        }\n\n        index = indicator.period;\n\n        while (index <= smaValues.length) {\n          sum = 0;\n\n          for (var j = index - indicator.period; j < index; j++) {\n            sum = sum + smaValues[j];\n          }\n\n          sum = sum / indicator.period;\n          tmaPoints.push(this.getDataPoint(validData_1[index - 1][xField], sum, validData_1[index - 1], signalSeries, tmaPoints.length));\n          index++;\n        }\n      }\n    }\n\n    this.setSeriesRange(tmaPoints, indicator);\n  };\n  /**\n   * To destroy the TMA indicator.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  TmaIndicator.prototype.destroy = function () {\n    /**\n     * Destroys the TMA Indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  TmaIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'TmaIndicator';\n  };\n\n  return TmaIndicator;\n}(TechnicalAnalysis);\n\nexport { TmaIndicator };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/tma-indicator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","firstToLowerCase","TechnicalAnalysis","TmaIndicator","_super","apply","arguments","initDataSource","indicator","chart","tmaPoints","field","xField","validData","points","length","period","signalSeries","targetSeries","validData_1","sum","smaValues","index","length_1","j","push","k","splice","getDataPoint","setSeriesRange","destroy","getModuleName"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `TmaIndicator` module is used to render TMA indicator.\n */\nvar TmaIndicator = /** @class */ (function (_super) {\n    __extends(TmaIndicator, _super);\n    function TmaIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the predictions based on TMA approach\n     *\n     * @private\n     */\n    TmaIndicator.prototype.initDataSource = function (indicator, chart) {\n        var tmaPoints = [];\n        var field = firstToLowerCase(indicator.field);\n        var xField = 'x';\n        //prepare data\n        var validData = indicator.points;\n        if (validData && validData.length && validData.length >= indicator.period) {\n            var signalSeries = indicator.targetSeries[0];\n            //prepare data\n            var validData_1 = indicator.points;\n            if (validData_1.length && validData_1.length >= indicator.period) {\n                var sum = 0;\n                var smaValues = [];\n                //sma values\n                var index = 0;\n                var length_1 = validData_1.length;\n                var period = indicator.period;\n                while (length_1 >= period) {\n                    sum = 0;\n                    index = validData_1.length - length_1;\n                    for (var j = index; j < index + period; j++) {\n                        sum = sum + validData_1[j][field];\n                    }\n                    sum = sum / period;\n                    smaValues.push(sum);\n                    length_1--;\n                }\n                //initial values\n                for (var k = 0; k < period - 1; k++) {\n                    sum = 0;\n                    for (var j = 0; j < k + 1; j++) {\n                        sum = sum + validData_1[j][field];\n                    }\n                    sum = sum / (k + 1);\n                    smaValues.splice(k, 0, sum);\n                }\n                index = indicator.period;\n                while (index <= smaValues.length) {\n                    sum = 0;\n                    for (var j = index - indicator.period; j < index; j++) {\n                        sum = sum + smaValues[j];\n                    }\n                    sum = sum / indicator.period;\n                    tmaPoints.push(this.getDataPoint(validData_1[index - 1][xField], sum, validData_1[index - 1], signalSeries, tmaPoints.length));\n                    index++;\n                }\n            }\n        }\n        this.setSeriesRange(tmaPoints, indicator);\n    };\n    /**\n     * To destroy the TMA indicator.\n     *\n     * @returns {void}\n     * @private\n     */\n    TmaIndicator.prototype.destroy = function () {\n        /**\n         * Destroys the TMA Indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    TmaIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'TmaIndicator';\n    };\n    return TmaIndicator;\n}(TechnicalAnalysis));\nexport { TmaIndicator };\n"]},"metadata":{},"sourceType":"module"}