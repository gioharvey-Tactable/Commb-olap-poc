{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n/* eslint-disable jsdoc/require-param */\n\n/* eslint-disable valid-jsdoc */\n\n/**\n * Chart legend\n */\n\n\nimport { remove, Browser, extend } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim, removeElement, RectOption, withInBounds, blazorTemplatesReset } from '../../common/utils/helper';\nimport { getUnicodeText } from '../../common/utils/helper';\nimport { measureText, Rect, getElement } from '@syncfusion/ej2-svg-base';\nimport { legendRender, legendClick, regSub, regSup } from '../../common/model/constants';\n/**\n * `Legend` module is used to render legend for the chart.\n */\n\nvar Legend = function (_super) {\n  __extends(Legend, _super);\n\n  function Legend(chart) {\n    var _this = _super.call(this, chart) || this;\n\n    _this.library = _this;\n\n    _this.addEventListener();\n\n    return _this;\n  }\n  /**\n   * Binding events for legend module.\n   */\n\n\n  Legend.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n\n    this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n    this.chart.on('click', this.click, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n  };\n  /**\n   * UnBinding events for legend module.\n   */\n\n\n  Legend.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n\n    this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n    this.chart.off('click', this.click);\n    this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n  };\n  /**\n   * To handle mosue move for legend module\n   */\n\n\n  Legend.prototype.mouseMove = function (e) {\n    if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n      this.move(e);\n\n      if (this.chart.highlightModule && this.chart.highlightMode !== 'None') {\n        this.click(e);\n      }\n    }\n  };\n  /**\n   * To handle mosue end for legend module\n   */\n\n\n  Legend.prototype.mouseEnd = function (e) {\n    if (this.chart.legendSettings.visible && this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  /**\n   * Get the legend options.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Legend.prototype.getLegendOptions = function (visibleSeriesCollection, chart) {\n    this.legendCollections = [];\n    var seriesType;\n    var fill;\n    var colors = [];\n\n    if (visibleSeriesCollection.length > 1) {\n      this.legend.mode = 'Series';\n    }\n\n    for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n      var series = visibleSeriesCollection_1[_i];\n\n      if (this.legend.mode === 'Series') {\n        if (series.category !== 'Indicator') {\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type; // To set legend color when use pointColorMapping\n\n          fill = series.pointColorMapping && series.points.length > 0 ? series.points[0].interior ? series.points[0].interior : series.interior : series.interior;\n          this.legendCollections.push(new LegendOptions(series.name, fill, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible, seriesType, series.legendImageUrl, series.marker.shape, series.marker.visible));\n        }\n      } else if (this.legend.mode === 'Point') {\n        var _loop_1 = function (points) {\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type;\n          fill = points.interior ? points.interior : series.interior;\n\n          if (this_1.legendCollections.filter(function (i) {\n            return i.text === points.x.toString();\n          }).length === 0) {\n            this_1.legendCollections.push(new LegendOptions(points.x.toString(), fill, series.legendShape, series.category === 'TrendLine' ? this_1.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible, seriesType, '', series.marker.shape, series.marker.visible));\n          }\n        };\n\n        var this_1 = this;\n\n        for (var _a = 0, _b = series.points; _a < _b.length; _a++) {\n          var points = _b[_a];\n\n          _loop_1(points);\n        }\n      } else if (this.legend.mode === 'Range') {\n        for (var _c = 0, _d = series.points; _c < _d.length; _c++) {\n          var points = _d[_c];\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type;\n          fill = points.interior ? points.interior : series.interior;\n          var legendLabel = 'Others';\n\n          if (colors.indexOf(fill) < 0) {\n            colors.push(fill);\n\n            if (chart.rangeColorSettings.length >= 1 && chart.rangeColorSettings[0].colors.length === 1) {\n              for (var _e = 0, _f = chart.rangeColorSettings; _e < _f.length; _e++) {\n                var rangeMap = _f[_e];\n\n                if (rangeMap.colors[0] === fill) {\n                  legendLabel = rangeMap.label;\n                }\n              }\n\n              this.legendCollections.push(new LegendOptions(legendLabel, fill, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible, seriesType, '', series.marker.shape, series.marker.visible));\n            }\n          }\n        }\n      } else {\n        if (this.legendCollections.length === 0 && chart.rangeColorSettings.length > 0) {\n          var startLabel = chart.rangeColorSettings[0].start.toString();\n          var endLabel = chart.rangeColorSettings[chart.rangeColorSettings.length - 1].end.toString();\n          this.legendCollections.push(new LegendOptions(startLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n          this.legendCollections.push(new LegendOptions(endLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n        }\n      }\n    }\n  };\n  /** @private */\n\n\n  Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n    this.calculateLegendTitle(legend, legendBounds);\n    this.isTitle = legend.title ? true : false;\n    var padding = legend.padding;\n    var titlePosition = legend.titlePosition;\n    var extraHeight = 0;\n    var extraWidth = 0;\n    var arrowWidth = this.arrowWidth;\n    var arrowHeight = this.arrowHeight;\n    var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n    var titleSpace = this.isTitle && titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n    titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.legendTitleSize.height + this.fivePixel : titleSpace;\n\n    if (!this.isVertical) {\n      extraHeight = !legend.height ? availableSize.height / 100 * 5 : 0;\n    } else {\n      extraWidth = !legend.width ? availableSize.width / 100 * 5 : 0;\n    }\n\n    legendBounds.height += extraHeight;\n    legendBounds.width += extraWidth;\n    var shapeWidth = legend.shapeWidth;\n    var shapePadding = legend.shapePadding;\n    var maximumWidth = 0;\n    var rowWidth = 0;\n    var legendWidth = 0;\n    var columnHeight = 0;\n    var rowCount = 0;\n    var titlePlusArrowSpace = 0;\n    var legendEventArgs;\n    this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n    var render = false;\n\n    for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n      var legendOption = _a[_i];\n\n      if (regSub.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSub);\n      }\n\n      if (regSup.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSup);\n      }\n\n      legendEventArgs = {\n        fill: legendOption.fill,\n        text: legendOption.text,\n        shape: legendOption.shape,\n        markerShape: legendOption.markerShape,\n        name: legendRender,\n        cancel: false\n      };\n      this.chart.trigger(legendRender, legendEventArgs);\n      legendOption.render = !legendEventArgs.cancel;\n      legendOption.text = legendEventArgs.text;\n      legendOption.fill = legendEventArgs.fill;\n      legendOption.shape = legendEventArgs.shape;\n      legendOption.markerShape = legendEventArgs.markerShape;\n      legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n\n      if (legendOption.render) {\n        render = true;\n        legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n        rowWidth = rowWidth + legendWidth;\n\n        if (!legend.enablePages && !this.isVertical) {\n          titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n          titlePlusArrowSpace += arrowWidth;\n        }\n\n        if (legendBounds.width < padding + rowWidth + titlePlusArrowSpace || this.isVertical) {\n          maximumWidth = Math.max(maximumWidth, rowWidth + padding + titlePlusArrowSpace - (this.isVertical ? 0 : legendWidth));\n\n          if (rowCount === 0 && legendWidth !== rowWidth) {\n            rowCount = 1;\n          }\n\n          rowWidth = this.isVertical ? 0 : legendWidth;\n          rowCount++;\n          columnHeight = rowCount * (this.maxItemHeight + padding) + padding + titleSpace + verticalArrowSpace;\n        }\n      }\n    }\n\n    columnHeight = Math.max(columnHeight, this.maxItemHeight + padding + padding + titleSpace);\n    this.isPaging = legendBounds.height < columnHeight;\n\n    if (this.isPaging && !legend.enablePages) {\n      if (this.isVertical) {\n        // eslint-disable-next-line no-self-assign\n        columnHeight = columnHeight;\n      } else {\n        columnHeight = this.maxItemHeight + padding + padding + (titlePosition === 'Top' ? titleSpace : 0);\n      }\n    }\n\n    this.totalPages = rowCount;\n\n    if (!this.isPaging && !this.isVertical) {\n      rowWidth += this.isTitle && titlePosition !== 'Top' ? this.fivePixel + this.legendTitleSize.width + this.fivePixel : 0;\n    }\n\n    if (render) {\n      this.setBounds(Math.max(rowWidth + padding, maximumWidth), columnHeight, legend, legendBounds);\n    } else {\n      this.setBounds(0, 0, legend, legendBounds);\n    }\n  };\n  /** @private */\n\n\n  Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n    var padding = this.legend.padding;\n    var previousBound = prevLegend.location.x + textPadding + prevLegend.textSize.width;\n\n    if (previousBound + (legendOption.textSize.width + textPadding) > rect.x + rect.width + this.legend.shapeWidth / 2 || this.isVertical) {\n      legendOption.location.x = start.x;\n      legendOption.location.y = count === firstLegend ? prevLegend.location.y : prevLegend.location.y + this.maxItemHeight + padding;\n    } else {\n      legendOption.location.x = count === firstLegend ? prevLegend.location.x : previousBound;\n      legendOption.location.y = prevLegend.location.y;\n    }\n\n    var availwidth = this.legendBounds.x + this.legendBounds.width - (legendOption.location.x + textPadding - this.legend.shapeWidth / 2);\n    legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle);\n  };\n  /** @private */\n\n\n  Legend.prototype.LegendClick = function (index, event) {\n    var chart = this.chart;\n    var seriesIndex = chart.legendSettings.mode === 'Series' ? index : 0;\n    var series = chart.visibleSeries[seriesIndex];\n    var legend = this.legendCollections[index];\n    var changeDetection = 'isProtectedOnChange';\n\n    if (chart.legendSettings.mode === 'Series') {\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: series.points,\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n      series.legendShape = legendClickArgs.legendShape;\n\n      if (series.fill !== null) {\n        chart.visibleSeries[index].interior = series.fill;\n      }\n\n      if (chart.legendSettings.toggleVisibility) {\n        if (series.category === 'TrendLine') {\n          if (!chart.series[series.sourceIndex].trendlines[series.index].visible) {\n            chart.series[series.sourceIndex].trendlines[series.index].visible = true;\n          } else {\n            chart.series[series.sourceIndex].trendlines[series.index].visible = false;\n          }\n        } else {\n          series.chart[changeDetection] = true;\n          this.changeSeriesVisiblity(series, series.visible);\n        }\n\n        legend.visible = series.category === 'TrendLine' ? chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible;\n        this.refreshLegendToggle(chart, series);\n      } else if (chart.selectionModule) {\n        chart.selectionModule.legendSelection(chart, index, event);\n      } else if (chart.highlightModule) {\n        chart.highlightModule.legendSelection(chart, index, event);\n      }\n\n      series.chart[changeDetection] = false;\n    } else if (chart.legendSettings.mode === 'Point') {\n      var point = series.points[index];\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: [point],\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n\n      if (chart.legendSettings.toggleVisibility) {\n        point.visible = !point.visible;\n        var legendOption = this.legendCollections[index];\n        legendOption.visible = point.visible;\n        this.refreshLegendToggle(chart, series);\n      }\n    } else if (chart.legendSettings.mode === 'Range') {\n      var points = [];\n      var legendOption = this.legendCollections[index];\n\n      for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n        var point = _a[_i];\n\n        if (legendOption.fill === (point.interior || series.interior)) {\n          points.push(point);\n        }\n      }\n\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: points,\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n\n      if (chart.legendSettings.toggleVisibility) {\n        legendOption.visible = !legendOption.visible;\n\n        for (var _b = 0, points_1 = points; _b < points_1.length; _b++) {\n          var point = points_1[_b];\n          point.visible = !point.visible;\n        }\n\n        this.refreshLegendToggle(chart, series);\n      }\n    }\n  };\n\n  Legend.prototype.refreshLegendToggle = function (chart, series) {\n    var selectedDataIndexes = [];\n\n    if (chart.selectionModule) {\n      selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n    }\n\n    if (chart.svgObject.childNodes.length > 0 && !chart.enableAnimation && !chart.enableCanvas) {\n      while (chart.svgObject.lastChild) {\n        chart.svgObject.removeChild(chart.svgObject.lastChild);\n      }\n\n      remove(chart.svgObject);\n    }\n\n    chart.animateSeries = false;\n    chart.redraw = chart.enableAnimation;\n    chart.rotatedDataLabelCollections = [];\n    removeElement(getElement(chart.element.id + '_Secondary_Element').querySelectorAll('.ejSVGTooltip')[0]);\n    blazorTemplatesReset(chart);\n    this.redrawSeriesElements(series, chart);\n    chart.removeSvg();\n    chart.refreshAxis();\n    series.refreshAxisLabel();\n    this.refreshSeries(chart.visibleSeries);\n    chart.markerRender.removeHighlightedMarker();\n    chart.refreshBound();\n    chart.trigger('loaded', {\n      chart: chart\n    });\n\n    if (selectedDataIndexes.length > 0) {\n      chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n      chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n    }\n\n    if (chart.highlightModule && chart.highlightMode !== 'None') {\n      chart.highlightModule.redrawSelection(chart, chart.highlightMode);\n    }\n\n    chart.redraw = false;\n  };\n\n  Legend.prototype.changeSeriesVisiblity = function (series, visibility) {\n    series.visible = !visibility;\n\n    if (this.isSecondaryAxis(series.xAxis)) {\n      series.xAxis.internalVisibility = series.xAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n\n    if (this.isSecondaryAxis(series.yAxis)) {\n      series.yAxis.internalVisibility = series.yAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n  };\n\n  Legend.prototype.isSecondaryAxis = function (axis) {\n    return this.chart.axes.indexOf(axis) > -1;\n  };\n\n  Legend.prototype.redrawSeriesElements = function (series, chart) {\n    if (!chart.redraw) {\n      return null;\n    }\n\n    removeElement(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabelCollections');\n  };\n\n  Legend.prototype.refreshSeries = function (seriesCollection) {\n    for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n      var series = seriesCollection_1[_i];\n      series.position = undefined;\n    }\n  };\n  /**\n   * To show the tooltip for the trimmed text in legend.\n   *\n   * @returns {void}\n   */\n\n\n  Legend.prototype.click = function (event) {\n    var _this = this;\n\n    if (!this.chart.legendSettings.visible) {\n      return;\n    }\n\n    var pageX = this.chart.mouseX;\n    var pageY = this.chart.mouseY;\n    var legendRegion = [];\n    var targetId = event.target.id;\n    var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_', this.legendID + '_shape_'];\n    var seriesIndex;\n\n    for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n      var id = legendItemsId_1[_i];\n\n      if (targetId.indexOf(id) > -1) {\n        seriesIndex = parseInt(targetId.split(id)[1], 10);\n        this.LegendClick(seriesIndex, event);\n        break;\n      }\n    }\n\n    if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n      this.changePage(event, true);\n    } else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n      this.changePage(event, false);\n    }\n\n    if (this.chart.enableCanvas && this.pagingRegions.length) {\n      this.checkWithinBounds(pageX, pageY);\n    }\n\n    legendRegion = this.legendRegions.filter(function (region) {\n      return withInBounds(pageX, pageY + (_this.isPaging ? (_this.currentPageNumber - 1) * _this.translatePage(null, 1, 2) : 0), region.rect);\n    });\n\n    if (legendRegion.length && this.chart.enableCanvas) {\n      this.LegendClick(legendRegion[0].index, event);\n    }\n  };\n  /**\n   * To check click position is within legend bounds\n   */\n\n\n  Legend.prototype.checkWithinBounds = function (pageX, pageY) {\n    var cRender = this.chart.renderer;\n    var bounds = this.legendBounds;\n    var borderWidth = this.chart.legendSettings.border.width;\n    var canvasRect = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n    canvasRect.x = canvasRect.x - borderWidth / 2;\n    canvasRect.y = canvasRect.y - borderWidth / 2;\n    canvasRect.width = canvasRect.width + borderWidth;\n    canvasRect.height = canvasRect.height + borderWidth;\n\n    if (withInBounds(pageX, pageY, this.pagingRegions[0])) {\n      // pagedown calculations are performing here\n      if (--this.currentPageNumber > 0) {\n        this.legendRegions = [];\n        cRender.clearRect(canvasRect);\n        cRender.canvasClip(new RectOption('legendClipPath', 'transparent', {\n          width: 0,\n          color: ''\n        }, null, canvasRect));\n        this.renderLegend(this.chart, this.legend, bounds);\n        cRender.canvasRestore();\n      } else {\n        ++this.currentPageNumber;\n      }\n\n      return null;\n    }\n\n    if (withInBounds(pageX, pageY, this.pagingRegions[1])) {\n      // pageUp calculations are performing here\n      if (++this.currentPageNumber > 0 && this.currentPageNumber <= this.totalNoOfPages) {\n        this.legendRegions = [];\n        cRender.clearRect(canvasRect);\n        cRender.canvasClip(new RectOption('legendClipPath', 'transpaent', {\n          width: 0,\n          color: ''\n        }, null, canvasRect));\n        this.renderLegend(this.chart, this.legend, bounds);\n        cRender.canvasRestore();\n      } else {\n        --this.currentPageNumber;\n      }\n\n      return null;\n    }\n  };\n  /**\n   * Get module name\n   */\n\n\n  Legend.prototype.getModuleName = function () {\n    return 'Legend';\n  };\n  /**\n   * To destroy the Legend.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Legend.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  return Legend;\n}(BaseLegend);\n\nexport { Legend };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-charts/src/chart/legend/legend.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","remove","Browser","extend","LegendOptions","BaseLegend","textTrim","removeElement","RectOption","withInBounds","blazorTemplatesReset","getUnicodeText","measureText","Rect","getElement","legendRender","legendClick","regSub","regSup","Legend","_super","chart","_this","call","library","addEventListener","isDestroyed","on","touchMoveEvent","mouseMove","click","touchEndEvent","mouseEnd","removeEventListener","off","e","legendSettings","visible","isTouch","move","highlightModule","highlightMode","getLegendOptions","visibleSeriesCollection","legendCollections","seriesType","fill","colors","length","legend","mode","_i","visibleSeriesCollection_1","series","category","chartAreaType","drawType","type","pointColorMapping","points","interior","push","name","legendShape","sourceIndex","trendlines","index","legendImageUrl","marker","shape","_loop_1","this_1","filter","i","text","x","toString","_a","_b","_c","_d","legendLabel","indexOf","rangeColorSettings","_e","_f","rangeMap","label","startLabel","start","endLabel","end","getLegendBounds","availableSize","legendBounds","calculateLegendTitle","isTitle","title","padding","titlePosition","extraHeight","extraWidth","arrowWidth","arrowHeight","verticalArrowSpace","isVertical","enablePages","titleSpace","legendTitleSize","height","fivePixel","width","shapeWidth","shapePadding","maximumWidth","rowWidth","legendWidth","columnHeight","rowCount","titlePlusArrowSpace","legendEventArgs","maxItemHeight","Math","max","textStyle","shapeHeight","render","legendOption","test","markerShape","cancel","trigger","textSize","isPaging","totalPages","setBounds","getRenderPoint","textPadding","prevLegend","rect","count","firstLegend","previousBound","location","y","availwidth","toFixed","LegendClick","event","seriesIndex","visibleSeries","changeDetection","legendClickArgs","legendText","isBlazor","toggleVisibility","changeSeriesVisiblity","refreshLegendToggle","selectionModule","legendSelection","point","points_1","selectedDataIndexes","svgObject","childNodes","enableAnimation","enableCanvas","lastChild","removeChild","animateSeries","redraw","rotatedDataLabelCollections","element","id","querySelectorAll","redrawSeriesElements","removeSvg","refreshAxis","refreshAxisLabel","refreshSeries","markerRender","removeHighlightedMarker","refreshBound","redrawSelection","selectionMode","visibility","isSecondaryAxis","xAxis","internalVisibility","some","value","yAxis","axis","axes","undefined","seriesCollection","seriesCollection_1","position","pageX","mouseX","pageY","mouseY","legendRegion","targetId","target","legendItemsId","legendID","legendItemsId_1","parseInt","split","changePage","pagingRegions","checkWithinBounds","legendRegions","region","currentPageNumber","translatePage","cRender","renderer","bounds","borderWidth","border","canvasRect","clearRect","canvasClip","color","renderLegend","canvasRestore","totalNoOfPages","getModuleName","destroy"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * Chart legend\n */\nimport { remove, Browser, extend } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim, removeElement, RectOption, withInBounds, blazorTemplatesReset } from '../../common/utils/helper';\nimport { getUnicodeText } from '../../common/utils/helper';\nimport { measureText, Rect, getElement } from '@syncfusion/ej2-svg-base';\nimport { legendRender, legendClick, regSub, regSup } from '../../common/model/constants';\n/**\n * `Legend` module is used to render legend for the chart.\n */\nvar Legend = /** @class */ (function (_super) {\n    __extends(Legend, _super);\n    function Legend(chart) {\n        var _this = _super.call(this, chart) || this;\n        _this.library = _this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Binding events for legend module.\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on('click', this.click, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('click', this.click);\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * To handle mosue move for legend module\n     */\n    Legend.prototype.mouseMove = function (e) {\n        if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n            this.move(e);\n            if (this.chart.highlightModule && this.chart.highlightMode !== 'None') {\n                this.click(e);\n            }\n        }\n    };\n    /**\n     * To handle mosue end for legend module\n     */\n    Legend.prototype.mouseEnd = function (e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    };\n    /**\n     * Get the legend options.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (visibleSeriesCollection, chart) {\n        this.legendCollections = [];\n        var seriesType;\n        var fill;\n        var colors = [];\n        if (visibleSeriesCollection.length > 1) {\n            this.legend.mode = 'Series';\n        }\n        for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n            var series = visibleSeriesCollection_1[_i];\n            if (this.legend.mode === 'Series') {\n                if (series.category !== 'Indicator') {\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    // To set legend color when use pointColorMapping\n                    fill = (series.pointColorMapping && series.points.length > 0) ?\n                        (series.points[0].interior ? series.points[0].interior : series.interior) : series.interior;\n                    this.legendCollections.push(new LegendOptions(series.name, fill, series.legendShape, (series.category === 'TrendLine' ?\n                        this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible), seriesType, series.legendImageUrl, series.marker.shape, series.marker.visible));\n                }\n            }\n            else if (this.legend.mode === 'Point') {\n                var _loop_1 = function (points) {\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    fill = points.interior ? points.interior : series.interior;\n                    if (this_1.legendCollections.filter(function (i) { return i.text === points.x.toString(); }).length === 0) {\n                        this_1.legendCollections.push(new LegendOptions(points.x.toString(), fill, series.legendShape, (series.category === 'TrendLine' ?\n                            this_1.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible), seriesType, '', series.marker.shape, series.marker.visible));\n                    }\n                };\n                var this_1 = this;\n                for (var _a = 0, _b = series.points; _a < _b.length; _a++) {\n                    var points = _b[_a];\n                    _loop_1(points);\n                }\n            }\n            else if (this.legend.mode === 'Range') {\n                for (var _c = 0, _d = series.points; _c < _d.length; _c++) {\n                    var points = _d[_c];\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    fill = points.interior ? points.interior : series.interior;\n                    var legendLabel = 'Others';\n                    if (colors.indexOf(fill) < 0) {\n                        colors.push(fill);\n                        if (chart.rangeColorSettings.length >= 1 && chart.rangeColorSettings[0].colors.length === 1) {\n                            for (var _e = 0, _f = chart.rangeColorSettings; _e < _f.length; _e++) {\n                                var rangeMap = _f[_e];\n                                if (rangeMap.colors[0] === fill) {\n                                    legendLabel = rangeMap.label;\n                                }\n                            }\n                            this.legendCollections.push(new LegendOptions(legendLabel, fill, series.legendShape, (series.category === 'TrendLine' ?\n                                this.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible), seriesType, '', series.marker.shape, series.marker.visible));\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.legendCollections.length === 0 && chart.rangeColorSettings.length > 0) {\n                    var startLabel = chart.rangeColorSettings[0].start.toString();\n                    var endLabel = chart.rangeColorSettings[chart.rangeColorSettings.length - 1].end.toString();\n                    this.legendCollections.push(new LegendOptions(startLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n                    this.legendCollections.push(new LegendOptions(endLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n                }\n            }\n        }\n    };\n    /** @private */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        this.calculateLegendTitle(legend, legendBounds);\n        this.isTitle = legend.title ? true : false;\n        var padding = legend.padding;\n        var titlePosition = legend.titlePosition;\n        var extraHeight = 0;\n        var extraWidth = 0;\n        var arrowWidth = this.arrowWidth;\n        var arrowHeight = this.arrowHeight;\n        var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n        var titleSpace = this.isTitle && titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n        titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.legendTitleSize.height + this.fivePixel : titleSpace;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.height += (extraHeight);\n        legendBounds.width += extraWidth;\n        var shapeWidth = legend.shapeWidth;\n        var shapePadding = legend.shapePadding;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var legendWidth = 0;\n        var columnHeight = 0;\n        var rowCount = 0;\n        var titlePlusArrowSpace = 0;\n        var legendEventArgs;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var render = false;\n        for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            if (regSub.test(legendOption.text)) {\n                legendOption.text = getUnicodeText(legendOption.text, regSub);\n            }\n            if (regSup.test(legendOption.text)) {\n                legendOption.text = getUnicodeText(legendOption.text, regSup);\n            }\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                markerShape: legendOption.markerShape, name: legendRender, cancel: false\n            };\n            this.chart.trigger(legendRender, legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.markerShape = legendEventArgs.markerShape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render) {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n                rowWidth = rowWidth + legendWidth;\n                if (!legend.enablePages && !this.isVertical) {\n                    titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n                    titlePlusArrowSpace += arrowWidth;\n                }\n                if (legendBounds.width < (padding + rowWidth + titlePlusArrowSpace) || this.isVertical) {\n                    maximumWidth = Math.max(maximumWidth, (rowWidth + padding + titlePlusArrowSpace - (this.isVertical ? 0 : legendWidth)));\n                    if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                        rowCount = 1;\n                    }\n                    rowWidth = this.isVertical ? 0 : legendWidth;\n                    rowCount++;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + titleSpace + verticalArrowSpace;\n                }\n            }\n        }\n        columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding + titleSpace);\n        this.isPaging = legendBounds.height < columnHeight;\n        if (this.isPaging && !legend.enablePages) {\n            if (this.isVertical) {\n                // eslint-disable-next-line no-self-assign\n                columnHeight = columnHeight;\n            }\n            else {\n                columnHeight = (this.maxItemHeight + padding) + padding + (titlePosition === 'Top' ? titleSpace : 0);\n            }\n        }\n        this.totalPages = rowCount;\n        if (!this.isPaging && !this.isVertical) {\n            rowWidth += this.isTitle && titlePosition !== 'Top' ? (this.fivePixel + this.legendTitleSize.width + this.fivePixel) : 0;\n        }\n        if (render) {\n            this.setBounds(Math.max((rowWidth + padding), maximumWidth), columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /** @private */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n        if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2) ||\n            this.isVertical) {\n            legendOption.location.x = start.x;\n            legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                prevLegend.location.y + this.maxItemHeight + padding;\n        }\n        else {\n            legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            legendOption.location.y = prevLegend.location.y;\n        }\n        var availwidth = (this.legendBounds.x + this.legendBounds.width) - (legendOption.location.x +\n            textPadding - this.legend.shapeWidth / 2);\n        legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    /** @private */\n    Legend.prototype.LegendClick = function (index, event) {\n        var chart = this.chart;\n        var seriesIndex = chart.legendSettings.mode === 'Series' ? index : 0;\n        var series = chart.visibleSeries[seriesIndex];\n        var legend = this.legendCollections[index];\n        var changeDetection = 'isProtectedOnChange';\n        if (chart.legendSettings.mode === 'Series') {\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: series.points, name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            series.legendShape = legendClickArgs.legendShape;\n            if (series.fill !== null) {\n                chart.visibleSeries[index].interior = series.fill;\n            }\n            if (chart.legendSettings.toggleVisibility) {\n                if (series.category === 'TrendLine') {\n                    if (!chart.series[series.sourceIndex].trendlines[series.index].visible) {\n                        chart.series[series.sourceIndex].trendlines[series.index].visible = true;\n                    }\n                    else {\n                        chart.series[series.sourceIndex].trendlines[series.index].visible = false;\n                    }\n                }\n                else {\n                    series.chart[changeDetection] = true;\n                    this.changeSeriesVisiblity(series, series.visible);\n                }\n                legend.visible = series.category === 'TrendLine' ? chart.series[series.sourceIndex].trendlines[series.index].visible :\n                    (series.visible);\n                this.refreshLegendToggle(chart, series);\n            }\n            else if (chart.selectionModule) {\n                chart.selectionModule.legendSelection(chart, index, event);\n            }\n            else if (chart.highlightModule) {\n                chart.highlightModule.legendSelection(chart, index, event);\n            }\n            series.chart[changeDetection] = false;\n        }\n        else if (chart.legendSettings.mode === 'Point') {\n            var point = series.points[index];\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: [point], name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            if (chart.legendSettings.toggleVisibility) {\n                point.visible = !point.visible;\n                var legendOption = this.legendCollections[index];\n                legendOption.visible = point.visible;\n                this.refreshLegendToggle(chart, series);\n            }\n        }\n        else if (chart.legendSettings.mode === 'Range') {\n            var points = [];\n            var legendOption = this.legendCollections[index];\n            for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n                var point = _a[_i];\n                if (legendOption.fill === (point.interior || series.interior)) {\n                    points.push(point);\n                }\n            }\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: points, name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            if (chart.legendSettings.toggleVisibility) {\n                legendOption.visible = !legendOption.visible;\n                for (var _b = 0, points_1 = points; _b < points_1.length; _b++) {\n                    var point = points_1[_b];\n                    point.visible = !point.visible;\n                }\n                this.refreshLegendToggle(chart, series);\n            }\n        }\n    };\n    Legend.prototype.refreshLegendToggle = function (chart, series) {\n        var selectedDataIndexes = [];\n        if (chart.selectionModule) {\n            selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n        }\n        if ((chart.svgObject.childNodes.length > 0) && !chart.enableAnimation && !chart.enableCanvas) {\n            while (chart.svgObject.lastChild) {\n                chart.svgObject.removeChild(chart.svgObject.lastChild);\n            }\n            remove(chart.svgObject);\n        }\n        chart.animateSeries = false;\n        chart.redraw = chart.enableAnimation;\n        chart.rotatedDataLabelCollections = [];\n        removeElement(getElement(chart.element.id + '_Secondary_Element').querySelectorAll('.ejSVGTooltip')[0]);\n        blazorTemplatesReset(chart);\n        this.redrawSeriesElements(series, chart);\n        chart.removeSvg();\n        chart.refreshAxis();\n        series.refreshAxisLabel();\n        this.refreshSeries(chart.visibleSeries);\n        chart.markerRender.removeHighlightedMarker();\n        chart.refreshBound();\n        chart.trigger('loaded', { chart: chart });\n        if (selectedDataIndexes.length > 0) {\n            chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n            chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n        }\n        if (chart.highlightModule && chart.highlightMode !== 'None') {\n            chart.highlightModule.redrawSelection(chart, chart.highlightMode);\n        }\n        chart.redraw = false;\n    };\n    Legend.prototype.changeSeriesVisiblity = function (series, visibility) {\n        series.visible = !visibility;\n        if (this.isSecondaryAxis(series.xAxis)) {\n            series.xAxis.internalVisibility = series.xAxis.series.some(function (value) { return (value.visible); });\n        }\n        if (this.isSecondaryAxis(series.yAxis)) {\n            series.yAxis.internalVisibility = series.yAxis.series.some(function (value) { return (value.visible); });\n        }\n    };\n    Legend.prototype.isSecondaryAxis = function (axis) {\n        return (this.chart.axes.indexOf(axis) > -1);\n    };\n    Legend.prototype.redrawSeriesElements = function (series, chart) {\n        if (!chart.redraw) {\n            return null;\n        }\n        removeElement(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) +\n            '_DataLabelCollections');\n    };\n    Legend.prototype.refreshSeries = function (seriesCollection) {\n        for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n            var series = seriesCollection_1[_i];\n            series.position = undefined;\n        }\n    };\n    /**\n     * To show the tooltip for the trimmed text in legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var _this = this;\n        if (!this.chart.legendSettings.visible) {\n            return;\n        }\n        var pageX = this.chart.mouseX;\n        var pageY = this.chart.mouseY;\n        var legendRegion = [];\n        var targetId = event.target.id;\n        var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_',\n            this.legendID + '_shape_'];\n        var seriesIndex;\n        for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n            var id = legendItemsId_1[_i];\n            if (targetId.indexOf(id) > -1) {\n                seriesIndex = parseInt(targetId.split(id)[1], 10);\n                this.LegendClick(seriesIndex, event);\n                break;\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n        if (this.chart.enableCanvas && this.pagingRegions.length) {\n            this.checkWithinBounds(pageX, pageY);\n        }\n        legendRegion = this.legendRegions.filter(function (region) {\n            return (withInBounds(pageX, (pageY + (_this.isPaging ? (_this.currentPageNumber - 1) * _this.translatePage(null, 1, 2) : 0)), region.rect));\n        });\n        if (legendRegion.length && this.chart.enableCanvas) {\n            this.LegendClick(legendRegion[0].index, event);\n        }\n    };\n    /**\n     * To check click position is within legend bounds\n     */\n    Legend.prototype.checkWithinBounds = function (pageX, pageY) {\n        var cRender = this.chart.renderer;\n        var bounds = this.legendBounds;\n        var borderWidth = this.chart.legendSettings.border.width;\n        var canvasRect = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        canvasRect.x = canvasRect.x - borderWidth / 2;\n        canvasRect.y = canvasRect.y - borderWidth / 2;\n        canvasRect.width = canvasRect.width + borderWidth;\n        canvasRect.height = canvasRect.height + borderWidth;\n        if (withInBounds(pageX, pageY, this.pagingRegions[0])) {\n            // pagedown calculations are performing here\n            if (--this.currentPageNumber > 0) {\n                this.legendRegions = [];\n                cRender.clearRect(canvasRect);\n                cRender.canvasClip(new RectOption('legendClipPath', 'transparent', { width: 0, color: '' }, null, canvasRect));\n                this.renderLegend(this.chart, this.legend, bounds);\n                cRender.canvasRestore();\n            }\n            else {\n                ++this.currentPageNumber;\n            }\n            return null;\n        }\n        if (withInBounds(pageX, pageY, this.pagingRegions[1])) {\n            // pageUp calculations are performing here\n            if (++this.currentPageNumber > 0 && this.currentPageNumber <= this.totalNoOfPages) {\n                this.legendRegions = [];\n                cRender.clearRect(canvasRect);\n                cRender.canvasClip(new RectOption('legendClipPath', 'transpaent', { width: 0, color: '' }, null, canvasRect));\n                this.renderLegend(this.chart, this.legend, bounds);\n                cRender.canvasRestore();\n            }\n            else {\n                --this.currentPageNumber;\n            }\n            return null;\n        }\n    };\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Legend;\n}(BaseLegend));\nexport { Legend };\n"]},"metadata":{},"sourceType":"module"}