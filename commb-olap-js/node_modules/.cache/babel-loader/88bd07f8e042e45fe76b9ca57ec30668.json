{"ast":null,"code":"import { isNullOrUndefined, closest, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * `DialogAction` module is used to handle field list dialog related behaviour.\n */\n\n/** @hidden */\n\nvar NodeStateModified = function () {\n  /**\n   * Constructor for the dialog action.\n   * @param {PivotCommon} parent - parent.\n   * @hidden\n   */\n  function NodeStateModified(parent) {\n    this.parent = parent;\n  }\n  /* eslint-disable-next-line */\n\n  /**\n   * Updates the dataSource by drag and drop the selected field from either field list or axis table with dropped target position.\n   * @function onStateModified\n   * @param  {DragEventArgs & DragAndDropEventArgs} args -  Contains both pivot button and field list drag and drop information.\n   * @param  {string} fieldName - Defines dropped field name to update dataSource.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  NodeStateModified.prototype.onStateModified = function (args, fieldName) {\n    /* eslint-enable */\n    var droppedClass = '';\n    var nodeDropped = true;\n    var target = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n    var droppedPosition = -1;\n    this.parent.dataSourceUpdate.btnElement = args.element ? args.element.parentElement : undefined;\n\n    if (target) {\n      droppedClass = target.classList[1] === cls.ROW_AXIS_CLASS ? 'rows' : target.classList[1] === cls.COLUMN_AXIS_CLASS ? 'columns' : target.classList[1] === cls.VALUE_AXIS_CLASS ? 'values' : target.classList[1] === cls.FILTER_AXIS_CLASS ? 'filters' : '';\n    }\n\n    if (this.parent.dataType === 'olap') {\n      var actualFieldName = this.parent.engineModule.fieldList[fieldName] && this.parent.engineModule.fieldList[fieldName].isCalculatedField ? this.parent.engineModule.fieldList[fieldName].tag : fieldName;\n\n      if (args.cancel && droppedClass === '') {\n        nodeDropped = false;\n        return nodeDropped;\n      } else if (this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' && (droppedClass === 'filters' || droppedClass === 'values') || this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' && actualFieldName.toLowerCase().indexOf('[measures].') > -1 && (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns') || this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' && actualFieldName.toLowerCase().indexOf('[measures].') === -1 && this.parent.engineModule.fieldList[fieldName] && this.parent.engineModule.fieldList[fieldName].isNamedSets && (droppedClass === 'filters' || droppedClass === 'values') || this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' && actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values') {\n        var title = this.parent.localeObj.getConstant('warning');\n        var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n        this.parent.errorDialog.createErrorDialog(title, description);\n        nodeDropped = false;\n        return nodeDropped;\n      }\n    } else {\n      if (args.cancel && droppedClass === '' || this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' && (droppedClass === 'filters' || droppedClass === 'values' || droppedClass.indexOf(this.parent.dataSourceSettings.valueAxis) > -1)) {\n        nodeDropped = false;\n        return nodeDropped;\n      }\n    }\n\n    if (droppedClass !== '') {\n      if (this.parent.dataType === 'olap') {\n        var actualFieldName = this.parent.engineModule.fieldList[fieldName] && this.parent.engineModule.fieldList[fieldName].isCalculatedField ? this.parent.engineModule.fieldList[fieldName].tag : fieldName;\n\n        if (actualFieldName.toLowerCase().indexOf('[measures].') > -1 && (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns') || this.parent.engineModule.fieldList[fieldName] && this.parent.engineModule.fieldList[fieldName].isNamedSets && droppedClass === 'filters' || actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values') {\n          var title = this.parent.localeObj.getConstant('warning');\n          var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n          this.parent.errorDialog.createErrorDialog(title, description);\n          nodeDropped = false;\n          return nodeDropped;\n        }\n      }\n\n      if (this.parent.dataType === 'pivot' && this.parent.engineModule.fieldList[fieldName] && this.parent.engineModule.fieldList[fieldName].aggregateType === 'CalculatedField' && droppedClass !== 'values') {\n        var title = this.parent.localeObj.getConstant('warning');\n        var description = this.parent.localeObj.getConstant('dropAction');\n        this.parent.errorDialog.createErrorDialog(title, description);\n        nodeDropped = false;\n        return nodeDropped;\n      }\n\n      droppedPosition = this.getButtonPosition(args.target, droppedClass);\n    } else if (this.parent.engineModule.fieldList[fieldName]) {\n      this.parent.engineModule.fieldList[fieldName].isSelected = false;\n\n      if (this.parent.dataType === 'olap') {\n        this.parent.engineModule.updateFieldlistData(fieldName);\n      }\n    }\n\n    this.parent.dataSourceUpdate.updateDataSource(fieldName, droppedClass, droppedPosition);\n    return isBlazor() ? false : nodeDropped;\n  };\n\n  NodeStateModified.prototype.getButtonPosition = function (target, droppedClass) {\n    var droppedPosition = -1;\n    var targetBtn = closest(target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n\n    if (!isNullOrUndefined(targetBtn)) {\n      targetBtn = targetBtn.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n      var axisPanel = this.parent.element.querySelector('.e-' + droppedClass);\n      var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n\n      for (var i = 0, n = pivotButtons.length; i < n; i++) {\n        if (pivotButtons[i].id === targetBtn.id) {\n          droppedPosition = i;\n          break;\n        }\n      }\n    }\n\n    return droppedPosition;\n  };\n\n  return NodeStateModified;\n}();\n\nexport { NodeStateModified };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-pivotview/src/common/actions/node-state-modified.js"],"names":["isNullOrUndefined","closest","isBlazor","cls","NodeStateModified","parent","prototype","onStateModified","args","fieldName","droppedClass","nodeDropped","target","DROPPABLE_CLASS","droppedPosition","dataSourceUpdate","btnElement","element","parentElement","undefined","classList","ROW_AXIS_CLASS","COLUMN_AXIS_CLASS","VALUE_AXIS_CLASS","FILTER_AXIS_CLASS","dataType","actualFieldName","engineModule","fieldList","isCalculatedField","tag","cancel","getAttribute","toLowerCase","indexOf","isNamedSets","title","localeObj","getConstant","description","errorDialog","createErrorDialog","dataSourceSettings","valueAxis","aggregateType","getButtonPosition","isSelected","updateFieldlistData","updateDataSource","targetBtn","PIVOT_BUTTON_WRAPPER_CLASS","querySelector","PIVOT_BUTTON_CLASS","axisPanel","pivotButtons","slice","call","querySelectorAll","i","n","length","id"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,OAA5B,EAAqCC,QAArC,QAAqD,sBAArD;AACA,OAAO,KAAKC,GAAZ,MAAqB,sBAArB;AACA;AACA;AACA;;AACA;;AACA,IAAIC,iBAAiB,GAAkB,YAAY;AAC/C;AACJ;AACA;AACA;AACA;AACI,WAASA,iBAAT,CAA2BC,MAA3B,EAAmC;AAC/B,SAAKA,MAAL,GAAcA,MAAd;AACH;AACD;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACID,EAAAA,iBAAiB,CAACE,SAAlB,CAA4BC,eAA5B,GAA8C,UAAUC,IAAV,EAAgBC,SAAhB,EAA2B;AACrE;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,WAAW,GAAG,IAAlB;AACA,QAAIC,MAAM,GAAGX,OAAO,CAACO,IAAI,CAACI,MAAN,EAAc,MAAMT,GAAG,CAACU,eAAxB,CAApB;AACA,QAAIC,eAAe,GAAG,CAAC,CAAvB;AACA,SAAKT,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,GAA0CR,IAAI,CAACS,OAAL,GAAeT,IAAI,CAACS,OAAL,CAAaC,aAA5B,GAA4CC,SAAtF;;AACA,QAAIP,MAAJ,EAAY;AACRF,MAAAA,YAAY,GAAGE,MAAM,CAACQ,SAAP,CAAiB,CAAjB,MAAwBjB,GAAG,CAACkB,cAA5B,GACX,MADW,GACFT,MAAM,CAACQ,SAAP,CAAiB,CAAjB,MAAwBjB,GAAG,CAACmB,iBAA5B,GAAgD,SAAhD,GAA4DV,MAAM,CAACQ,SAAP,CAAiB,CAAjB,MAAwBjB,GAAG,CAACoB,gBAA5B,GACrE,QADqE,GAC1DX,MAAM,CAACQ,SAAP,CAAiB,CAAjB,MAAwBjB,GAAG,CAACqB,iBAA5B,GAAgD,SAAhD,GAA4D,EAF3E;AAGH;;AACD,QAAI,KAAKnB,MAAL,CAAYoB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC,UAAIC,eAAe,GAAI,KAAKrB,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,KACnB,KAAKJ,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,EAA8CoB,iBAD3B,GAEnB,KAAKxB,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,EAA8CqB,GAF3B,GAEiCrB,SAFxD;;AAGA,UAAID,IAAI,CAACuB,MAAL,IAAerB,YAAY,KAAK,EAApC,EAAwC;AACpCC,QAAAA,WAAW,GAAG,KAAd;AACA,eAAOA,WAAP;AACH,OAHD,MAIK,IAAK,KAAKN,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,IACL,KAAKX,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,CAAwCgB,YAAxC,CAAqD,SAArD,MAAoE,MAApE,KACItB,YAAY,KAAK,SAAjB,IAA8BA,YAAY,KAAK,QADnD,CADI,IAGJ,KAAKL,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,IACI,KAAKX,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,CAAwCgB,YAAxC,CAAqD,SAArD,MAAoE,OAApE,IACGN,eAAe,CAACO,WAAhB,GAA8BC,OAA9B,CAAsC,aAAtC,IAAuD,CAAC,CAD3D,KAEIxB,YAAY,KAAK,SAAjB,IAA8BA,YAAY,KAAK,MAA/C,IAAyDA,YAAY,KAAK,SAF9E,CAJA,IAOJ,KAAKL,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,IACI,KAAKX,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,CAAwCgB,YAAxC,CAAqD,SAArD,MAAoE,OAApE,IACGN,eAAe,CAACO,WAAhB,GAA8BC,OAA9B,CAAsC,aAAtC,MAAyD,CAAC,CAD7D,IAEG,KAAK7B,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,CAFH,IAGG,KAAKJ,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,EAA8C0B,WAHjD,KAIIzB,YAAY,KAAK,SAAjB,IAA8BA,YAAY,KAAK,QAJnD,CARA,IAaJ,KAAKL,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,IACI,KAAKX,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,CAAwCgB,YAAxC,CAAqD,SAArD,MAAoE,OAApE,IACGN,eAAe,CAACO,WAAhB,GAA8BC,OAA9B,CAAsC,aAAtC,MAAyD,CAAC,CAD7D,IACkExB,YAAY,KAAK,QAfvF,EAemG;AACpG,YAAI0B,KAAK,GAAG,KAAK/B,MAAL,CAAYgC,SAAZ,CAAsBC,WAAtB,CAAkC,SAAlC,CAAZ;AACA,YAAIC,WAAW,GAAG,KAAKlC,MAAL,CAAYgC,SAAZ,CAAsBC,WAAtB,CAAkC,sBAAlC,CAAlB;AACA,aAAKjC,MAAL,CAAYmC,WAAZ,CAAwBC,iBAAxB,CAA0CL,KAA1C,EAAiDG,WAAjD;AACA5B,QAAAA,WAAW,GAAG,KAAd;AACA,eAAOA,WAAP;AACH;AACJ,KA9BD,MA+BK;AACD,UAAKH,IAAI,CAACuB,MAAL,IAAerB,YAAY,KAAK,EAAjC,IACC,KAAKL,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,IAA2C,KAAKX,MAAL,CAAYU,gBAAZ,CAA6BC,UAA7B,CAAwCgB,YAAxC,CAAqD,SAArD,MAAoE,MAA/G,KACKtB,YAAY,KAAK,SAAjB,IAA8BA,YAAY,KAAK,QAAhD,IACGA,YAAY,CAACwB,OAAb,CAAqB,KAAK7B,MAAL,CAAYqC,kBAAZ,CAA+BC,SAApD,IAAiE,CAAC,CAFzE,CADL,EAGmF;AAC/EhC,QAAAA,WAAW,GAAG,KAAd;AACA,eAAOA,WAAP;AACH;AACJ;;AACD,QAAID,YAAY,KAAK,EAArB,EAAyB;AACrB,UAAI,KAAKL,MAAL,CAAYoB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC,YAAIC,eAAe,GAAI,KAAKrB,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,KACnB,KAAKJ,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,EAA8CoB,iBAD3B,GAEnB,KAAKxB,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,EAA8CqB,GAF3B,GAEiCrB,SAFxD;;AAGA,YAAKiB,eAAe,CAACO,WAAhB,GAA8BC,OAA9B,CAAsC,aAAtC,IAAuD,CAAC,CAAxD,KACAxB,YAAY,KAAK,SAAjB,IAA8BA,YAAY,KAAK,MAA/C,IAAyDA,YAAY,KAAK,SAD1E,CAAD,IAEC,KAAKL,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,KACG,KAAKJ,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,EAA8C0B,WADjD,IACgEzB,YAAY,KAAK,SAHlF,IAICgB,eAAe,CAACO,WAAhB,GAA8BC,OAA9B,CAAsC,aAAtC,MAAyD,CAAC,CAA1D,IAA+DxB,YAAY,KAAK,QAJrF,EAIgG;AAC5F,cAAI0B,KAAK,GAAG,KAAK/B,MAAL,CAAYgC,SAAZ,CAAsBC,WAAtB,CAAkC,SAAlC,CAAZ;AACA,cAAIC,WAAW,GAAG,KAAKlC,MAAL,CAAYgC,SAAZ,CAAsBC,WAAtB,CAAkC,sBAAlC,CAAlB;AACA,eAAKjC,MAAL,CAAYmC,WAAZ,CAAwBC,iBAAxB,CAA0CL,KAA1C,EAAiDG,WAAjD;AACA5B,UAAAA,WAAW,GAAG,KAAd;AACA,iBAAOA,WAAP;AACH;AACJ;;AACD,UAAI,KAAKN,MAAL,CAAYoB,QAAZ,KAAyB,OAAzB,IAAoC,KAAKpB,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,CAApC,IACA,KAAKJ,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,EAA8CmC,aAA9C,KAAgE,iBADhE,IACqFlC,YAAY,KAAK,QAD1G,EACoH;AAChH,YAAI0B,KAAK,GAAG,KAAK/B,MAAL,CAAYgC,SAAZ,CAAsBC,WAAtB,CAAkC,SAAlC,CAAZ;AACA,YAAIC,WAAW,GAAG,KAAKlC,MAAL,CAAYgC,SAAZ,CAAsBC,WAAtB,CAAkC,YAAlC,CAAlB;AACA,aAAKjC,MAAL,CAAYmC,WAAZ,CAAwBC,iBAAxB,CAA0CL,KAA1C,EAAiDG,WAAjD;AACA5B,QAAAA,WAAW,GAAG,KAAd;AACA,eAAOA,WAAP;AACH;;AACDG,MAAAA,eAAe,GAAG,KAAK+B,iBAAL,CAAuBrC,IAAI,CAACI,MAA5B,EAAoCF,YAApC,CAAlB;AACH,KA1BD,MA2BK,IAAI,KAAKL,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,CAAJ,EAAmD;AACpD,WAAKJ,MAAL,CAAYsB,YAAZ,CAAyBC,SAAzB,CAAmCnB,SAAnC,EAA8CqC,UAA9C,GAA2D,KAA3D;;AACA,UAAI,KAAKzC,MAAL,CAAYoB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC,aAAKpB,MAAL,CAAYsB,YAAZ,CAAyBoB,mBAAzB,CAA6CtC,SAA7C;AACH;AACJ;;AACD,SAAKJ,MAAL,CAAYU,gBAAZ,CAA6BiC,gBAA7B,CAA8CvC,SAA9C,EAAyDC,YAAzD,EAAuEI,eAAvE;AACA,WAAOZ,QAAQ,KAAK,KAAL,GAAaS,WAA5B;AACH,GAvFD;;AAwFAP,EAAAA,iBAAiB,CAACE,SAAlB,CAA4BuC,iBAA5B,GAAgD,UAAUjC,MAAV,EAAkBF,YAAlB,EAAgC;AAC5E,QAAII,eAAe,GAAG,CAAC,CAAvB;AACA,QAAImC,SAAS,GAAGhD,OAAO,CAACW,MAAD,EAAS,MAAMT,GAAG,CAAC+C,0BAAnB,CAAvB;;AACA,QAAI,CAAClD,iBAAiB,CAACiD,SAAD,CAAtB,EAAmC;AAC/BA,MAAAA,SAAS,GAAGA,SAAS,CAACE,aAAV,CAAwB,MAAMhD,GAAG,CAACiD,kBAAlC,CAAZ;AACA,UAAIC,SAAS,GAAG,KAAKhD,MAAL,CAAYY,OAAZ,CAAoBkC,aAApB,CAAkC,QAAQzC,YAA1C,CAAhB;AACA,UAAI4C,YAAY,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcH,SAAS,CAACI,gBAAV,CAA2B,MAAMtD,GAAG,CAACiD,kBAArC,CAAd,CAAnB;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGL,YAAY,CAACM,MAAjC,EAAyCF,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,YAAIJ,YAAY,CAACI,CAAD,CAAZ,CAAgBG,EAAhB,KAAuBZ,SAAS,CAACY,EAArC,EAAyC;AACrC/C,UAAAA,eAAe,GAAG4C,CAAlB;AACA;AACH;AACJ;AACJ;;AACD,WAAO5C,eAAP;AACH,GAfD;;AAgBA,SAAOV,iBAAP;AACH,CA3HsC,EAAvC;;AA4HA,SAASA,iBAAT","sourcesContent":["import { isNullOrUndefined, closest, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * `DialogAction` module is used to handle field list dialog related behaviour.\n */\n/** @hidden */\nvar NodeStateModified = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @param {PivotCommon} parent - parent.\n     * @hidden\n     */\n    function NodeStateModified(parent) {\n        this.parent = parent;\n    }\n    /* eslint-disable-next-line */\n    /**\n     * Updates the dataSource by drag and drop the selected field from either field list or axis table with dropped target position.\n     * @function onStateModified\n     * @param  {DragEventArgs & DragAndDropEventArgs} args -  Contains both pivot button and field list drag and drop information.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @returns {void}\n     * @hidden\n     */\n    NodeStateModified.prototype.onStateModified = function (args, fieldName) {\n        /* eslint-enable */\n        var droppedClass = '';\n        var nodeDropped = true;\n        var target = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n        var droppedPosition = -1;\n        this.parent.dataSourceUpdate.btnElement = args.element ? args.element.parentElement : undefined;\n        if (target) {\n            droppedClass = target.classList[1] === cls.ROW_AXIS_CLASS ?\n                'rows' : target.classList[1] === cls.COLUMN_AXIS_CLASS ? 'columns' : target.classList[1] === cls.VALUE_AXIS_CLASS ?\n                'values' : target.classList[1] === cls.FILTER_AXIS_CLASS ? 'filters' : '';\n        }\n        if (this.parent.dataType === 'olap') {\n            var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n            if (args.cancel && droppedClass === '') {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            else if ((this.parent.dataSourceUpdate.btnElement &&\n                (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                        (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 &&\n                        this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets &&\n                        (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values'))) {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        else {\n            if ((args.cancel && droppedClass === '') ||\n                (this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    ((droppedClass === 'filters' || droppedClass === 'values') ||\n                        droppedClass.indexOf(this.parent.dataSourceSettings.valueAxis) > -1))) {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        if (droppedClass !== '') {\n            if (this.parent.dataType === 'olap') {\n                var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                    this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                    this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n                if ((actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                    (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns')) ||\n                    (this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets && droppedClass === 'filters') ||\n                    (actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values')) {\n                    var title = this.parent.localeObj.getConstant('warning');\n                    var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                    this.parent.errorDialog.createErrorDialog(title, description);\n                    nodeDropped = false;\n                    return nodeDropped;\n                }\n            }\n            if (this.parent.dataType === 'pivot' && this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].aggregateType === 'CalculatedField' && droppedClass !== 'values') {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('dropAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            droppedPosition = this.getButtonPosition(args.target, droppedClass);\n        }\n        else if (this.parent.engineModule.fieldList[fieldName]) {\n            this.parent.engineModule.fieldList[fieldName].isSelected = false;\n            if (this.parent.dataType === 'olap') {\n                this.parent.engineModule.updateFieldlistData(fieldName);\n            }\n        }\n        this.parent.dataSourceUpdate.updateDataSource(fieldName, droppedClass, droppedPosition);\n        return isBlazor() ? false : nodeDropped;\n    };\n    NodeStateModified.prototype.getButtonPosition = function (target, droppedClass) {\n        var droppedPosition = -1;\n        var targetBtn = closest(target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n        if (!isNullOrUndefined(targetBtn)) {\n            targetBtn = targetBtn.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n            var axisPanel = this.parent.element.querySelector('.e-' + droppedClass);\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === targetBtn.id) {\n                    droppedPosition = i;\n                    break;\n                }\n            }\n        }\n        return droppedPosition;\n    };\n    return NodeStateModified;\n}());\nexport { NodeStateModified };\n"]},"metadata":{},"sourceType":"module"}