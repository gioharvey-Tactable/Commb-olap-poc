{"ast":null,"code":"import { contentReady } from '../../common/base/constant';\nimport * as events from '../../common/base/constant';\nimport { DrillThroughDialog } from '../../common/popups/drillthrough-dialog';\nimport { EventHandler, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\n/**\n * `DrillThrough` module.\n */\n\nvar DrillThrough = function () {\n  /**\n   * Constructor.\n   * @param {PivotView} parent - Instance of pivot table.\n   * @hidden\n   */\n  function DrillThrough(parent) {\n    this.parent = parent;\n    this.drillThroughDialog = new DrillThroughDialog(this.parent);\n    this.addInternalEvents();\n  }\n  /**\n   * It returns the Module name.\n   * @returns {string} - string.\n   * @hidden\n   */\n\n\n  DrillThrough.prototype.getModuleName = function () {\n    return 'drillthrough';\n  };\n\n  DrillThrough.prototype.addInternalEvents = function () {\n    this.parent.on(contentReady, this.wireEvents, this);\n  };\n\n  DrillThrough.prototype.wireEvents = function () {\n    this.unWireEvents();\n    EventHandler.add(this.parent.element, 'dblclick', this.mouseClickHandler, this);\n  };\n\n  DrillThrough.prototype.unWireEvents = function () {\n    EventHandler.remove(this.parent.element, 'dblclick', this.mouseClickHandler);\n  };\n\n  DrillThrough.prototype.mouseClickHandler = function (e) {\n    var target = e.target;\n    var ele = null;\n\n    if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') || target.classList.contains('e-headercelldiv')) {\n      ele = target.parentElement;\n    } else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n      ele = target;\n    } else if (target.classList.contains('e-headertext')) {\n      ele = target.parentElement.parentElement;\n    }\n\n    if (ele) {\n      if (this.parent.allowDrillThrough && ele.classList.contains('e-valuescontent') || this.parent.editSettings.allowEditing) {\n        var colIndex = Number(ele.getAttribute('aria-colindex'));\n        var rowIndex = Number(ele.getAttribute('index'));\n        this.executeDrillThrough(this.parent.pivotValues[rowIndex][colIndex], rowIndex, colIndex, ele);\n      }\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  DrillThrough.prototype.executeDrillThrough = function (pivotValue, rowIndex, colIndex, element) {\n    this.parent.drillThroughElement = element;\n    this.parent.drillThroughValue = pivotValue;\n    var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n    var valueCaption = '';\n    var aggType = '';\n    var rawData = [];\n\n    if (pivotValue.rowHeaders !== undefined && pivotValue.columnHeaders !== undefined && !isNullOrUndefined(pivotValue.value)) {\n      if (this.parent.dataType === 'olap') {\n        var tupleInfo = void 0;\n\n        if (this.parent.dataSourceSettings.valueAxis === 'row') {\n          tupleInfo = engine.tupRowInfo[pivotValue.rowOrdinal];\n        } else {\n          tupleInfo = engine.tupColumnInfo[pivotValue.colOrdinal];\n        }\n\n        var measureName = tupleInfo ? engine.getUniqueName(tupleInfo.measureName) : pivotValue.actualText;\n\n        if (engine.fieldList[measureName] && engine.fieldList[measureName].isCalculatedField) {\n          this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('drillError'));\n          return;\n        }\n\n        valueCaption = engine.fieldList[measureName || pivotValue.actualText].caption;\n        aggType = engine.fieldList[measureName || pivotValue.actualText].aggregateType;\n        this.parent.olapEngineModule.getDrillThroughData(pivotValue, this.parent.maxRowsInDrillThrough);\n\n        try {\n          rawData = JSON.parse(engine.gridJSON);\n        } catch (exception) {\n          this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), engine.gridJSON);\n          return;\n        }\n      } else {\n        valueCaption = engine.fieldList[pivotValue.actualText.toString()] ? engine.fieldList[pivotValue.actualText.toString()].caption : pivotValue.actualText.toString();\n        aggType = engine.fieldList[pivotValue.actualText] ? engine.fieldList[pivotValue.actualText].aggregateType : '';\n        var currModule_1 = this;\n        /* eslint-disable-line */\n\n        if (isBlazor() && this.parent.enableVirtualization) {\n          /* eslint-disable @typescript-eslint/no-explicit-any */\n          currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'fetchRawData', {\n            'RowIndex': rowIndex,\n            'ColumnIndex': colIndex\n          }).then(function (data) {\n            rawData = JSON.parse(data.rawData);\n            var parsedObj = JSON.parse(data.indexObject);\n            var indexObject = {};\n\n            for (var len = 0; len < parsedObj.length; len++) {\n              indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n            }\n\n            pivotValue.indexObject = indexObject;\n            currModule_1.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n            /* eslint-enable @typescript-eslint/no-explicit-any */\n          });\n        } else if (this.parent.dataSourceSettings.mode === 'Server') {\n          this.parent.getEngine('fetchRawData', null, null, null, null, null, null, {\n            rowIndex: rowIndex,\n            columnIndex: colIndex\n          });\n        } else {\n          if (this.parent.enableVirtualization && this.parent.allowDataCompression) {\n            var indexArray = Object.keys(pivotValue.indexObject);\n            this.drillThroughDialog.indexString = [];\n\n            for (var _i = 0, indexArray_1 = indexArray; _i < indexArray_1.length; _i++) {\n              var cIndex = indexArray_1[_i];\n\n              for (var _a = 0, _b = this.parent.engineModule.groupRawIndex[Number(cIndex)]; _a < _b.length; _a++) {\n                var aIndex = _b[_a];\n                rawData.push(this.parent.engineModule.actualData[aIndex]);\n                this.drillThroughDialog.indexString.push(aIndex.toString());\n              }\n            }\n          } else {\n            var indexArray = Object.keys(pivotValue.indexObject);\n\n            for (var _c = 0, indexArray_2 = indexArray; _c < indexArray_2.length; _c++) {\n              var index = indexArray_2[_c];\n              rawData.push(this.parent.engineModule.data[Number(index)]);\n            }\n          }\n        }\n      }\n\n      if (!(isBlazor() && this.parent.enableVirtualization) && this.parent.dataSourceSettings.mode !== 'Server') {\n        this.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n      }\n    }\n  };\n\n  DrillThrough.prototype.getCalcualtedFieldValue = function (indexArray, rawData) {\n    for (var k = 0; k < indexArray.length; k++) {\n      var colIndex = {};\n      colIndex[indexArray[k]] = indexArray[k];\n\n      for (var i = 0; i < this.parent.dataSourceSettings.calculatedFieldSettings.length; i++) {\n        var indexValue = void 0;\n\n        for (var j = this.parent.engineModule.fields.length - 1; j >= 0; j--) {\n          if (this.parent.engineModule.fields[j] === this.parent.dataSourceSettings.calculatedFieldSettings[i].name) {\n            indexValue = j;\n            break;\n          }\n        }\n\n        if (!isNullOrUndefined(rawData[k])) {\n          var calculatedFeildValue = this.parent.engineModule.getAggregateValue([Number(indexArray[k])], colIndex, indexValue, 'calculatedfield');\n          rawData[k][this.parent.dataSourceSettings.calculatedFieldSettings[i].name] = isNaN(calculatedFeildValue) && isNullOrUndefined(calculatedFeildValue) ? '#DIV/0!' : calculatedFeildValue;\n        }\n      }\n    }\n\n    return rawData;\n  };\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n\n\n  DrillThrough.prototype.frameData = function (eventArgs) {\n    var keyPos = 0;\n    var dataPos = 0;\n    var data = [];\n\n    while (dataPos < eventArgs.rawData.length) {\n      var framedHeader = {};\n\n      while (keyPos < eventArgs.gridColumns.length) {\n        framedHeader[eventArgs.gridColumns[keyPos].field] = this.parent.dataSourceSettings.mode === 'Server' ? eventArgs.rawData[dataPos][this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) !== -1 ? this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) : 0] :\n        /* eslint-disable-line */\n        eventArgs.rawData[dataPos][this.parent.engineModule.fieldKeys[eventArgs.gridColumns[keyPos].field]];\n        keyPos++;\n      }\n\n      data.push(framedHeader);\n      dataPos++;\n      keyPos = 0;\n    }\n\n    eventArgs.rawData = data;\n    return eventArgs;\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  DrillThrough.prototype.triggerDialog = function (valueCaption, aggType, rawData, pivotValue, element) {\n    var valuetText = aggType === 'CalculatedField' ? valueCaption.toString() : aggType !== '' ? this.parent.localeObj.getConstant(aggType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + valueCaption : valueCaption;\n    var eventArgs = {\n      currentTarget: element,\n      currentCell: pivotValue,\n      rawData: rawData,\n      rowHeaders: pivotValue.rowHeaders === '' ? '' : pivotValue.rowHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n      columnHeaders: pivotValue.columnHeaders === '' ? '' : pivotValue.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n      value: valuetText + '(' + pivotValue.formattedText + ')',\n      gridColumns: this.drillThroughDialog.frameGridColumns(rawData),\n      cancel: false\n    };\n\n    if (this.parent.dataSourceSettings.type === 'CSV') {\n      eventArgs = this.frameData(eventArgs);\n    }\n\n    var drillThrough = this;\n    /* eslint-disable-line */\n\n    var gridColumns = eventArgs.gridColumns;\n    this.parent.trigger(events.drillThrough, eventArgs, function (observedArgs) {\n      if (isBlazor()) {\n        for (var i = 0; i < observedArgs.gridColumns.length; i++) {\n          if (gridColumns[i].field === observedArgs.gridColumns[i].field) {\n            gridColumns[i].field = observedArgs.gridColumns[i].field;\n            gridColumns[i].editType = observedArgs.gridColumns[i].editType;\n            gridColumns[i].headerText = observedArgs.gridColumns[i].headerText;\n            gridColumns[i].type = observedArgs.gridColumns[i].type;\n            gridColumns[i].validationRules = observedArgs.gridColumns[i].validationRules;\n            gridColumns[i].visible = observedArgs.gridColumns[i].visible;\n            gridColumns[i].width = observedArgs.gridColumns[i].width;\n          }\n        }\n\n        observedArgs.gridColumns = gridColumns;\n      }\n\n      if (!eventArgs.cancel) {\n        drillThrough.drillThroughDialog.showDrillThroughDialog(observedArgs);\n      }\n    });\n  };\n\n  return DrillThrough;\n}();\n\nexport { DrillThrough };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-pivotview/src/pivotview/actions/drill-through.js"],"names":["contentReady","events","DrillThroughDialog","EventHandler","isNullOrUndefined","isBlazor","DrillThrough","parent","drillThroughDialog","addInternalEvents","prototype","getModuleName","on","wireEvents","unWireEvents","add","element","mouseClickHandler","remove","e","target","ele","classList","contains","parentElement","allowDrillThrough","editSettings","allowEditing","colIndex","Number","getAttribute","rowIndex","executeDrillThrough","pivotValues","pivotValue","drillThroughElement","drillThroughValue","engine","dataType","olapEngineModule","engineModule","valueCaption","aggType","rawData","rowHeaders","undefined","columnHeaders","value","tupleInfo","dataSourceSettings","valueAxis","tupRowInfo","rowOrdinal","tupColumnInfo","colOrdinal","measureName","getUniqueName","actualText","fieldList","isCalculatedField","pivotCommon","errorDialog","createErrorDialog","localeObj","getConstant","caption","aggregateType","getDrillThroughData","maxRowsInDrillThrough","JSON","parse","gridJSON","exception","toString","currModule_1","enableVirtualization","interopAdaptor","invokeMethodAsync","then","data","parsedObj","indexObject","len","length","Key","Value","triggerDialog","mode","getEngine","columnIndex","allowDataCompression","indexArray","Object","keys","indexString","_i","indexArray_1","cIndex","_a","_b","groupRawIndex","aIndex","push","actualData","_c","indexArray_2","index","getCalcualtedFieldValue","k","i","calculatedFieldSettings","indexValue","j","fields","name","calculatedFeildValue","getAggregateValue","isNaN","frameData","eventArgs","keyPos","dataPos","framedHeader","gridColumns","field","indexOf","fieldKeys","valuetText","currentTarget","currentCell","split","valueSortSettings","headerDelimiter","join","formattedText","frameGridColumns","cancel","type","drillThrough","trigger","observedArgs","editType","headerText","validationRules","visible","width","showDrillThroughDialog"],"mappings":"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","sourcesContent":["import { contentReady } from '../../common/base/constant';\nimport * as events from '../../common/base/constant';\nimport { DrillThroughDialog } from '../../common/popups/drillthrough-dialog';\nimport { EventHandler, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\n/**\n * `DrillThrough` module.\n */\nvar DrillThrough = /** @class */ (function () {\n    /**\n     * Constructor.\n     * @param {PivotView} parent - Instance of pivot table.\n     * @hidden\n     */\n    function DrillThrough(parent) {\n        this.parent = parent;\n        this.drillThroughDialog = new DrillThroughDialog(this.parent);\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns {string} - string.\n     * @hidden\n     */\n    DrillThrough.prototype.getModuleName = function () {\n        return 'drillthrough';\n    };\n    DrillThrough.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    DrillThrough.prototype.wireEvents = function () {\n        this.unWireEvents();\n        EventHandler.add(this.parent.element, 'dblclick', this.mouseClickHandler, this);\n    };\n    DrillThrough.prototype.unWireEvents = function () {\n        EventHandler.remove(this.parent.element, 'dblclick', this.mouseClickHandler);\n    };\n    DrillThrough.prototype.mouseClickHandler = function (e) {\n        var target = e.target;\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        if (ele) {\n            if (this.parent.allowDrillThrough && ele.classList.contains('e-valuescontent') || this.parent.editSettings.allowEditing) {\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                this.executeDrillThrough(this.parent.pivotValues[rowIndex][colIndex], rowIndex, colIndex, ele);\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    DrillThrough.prototype.executeDrillThrough = function (pivotValue, rowIndex, colIndex, element) {\n        this.parent.drillThroughElement = element;\n        this.parent.drillThroughValue = pivotValue;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var valueCaption = '';\n        var aggType = '';\n        var rawData = [];\n        if (pivotValue.rowHeaders !== undefined && pivotValue.columnHeaders !== undefined && !isNullOrUndefined(pivotValue.value)) {\n            if (this.parent.dataType === 'olap') {\n                var tupleInfo = void 0;\n                if (this.parent.dataSourceSettings.valueAxis === 'row') {\n                    tupleInfo = engine.tupRowInfo[pivotValue.rowOrdinal];\n                }\n                else {\n                    tupleInfo = engine.tupColumnInfo[pivotValue.colOrdinal];\n                }\n                var measureName = tupleInfo ?\n                    engine.getUniqueName(tupleInfo.measureName) : pivotValue.actualText;\n                if (engine.fieldList[measureName] && engine.fieldList[measureName].isCalculatedField) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('drillError'));\n                    return;\n                }\n                valueCaption = engine.fieldList[measureName || pivotValue.actualText].caption;\n                aggType = engine.fieldList[measureName || pivotValue.actualText].aggregateType;\n                this.parent.olapEngineModule.getDrillThroughData(pivotValue, this.parent.maxRowsInDrillThrough);\n                try {\n                    rawData = JSON.parse(engine.gridJSON);\n                }\n                catch (exception) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), engine.gridJSON);\n                    return;\n                }\n            }\n            else {\n                valueCaption = engine.fieldList[pivotValue.actualText.toString()] ?\n                    engine.fieldList[pivotValue.actualText.toString()].caption : pivotValue.actualText.toString();\n                aggType = engine.fieldList[pivotValue.actualText] ? engine.fieldList[pivotValue.actualText].aggregateType : '';\n                var currModule_1 = this; /* eslint-disable-line */\n                if (isBlazor() && this.parent.enableVirtualization) {\n                    /* eslint-disable @typescript-eslint/no-explicit-any */\n                    currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'fetchRawData', { 'RowIndex': rowIndex, 'ColumnIndex': colIndex }).then(function (data) {\n                        rawData = JSON.parse(data.rawData);\n                        var parsedObj = JSON.parse(data.indexObject);\n                        var indexObject = {};\n                        for (var len = 0; len < parsedObj.length; len++) {\n                            indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                        }\n                        pivotValue.indexObject = indexObject;\n                        currModule_1.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n                        /* eslint-enable @typescript-eslint/no-explicit-any */\n                    });\n                }\n                else if (this.parent.dataSourceSettings.mode === 'Server') {\n                    this.parent.getEngine('fetchRawData', null, null, null, null, null, null, { rowIndex: rowIndex, columnIndex: colIndex });\n                }\n                else {\n                    if (this.parent.enableVirtualization && this.parent.allowDataCompression) {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        this.drillThroughDialog.indexString = [];\n                        for (var _i = 0, indexArray_1 = indexArray; _i < indexArray_1.length; _i++) {\n                            var cIndex = indexArray_1[_i];\n                            for (var _a = 0, _b = this.parent.engineModule.groupRawIndex[Number(cIndex)]; _a < _b.length; _a++) {\n                                var aIndex = _b[_a];\n                                rawData.push(this.parent.engineModule.actualData[aIndex]);\n                                this.drillThroughDialog.indexString.push(aIndex.toString());\n                            }\n                        }\n                    }\n                    else {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        for (var _c = 0, indexArray_2 = indexArray; _c < indexArray_2.length; _c++) {\n                            var index = indexArray_2[_c];\n                            rawData.push(this.parent.engineModule.data[Number(index)]);\n                        }\n                    }\n                }\n            }\n            if (!(isBlazor() && this.parent.enableVirtualization) && this.parent.dataSourceSettings.mode !== 'Server') {\n                this.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n            }\n        }\n    };\n    DrillThrough.prototype.getCalcualtedFieldValue = function (indexArray, rawData) {\n        for (var k = 0; k < indexArray.length; k++) {\n            var colIndex = {};\n            colIndex[indexArray[k]] = indexArray[k];\n            for (var i = 0; i < this.parent.dataSourceSettings.calculatedFieldSettings.length; i++) {\n                var indexValue = void 0;\n                for (var j = this.parent.engineModule.fields.length - 1; j >= 0; j--) {\n                    if (this.parent.engineModule.fields[j] === this.parent.dataSourceSettings.calculatedFieldSettings[i].name) {\n                        indexValue = j;\n                        break;\n                    }\n                }\n                if (!isNullOrUndefined(rawData[k])) {\n                    var calculatedFeildValue = this.parent.engineModule.getAggregateValue([Number(indexArray[k])], colIndex, indexValue, 'calculatedfield');\n                    rawData[k][this.parent.dataSourceSettings.calculatedFieldSettings[i].name] = (isNaN(calculatedFeildValue) && isNullOrUndefined(calculatedFeildValue)) ? '#DIV/0!' : calculatedFeildValue;\n                }\n            }\n        }\n        return rawData;\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    DrillThrough.prototype.frameData = function (eventArgs) {\n        var keyPos = 0;\n        var dataPos = 0;\n        var data = [];\n        while (dataPos < eventArgs.rawData.length) {\n            var framedHeader = {};\n            while (keyPos < eventArgs.gridColumns.length) {\n                framedHeader[eventArgs.gridColumns[keyPos].field] = this.parent.dataSourceSettings.mode === 'Server' ?\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) !== -1 ? this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) : 0] : /* eslint-disable-line */\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fieldKeys[eventArgs.gridColumns[keyPos].field]];\n                keyPos++;\n            }\n            data.push(framedHeader);\n            dataPos++;\n            keyPos = 0;\n        }\n        eventArgs.rawData = data;\n        return eventArgs;\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    DrillThrough.prototype.triggerDialog = function (valueCaption, aggType, rawData, pivotValue, element) {\n        var valuetText = aggType === 'CalculatedField' ? valueCaption.toString() : aggType !== '' ?\n            (this.parent.localeObj.getConstant(aggType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + valueCaption) :\n            valueCaption;\n        var eventArgs = {\n            currentTarget: element,\n            currentCell: pivotValue,\n            rawData: rawData,\n            rowHeaders: pivotValue.rowHeaders === '' ? '' : pivotValue.rowHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n            columnHeaders: pivotValue.columnHeaders === '' ? '' : pivotValue.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n            value: valuetText + '(' + pivotValue.formattedText + ')',\n            gridColumns: this.drillThroughDialog.frameGridColumns(rawData),\n            cancel: false\n        };\n        if (this.parent.dataSourceSettings.type === 'CSV') {\n            eventArgs = this.frameData(eventArgs);\n        }\n        var drillThrough = this; /* eslint-disable-line */\n        var gridColumns = eventArgs.gridColumns;\n        this.parent.trigger(events.drillThrough, eventArgs, function (observedArgs) {\n            if (isBlazor()) {\n                for (var i = 0; i < observedArgs.gridColumns.length; i++) {\n                    if (gridColumns[i].field === observedArgs.gridColumns[i].field) {\n                        gridColumns[i].field = observedArgs.gridColumns[i].field;\n                        gridColumns[i].editType = observedArgs.gridColumns[i].editType;\n                        gridColumns[i].headerText = observedArgs.gridColumns[i].headerText;\n                        gridColumns[i].type = observedArgs.gridColumns[i].type;\n                        gridColumns[i].validationRules = observedArgs.gridColumns[i].validationRules;\n                        gridColumns[i].visible = observedArgs.gridColumns[i].visible;\n                        gridColumns[i].width = observedArgs.gridColumns[i].width;\n                    }\n                }\n                observedArgs.gridColumns = gridColumns;\n            }\n            if (!eventArgs.cancel) {\n                drillThrough.drillThroughDialog.showDrillThroughDialog(observedArgs);\n            }\n        });\n    };\n    return DrillThrough;\n}());\nexport { DrillThrough };\n"]},"metadata":{},"sourceType":"module"}