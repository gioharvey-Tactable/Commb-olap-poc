{"ast":null,"code":"import { CommonKeyboardInteraction } from '../actions/keyboard';\nimport { EventBase } from '../actions/event-base';\nimport { NodeStateModified } from '../actions/node-state-modified';\nimport { DataSourceUpdate } from '../actions/dataSource-update';\nimport { ErrorDialog } from '../popups/error-dialog';\nimport { FilterDialog } from '../popups/filter-dialog';\n/**\n * PivotCommon is used to manipulate the relational or Multi-Dimensional public methods by using their dataSource\n * @hidden\n */\n\n/** @hidden */\n\nvar PivotCommon = function () {\n  /**\n   * Constructor for Pivot Common class.\n   * @param  {CommonArgs} control - control.\n   * @hidden\n   */\n  function PivotCommon(control) {\n    /** @hidden */\n    this.currentTreeItems = [];\n    /* eslint-disable-line */\n\n    /** @hidden */\n\n    this.savedTreeFilterPos = {};\n    /** @hidden */\n\n    this.currentTreeItemsPos = {};\n    /** @hidden */\n\n    this.searchTreeItems = [];\n    /* eslint-disable-line */\n\n    /** @hidden */\n\n    this.isDataOverflow = false;\n    /** @hidden */\n\n    this.isDateField = false;\n    this.element = control.element;\n    this.moduleName = control.moduleName;\n    this.dataSourceSettings = control.dataSourceSettings;\n    this.engineModule = control.pivotEngine;\n    this.enableRtl = control.enableRtl;\n    this.isAdaptive = control.isAdaptive;\n    this.renderMode = control.renderMode;\n    this.parentID = control.id;\n    this.localeObj = control.localeObj;\n    this.dataType = control.dataType;\n    this.nodeStateModified = new NodeStateModified(this);\n    this.dataSourceUpdate = new DataSourceUpdate(this);\n    this.eventBase = new EventBase(this);\n    this.filterDialog = new FilterDialog(this);\n    this.errorDialog = new ErrorDialog(this);\n    this.keyboardModule = new CommonKeyboardInteraction(this);\n    return this;\n  }\n  /**\n   * To destroy the groupingbar.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PivotCommon.prototype.destroy = function () {\n    if (this.keyboardModule) {\n      this.keyboardModule.destroy();\n      this.keyboardModule = null;\n    }\n  };\n\n  return PivotCommon;\n}();\n\nexport { PivotCommon };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-pivotview/src/common/base/pivot-common.js"],"names":["CommonKeyboardInteraction","EventBase","NodeStateModified","DataSourceUpdate","ErrorDialog","FilterDialog","PivotCommon","control","currentTreeItems","savedTreeFilterPos","currentTreeItemsPos","searchTreeItems","isDataOverflow","isDateField","element","moduleName","dataSourceSettings","engineModule","pivotEngine","enableRtl","isAdaptive","renderMode","parentID","id","localeObj","dataType","nodeStateModified","dataSourceUpdate","eventBase","filterDialog","errorDialog","keyboardModule","prototype","destroy"],"mappings":"AAAA,SAASA,yBAAT,QAA0C,qBAA1C;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA;AACA;AACA;AACA;;AACA;;AACA,IAAIC,WAAW,GAAkB,YAAY;AACzC;AACJ;AACA;AACA;AACA;AACI,WAASA,WAAT,CAAqBC,OAArB,EAA8B;AAC1B;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AAA4B;;AAC5B;;AACA,SAAKC,kBAAL,GAA0B,EAA1B;AACA;;AACA,SAAKC,mBAAL,GAA2B,EAA3B;AACA;;AACA,SAAKC,eAAL,GAAuB,EAAvB;AAA2B;;AAC3B;;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACA;;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,OAAL,GAAeP,OAAO,CAACO,OAAvB;AACA,SAAKC,UAAL,GAAkBR,OAAO,CAACQ,UAA1B;AACA,SAAKC,kBAAL,GAA0BT,OAAO,CAACS,kBAAlC;AACA,SAAKC,YAAL,GAAoBV,OAAO,CAACW,WAA5B;AACA,SAAKC,SAAL,GAAiBZ,OAAO,CAACY,SAAzB;AACA,SAAKC,UAAL,GAAkBb,OAAO,CAACa,UAA1B;AACA,SAAKC,UAAL,GAAkBd,OAAO,CAACc,UAA1B;AACA,SAAKC,QAAL,GAAgBf,OAAO,CAACgB,EAAxB;AACA,SAAKC,SAAL,GAAiBjB,OAAO,CAACiB,SAAzB;AACA,SAAKC,QAAL,GAAgBlB,OAAO,CAACkB,QAAxB;AACA,SAAKC,iBAAL,GAAyB,IAAIxB,iBAAJ,CAAsB,IAAtB,CAAzB;AACA,SAAKyB,gBAAL,GAAwB,IAAIxB,gBAAJ,CAAqB,IAArB,CAAxB;AACA,SAAKyB,SAAL,GAAiB,IAAI3B,SAAJ,CAAc,IAAd,CAAjB;AACA,SAAK4B,YAAL,GAAoB,IAAIxB,YAAJ,CAAiB,IAAjB,CAApB;AACA,SAAKyB,WAAL,GAAmB,IAAI1B,WAAJ,CAAgB,IAAhB,CAAnB;AACA,SAAK2B,cAAL,GAAsB,IAAI/B,yBAAJ,CAA8B,IAA9B,CAAtB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIM,EAAAA,WAAW,CAAC0B,SAAZ,CAAsBC,OAAtB,GAAgC,YAAY;AACxC,QAAI,KAAKF,cAAT,EAAyB;AACrB,WAAKA,cAAL,CAAoBE,OAApB;AACA,WAAKF,cAAL,GAAsB,IAAtB;AACH;AACJ,GALD;;AAMA,SAAOzB,WAAP;AACH,CAjDgC,EAAjC;;AAkDA,SAASA,WAAT","sourcesContent":["import { CommonKeyboardInteraction } from '../actions/keyboard';\nimport { EventBase } from '../actions/event-base';\nimport { NodeStateModified } from '../actions/node-state-modified';\nimport { DataSourceUpdate } from '../actions/dataSource-update';\nimport { ErrorDialog } from '../popups/error-dialog';\nimport { FilterDialog } from '../popups/filter-dialog';\n/**\n * PivotCommon is used to manipulate the relational or Multi-Dimensional public methods by using their dataSource\n * @hidden\n */\n/** @hidden */\nvar PivotCommon = /** @class */ (function () {\n    /**\n     * Constructor for Pivot Common class.\n     * @param  {CommonArgs} control - control.\n     * @hidden\n     */\n    function PivotCommon(control) {\n        /** @hidden */\n        this.currentTreeItems = []; /* eslint-disable-line */\n        /** @hidden */\n        this.savedTreeFilterPos = {};\n        /** @hidden */\n        this.currentTreeItemsPos = {};\n        /** @hidden */\n        this.searchTreeItems = []; /* eslint-disable-line */\n        /** @hidden */\n        this.isDataOverflow = false;\n        /** @hidden */\n        this.isDateField = false;\n        this.element = control.element;\n        this.moduleName = control.moduleName;\n        this.dataSourceSettings = control.dataSourceSettings;\n        this.engineModule = control.pivotEngine;\n        this.enableRtl = control.enableRtl;\n        this.isAdaptive = control.isAdaptive;\n        this.renderMode = control.renderMode;\n        this.parentID = control.id;\n        this.localeObj = control.localeObj;\n        this.dataType = control.dataType;\n        this.nodeStateModified = new NodeStateModified(this);\n        this.dataSourceUpdate = new DataSourceUpdate(this);\n        this.eventBase = new EventBase(this);\n        this.filterDialog = new FilterDialog(this);\n        this.errorDialog = new ErrorDialog(this);\n        this.keyboardModule = new CommonKeyboardInteraction(this);\n        return this;\n    }\n    /**\n     * To destroy the groupingbar.\n     * @returns {void}\n     * @hidden\n     */\n    PivotCommon.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n            this.keyboardModule = null;\n        }\n    };\n    return PivotCommon;\n}());\nexport { PivotCommon };\n"]},"metadata":{},"sourceType":"module"}