{"ast":null,"code":"import { PdfGrid, PdfPen, PointF, PdfDocument, PdfStandardFont, PdfFontFamily, PdfSolidBrush, PdfColor, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfFontStyle, PdfPageTemplateElement, RectangleF, PdfBorders } from '@syncfusion/ej2-pdf-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `PDFExport` module is used to handle the PDF export action.\n */\n\nvar PDFExport = function () {\n  /**\n   * Constructor for the PivotGrid PDF Export module.\n   * @param {PivotView} parent - Instance of pivot table.\n   * @hidden\n   */\n  function PDFExport(parent) {\n    this.parent = parent;\n  }\n  /**\n   * For internal use only - Get the module name.\n   * @returns {string} - string.\n   * @private\n   */\n\n\n  PDFExport.prototype.getModuleName = function () {\n    return 'pdfExport';\n  };\n\n  PDFExport.prototype.addPage = function (eventParams) {\n    var page = eventParams.document.pages.add();\n    var pdfExportProperties = eventParams.args.pdfExportProperties;\n    var header = !isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.header) && !isNullOrUndefined(pdfExportProperties.header.contents) && !isNullOrUndefined(pdfExportProperties.header.contents[0].value) ? pdfExportProperties.header.contents[0].value : eventParams.args.header;\n    var footer = !isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.footer) && !isNullOrUndefined(pdfExportProperties.footer.contents) && !isNullOrUndefined(pdfExportProperties.footer.contents[0].value) ? pdfExportProperties.footer.contents[0].value : eventParams.args.footer;\n    var font = new PdfStandardFont(PdfFontFamily.TimesRoman, 15, PdfFontStyle.Regular);\n    var brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n    var pen = new PdfPen(new PdfColor(0, 0, 0), .5);\n    /** Header and Footer to be set */\n\n    var headerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n    headerTemplate.graphics.drawString(header, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n    eventParams.document.template.top = headerTemplate;\n    var footerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n    footerTemplate.graphics.drawString(footer, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n    eventParams.document.template.bottom = footerTemplate;\n    return page;\n  };\n\n  PDFExport.prototype.hexDecToRgb = function (hexDec) {\n    if (hexDec === null || hexDec === '' || hexDec.length !== 7) {\n      throw new Error('please set valid hex value for color..');\n    }\n\n    hexDec = hexDec.substring(1);\n    var bigint = parseInt(hexDec, 16);\n    var r = bigint >> 16 & 255;\n    var g = bigint >> 8 & 255;\n    var b = bigint & 255;\n    return {\n      r: r,\n      g: g,\n      b: b\n    };\n  };\n\n  PDFExport.prototype.getFontStyle = function (theme) {\n    var fontType = PdfFontStyle.Regular;\n\n    if (!isNullOrUndefined(theme) && theme.bold) {\n      fontType |= PdfFontStyle.Bold;\n    }\n\n    if (!isNullOrUndefined(theme) && theme.italic) {\n      fontType |= PdfFontStyle.Italic;\n    }\n\n    if (!isNullOrUndefined(theme) && theme.underline) {\n      fontType |= PdfFontStyle.Underline;\n    }\n\n    if (!isNullOrUndefined(theme) && theme.strikeout) {\n      fontType |= PdfFontStyle.Strikeout;\n    }\n\n    return fontType;\n  };\n\n  PDFExport.prototype.getBorderStyle = function (borderStyle) {\n    var borders = new PdfBorders();\n\n    if (!isNullOrUndefined(borderStyle)) {\n      var borderWidth = borderStyle.width; // set border width\n\n      var width = !isNullOrUndefined(borderWidth) && typeof borderWidth === 'number' ? borderWidth * 0.75 : undefined; // set border color\n\n      var color = new PdfColor(196, 196, 196);\n\n      if (!isNullOrUndefined(borderStyle.color)) {\n        var borderColor = this.hexDecToRgb(borderStyle.color);\n        color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n      }\n\n      var pen = new PdfPen(color, width); // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n\n      if (!isNullOrUndefined(borderStyle.dashStyle)) {\n        pen.dashStyle = this.getDashStyle(borderStyle.dashStyle);\n      }\n\n      borders.all = pen;\n    } else {\n      var pdfColor = new PdfColor(234, 234, 234);\n      borders.all = new PdfPen(pdfColor);\n    }\n\n    return borders;\n  };\n\n  PDFExport.prototype.getDashStyle = function (dashType) {\n    switch (dashType) {\n      case 'Dash':\n        return 1;\n\n      case 'Dot':\n        return 2;\n\n      case 'DashDot':\n        return 3;\n\n      case 'DashDotDot':\n        return 4;\n\n      default:\n        return 0;\n    }\n  };\n\n  PDFExport.prototype.getStyle = function () {\n    var border = new PdfBorders();\n\n    if (!isNullOrUndefined(this.gridStyle)) {\n      var fontFamily = !isNullOrUndefined(this.gridStyle.header.fontName) ? this.getFontFamily(this.gridStyle.header.fontName) : PdfFontFamily.Helvetica;\n      var fontStyle = this.getFontStyle(this.gridStyle.header);\n      var fontSize = !isNullOrUndefined(this.gridStyle.header.fontSize) ? this.gridStyle.header.fontSize : 10.5;\n      var pdfColor = new PdfColor();\n\n      if (!isNullOrUndefined(this.gridStyle.header.fontColor)) {\n        var penBrushColor = this.hexDecToRgb(this.gridStyle.header.fontColor);\n        pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n      }\n\n      var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n\n      if (!isNullOrUndefined(this.gridStyle.header.font)) {\n        font = this.gridStyle.header.font;\n      }\n\n      return {\n        border: this.getBorderStyle(this.gridStyle.header.border),\n        font: font,\n        brush: new PdfSolidBrush(pdfColor)\n      };\n    } else {\n      return {\n        brush: new PdfSolidBrush(new PdfColor()),\n        border: border,\n        font: undefined\n      };\n    }\n  };\n\n  PDFExport.prototype.setRecordThemeStyle = function (row, border) {\n    if (!isNullOrUndefined(this.gridStyle) && !isNullOrUndefined(this.gridStyle.record)) {\n      var fontFamily = !isNullOrUndefined(this.gridStyle.record.fontName) ? this.getFontFamily(this.gridStyle.record.fontName) : PdfFontFamily.Helvetica;\n      var fontSize = !isNullOrUndefined(this.gridStyle.record.fontSize) ? this.gridStyle.record.fontSize : 9.75;\n      var fontStyle = this.getFontStyle(this.gridStyle.record);\n      var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n\n      if (!isNullOrUndefined(this.gridStyle.record.font)) {\n        font = this.gridStyle.record.font;\n      }\n\n      row.style.setFont(font);\n      var pdfColor = new PdfColor();\n\n      if (!isNullOrUndefined(this.gridStyle.record.fontColor)) {\n        var penBrushColor = this.hexDecToRgb(this.gridStyle.record.fontColor);\n        pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n      }\n\n      row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n    }\n\n    var borderRecord = this.gridStyle && this.gridStyle.record && this.gridStyle.record.border ? this.getBorderStyle(this.gridStyle.record.border) : border;\n    row.style.setBorder(borderRecord);\n    return row;\n  };\n  /**\n   * Method to perform pdf export.\n   * @hidden\n   */\n\n  /* eslint-disable  */\n\n\n  PDFExport.prototype.exportToPDF = function (pdfExportProperties) {\n    this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n    var eventParams = this.applyEvent();\n    var headerStyle = this.getStyle();\n    var indent = this.parent.renderModule.maxIndent ? this.parent.renderModule.maxIndent : 5;\n    var firstColumnWidth = 100 + indent * 20;\n    var size = Math.floor((540 - firstColumnWidth) / 90) + 1;\n    /** Fill data and export */\n\n    var dataCollIndex = 0;\n    var pivotValues = eventParams.args.dataCollections[dataCollIndex];\n\n    for (var vLen = 0; eventParams.args.allowRepeatHeader && size > 1 && vLen < pivotValues.length; vLen++) {\n      for (var vCnt = size; pivotValues[vLen] && vCnt < pivotValues[vLen].length; vCnt += size) {\n        pivotValues[vLen].splice(vCnt, 0, pivotValues[vLen][0]);\n      }\n    }\n\n    var colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n    var integratedCnt = 0;\n\n    do {\n      if (!isNullOrUndefined(pdfExportProperties)) {\n        eventParams.args.header = !isNullOrUndefined(pdfExportProperties.header) && !isNullOrUndefined(pdfExportProperties.header.contents) && !isNullOrUndefined(pdfExportProperties.header.contents[0].value) ? pdfExportProperties.header.contents[0].value : eventParams.args.header;\n        eventParams.args.footer = !isNullOrUndefined(pdfExportProperties.footer) && !isNullOrUndefined(pdfExportProperties.footer.contents) && !isNullOrUndefined(pdfExportProperties.footer.contents[0].value) ? pdfExportProperties.footer.contents[0].value : eventParams.args.footer;\n      }\n\n      var page = this.addPage(eventParams);\n      var pdfGrid = new PdfGrid();\n      var pageSize = size > 1 ? size : 5;\n\n      if (pivotValues && pivotValues.length > 0) {\n        pdfGrid.columns.add(pivotValues[0].length - integratedCnt >= pageSize ? pageSize : pivotValues[0].length - integratedCnt);\n        var rowLen = pivotValues.length;\n        var actualrCnt = 0;\n        var maxLevel = 0;\n\n        for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n          if (pivotValues[rCnt]) {\n            var isColHeader = !(pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row');\n            var colLen = pivotValues[rCnt].length > integratedCnt + pageSize ? integratedCnt + pageSize : pivotValues[rCnt].length;\n\n            if (isColHeader) {\n              pdfGrid.headers.add(1);\n            }\n\n            var pdfGridRow = !isColHeader ? pdfGrid.rows.addRow() : pdfGrid.headers.getHeader(actualrCnt);\n\n            if (isColHeader) {\n              pdfGridRow.style.setBorder(headerStyle.border);\n\n              if (headerStyle.font) {\n                pdfGridRow.style.setFont(headerStyle.font);\n              }\n\n              pdfGridRow.style.setTextBrush(headerStyle.brush);\n            } else {\n              this.setRecordThemeStyle(pdfGridRow, headerStyle.border);\n            }\n\n            var localCnt = 0;\n            var isEmptyRow = true;\n\n            for (var cCnt = integratedCnt; cCnt < colLen; cCnt++) {\n              var isValueCell = false;\n\n              if (pivotValues[rCnt][cCnt]) {\n                var pivotCell = pivotValues[rCnt][cCnt];\n\n                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                  var cellValue = pivotCell.formattedText;\n                  cellValue = pivotCell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') : pivotCell.type === 'sum' ? cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total')) : cellValue;\n\n                  if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                    pdfGridRow.cells.getCell(localCnt).columnSpan = pivotCell.colSpan ? pageSize - localCnt < pivotCell.colSpan ? pageSize - localCnt : pivotCell.colSpan : 1;\n\n                    if (isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1) {\n                      pdfGridRow.cells.getCell(localCnt).rowSpan = pivotCell.rowSpan ? pivotCell.rowSpan : 1;\n                    }\n\n                    pdfGridRow.cells.getCell(localCnt).value = cellValue ? cellValue.toString() : '';\n                  }\n\n                  if (cellValue !== '') {\n                    isEmptyRow = false;\n                  }\n                }\n\n                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                isValueCell = pivotCell.axis === 'value';\n                cCnt = cCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ? pdfGridRow.cells.getCell(localCnt).columnSpan - 1 : 0);\n                localCnt = localCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ? pdfGridRow.cells.getCell(localCnt).columnSpan - 1 : 0);\n\n                if (pivotCell.style) {\n                  pdfGridRow = this.applyStyle(pdfGridRow, pivotCell, localCnt);\n                }\n\n                var args = {\n                  style: pivotCell && pivotCell.isSum ? {\n                    bold: true\n                  } : undefined,\n                  pivotCell: pivotCell,\n                  cell: pdfGridRow.cells.getCell(localCnt)\n                };\n                this.parent.trigger(events.onPdfCellRender, args);\n\n                if (args.style) {\n                  this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                }\n              } else {\n                var args = {\n                  style: undefined,\n                  pivotCell: undefined,\n                  cell: pdfGridRow.cells.getCell(localCnt)\n                };\n                this.parent.trigger(events.onPdfCellRender, args);\n\n                if (args.style) {\n                  this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                }\n\n                pdfGridRow.cells.getCell(localCnt).value = '';\n\n                if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n                  pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                } else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0 && pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan < Object.keys(this.engine.headerContent).length) {\n                  pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                }\n              }\n\n              var stringFormat = new PdfStringFormat();\n\n              if (this.parent.dataType === 'olap') {\n                var indent_1 = !isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] ? this.parent.renderModule.indentCollection[pivotValues[rCnt][cCnt].rowIndex] : 0;\n                stringFormat.paragraphIndent = indent_1 * 15;\n                maxLevel = maxLevel > indent_1 ? maxLevel : indent_1;\n              } else {\n                stringFormat.paragraphIndent = !isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] && pivotValues[rCnt][cCnt].level !== -1 ? pivotValues[rCnt][cCnt].level * 15 : 0;\n              }\n\n              stringFormat.alignment = isValueCell ? PdfTextAlignment.Right : PdfTextAlignment.Left;\n              stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n              pdfGridRow.cells.getCell(localCnt).style.stringFormat = stringFormat;\n              localCnt++;\n            }\n\n            if (isEmptyRow) {\n              pdfGridRow.height = 16;\n            }\n\n            actualrCnt++;\n          }\n        }\n\n        pdfGrid.columns.getColumn(0).width = 100 + maxLevel * 20;\n      }\n\n      if (integratedCnt === 0 && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n        pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan--;\n      }\n\n      pdfGrid.draw(page, new PointF(10, 20));\n      integratedCnt = integratedCnt + pageSize;\n\n      if (integratedCnt >= colLength && eventParams.args.dataCollections.length > dataCollIndex + 1) {\n        dataCollIndex++;\n        pivotValues = eventParams.args.dataCollections[dataCollIndex];\n        colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n        integratedCnt = 0;\n      }\n    } while (integratedCnt < colLength);\n\n    eventParams.document.save(eventParams.args.fileName + '.pdf');\n    eventParams.document.destroy();\n  };\n\n  PDFExport.prototype.applyStyle = function (pdfGridRow, pivotCell, localCnt) {\n    var color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.backgroundColor);\n    var brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n    pdfGridRow.cells.getCell(localCnt).style.backgroundBrush = brush;\n    var size = Number(pivotCell.style.fontSize.split('px')[0]);\n    var font = new PdfStandardFont(PdfFontFamily.TimesRoman, size, PdfFontStyle.Regular);\n    pdfGridRow.cells.getCell(localCnt).style.font = font;\n    color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.color);\n    brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n    pdfGridRow.cells.getCell(localCnt).style.textBrush = brush;\n    return pdfGridRow;\n  };\n\n  PDFExport.prototype.getFontFamily = function (family) {\n    switch (family) {\n      case 'TimesRoman':\n        return 2;\n\n      case 'Courier':\n        return 1;\n\n      case 'Symbol':\n        return 3;\n\n      case 'ZapfDingbats':\n        return 4;\n\n      default:\n        return 0;\n    }\n  };\n\n  PDFExport.prototype.getFont = function (theme) {\n    if (theme.style.font) {\n      return theme.style.font;\n    }\n\n    var fontSize = theme.cell.cellStyle.font && theme.cell.cellStyle.font.fontSize ? theme.cell.cellStyle.font.fontSize : !isNullOrUndefined(theme.style.fontSize) ? theme.style.fontSize * 0.75 : 9.75;\n    var fontFamily = !isNullOrUndefined(theme.style.fontFamily) ? this.getFontFamily(theme.style.fontFamily) : PdfFontFamily.TimesRoman;\n    var fontStyle = PdfFontStyle.Regular;\n\n    if (!isNullOrUndefined(theme.style.bold) && theme.style.bold) {\n      fontStyle |= PdfFontStyle.Bold;\n    }\n\n    if (!isNullOrUndefined(theme.style.italic) && theme.style.italic) {\n      fontStyle |= PdfFontStyle.Italic;\n    }\n\n    if (!isNullOrUndefined(theme.style.underline) && theme.style.underline) {\n      fontStyle |= PdfFontStyle.Underline;\n    }\n\n    if (!isNullOrUndefined(theme.style.strikeout) && theme.style.strikeout) {\n      fontStyle |= PdfFontStyle.Strikeout;\n    }\n\n    return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n  };\n\n  PDFExport.prototype.processCellStyle = function (gridCell, arg) {\n    if (!isNullOrUndefined(arg.style.backgroundColor)) {\n      var backColor = this.hexDecToRgb(arg.style.backgroundColor);\n      gridCell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n    }\n\n    if (!isNullOrUndefined(arg.style.textBrushColor)) {\n      var textBrushColor = this.hexDecToRgb(arg.style.textBrushColor);\n      gridCell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n    }\n\n    if (!isNullOrUndefined(arg.style.textPenColor)) {\n      var textColor = this.hexDecToRgb(arg.style.textPenColor);\n      gridCell.style.textPen = new PdfPen(new PdfColor(textColor.r, textColor.g, textColor.b));\n    }\n\n    if (!isNullOrUndefined(arg.style.fontFamily) || !isNullOrUndefined(arg.style.fontSize) || !isNullOrUndefined(arg.style.bold) || !isNullOrUndefined(arg.style.italic) || !isNullOrUndefined(arg.style.underline) || !isNullOrUndefined(arg.style.strikeout)) {\n      gridCell.style.font = this.getFont(arg);\n    }\n\n    if (!isNullOrUndefined(arg.style.border)) {\n      var border = new PdfBorders();\n      var borderWidth = arg.style.border.width; // set border width\n\n      var width = !isNullOrUndefined(borderWidth) && typeof borderWidth === 'number' ? borderWidth * 0.75 : undefined; // set border color\n\n      var color = new PdfColor(196, 196, 196);\n\n      if (!isNullOrUndefined(arg.style.border.color)) {\n        var borderColor = this.hexDecToRgb(arg.style.border.color);\n        color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n      }\n\n      var pen = new PdfPen(color, width); // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n\n      if (!isNullOrUndefined(arg.style.border.dashStyle)) {\n        pen.dashStyle = this.getDashStyle(arg.style.border.dashStyle);\n      }\n\n      border.all = pen;\n      gridCell.style.borders = border;\n    }\n  };\n\n  PDFExport.prototype.applyEvent = function () {\n    var _this = this;\n    /** Event trigerring */\n\n\n    var clonedValues;\n    var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n\n    if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n      var pageSettings = this.engine.pageSettings;\n      this.engine.pageSettings = null;\n      this.engine.generateGridData(this.parent.dataSourceSettings);\n      this.parent.applyFormatting(this.engine.pivotValues);\n      clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n      this.engine.pivotValues = currentPivotValues;\n      this.engine.pageSettings = pageSettings;\n    } else {\n      clonedValues = currentPivotValues;\n    }\n\n    var style;\n    var args = {\n      fileName: 'default',\n      header: '',\n      footer: '',\n      dataCollections: [clonedValues],\n      allowRepeatHeader: true,\n      style: style\n    };\n    var argument;\n    this.parent.trigger(events.beforeExport, args, function (observedArgs) {\n      _this.gridStyle = observedArgs.style;\n      argument = observedArgs;\n    });\n    var document = new PdfDocument();\n    return {\n      document: document,\n      args: argument\n    };\n  };\n  /**\n   * To destroy the pdf export module.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PDFExport.prototype.destroy = function () {};\n\n  return PDFExport;\n}();\n\nexport { PDFExport };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-pivotview/src/pivotview/actions/pdf-export.js"],"names":["PdfGrid","PdfPen","PointF","PdfDocument","PdfStandardFont","PdfFontFamily","PdfSolidBrush","PdfColor","PdfStringFormat","PdfVerticalAlignment","PdfTextAlignment","PdfFontStyle","PdfPageTemplateElement","RectangleF","PdfBorders","events","isNullOrUndefined","PivotUtil","PDFExport","parent","prototype","getModuleName","addPage","eventParams","page","document","pages","add","pdfExportProperties","args","header","contents","value","footer","font","TimesRoman","Regular","brush","pen","headerTemplate","graphics","clientSize","width","drawString","Center","template","top","footerTemplate","bottom","hexDecToRgb","hexDec","length","Error","substring","bigint","parseInt","r","g","b","getFontStyle","theme","fontType","bold","Bold","italic","Italic","underline","Underline","strikeout","Strikeout","getBorderStyle","borderStyle","borders","borderWidth","undefined","color","borderColor","dashStyle","getDashStyle","all","pdfColor","dashType","getStyle","border","gridStyle","fontFamily","fontName","getFontFamily","Helvetica","fontStyle","fontSize","fontColor","penBrushColor","setRecordThemeStyle","row","record","style","setFont","setTextBrush","borderRecord","setBorder","exportToPDF","engine","dataType","olapEngineModule","engineModule","applyEvent","headerStyle","indent","renderModule","maxIndent","firstColumnWidth","size","Math","floor","dataCollIndex","pivotValues","dataCollections","vLen","allowRepeatHeader","vCnt","splice","colLength","integratedCnt","pdfGrid","pageSize","columns","rowLen","actualrCnt","maxLevel","rCnt","isColHeader","axis","colLen","headers","pdfGridRow","rows","addRow","getHeader","localCnt","isEmptyRow","cCnt","isValueCell","pivotCell","level","rowSpan","cellValue","formattedText","type","localeObj","getConstant","toString","replace","cells","getCell","columnSpan","colSpan","applyStyle","isSum","cell","trigger","onPdfCellRender","processCellStyle","dataSourceSettings","Object","keys","headerContent","stringFormat","indent_1","indentCollection","rowIndex","paragraphIndent","alignment","Right","Left","lineAlignment","Middle","height","getColumn","draw","save","fileName","destroy","conditionalFormattingModule","hexToRgb","backgroundColor","backgroundBrush","Number","split","textBrush","family","getFont","cellStyle","gridCell","arg","backColor","textBrushColor","textPenColor","textColor","textPen","_this","clonedValues","currentPivotValues","getClonedPivotValues","exportAllPages","enableVirtualization","pageSettings","generateGridData","applyFormatting","argument","beforeExport","observedArgs"],"mappings":"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","sourcesContent":["import { PdfGrid, PdfPen, PointF, PdfDocument, PdfStandardFont, PdfFontFamily, PdfSolidBrush, PdfColor, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfFontStyle, PdfPageTemplateElement, RectangleF, PdfBorders } from '@syncfusion/ej2-pdf-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `PDFExport` module is used to handle the PDF export action.\n */\nvar PDFExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid PDF Export module.\n     * @param {PivotView} parent - Instance of pivot table.\n     * @hidden\n     */\n    function PDFExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @returns {string} - string.\n     * @private\n     */\n    PDFExport.prototype.getModuleName = function () {\n        return 'pdfExport';\n    };\n    PDFExport.prototype.addPage = function (eventParams) {\n        var page = eventParams.document.pages.add();\n        var pdfExportProperties = eventParams.args.pdfExportProperties;\n        var header = (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.header) && !isNullOrUndefined(pdfExportProperties.header.contents) && !isNullOrUndefined(pdfExportProperties.header.contents[0].value)) ?\n            pdfExportProperties.header.contents[0].value : eventParams.args.header;\n        var footer = (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.footer) && !isNullOrUndefined(pdfExportProperties.footer.contents) && !isNullOrUndefined(pdfExportProperties.footer.contents[0].value)) ?\n            pdfExportProperties.footer.contents[0].value : eventParams.args.footer;\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, 15, PdfFontStyle.Regular);\n        var brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        var pen = new PdfPen(new PdfColor(0, 0, 0), .5);\n        /** Header and Footer to be set */\n        var headerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        headerTemplate.graphics.drawString(header, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.top = headerTemplate;\n        var footerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        footerTemplate.graphics.drawString(footer, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.bottom = footerTemplate;\n        return page;\n    };\n    PDFExport.prototype.hexDecToRgb = function (hexDec) {\n        if (hexDec === null || hexDec === '' || hexDec.length !== 7) {\n            throw new Error('please set valid hex value for color..');\n        }\n        hexDec = hexDec.substring(1);\n        var bigint = parseInt(hexDec, 16);\n        var r = (bigint >> 16) & 255;\n        var g = (bigint >> 8) & 255;\n        var b = bigint & 255;\n        return { r: r, g: g, b: b };\n    };\n    PDFExport.prototype.getFontStyle = function (theme) {\n        var fontType = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme) && theme.bold) {\n            fontType |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme) && theme.italic) {\n            fontType |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme) && theme.underline) {\n            fontType |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme) && theme.strikeout) {\n            fontType |= PdfFontStyle.Strikeout;\n        }\n        return fontType;\n    };\n    PDFExport.prototype.getBorderStyle = function (borderStyle) {\n        var borders = new PdfBorders();\n        if (!isNullOrUndefined(borderStyle)) {\n            var borderWidth = borderStyle.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(borderStyle.color)) {\n                var borderColor = this.hexDecToRgb(borderStyle.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(borderStyle.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(borderStyle.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            var pdfColor = new PdfColor(234, 234, 234);\n            borders.all = new PdfPen(pdfColor);\n        }\n        return borders;\n    };\n    PDFExport.prototype.getDashStyle = function (dashType) {\n        switch (dashType) {\n            case 'Dash':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'DashDot':\n                return 3;\n            case 'DashDotDot':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PDFExport.prototype.getStyle = function () {\n        var border = new PdfBorders();\n        if (!isNullOrUndefined(this.gridStyle)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.header.fontName) ?\n                this.getFontFamily(this.gridStyle.header.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridStyle.header);\n            var fontSize = !isNullOrUndefined(this.gridStyle.header.fontSize) ? this.gridStyle.header.fontSize : 10.5;\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.header.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.header.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.header.font)) {\n                font = this.gridStyle.header.font;\n            }\n            return {\n                border: this.getBorderStyle(this.gridStyle.header.border), font: font, brush: new PdfSolidBrush(pdfColor)\n            };\n        }\n        else {\n            return {\n                brush: new PdfSolidBrush(new PdfColor()),\n                border: border, font: undefined\n            };\n        }\n    };\n    PDFExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!isNullOrUndefined(this.gridStyle) && !isNullOrUndefined(this.gridStyle.record)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.record.fontName) ?\n                this.getFontFamily(this.gridStyle.record.fontName) : PdfFontFamily.Helvetica;\n            var fontSize = !isNullOrUndefined(this.gridStyle.record.fontSize) ? this.gridStyle.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridStyle.record);\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.record.font)) {\n                font = this.gridStyle.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.record.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.record.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n        }\n        var borderRecord = this.gridStyle && this.gridStyle.record &&\n            this.gridStyle.record.border ? this.getBorderStyle(this.gridStyle.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * Method to perform pdf export.\n     * @hidden\n     */\n    /* eslint-disable  */\n    PDFExport.prototype.exportToPDF = function (pdfExportProperties) {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var eventParams = this.applyEvent();\n        var headerStyle = this.getStyle();\n        var indent = this.parent.renderModule.maxIndent ? this.parent.renderModule.maxIndent : 5;\n        var firstColumnWidth = 100 + (indent * 20);\n        var size = Math.floor((540 - firstColumnWidth) / 90) + 1;\n        /** Fill data and export */\n        var dataCollIndex = 0;\n        var pivotValues = eventParams.args.dataCollections[dataCollIndex];\n        for (var vLen = 0; eventParams.args.allowRepeatHeader && size > 1 && vLen < pivotValues.length; vLen++) {\n            for (var vCnt = size; pivotValues[vLen] && vCnt < pivotValues[vLen].length; vCnt += size) {\n                pivotValues[vLen].splice(vCnt, 0, pivotValues[vLen][0]);\n            }\n        }\n        var colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n        var integratedCnt = 0;\n        do {\n            if (!isNullOrUndefined(pdfExportProperties)) {\n                eventParams.args.header = (!isNullOrUndefined(pdfExportProperties.header) && !isNullOrUndefined(pdfExportProperties.header.contents) && !isNullOrUndefined(pdfExportProperties.header.contents[0].value)) ?\n                    pdfExportProperties.header.contents[0].value : eventParams.args.header;\n                eventParams.args.footer = (!isNullOrUndefined(pdfExportProperties.footer) && !isNullOrUndefined(pdfExportProperties.footer.contents) && !isNullOrUndefined(pdfExportProperties.footer.contents[0].value)) ?\n                    pdfExportProperties.footer.contents[0].value : eventParams.args.footer;\n            }\n            var page = this.addPage(eventParams);\n            var pdfGrid = new PdfGrid();\n            var pageSize = size > 1 ? size : 5;\n            if (pivotValues && pivotValues.length > 0) {\n                pdfGrid.columns.add(pivotValues[0].length - integratedCnt >= pageSize ? pageSize : pivotValues[0].length - integratedCnt);\n                var rowLen = pivotValues.length;\n                var actualrCnt = 0;\n                var maxLevel = 0;\n                for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        var isColHeader = !(pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row');\n                        var colLen = pivotValues[rCnt].length > (integratedCnt + pageSize) ? (integratedCnt + pageSize) :\n                            pivotValues[rCnt].length;\n                        if (isColHeader) {\n                            pdfGrid.headers.add(1);\n                        }\n                        var pdfGridRow = !isColHeader ? pdfGrid.rows.addRow() : pdfGrid.headers.getHeader(actualrCnt);\n                        if (isColHeader) {\n                            pdfGridRow.style.setBorder(headerStyle.border);\n                            if (headerStyle.font) {\n                                pdfGridRow.style.setFont(headerStyle.font);\n                            }\n                            pdfGridRow.style.setTextBrush(headerStyle.brush);\n                        }\n                        else {\n                            this.setRecordThemeStyle(pdfGridRow, headerStyle.border);\n                        }\n                        var localCnt = 0;\n                        var isEmptyRow = true;\n                        for (var cCnt = integratedCnt; cCnt < colLen; cCnt++) {\n                            var isValueCell = false;\n                            if (pivotValues[rCnt][cCnt]) {\n                                var pivotCell = pivotValues[rCnt][cCnt];\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    var cellValue = pivotCell.formattedText;\n                                    cellValue = pivotCell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                                        (pivotCell.type === 'sum' ?\n                                            cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total')) : cellValue);\n                                    if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                        pdfGridRow.cells.getCell(localCnt).columnSpan = pivotCell.colSpan ?\n                                            (pageSize - localCnt < pivotCell.colSpan ? pageSize - localCnt : pivotCell.colSpan) : 1;\n                                        if (isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1) {\n                                            pdfGridRow.cells.getCell(localCnt).rowSpan = pivotCell.rowSpan ? pivotCell.rowSpan : 1;\n                                        }\n                                        pdfGridRow.cells.getCell(localCnt).value = cellValue ? cellValue.toString() : '';\n                                    }\n                                    if (cellValue !== '') {\n                                        isEmptyRow = false;\n                                    }\n                                }\n                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                isValueCell = pivotCell.axis === 'value';\n                                cCnt = cCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                localCnt = localCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                if (pivotCell.style) {\n                                    pdfGridRow = this.applyStyle(pdfGridRow, pivotCell, localCnt);\n                                }\n                                var args = {\n                                    style: (pivotCell && pivotCell.isSum) ? { bold: true } : undefined,\n                                    pivotCell: pivotCell,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                            }\n                            else {\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: undefined,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                                pdfGridRow.cells.getCell(localCnt).value = '';\n                                if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                                else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0 &&\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan <\n                                        Object.keys(this.engine.headerContent).length) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                            }\n                            var stringFormat = new PdfStringFormat();\n                            if (this.parent.dataType === 'olap') {\n                                var indent_1 = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt]) ?\n                                    (this.parent.renderModule.indentCollection[pivotValues[rCnt][cCnt].rowIndex]) : 0;\n                                stringFormat.paragraphIndent = indent_1 * 15;\n                                maxLevel = maxLevel > indent_1 ? maxLevel : indent_1;\n                            }\n                            else {\n                                stringFormat.paragraphIndent = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] &&\n                                    pivotValues[rCnt][cCnt].level !== -1) ?\n                                    pivotValues[rCnt][cCnt].level * 15 : 0;\n                            }\n                            stringFormat.alignment = isValueCell ? PdfTextAlignment.Right : PdfTextAlignment.Left;\n                            stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                            pdfGridRow.cells.getCell(localCnt).style.stringFormat = stringFormat;\n                            localCnt++;\n                        }\n                        if (isEmptyRow) {\n                            pdfGridRow.height = 16;\n                        }\n                        actualrCnt++;\n                    }\n                }\n                pdfGrid.columns.getColumn(0).width = 100 + (maxLevel * 20);\n            }\n            if (integratedCnt === 0 && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n                pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan--;\n            }\n            pdfGrid.draw(page, new PointF(10, 20));\n            integratedCnt = integratedCnt + pageSize;\n            if (integratedCnt >= colLength && eventParams.args.dataCollections.length > (dataCollIndex + 1)) {\n                dataCollIndex++;\n                pivotValues = eventParams.args.dataCollections[dataCollIndex];\n                colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n                integratedCnt = 0;\n            }\n        } while (integratedCnt < colLength);\n        eventParams.document.save(eventParams.args.fileName + '.pdf');\n        eventParams.document.destroy();\n    };\n    PDFExport.prototype.applyStyle = function (pdfGridRow, pivotCell, localCnt) {\n        var color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.backgroundColor);\n        var brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.backgroundBrush = brush;\n        var size = Number(pivotCell.style.fontSize.split('px')[0]);\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, size, PdfFontStyle.Regular);\n        pdfGridRow.cells.getCell(localCnt).style.font = font;\n        color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.color);\n        brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.textBrush = brush;\n        return pdfGridRow;\n    };\n    PDFExport.prototype.getFontFamily = function (family) {\n        switch (family) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PDFExport.prototype.getFont = function (theme) {\n        if (theme.style.font) {\n            return theme.style.font;\n        }\n        var fontSize = (theme.cell.cellStyle.font && theme.cell.cellStyle.font.fontSize) ? theme.cell.cellStyle.font.fontSize :\n            (!isNullOrUndefined(theme.style.fontSize)) ? (theme.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(theme.style.fontFamily)) ?\n            (this.getFontFamily(theme.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme.style.bold) && theme.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme.style.italic) && theme.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme.style.underline) && theme.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme.style.strikeout) && theme.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PDFExport.prototype.processCellStyle = function (gridCell, arg) {\n        if (!isNullOrUndefined(arg.style.backgroundColor)) {\n            var backColor = this.hexDecToRgb(arg.style.backgroundColor);\n            gridCell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textBrushColor)) {\n            var textBrushColor = this.hexDecToRgb(arg.style.textBrushColor);\n            gridCell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textPenColor)) {\n            var textColor = this.hexDecToRgb(arg.style.textPenColor);\n            gridCell.style.textPen = new PdfPen(new PdfColor(textColor.r, textColor.g, textColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.fontFamily) || !isNullOrUndefined(arg.style.fontSize) || !isNullOrUndefined(arg.style.bold) ||\n            !isNullOrUndefined(arg.style.italic) || !isNullOrUndefined(arg.style.underline) || !isNullOrUndefined(arg.style.strikeout)) {\n            gridCell.style.font = this.getFont(arg);\n        }\n        if (!isNullOrUndefined(arg.style.border)) {\n            var border = new PdfBorders();\n            var borderWidth = arg.style.border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(arg.style.border.color)) {\n                var borderColor = this.hexDecToRgb(arg.style.border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(arg.style.border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(arg.style.border.dashStyle);\n            }\n            border.all = pen;\n            gridCell.style.borders = border;\n        }\n    };\n    PDFExport.prototype.applyEvent = function () {\n        var _this = this;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var style;\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues], allowRepeatHeader: true, style: style\n        };\n        var argument;\n        this.parent.trigger(events.beforeExport, args, function (observedArgs) {\n            _this.gridStyle = observedArgs.style;\n            argument = observedArgs;\n        });\n        var document = new PdfDocument();\n        return { document: document, args: argument };\n    };\n    /**\n     * To destroy the pdf export module.\n     * @returns {void}\n     * @hidden\n     */\n    PDFExport.prototype.destroy = function () {\n    };\n    return PDFExport;\n}());\nexport { PDFExport };\n"]},"metadata":{},"sourceType":"module"}