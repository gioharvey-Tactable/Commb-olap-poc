{"ast":null,"code":"import { createElement, Draggable, remove, extend, detach, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { EventHandler, isBlazor, select } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, addClass, removeClass, closest, Browser } from '@syncfusion/ej2-base';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { AggregateMenu } from '../popups/aggregate-menu';\nimport { AxisFieldRenderer } from '../../pivotfieldlist/renderer/axis-field-renderer';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot button\n */\n\n/** @hidden */\n\nvar PivotButton = function () {\n  /**\n   * Constructor for render module.\n   * @param {PivotView | PivotFieldList} parent - Component instance.\n   */\n  function PivotButton(parent) {\n    this.parent = parent;\n    this.menuOption = new AggregateMenu(this.parent);\n    this.parent.pivotButtonModule = this;\n    this.addEventListener();\n\n    if (this.parent instanceof PivotFieldList) {\n      this.axisField = new AxisFieldRenderer(this.parent);\n    }\n\n    this.isDestroyed = false;\n  }\n  /* eslint-disable */\n\n\n  PivotButton.prototype.renderPivotButton = function (args) {\n    var _this = this;\n\n    var _a;\n\n    var field = extend([], args.field, null, true);\n    var axis = args.axis;\n    var axisElement;\n    var valuePos = -1;\n    var showValuesButton = this.parent.dataType === 'pivot' ? this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule ? this.parent.pivotGridModule.showValuesButton : this.parent.showValuesButton : false;\n\n    if ((this.parent.dataSourceSettings.valueAxis === 'row' && args.axis === 'rows' || this.parent.dataSourceSettings.valueAxis === 'column' && args.axis === 'columns') && showValuesButton && this.parent.dataSourceSettings.values.length > 1) {\n      valuePos = field.length;\n\n      if (isNullOrUndefined(PivotUtil.getFieldByName(this.parent.localeObj.getConstant('values'), field))) {\n        field.push({\n          name: this.parent.localeObj.getConstant('values'),\n          caption: this.parent.localeObj.getConstant('values'),\n          axis: args.axis,\n          showRemoveIcon: true,\n          allowDragAndDrop: true\n        });\n      }\n    }\n\n    this.parentElement = this.parent.getModuleName() === 'pivotview' ? this.parent.element : document.getElementById(this.parent.element.id + '_Wrapper');\n\n    if (this.parent.getModuleName() === 'pivotfieldlist') {\n      this.parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n\n      if (this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)) {\n        var axisPrompt = this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis).querySelector('.' + cls.AXIS_PROMPT_CLASS);\n\n        if (field.length === 0) {\n          removeClass([axisPrompt], cls.ICON_DISABLE);\n        } else {\n          addClass([axisPrompt], cls.ICON_DISABLE);\n        }\n\n        axisElement = this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis).querySelector('.' + cls.AXIS_CONTENT_CLASS);\n      } else {\n        return;\n      }\n    } else {\n      this.parentElement = this.parent.element;\n      axisElement = this.parentElement.querySelector('.e-group-' + axis);\n    }\n\n    if (axisElement) {\n      if (this.parent.getModuleName() === 'pivotview' && field.length === 0) {\n        for (var _i = 0, _b = this.parentElement.querySelectorAll('.e-group-' + axis); _i < _b.length; _i++) {\n          var element = _b[_i];\n\n          if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n            var axisPrompt = createElement('span', {\n              className: cls.AXIS_PROMPT_CLASS,\n              innerHTML: this.parent.groupingBarSettings.allowDragAndDrop ? axis === 'rows' ? this.parent.localeObj.getConstant('rowAxisPrompt') : axis === 'columns' ? this.parent.localeObj.getConstant('columnAxisPrompt') : axis === 'values' ? this.parent.localeObj.getConstant('valueAxisPrompt') : axis === 'filters' ? this.parent.localeObj.getConstant('filterAxisPrompt') : this.parent.localeObj.getConstant('allFields') : ''\n            });\n            element.appendChild(axisPrompt);\n          }\n        }\n      } else {\n        for (var i = 0, cnt = field.length; i < cnt; i++) {\n          for (var _c = 0, _d = this.parent.getModuleName() === 'pivotfieldlist' ? [axisElement] : this.parentElement.querySelectorAll('.e-group-' + axis); _c < _d.length; _c++) {\n            var element = _d[_c];\n            element = element;\n            var isMeasureAvail = this.parent.dataType === 'olap' && (field[i].name.toLowerCase() === '[measures]' || axis === 'values');\n            var isMeasureFieldsAvail = this.parent.dataType === 'olap' && axis === 'values';\n\n            if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n              var buttonWrapper = createElement('div', {\n                className: cls.PIVOT_BUTTON_WRAPPER_CLASS + (i === 0 && axis !== 'all-fields' ? ' e-first-btn' : ''),\n                attrs: {\n                  'data-tag': axis + ':' + field[i].name\n                }\n              });\n              var buttonElement = createElement('div', {\n                id: field[i].name,\n                className: cls.PIVOT_BUTTON_CLASS + ' ' + field[i].name.replace(/[^A-Z0-9]/ig, ''),\n                attrs: {\n                  'data-uid': field[i].name,\n                  'tabindex': this.parent.getModuleName() === 'pivotview' && this.parent.grid && axis === 'rows' && !element.classList.contains(cls.GROUP_CHART_ROW) ? '-1' : '0',\n                  'isvalue': i === valuePos || isMeasureAvail && !isMeasureFieldsAvail ? 'true' : 'false',\n                  'aria-disabled': 'false',\n                  'aria-label': field[i].caption ? field[i].caption : field[i].name,\n                  'data-type': this.parent.dataType === 'olap' ? isMeasureFieldsAvail ? 'isMeasureFieldsAvail' : isMeasureAvail ? 'isMeasureAvail' : field[i].type : field[i].type,\n                  'data-caption': field[i].caption ? field[i].caption : field[i].name,\n                  'data-basefield': field[i].baseField,\n                  'data-baseitem': field[i].baseItem\n                }\n              });\n              var dropIndicatorElement = createElement('span', {\n                attrs: {\n                  'tabindex': '-1',\n                  'aria-disabled': 'false'\n                },\n                className: cls.DROP_INDICATOR_CLASS\n              });\n              var dropLastIndicatorElement = createElement('span', {\n                attrs: {\n                  'tabindex': '-1',\n                  'aria-disabled': 'false'\n                },\n                className: cls.DROP_INDICATOR_CLASS + '-last'\n              });\n              var dragWrapper = this.createButtonDragIcon(field[i], buttonElement);\n              var contentElement = this.createButtonText(field, i, axis, valuePos);\n              buttonElement.appendChild(contentElement);\n\n              if (axis !== 'all-fields') {\n                if (!isMeasureAvail && !field[i].isNamedSet && !field[i].isCalculatedField) {\n                  if (['filters', 'values'].indexOf(axis) === -1 && valuePos !== i && !(this.parent.dataType === 'olap' && (this.parent.getModuleName() === 'pivotview' && this.parent.enableVirtualization || this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule !== undefined && this.parent.pivotGridModule.enableVirtualization))) {\n                    this.createSortOption(buttonElement, field[i].name, field[i]);\n                  }\n\n                  if (axis !== 'values' && valuePos !== i) {\n                    this.createFilterOption(buttonElement, field[i].name, axis, field[i]);\n                  }\n\n                  if (axis === 'values') {\n                    this.getTypeStatus(field, i, buttonElement);\n                  }\n                }\n\n                if (field[i].isCalculatedField || field[i].type === 'CalculatedField') {\n                  var calcElement = createElement('span', {\n                    attrs: {\n                      'tabindex': '-1',\n                      'aria-disabled': 'false',\n                      'title': this.parent.localeObj.getConstant('editCalculatedField')\n                    },\n                    className: cls.ICON + ' ' + cls.CALC_EDIT\n                  });\n\n                  if (this.parent.allowCalculatedField && this.parent.calculatedFieldModule && field[i].showEditIcon) {\n                    removeClass([calcElement], cls.ICON_DISABLE);\n                  } else {\n                    addClass([calcElement], cls.ICON_DISABLE);\n                  }\n\n                  buttonElement.appendChild(calcElement);\n                }\n\n                var removeElement = createElement('span', {\n                  attrs: {\n                    'tabindex': '-1',\n                    'aria-disabled': 'false',\n                    'title': this.parent.localeObj.getConstant('remove')\n                  },\n                  className: cls.ICON + ' ' + cls.REMOVE_CLASS\n                });\n\n                if (this.parent.getModuleName() === 'pivotview') {\n                  if (this.parent.groupingBarSettings.showRemoveIcon && field[i].showRemoveIcon) {\n                    removeClass([removeElement], cls.ICON_DISABLE);\n                  } else {\n                    addClass([removeElement], cls.ICON_DISABLE);\n                  }\n                } else {\n                  if (field[i].showRemoveIcon) {\n                    removeClass([removeElement], cls.ICON_DISABLE);\n                  } else {\n                    addClass([removeElement], cls.ICON_DISABLE);\n                  }\n                }\n\n                buttonElement.appendChild(removeElement);\n                buttonWrapper.appendChild(dropIndicatorElement);\n                buttonWrapper.appendChild(buttonElement);\n                buttonWrapper.appendChild(dropLastIndicatorElement);\n              } else {\n                buttonWrapper.appendChild(dropIndicatorElement);\n                buttonWrapper.appendChild(buttonElement);\n              }\n\n              element.appendChild(buttonWrapper);\n              var pivotButton = new Button({\n                enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale\n              });\n              pivotButton.isStringTemplate = true;\n              pivotButton.appendTo(buttonElement);\n              this.unWireEvent(buttonWrapper, i === valuePos && axis !== 'all-fields' ? 'values' : axis, isMeasureAvail);\n              this.wireEvent(buttonWrapper, i === valuePos && axis !== 'all-fields' ? 'values' : axis, isMeasureAvail);\n\n              if (this.parent.getModuleName() === 'pivotview' && !this.parent.isAdaptive || this.parent.getModuleName() === 'pivotfieldlist') {\n                this.createDraggable(field[i], this.parent.getModuleName() === 'pivotview' ? contentElement : dragWrapper);\n                buttonElement.querySelector('.' + cls.BUTTON_DRAGGABLE).ej2_instances[0].enableAutoScroll = false;\n              }\n            }\n          }\n        }\n\n        if (axis === 'values') {\n          var _loop_1 = function (element) {\n            if (element.classList.contains(cls.GROUP_CHART_VALUE) && this_1.parent.chartModule) {\n              var valueData = field.map(function (item) {\n                return {\n                  text: item.caption ? item.caption : item.name,\n                  value: item.name\n                };\n              });\n              var parent_1 = this_1.parent;\n\n              if (this_1.valueFiedDropDownList && element.querySelector('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV)) {\n                this_1.valueFiedDropDownList.dataSource = valueData;\n                this_1.valueFiedDropDownList.value = !parent_1.chartSettings.enableMultipleAxis ? parent_1.chartModule.currentMeasure : valueData[0].value;\n              } else {\n                var ddlDiv = createElement('div', {\n                  className: cls.GROUP_CHART_VALUE_DROPDOWN_DIV\n                });\n                element.appendChild(ddlDiv);\n                this_1.valueFiedDropDownList = new DropDownList({\n                  dataSource: valueData,\n                  enableRtl: this_1.parent.enableRtl,\n                  locale: this_1.parent.locale,\n                  value: !parent_1.chartSettings.enableMultipleAxis ? parent_1.chartModule.currentMeasure : valueData[0].value,\n                  width: 200,\n                  fields: {\n                    value: 'value',\n                    text: 'text'\n                  },\n                  cssClass: cls.GROUP_CHART_VALUE_DROPDOWN,\n                  change: function (args) {\n                    if (args.e && args.e !== null) {\n                      parent_1.chartSettings.value = args.value;\n                    }\n                  }\n                });\n                this_1.valueFiedDropDownList.isStringTemplate = true;\n                this_1.valueFiedDropDownList.appendTo(ddlDiv);\n              }\n            }\n          };\n\n          var this_1 = this;\n\n          for (var _e = 0, _f = this.parentElement.querySelectorAll('.e-group-' + axis); _e < _f.length; _e++) {\n            var element = _f[_e];\n\n            _loop_1(element);\n          }\n        } else if (axis === 'columns') {\n          var availColindex = undefined;\n\n          for (var _g = 0, _h = this.parentElement.querySelectorAll('.e-group-' + axis); _g < _h.length; _g++) {\n            var element = _h[_g];\n\n            if (element.classList.contains(cls.GROUP_CHART_COLUMN) && this.parent.chartModule) {\n              var currentMeasure = this.parent.chartModule.currentMeasure;\n              var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n              var columnHeader = this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '' ? this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n              var engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n              var pivotValues = engineModule.pivotValues;\n              var totColIndex = this.parent.chartModule.getColumnTotalIndex(pivotValues);\n              var rKeys = Object.keys(pivotValues);\n              var columnData = [];\n              var firstValueRow = false;\n\n              for (var _j = 0, rKeys_1 = rKeys; _j < rKeys_1.length; _j++) {\n                var rKey = rKeys_1[_j];\n\n                if (firstValueRow) {\n                  break;\n                }\n\n                var rowIndex = Number(rKey);\n\n                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' && (this.parent.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                  var firstRowCell = pivotValues[rowIndex][0];\n                  var tupInfo = this.parent.dataType === 'olap' ? engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                  var rows = pivotValues[rowIndex];\n                  var cKeys = Object.keys(rows);\n\n                  for (var _k = 0, cKeys_1 = cKeys; _k < cKeys_1.length; _k++) {\n                    var cKey = cKeys_1[_k];\n                    var cellIndex = Number(cKey);\n                    var cell = pivotValues[rowIndex][cellIndex];\n                    var actualText = this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName ? tupInfo.measureName : cell.actualText;\n\n                    if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' && actualText !== '' && actualText === currentMeasure) {\n                      firstValueRow = true;\n                      var columnSeries = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ') : cell.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                      columnData.push({\n                        value: columnSeries,\n                        text: columnSeries,\n                        title: (_a = {}, _a['title'] = columnSeries, _a)\n                      });\n\n                      if (columnSeries === columnHeader) {\n                        availColindex = columnData.length;\n                      }\n                    }\n                  }\n                }\n              }\n\n              if (this.columnFieldDropDownList && element.querySelector('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV)) {\n                this.columnFieldDropDownList.dataSource = columnData;\n\n                if (availColindex !== undefined) {\n                  this.columnFieldDropDownList.value = columnData[availColindex - 1].value;\n                } else {\n                  this.columnFieldDropDownList.value = columnData[0].value;\n                }\n              } else {\n                var ddlDiv = createElement('div', {\n                  className: cls.GROUP_CHART_COLUMN_DROPDOWN_DIV\n                });\n                element.appendChild(ddlDiv);\n                this.columnFieldDropDownList = new DropDownList({\n                  dataSource: columnData,\n                  enableRtl: this.parent.enableRtl,\n                  locale: this.parent.locale,\n                  value: availColindex ? columnData[availColindex - 1].value : columnData[0] ? columnData[0].value : '',\n                  width: '200',\n                  fields: {\n                    value: 'value',\n                    text: 'text',\n                    htmlAttributes: 'title'\n                  },\n                  cssClass: cls.GROUP_CHART_COLUMN_DROPDOWN,\n                  change: function (args) {\n                    if (args.e && args.e !== null) {\n                      var delimiter_1 = _this.parent.chartSettings.columnDelimiter ? _this.parent.chartSettings.columnDelimiter : '-';\n                      _this.parent.chartSettings.columnHeader = args.value.split(' - ').join(delimiter_1);\n                    }\n                  }\n                });\n                this.columnFieldDropDownList.isStringTemplate = true;\n                this.columnFieldDropDownList.appendTo(ddlDiv);\n              }\n            }\n          }\n        }\n      }\n    } else {\n      return;\n    }\n  };\n\n  PivotButton.prototype.createButtonText = function (field, i, axis, valuePos) {\n    var buttonText;\n    var aggregation;\n    var filterMem;\n\n    if (axis === 'filters') {\n      filterMem = this.updateButtontext(field[i].name);\n    }\n\n    var engineModule;\n\n    if (this.parent.dataType === 'olap') {\n      engineModule = this.parent.olapEngineModule;\n    } else {\n      engineModule = this.parent.engineModule;\n    }\n\n    if (engineModule.fieldList[field[i].name] !== undefined) {\n      aggregation = engineModule.fieldList[field[i].name].aggregateType;\n\n      if (aggregation !== 'DistinctCount' && (engineModule.fieldList[field[i].name].type !== 'number' || engineModule.fieldList[field[i].name].type === 'include' || engineModule.fieldList[field[i].name].type === 'exclude')) {\n        aggregation = 'Count';\n      } else {\n        aggregation = aggregation === undefined ? 'Sum' : engineModule.fieldList[field[i].name].aggregateType;\n      }\n    }\n\n    var text = field[i].caption ? field[i].caption : field[i].name;\n    buttonText = createElement('span', {\n      attrs: {\n        title: axis === 'filters' ? this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField' ? text : text + ' (' + filterMem + ')' : this.parent.dataType === 'olap' ? text : !this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField' ? text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text,\n        'tabindex': '-1',\n        'aria-disabled': 'false',\n        'oncontextmenu': 'return false;',\n        'data-type': valuePos === i ? '' : aggregation\n      },\n      className: cls.PIVOT_BUTTON_CONTENT_CLASS + ' ' + (this.parent.getModuleName() === 'pivotview' ? this.parent.groupingBarSettings.allowDragAndDrop && field[i].allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : ''),\n      innerHTML: axis === 'filters' ? this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField' ? text : text + ' (' + filterMem + ')' : this.parent.dataType === 'olap' ? text : !this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField' ? text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text\n    });\n    return buttonText;\n  };\n  /* eslint-enable */\n\n\n  PivotButton.prototype.getTypeStatus = function (field, i, buttonElement) {\n    var engineModule;\n\n    if (this.parent.dataType === 'olap') {\n      engineModule = this.parent.olapEngineModule;\n    } else {\n      engineModule = this.parent.engineModule;\n    }\n\n    var fieldListItem = engineModule.fieldList[field[i].name];\n\n    if (fieldListItem.aggregateType !== 'CalculatedField' && this.validateDropdown(fieldListItem.type)) {\n      this.createSummaryType(buttonElement, field[i].name, field[i]);\n    }\n  };\n\n  PivotButton.prototype.validateDropdown = function (type) {\n    var aggregateType = this.parent.aggregateTypes;\n\n    if (type !== 'number') {\n      return aggregateType.indexOf('Count') > -1 || aggregateType.indexOf('DistinctCount') > -1;\n    } else {\n      for (var i = 0; i < aggregateType.length; i++) {\n        if (this.parent.getAllSummaryType().indexOf(aggregateType[i]) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n\n  PivotButton.prototype.createSummaryType = function (pivotButton, fieldName, field) {\n    var spanElement = createElement('span', {\n      attrs: {\n        'tabindex': '-1',\n        'aria-disabled': 'false',\n        'title': this.parent.localeObj.getConstant('format')\n      },\n      className: cls.ICON + ' ' + cls.AXISFIELD_ICON_CLASS\n    });\n\n    if (this.parent.getModuleName() === 'pivotview') {\n      if (this.parent.groupingBarSettings.showValueTypeIcon && field.showValueTypeIcon) {\n        removeClass([spanElement], cls.ICON_DISABLE);\n      } else {\n        addClass([spanElement], cls.ICON_DISABLE);\n      }\n    } else {\n      if (field.showValueTypeIcon) {\n        removeClass([spanElement], cls.ICON_DISABLE);\n      } else {\n        addClass([spanElement], cls.ICON_DISABLE);\n      }\n    }\n\n    pivotButton.appendChild(spanElement);\n    return spanElement;\n  };\n\n  PivotButton.prototype.createMenuOption = function (args) {\n    this.menuOption.render(args, this.parentElement);\n    this.parent.pivotButtonModule = this;\n  };\n\n  PivotButton.prototype.openCalculatedFieldDialog = function (args) {\n    var fieldName = args.target.parentElement.id;\n\n    if (this.parent.getModuleName() === 'pivotview') {\n      if (this.parent.isAdaptive && this.parent.showFieldList && this.parent.pivotFieldListModule && !this.parent.pivotFieldListModule.isDestroyed) {\n        this.parent.pivotFieldListModule.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n        this.parent.pivotFieldListModule.dialogRenderer.adaptiveElement.select(4);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n        this.parent.pivotFieldListModule.calculatedFieldModule.updateAdaptiveCalculatedField(true, fieldName);\n      } else {\n        if (!this.parent.isAdaptive) {\n          this.parent.calculatedFieldModule.buttonCall = true;\n        }\n\n        this.parent.notify(events.initCalculatedField, {\n          edit: true,\n          fieldName: fieldName\n        });\n      }\n    } else if (this.parent.getModuleName() === 'pivotfieldlist') {\n      if (this.parent.isAdaptive) {\n        this.parent.dialogRenderer.adaptiveElement.select(4);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n        this.parent.calculatedFieldModule.updateAdaptiveCalculatedField(true, fieldName);\n        this.parent.calculatedFieldModule.buttonCall = true;\n      } else {\n        if (this.parent.dialogRenderer.fieldListDialog) {\n          this.parent.dialogRenderer.fieldListDialog.hide();\n          addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        }\n\n        this.parent.notify(events.initCalculatedField, {\n          edit: true,\n          fieldName: fieldName\n        });\n\n        if (this.parent.calculatedFieldModule) {\n          this.parent.calculatedFieldModule.buttonCall = true;\n        }\n      }\n    }\n  };\n\n  PivotButton.prototype.createDraggable = function (field, target) {\n    this.draggable = new Draggable(target, {\n      clone: true,\n      enableTailMode: true,\n      enableAutoScroll: true,\n      helper: this.createDragClone.bind(this),\n      dragStart: this.onDragStart.bind(this),\n      drag: this.onDragging.bind(this),\n      dragStop: this.onDragStop.bind(this),\n      abort: this.parent.getModuleName() === 'pivotview' ? !(this.parent.groupingBarSettings.allowDragAndDrop && field.allowDragAndDrop) ? '.' + cls.PIVOT_BUTTON_CLASS : '' : !field.allowDragAndDrop ? '.' + cls.PIVOT_BUTTON_CLASS : ''\n    });\n  };\n\n  PivotButton.prototype.createButtonDragIcon = function (field, pivotButton) {\n    var dragWrapper = createElement('span', {\n      attrs: {\n        'tabindex': '-1',\n        'aria-disabled': 'false'\n      }\n    });\n    var dragElement = createElement('span', {\n      attrs: {\n        'tabindex': '-1',\n        'aria-disabled': 'false',\n        'title': this.parent.localeObj.getConstant('drag')\n      },\n      className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' + (field.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS)\n    });\n    dragWrapper.appendChild(dragElement);\n\n    if (this.parent.getModuleName() === 'pivotfieldlist') {\n      pivotButton.appendChild(dragWrapper);\n    }\n\n    return dragWrapper;\n  };\n\n  PivotButton.prototype.createSortOption = function (pivotButton, fieldName, field) {\n    var sortCLass;\n    var spanElement;\n    var engineModule;\n\n    if (this.parent.dataType === 'olap') {\n      engineModule = this.parent.olapEngineModule;\n    } else {\n      engineModule = this.parent.engineModule;\n    }\n\n    if (!this.parent.allowDeferLayoutUpdate) {\n      sortCLass = engineModule.fieldList[fieldName].sort === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n    } else {\n      sortCLass = '';\n\n      for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n        if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n          sortCLass = this.parent.dataSourceSettings.sortSettings[i].order === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n        }\n      }\n    }\n\n    if (engineModule.fieldList[fieldName].sort === 'None') {\n      spanElement = createElement('span', {\n        attrs: {\n          'tabindex': '-1',\n          'aria-disabled': 'false',\n          'title': this.parent.localeObj.getConstant('sort')\n        },\n        className: cls.ICON\n      });\n    } else {\n      spanElement = createElement('span', {\n        attrs: {\n          'tabindex': '-1',\n          'aria-disabled': 'false',\n          'title': this.parent.localeObj.getConstant('sort')\n        },\n        className: cls.ICON + ' ' + cls.SORT_CLASS + ' ' + sortCLass\n      });\n    }\n\n    if (this.parent.dataSourceSettings.enableSorting) {\n      if (this.parent.getModuleName() === 'pivotview') {\n        if (field.showSortIcon && this.parent.groupingBarSettings.showSortIcon) {\n          removeClass([spanElement], cls.ICON_DISABLE);\n        } else {\n          addClass([spanElement], cls.ICON_DISABLE);\n        }\n      } else {\n        if (field.showSortIcon) {\n          removeClass([spanElement], cls.ICON_DISABLE);\n        } else {\n          addClass([spanElement], cls.ICON_DISABLE);\n        }\n      }\n    } else {\n      addClass([spanElement], cls.ICON_DISABLE);\n    }\n\n    pivotButton.appendChild(spanElement);\n    return spanElement;\n  };\n\n  PivotButton.prototype.createFilterOption = function (pivotButton, fieldName, axis, field) {\n    var filterCLass;\n    var engineModule;\n\n    if (this.parent.dataType === 'olap') {\n      engineModule = this.parent.olapEngineModule;\n    } else {\n      engineModule = this.parent.engineModule;\n    }\n\n    if (!this.parent.allowDeferLayoutUpdate) {\n      engineModule.fieldList[fieldName].filter = engineModule.fieldList[fieldName].filter === null ? [] : engineModule.fieldList[fieldName].filter;\n      filterCLass = engineModule.fieldList[fieldName].filter.length === 0 ? !engineModule.fieldList[fieldName].isExcelFilter ? cls.FILTER_CLASS : cls.FILTERED_CLASS : cls.FILTERED_CLASS;\n    } else {\n      filterCLass = cls.FILTER_CLASS;\n\n      for (var i = 0; i < this.parent.dataSourceSettings.filterSettings.length; i++) {\n        if (this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n          filterCLass = cls.FILTERED_CLASS;\n        }\n      }\n    }\n\n    var spanElement = createElement('span', {\n      attrs: {\n        'tabindex': '-1',\n        'aria-disabled': 'false',\n        'title': this.parent.localeObj.getConstant('filter')\n      },\n      className: cls.FILTER_COMMON_CLASS + ' ' + cls.ICON + ' ' + filterCLass\n    });\n\n    if ((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) && axis !== 'filters' || this.parent.dataSourceSettings.allowMemberFilter) {\n      removeClass([spanElement], cls.ICON_DISABLE);\n    } else {\n      addClass([spanElement], cls.ICON_DISABLE);\n    }\n\n    if (this.parent.getModuleName() === 'pivotview') {\n      if (((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) && axis !== 'filters' || this.parent.dataSourceSettings.allowMemberFilter) && this.parent.groupingBarSettings.showFilterIcon && field.showFilterIcon) {\n        removeClass([spanElement], cls.ICON_DISABLE);\n      } else {\n        addClass([spanElement], cls.ICON_DISABLE);\n      }\n    } else {\n      if (field.showFilterIcon && ((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) && axis !== 'filters' || this.parent.dataSourceSettings.allowMemberFilter)) {\n        removeClass([spanElement], cls.ICON_DISABLE);\n      } else {\n        addClass([spanElement], cls.ICON_DISABLE);\n      }\n    }\n\n    pivotButton.appendChild(spanElement);\n    return spanElement;\n  }; // To update button text\n\n\n  PivotButton.prototype.updateButtontext = function (fieldName) {\n    var engineModule;\n\n    if (this.parent.dataType === 'olap') {\n      engineModule = this.parent.olapEngineModule;\n    } else {\n      engineModule = this.parent.engineModule;\n    }\n\n    var filterCount = engineModule.fieldList[fieldName].filter.length;\n    var filterType = engineModule.fieldList[fieldName].filterType;\n    var memLen = engineModule.fieldList[fieldName].dateMember.length;\n    var filterMem;\n    var firstNode = engineModule.fieldList[fieldName].filter[0];\n\n    if (this.parent.dataType === 'olap') {\n      filterMem = this.updateOlapButtonText(engineModule, fieldName, firstNode, filterCount);\n    } else if (filterType === 'include') {\n      if (filterCount === 1) {\n        filterMem = firstNode;\n      } else if (filterCount > 1) {\n        if (filterCount === memLen) {\n          filterMem = this.parent.localeObj.getConstant('all');\n        } else {\n          filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n      }\n    } else if (filterType === 'exclude') {\n      if (filterCount === 1) {\n        if (memLen === 2) {\n          if (firstNode !== engineModule.fieldList[fieldName].dateMember[0].actualText) {\n            filterMem = firstNode;\n          } else {\n            filterMem = engineModule.fieldList[fieldName].dateMember[0].actualText;\n          }\n        } else {\n          filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n      } else if (filterCount > 1) {\n        var j = void 0;\n        var allNodes = Object.keys(engineModule.fieldList[fieldName].members);\n        var filteredItems = engineModule.fieldList[fieldName].filter;\n\n        if (filterCount === allNodes.length - 1) {\n          /* eslint-disable */\n          loop: for (j = 0; j < allNodes.length; j++) {\n            var test = allNodes[j];\n            var x = filteredItems.indexOf(test);\n\n            if (x === -1) {\n              filterMem = allNodes[j];\n              break loop;\n              /* eslint-enable */\n            }\n          }\n        } else {\n          filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n      }\n    } else {\n      filterMem = this.parent.localeObj.getConstant('all');\n    }\n\n    return filterMem;\n  };\n\n  PivotButton.prototype.updateOlapButtonText = function (engineModule, fieldName, firstNode, filterCount) {\n    var filterMem;\n    var filterItems = engineModule.fieldList[fieldName].actualFilter;\n\n    if (filterItems.length > 0) {\n      var cMembers = engineModule.fieldList[fieldName].members;\n      var actualFilterItems = [];\n\n      if (engineModule.fieldList[fieldName].filterMembers.length > 0) {\n        var dummyfilterItems = {};\n\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n          var item = filterItems_1[_i];\n          dummyfilterItems[item] = item;\n\n          if (cMembers[item]) {\n            dummyfilterItems = this.parent.pivotCommon.eventBase.getParentNode(fieldName, item, dummyfilterItems);\n          }\n        }\n\n        var updatedFilterItems = dummyfilterItems ? Object.keys(dummyfilterItems) : [];\n\n        for (var _a = 0, updatedFilterItems_1 = updatedFilterItems; _a < updatedFilterItems_1.length; _a++) {\n          var item = updatedFilterItems_1[_a];\n\n          if (cMembers[item].isSelected) {\n            if (!(cMembers[item].parent && cMembers[cMembers[item].parent].isSelected)) {\n              actualFilterItems.push(item);\n            }\n          }\n        }\n\n        firstNode = actualFilterItems.length === 1 ? cMembers[actualFilterItems[0]].caption : firstNode;\n      }\n\n      filterCount = actualFilterItems.length === 0 ? filterCount : actualFilterItems.length;\n    }\n\n    if (filterCount === 0) {\n      filterMem = engineModule.fieldList[fieldName].allMember ? engineModule.fieldList[fieldName].allMember : this.parent.localeObj.getConstant('all');\n    } else if (filterCount === 1) {\n      filterMem = firstNode;\n    } else if (filterCount > 1) {\n      filterMem = this.parent.localeObj.getConstant('multipleItems');\n    }\n\n    return filterMem;\n  };\n\n  PivotButton.prototype.createDragClone = function (args) {\n    var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n    var cloneElement = createElement('div', {\n      id: this.parent.element.id + '_DragClone',\n      className: cls.DRAG_CLONE_CLASS\n    });\n    var contentElement = createElement('span', {\n      className: cls.TEXT_CONTENT_CLASS,\n      innerHTML: element.textContent\n    });\n    cloneElement.appendChild(contentElement);\n    document.body.appendChild(cloneElement);\n    return cloneElement;\n  };\n\n  PivotButton.prototype.onDragStart = function (e) {\n    var _this = this;\n\n    var element = closest(e.element, '.' + cls.PIVOT_BUTTON_CLASS);\n    var dragItem = document.getElementById(this.parent.element.id + '_DragClone');\n    var fieldInfo = PivotUtil.getFieldInfo(element.getAttribute('data-uid'), this.parent);\n    var dragEventArgs = {\n      fieldName: fieldInfo.fieldName,\n      fieldItem: fieldInfo.fieldItem,\n      axis: fieldInfo.axis,\n      dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n      cancel: false\n    };\n    var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        _this.parent.isDragging = true;\n        var engineModule = void 0;\n\n        if (_this.parent.dataType === 'olap') {\n          engineModule = _this.parent.olapEngineModule;\n        } else {\n          engineModule = _this.parent.engineModule;\n        }\n\n        var data = engineModule.fieldList[element.getAttribute('data-uid')];\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        addClass([element], cls.SELECTED_NODE_CLASS);\n\n        if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' && _this.parent.renderMode) === 'Popup') {\n          var fieldListPopup = _this.parent;\n          dragItem.style.zIndex = (fieldListPopup.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n        }\n\n        if (data && data.aggregateType === 'CalculatedField') {\n          for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n            var axisContent = axis_1[_i];\n            addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n          }\n        }\n\n        if (isBlazor()) {\n          e.bindEvents(e.dragElement);\n        }\n      } else {\n        _this.parent.isDragging = false;\n\n        _this.draggable.intDestroy(e.event);\n\n        detach(dragItem);\n      }\n    });\n  };\n\n  PivotButton.prototype.onDragging = function (e) {\n    this.draggable.setProperties({\n      cursorAt: {\n        top: !isNOU(e.event.targetTouches) || Browser.isDevice ? 60 : -20\n      }\n    });\n  };\n\n  PivotButton.prototype.onDragStop = function (args) {\n    this.parent.isDragging = false;\n\n    if (args.target && args.element && closest(args.element, '.' + cls.GROUP_ALL_FIELDS_CLASS) && !closest(args.target, '.' + cls.DROPPABLE_CLASS)) {\n      /* eslint-disable-line */\n      args.cancel = true;\n    }\n\n    var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n    removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS)), cls.SELECTED_NODE_CLASS);\n    removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n    var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n\n    for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n      var axisContent = axis_2[_i];\n      removeClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n    }\n\n    if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n      this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n    }\n\n    if (document.getElementById(this.parent.element.id + '_DragClone')) {\n      remove(document.getElementById(this.parent.element.id + '_DragClone'));\n    }\n\n    document.body.style.cursor = 'auto';\n\n    if (!this.isButtonDropped(args.target, element) || args.cancel) {\n      return;\n    }\n\n    this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent : this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n\n    if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, element.id)) {\n      this.updateDataSource();\n      /* eslint-disable */\n\n      var thisObj = this;\n      /* eslint-enable */\n\n      thisObj.parent.axisFieldModule.render();\n    }\n  };\n\n  PivotButton.prototype.isButtonDropped = function (dropTarget, target) {\n    var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n    var droppableElement = closest(dropTarget, '.' + cls.DROPPABLE_CLASS);\n    var isDropped = true;\n\n    if (axisPanel && axisPanel === droppableElement) {\n      var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n      var droppableTarget = closest(dropTarget, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n      var sourcePosition = void 0;\n      var droppedPosition = -1;\n\n      for (var i = 0, n = pivotButtons.length; i < n; i++) {\n        if (pivotButtons[i].id === target.id) {\n          sourcePosition = i;\n        }\n\n        if (droppableTarget) {\n          var droppableButton = droppableTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n\n          if (pivotButtons[i].id === droppableButton.id) {\n            droppedPosition = i;\n          }\n        }\n      }\n\n      if (sourcePosition === droppedPosition || sourcePosition === pivotButtons.length - 1 && droppedPosition === -1) {\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n        isDropped = false;\n      }\n    }\n\n    return isDropped;\n  };\n\n  PivotButton.prototype.updateSorting = function (args) {\n    var buttonElement = closest(args.target, '.' + cls.PIVOT_BUTTON_CLASS);\n    var fieldInfo = PivotUtil.getFieldInfo(buttonElement ? buttonElement.id : '', this.parent);\n\n    if (!args.target.classList.contains(cls.FILTER_COMMON_CLASS) && !args.target.classList.contains(cls.REMOVE_CLASS) && !args.target.classList.contains(cls.DRAG_CLASS) && buttonElement && fieldInfo.fieldItem && (fieldInfo.fieldItem.showSortIcon || isNullOrUndefined(fieldInfo.fieldItem.showSortIcon))) {\n      if ((this.parent instanceof PivotFieldList || this.parent.groupingBarSettings.showSortIcon) && this.parent.dataSourceSettings.enableSorting && !(this.parent.dataType === 'olap' && (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule !== undefined && this.parent.pivotGridModule.enableVirtualization || this.parent.getModuleName() === 'pivotview' && this.parent.enableVirtualization))) {\n        if (this.parent.getModuleName() === 'pivotview' && this.parent.enableValueSorting || this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule !== undefined && this.parent.pivotGridModule.enableValueSorting) {\n          if (this.parent.enableValueSorting || this.parent.pivotGridModule.enableValueSorting) {\n            /* eslint-disable-line */\n            if (args.target.classList.contains('e-pivot-button')) {\n              if (args.target.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                this.parent.setProperties({\n                  dataSourceSettings: {\n                    valueSortSettings: {\n                      headerText: ''\n                    }\n                  }\n                }, true);\n              }\n            } else {\n              if (args.target.parentElement.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                this.parent.setProperties({\n                  dataSourceSettings: {\n                    valueSortSettings: {\n                      headerText: ''\n                    }\n                  }\n                }, true);\n              }\n            }\n          }\n        }\n\n        this.parent.pivotCommon.eventBase.updateSorting(args);\n\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n          this.updateDataSource(true);\n        }\n        /* eslint-disable */\n\n\n        var thisObj = this;\n        /* eslint-enable */\n\n        if (thisObj.parent instanceof PivotFieldList) {\n          thisObj.axisField.render();\n        }\n      }\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotButton.prototype.updateDataSource = function (isRefreshGrid) {\n    if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n      this.parent.updateDataSource(isRefreshGrid);\n    } else {\n      if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView && this.parent.pivotGridModule) {\n        if (this.parent.dataType === 'olap') {\n          this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n        } else {\n          this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n        }\n        /* eslint-disable */\n\n\n        this.parent.pivotGridModule.notify(events.uiUpdate, this);\n        this.parent.pivotGridModule.setProperties({\n          dataSourceSettings: this.parent.dataSourceSettings.properties\n        }, true);\n        /* eslint-enable */\n      } else {\n        this.parent.triggerPopulateEvent();\n      }\n    }\n  };\n\n  PivotButton.prototype.updateFiltering = function (args) {\n    /* eslint-disable */\n    var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n\n    if (pivotObj.getModuleName() === 'pivotfieldlist') {\n      showSpinner(pivotObj.fieldListSpinnerElement);\n    } else {\n      pivotObj.showWaitingPopup();\n    }\n\n    pivotObj.mouseEventArgs = args;\n    pivotObj.filterTargetID = this.parent.pivotCommon.moduleName !== 'pivotfieldlist' ? this.parent.element : document.getElementById(this.parent.pivotCommon.parentID + '_Wrapper');\n    var fieldName = args.target.parentElement.id;\n\n    if (pivotObj && pivotObj.enableVirtualization && isBlazor() && pivotObj.dataType === 'pivot') {\n      var $this_1 = this;\n      pivotObj.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'fetchFieldMembers', fieldName).then(function (data) {\n        var parsedData = JSON.parse(data.dateMembers);\n        var dateMembers = [];\n        var formattedMembers = {};\n        var members = {};\n\n        for (var i = 0; i < parsedData.length; i++) {\n          dateMembers.push({\n            formattedText: parsedData[i].FormattedText,\n            actualText: parsedData[i].ActualText\n          });\n          formattedMembers[parsedData[i].FormattedText] = {};\n          members[parsedData[i].ActualText] = {};\n        }\n\n        $this_1.parent.engineModule.fieldList[fieldName].dateMember = dateMembers;\n        $this_1.parent.engineModule.fieldList[fieldName].formattedMembers = formattedMembers;\n        $this_1.parent.engineModule.fieldList[fieldName].members = members;\n        $this_1.updateFilterEvents();\n      });\n    } else if (pivotObj.dataSourceSettings.mode === 'Server') {\n      if (this.parent.engineModule.fieldList[fieldName].members && Object.keys(this.parent.engineModule.fieldList[fieldName].members).length > 0) {\n        this.updateFilterEvents();\n      } else {\n        pivotObj.getEngine('fetchFieldMembers', null, null, null, null, null, fieldName);\n      }\n    } else {\n      this.updateFilterEvents();\n    }\n    /* eslint-enable */\n\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotButton.prototype.updateFilterEvents = function () {\n    /* eslint-disable */\n    var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n    this.parent.pivotCommon.eventBase.updateFiltering(pivotObj.mouseEventArgs);\n    var target = pivotObj.mouseEventArgs.target;\n    this.fieldName = target.parentElement.id;\n\n    if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n      this.dialogPopUp = this.parent.pivotCommon.filterDialog.dialogPopUp;\n      this.parent.pivotCommon.filterDialog.dialogPopUp.close = this.removeFilterDialog.bind(this); // this.memberTreeView = this.parent.pivotCommon.filterDialog.memberTreeView;\n      // this.parent.pivotCommon.filterDialog.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n      // this.parent.pivotCommon.filterDialog.allMemberSelect.nodeChecked = this.nodeStateModified.bind(this);\n\n      this.bindDialogEvents();\n    }\n\n    if (pivotObj.getModuleName() === 'pivotfieldlist') {\n      hideSpinner(pivotObj.fieldListSpinnerElement);\n    } else {\n      pivotObj.hideWaitingPopup();\n    }\n  };\n\n  PivotButton.prototype.bindDialogEvents = function () {\n    if (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter && this.parent.pivotCommon.filterDialog.tabObj) {\n      this.index = this.parent.pivotCommon.filterDialog.tabObj.selectedItem;\n      this.updateDialogButtonEvents();\n      this.dialogPopUp.buttons = this.buttonModel();\n      this.dialogPopUp.dataBind();\n      this.parent.pivotCommon.filterDialog.tabObj.selected = this.tabSelect.bind(this);\n    } else if (this.parent.dataSourceSettings.allowMemberFilter) {\n      this.index = 0;\n      this.updateDialogButtonEvents();\n    }\n  };\n\n  PivotButton.prototype.buttonModel = function () {\n    return [{\n      buttonModel: {\n        cssClass: 'e-clear-filter-button' + (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n        iconCss: 'e-icons e-clear-filter-icon',\n        enableRtl: this.parent.enableRtl,\n        content: this.parent.localeObj.getConstant('clearFilter'),\n        disabled: this.parent.pivotCommon.filterDialog.filterObject ? false : true\n      },\n      click: this.ClearFilter.bind(this)\n    }, {\n      buttonModel: {\n        cssClass: cls.OK_BUTTON_CLASS,\n        content: this.parent.localeObj.getConstant('ok'),\n        isPrimary: true\n      },\n      click: this.index === 0 ? this.updateFilterState.bind(this, this.fieldName) : this.updateCustomFilter.bind(this)\n    }, {\n      click: this.parent.pivotCommon.filterDialog.closeFilterDialog.bind(this),\n      buttonModel: {\n        cssClass: cls.CANCEL_BUTTON_CLASS,\n        content: this.parent.localeObj.getConstant('cancel')\n      }\n    }];\n  };\n\n  PivotButton.prototype.tabSelect = function (e) {\n    this.index = e.selectedIndex;\n    this.updateDialogButtonEvents();\n    removeClass([].slice.call(this.dialogPopUp.element.querySelectorAll('.e-selected-tab')), 'e-selected-tab');\n\n    if (e.selectedIndex > 0) {\n      addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (e.selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n    }\n\n    if (e.selectedIndex === 0) {\n      this.parent.pivotCommon.filterDialog.updateCheckedState();\n    } else {\n      this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n      this.dialogPopUp.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n    }\n  };\n\n  PivotButton.prototype.updateDialogButtonEvents = function () {\n    this.dialogPopUp.buttons = this.buttonModel();\n    this.dialogPopUp.dataBind();\n  };\n\n  PivotButton.prototype.updateCustomFilter = function (args) {\n    var _this = this;\n\n    var dialogElement = this.dialogPopUp.element.querySelector('.e-selected-tab');\n    var fieldName = dialogElement.getAttribute('data-fieldname');\n    var levelName = dialogElement.getAttribute('data-selectedField');\n    var filterType = dialogElement.getAttribute('data-type');\n    var measure = dialogElement.getAttribute('data-measure');\n    var operator = dialogElement.getAttribute('data-operator');\n    var operand1 = dialogElement.getAttribute('data-value1');\n    var operand2 = dialogElement.getAttribute('data-value2');\n    var type = filterType === 'value' ? 'Value' : filterType === 'date' ? 'Date' : filterType === 'number' ? 'Number' : 'Label';\n    var filterItem = {\n      name: fieldName,\n      type: type,\n      measure: measure,\n      condition: operator,\n      value1: filterType === 'date' && !isBlazor() ? new Date(operand1) : operand1,\n      value2: filterType === 'date' && !isBlazor() ? new Date(operand2) : operand2\n    };\n    var filterObject;\n\n    if (this.parent.dataType === 'olap') {\n      filterItem.selectedField = levelName;\n      this.removeDataSourceSettings(fieldName, levelName, type);\n      var filterItems = this.parent.dataSourceSettings.filterSettings;\n\n      for (var _i = 0, filterItems_2 = filterItems; _i < filterItems_2.length; _i++) {\n        var item = filterItems_2[_i];\n\n        if (item.name === fieldName && item.selectedField === levelName) {\n          filterObject = item;\n        }\n      }\n    } else {\n      filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n    }\n\n    if (isNOU(operand1) || operand1 === '' || ['Between', 'NotBetween'].indexOf(operator) > -1 && (isNOU(operand2) || operand2 === '')) {\n      var inputElementString = type.toLowerCase() + (isNOU(operand1) || operand1 === '' ? '_input_option_1' : '_input_option_2');\n      var focusElement = select('#' + this.parent.element.id + '_' + inputElementString, dialogElement);\n      addClass([focusElement], cls.EMPTY_FIELD);\n      focusElement.focus();\n      return;\n    }\n\n    var filterEventArgs = {\n      cancel: false,\n      filterSettings: filterItem,\n      dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings)\n    };\n    var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        filterItem = observedArgs.filterSettings;\n\n        if (filterObject) {\n          // this.removeDataSourceSettings(fieldName);\n          filterObject = filterObject.properties ? filterObject.properties : filterObject;\n          filterObject.type = filterItem.type;\n          filterObject.measure = filterItem.measure;\n          filterObject.condition = filterItem.condition;\n          filterObject.value1 = filterItem.value1;\n          filterObject.value2 = filterItem.value2;\n\n          if (_this.parent.dataType === 'olap') {\n            filterObject.selectedField = filterItem.selectedField;\n          }\n        } else {\n          _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n        }\n      }\n\n      if (type !== 'Value') {\n        _this.parent.lastFilterInfo = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n      }\n\n      _this.dialogPopUp.close();\n\n      if (!observedArgs.cancel) {\n        _this.refreshPivotButtonState(fieldName, true);\n\n        _this.updateDataSource(true);\n      }\n    });\n  };\n\n  PivotButton.prototype.removeFilterDialog = function () {\n    if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n      this.dialogPopUp.destroy();\n      setTimeout(this.setFocus.bind(this));\n    }\n\n    if (document.getElementById(this.parentElement.id + '_EditorTreeView')) {\n      remove(document.getElementById(this.parentElement.id + '_EditorTreeView'));\n    }\n  };\n\n  PivotButton.prototype.setFocus = function () {\n    if (this.parentElement) {\n      var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n\n      for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n        var item = pivotButtons_1[_i];\n\n        if (item.getAttribute('data-uid') === this.fieldName) {\n          item.focus();\n          break;\n        }\n      }\n    }\n  };\n\n  PivotButton.prototype.ClearFilter = function (e) {\n    var dialogElement = this.dialogPopUp.element;\n    var fieldName = dialogElement.getAttribute('data-fieldname');\n    var tabElement = dialogElement.querySelector('.e-selected-tab');\n    this.dialogPopUp.close();\n\n    if (this.parent.dataType === 'olap' && tabElement) {\n      var levelName = tabElement.getAttribute('data-selectedField');\n      this.removeDataSourceSettings(fieldName, levelName);\n    } else {\n      this.removeDataSourceSettings(fieldName);\n    }\n\n    var filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n    this.refreshPivotButtonState(fieldName, filterObject ? true : false);\n    this.updateDataSource(true);\n  };\n\n  PivotButton.prototype.removeButton = function (args) {\n    var _this = this;\n\n    var target = args.target;\n    var fieldName = target.parentElement.id;\n    var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n    var removeFieldArgs = {\n      cancel: false,\n      fieldName: fieldName,\n      dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n      fieldItem: fieldInfo.fieldItem,\n      axis: fieldInfo.axis\n    };\n    var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        if (target.parentElement.getAttribute('isvalue') === 'true') {\n          _this.parent.setProperties({\n            dataSourceSettings: {\n              values: []\n            }\n          }, true);\n\n          if (_this.parent.dataType === 'olap') {\n            _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n          }\n        } else {\n          _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(fieldName);\n\n          if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n            _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n          }\n        }\n\n        if (_this.parent.getModuleName() === 'pivotfieldlist') {\n          _this.parent.axisFieldModule.render();\n        }\n\n        _this.updateDataSource();\n      }\n    });\n  };\n  /** @hidden */\n\n\n  PivotButton.prototype.nodeStateModified = function (args) {\n    var target = closest(args.node, 'li');\n    var fieldName = target.getAttribute('data-fieldname');\n\n    if (target.getAttribute('data-memberId') === 'all') {\n      this.memberTreeView.nodeChecked = null;\n\n      if (args.action === 'check') {\n        this.memberTreeView.checkAll();\n      } else {\n        this.memberTreeView.uncheckAll();\n      }\n\n      if (this.parent.dataType === 'olap' && this.parent.olapEngineModule && !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n        this.updateNodeStates(this.memberTreeView.getAllCheckedNodes(), fieldName, args.action);\n      }\n\n      this.checkedStateAll(args.action);\n      this.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n    } else {\n      if (this.parent.dataType === 'olap' && this.parent.olapEngineModule && !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n        // let st1: number = new Date().getTime();\n        var checkedNodes = this.memberTreeView.getAllCheckedNodes(); // let st2: number = (new Date().getTime() - st1) / 1000;\n        // console.log('getAllCheckedNodes:' + st2);\n\n        this.updateNodeStates(checkedNodes, fieldName, args.action);\n      }\n\n      var pos = this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-memberId')].index;\n\n      if (this.parent.pivotCommon.currentTreeItems[pos]) {\n        this.parent.pivotCommon.currentTreeItems[pos].isSelected = args.action === 'check';\n        this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-memberId')].isSelected = args.action === 'check';\n      }\n    }\n\n    this.parent.pivotCommon.filterDialog.updateCheckedState();\n  };\n\n  PivotButton.prototype.checkedStateAll = function (state) {\n    var searchItemObj = {};\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n\n    for (var _i = 0, _a = this.parent.pivotCommon.searchTreeItems; _i < _a.length; _i++) {\n      var item = _a[_i];\n      item.isSelected = state === 'check';\n      searchItemObj[item.htmlAttributes['data-memberId']] = item.htmlAttributes['data-memberId'];\n    }\n\n    for (var _b = 0, _c = this.parent.pivotCommon.currentTreeItems; _b < _c.length; _b++) {\n      var item = _c[_b];\n\n      if (searchItemObj[item.htmlAttributes['data-memberId']] !== undefined) {\n        item.isSelected = state === 'check';\n        this.parent.pivotCommon.currentTreeItemsPos[item.htmlAttributes['data-memberId']].isSelected = state === 'check';\n      }\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n\n  };\n\n  PivotButton.prototype.updateNodeStates = function (checkedNodes, fieldName, state) {\n    var fieldList = this.parent.pivotCommon.engineModule.fieldList[fieldName];\n    var currentMembers = fieldList.members;\n    var searchMembers = fieldList.currrentMembers;\n\n    if (fieldList.searchMembers.length > 0) {\n      var members = Object.keys(searchMembers);\n\n      for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n        var member = members_1[_i];\n\n        if (searchMembers[member]) {\n          searchMembers[member].isSelected = false;\n        }\n\n        if (currentMembers[member]) {\n          currentMembers[member].isSelected = false;\n\n          if (this.memberTreeView.element.querySelector('li[data-memberId=\"' + member + '\"]')) {\n            var element = this.memberTreeView.element.querySelector('li[data-memberId=\"' + member + '\"]');\n\n            if (element && !element.querySelector('ul')) {\n              this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, member, false);\n            }\n          }\n        }\n      }\n\n      for (var _a = 0, checkedNodes_1 = checkedNodes; _a < checkedNodes_1.length; _a++) {\n        var node = checkedNodes_1[_a];\n\n        if (currentMembers[node]) {\n          if (this.memberTreeView.element.querySelector('li[data-memberId=\"' + node + '\"]')) {\n            var element = this.memberTreeView.element.querySelector('li[data-memberId=\"' + node + '\"]');\n\n            if (element && !element.querySelector('ul')) {\n              currentMembers[node].isSelected = true;\n              this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n            }\n          }\n        }\n\n        if (searchMembers[node]) {\n          searchMembers[node].isSelected = true;\n        }\n      }\n    } else {\n      var members = Object.keys(currentMembers);\n\n      for (var _b = 0, members_2 = members; _b < members_2.length; _b++) {\n        var member = members_2[_b];\n\n        if (currentMembers[member].isSelected) {\n          currentMembers[member].isSelected = false;\n        }\n      }\n\n      for (var _c = 0, checkedNodes_2 = checkedNodes; _c < checkedNodes_2.length; _c++) {\n        var node = checkedNodes_2[_c];\n\n        if (currentMembers[node]) {\n          currentMembers[node].isSelected = true;\n          this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n        }\n      }\n    }\n  };\n\n  PivotButton.prototype.updateFilterState = function (fieldName, args) {\n    var _this = this;\n\n    var isNodeUnChecked = false;\n    var filterItem = {\n      items: [],\n      name: fieldName,\n      type: 'Include'\n    };\n    var engineModule = this.parent.olapEngineModule;\n\n    if (this.parent.dataType === 'olap' && engineModule && !engineModule.fieldList[fieldName].isHierarchy) {\n      var cMembers = engineModule.fieldList[fieldName].members;\n      var sMembers = engineModule.fieldList[fieldName].currrentMembers;\n      filterItem.items = this.memberTreeView.getAllCheckedNodes();\n      filterItem.levelCount = engineModule.fieldList[fieldName].levelCount;\n      isNodeUnChecked = filterItem.items.length === this.memberTreeView.fields.dataSource.length ? false : true;\n\n      if (engineModule.fieldList[fieldName].searchMembers.length > 0 && !isNodeUnChecked) {\n        var cNodeLength = Object.keys(cMembers).length;\n        var sNodeLength = Object.keys(sMembers).length;\n        isNodeUnChecked = cNodeLength === sNodeLength && cNodeLength === filterItem.items.length ? false : true;\n      }\n\n      var filterItems = filterItem.items;\n\n      for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n        var node = filterItems_3[_i];\n\n        if (engineModule.fieldList[fieldName].searchMembers.length > 0 && sMembers[node]) {\n          sMembers[node].isSelected = true;\n        } else if (cMembers[node]) {\n          cMembers[node].isSelected = true;\n        }\n      }\n    } else {\n      for (var _a = 0, _b = this.parent.pivotCommon.searchTreeItems; _a < _b.length; _a++) {\n        var item = _b[_a];\n\n        if (item.isSelected) {\n          if (this.parent.pivotCommon.isDateField) {\n            filterItem.items.push(item.name);\n          } else {\n            filterItem.items.push(item.htmlAttributes['data-memberId']);\n          }\n        }\n      }\n\n      isNodeUnChecked = filterItem.items.length === this.parent.pivotCommon.currentTreeItems.length ? false : true;\n    }\n\n    if (this.parent.dataType === 'olap') {\n      this.removeDataSourceSettings(fieldName);\n    }\n\n    if (this.parent.allowDeferLayoutUpdate) {\n      this.parent.engineModule.fieldList[filterItem.name].filterType = filterItem.type.toLowerCase();\n      this.parent.engineModule.fieldList[filterItem.name].filter = [];\n\n      for (var i = 0; i < filterItem.items.length; i++) {\n        this.parent.engineModule.fieldList[filterItem.name].filter.push(filterItem.items[i]);\n      }\n    }\n\n    var filterEventArgs = {\n      filterSettings: filterItem,\n      dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n      cancel: false\n    };\n    var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n      filterItem = observedArgs.filterSettings;\n\n      if (!observedArgs.cancel) {\n        var filterObject = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n\n        if (filterObject) {\n          for (var i = 0; i < _this.parent.dataSourceSettings.filterSettings.length; i++) {\n            if (_this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n              _this.parent.dataSourceSettings.filterSettings.splice(i, 1);\n\n              break;\n            }\n          }\n        }\n\n        _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n      }\n\n      _this.dialogPopUp.close();\n\n      if (!observedArgs.cancel) {\n        _this.refreshPivotButtonState(fieldName, isNodeUnChecked);\n\n        if (!isNodeUnChecked) {\n          _this.removeDataSourceSettings(fieldName);\n        }\n\n        _this.parent.lastFilterInfo = filterItem;\n\n        _this.updateDataSource(true);\n\n        var thisObj = _this; //setTimeout(() => {\n\n        if (thisObj.parent instanceof PivotFieldList) {\n          thisObj.axisField.render();\n        } //});\n\n      }\n\n      var pivotButtons = [].slice.call(_this.parentElement.querySelectorAll('.e-pivot-button'));\n\n      for (var _i = 0, pivotButtons_2 = pivotButtons; _i < pivotButtons_2.length; _i++) {\n        var item = pivotButtons_2[_i];\n\n        if (item.getAttribute('data-uid') === fieldName) {\n          item.focus();\n          break;\n        }\n      }\n    });\n  };\n\n  PivotButton.prototype.refreshPivotButtonState = function (fieldName, isFiltered) {\n    var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n    var selectedButton;\n\n    for (var _i = 0, pivotButtons_3 = pivotButtons; _i < pivotButtons_3.length; _i++) {\n      var item = pivotButtons_3[_i];\n\n      if (item.getAttribute('data-uid') === fieldName) {\n        selectedButton = item.querySelector('.' + cls.FILTER_COMMON_CLASS);\n        break;\n      }\n    }\n\n    if (isFiltered) {\n      removeClass([selectedButton], cls.FILTER_CLASS);\n      addClass([selectedButton], cls.FILTERED_CLASS);\n    } else {\n      removeClass([selectedButton], cls.FILTERED_CLASS);\n      addClass([selectedButton], cls.FILTER_CLASS);\n    }\n  };\n\n  PivotButton.prototype.removeDataSourceSettings = function (fieldName, selectedField, type) {\n    var filterSettings = this.parent.dataSourceSettings.filterSettings;\n\n    for (var len = 0, lnt = filterSettings.length; len < lnt; len++) {\n      if (this.parent.dataType === 'olap' && selectedField) {\n        if (!type && filterSettings[len].name === fieldName && filterSettings[len].selectedField === selectedField) {\n          filterSettings.splice(len, 1);\n          break;\n        } else if (type) {\n          if (filterSettings[len].type !== type && filterSettings[len].name === fieldName) {\n            filterSettings.splice(len, 1);\n            lnt--;\n            len--;\n          }\n        }\n      } else {\n        if (filterSettings[len].name === fieldName) {\n          filterSettings.splice(len, 1);\n\n          if (this.parent.dataType !== 'olap') {\n            break;\n          }\n\n          lnt--;\n          len--;\n        }\n      }\n    }\n  };\n\n  PivotButton.prototype.updateDropIndicator = function (e) {\n    if (this.parent.isDragging) {\n      removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n      removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n\n      if (closest(e.target, '.' + cls.DROPPABLE_CLASS)) {\n        var element = closest(e.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n        addClass([element.querySelector('.' + cls.DROP_INDICATOR_CLASS)], cls.INDICATOR_HOVER_CLASS);\n      }\n    }\n  };\n\n  PivotButton.prototype.wireEvent = function (element, axis, isMeasureAvail) {\n    EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n\n    if (!isMeasureAvail) {\n      if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n        EventHandler.add(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting, this);\n      }\n\n      if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n        EventHandler.add(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering, this);\n      }\n\n      if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n        EventHandler.add(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption, this);\n      }\n    }\n\n    if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n      EventHandler.add(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog, this);\n    }\n\n    if (element.querySelector('.' + cls.REMOVE_CLASS) !== null) {\n      EventHandler.add(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton, this);\n    }\n  };\n\n  PivotButton.prototype.unWireEvent = function (element, axis, isMeasureAvail) {\n    EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n\n    if (!isMeasureAvail) {\n      if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n        EventHandler.remove(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting);\n      }\n\n      if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n        EventHandler.remove(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering);\n      }\n\n      if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n        EventHandler.remove(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption);\n      }\n    }\n\n    if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n      EventHandler.remove(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog);\n    }\n\n    if (element.querySelector('.' + cls.REMOVE_CLASS) !== null) {\n      EventHandler.remove(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  PivotButton.prototype.addEventListener = function () {\n    this.handlers = {\n      load: this.renderPivotButton\n    };\n\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.pivotButtonUpdate, this.handlers.load, this);\n  };\n  /**\n   * @hidden\n   */\n\n\n  PivotButton.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.pivotButtonUpdate, this.handlers.load);\n  };\n  /**\n   * To destroy the pivot button event listener\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PivotButton.prototype.destroy = function () {\n    if (this.menuOption) {\n      this.menuOption.destroy();\n    }\n\n    if (this.valueFiedDropDownList && !this.valueFiedDropDownList.isDestroyed) {\n      this.valueFiedDropDownList.destroy();\n      this.valueFiedDropDownList = null;\n    }\n\n    if (this.columnFieldDropDownList && !this.columnFieldDropDownList.isDestroyed) {\n      this.columnFieldDropDownList.destroy();\n      this.columnFieldDropDownList = null;\n    }\n\n    if (this.memberTreeView && !this.memberTreeView.isDestroyed) {\n      this.memberTreeView.destroy();\n      this.memberTreeView = null;\n    }\n\n    if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n      this.dialogPopUp.destroy();\n      this.dialogPopUp = null;\n    }\n\n    if (this.draggable && !this.draggable.isDestroyed) {\n      this.draggable.destroy();\n      this.draggable = null;\n    }\n\n    if (this.axisField) {\n      this.axisField = null;\n    }\n\n    this.removeEventListener();\n    this.isDestroyed = true;\n  };\n\n  return PivotButton;\n}();\n\nexport { PivotButton };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-pivotview/src/common/actions/pivot-button.js"],"names":["createElement","Draggable","remove","extend","detach","isNullOrUndefined","EventHandler","isBlazor","select","isNOU","addClass","removeClass","closest","Browser","PivotFieldList","cls","events","Button","showSpinner","hideSpinner","AggregateMenu","AxisFieldRenderer","DropDownList","PivotUtil","PivotButton","parent","menuOption","pivotButtonModule","addEventListener","axisField","isDestroyed","prototype","renderPivotButton","args","_this","_a","field","axis","axisElement","valuePos","showValuesButton","dataType","getModuleName","pivotGridModule","dataSourceSettings","valueAxis","values","length","getFieldByName","localeObj","getConstant","push","name","caption","showRemoveIcon","allowDragAndDrop","parentElement","element","document","getElementById","id","querySelector","FIELD_LIST_CLASS","axisPrompt","AXIS_PROMPT_CLASS","ICON_DISABLE","AXIS_CONTENT_CLASS","_i","_b","querySelectorAll","classList","contains","GROUP_CHART_VALUE","GROUP_CHART_COLUMN","className","innerHTML","groupingBarSettings","appendChild","i","cnt","_c","_d","isMeasureAvail","toLowerCase","isMeasureFieldsAvail","buttonWrapper","PIVOT_BUTTON_WRAPPER_CLASS","attrs","buttonElement","PIVOT_BUTTON_CLASS","replace","grid","GROUP_CHART_ROW","type","baseField","baseItem","dropIndicatorElement","DROP_INDICATOR_CLASS","dropLastIndicatorElement","dragWrapper","createButtonDragIcon","contentElement","createButtonText","isNamedSet","isCalculatedField","indexOf","enableVirtualization","undefined","createSortOption","createFilterOption","getTypeStatus","calcElement","ICON","CALC_EDIT","allowCalculatedField","calculatedFieldModule","showEditIcon","removeElement","REMOVE_CLASS","pivotButton","enableRtl","locale","isStringTemplate","appendTo","unWireEvent","wireEvent","isAdaptive","createDraggable","BUTTON_DRAGGABLE","ej2_instances","enableAutoScroll","_loop_1","this_1","chartModule","valueData","map","item","text","value","parent_1","valueFiedDropDownList","GROUP_CHART_VALUE_DROPDOWN_DIV","dataSource","chartSettings","enableMultipleAxis","currentMeasure","ddlDiv","width","fields","cssClass","GROUP_CHART_VALUE_DROPDOWN","change","e","_e","_f","availColindex","_g","_h","delimiter","columnDelimiter","columnHeader","split","join","engineModule","olapEngineModule","pivotValues","totColIndex","getColumnTotalIndex","rKeys","Object","keys","columnData","firstValueRow","_j","rKeys_1","rKey","rowIndex","Number","rows","firstRowCell","tupInfo","tupRowInfo","ordinal","cKeys","_k","cKeys_1","cKey","cellIndex","cell","actualText","measureName","colIndex","columnSeries","columnHeaders","toString","valueSortSettings","headerDelimiter","title","columnFieldDropDownList","GROUP_CHART_COLUMN_DROPDOWN_DIV","htmlAttributes","GROUP_CHART_COLUMN_DROPDOWN","delimiter_1","buttonText","aggregation","filterMem","updateButtontext","fieldList","aggregateType","showAggregationOnValueField","PIVOT_BUTTON_CONTENT_CLASS","DRAG_DISABLE_CLASS","fieldListItem","validateDropdown","createSummaryType","aggregateTypes","getAllSummaryType","fieldName","spanElement","AXISFIELD_ICON_CLASS","showValueTypeIcon","createMenuOption","render","openCalculatedFieldDialog","target","showFieldList","pivotFieldListModule","TOGGLE_FIELD_LIST_CLASS","click","dialogRenderer","adaptiveElement","updateAdaptiveCalculatedField","buttonCall","notify","initCalculatedField","edit","fieldListDialog","hide","ICON_HIDDEN","draggable","clone","enableTailMode","helper","createDragClone","bind","dragStart","onDragStart","drag","onDragging","dragStop","onDragStop","abort","dragElement","DRAG_CLASS","sortCLass","allowDeferLayoutUpdate","sort","SORT_DESCEND_CLASS","sortSettings","order","SORT_CLASS","enableSorting","showSortIcon","filterCLass","filter","isExcelFilter","FILTER_CLASS","FILTERED_CLASS","filterSettings","FILTER_COMMON_CLASS","allowLabelFilter","allowValueFilter","allowMemberFilter","showFilterIcon","filterCount","filterType","memLen","dateMember","firstNode","updateOlapButtonText","j","allNodes","members","filteredItems","loop","test","x","filterItems","actualFilter","cMembers","actualFilterItems","filterMembers","dummyfilterItems","filterItems_1","pivotCommon","eventBase","getParentNode","updatedFilterItems","updatedFilterItems_1","isSelected","allMember","cloneElement","DRAG_CLONE_CLASS","TEXT_CONTENT_CLASS","textContent","body","dragItem","fieldInfo","getFieldInfo","getAttribute","dragEventArgs","fieldItem","getClonedDataSourceSettings","cancel","control","isPopupView","trigger","fieldDragStart","observedArgs","isDragging","data","ROW_AXIS_CLASS","COLUMN_AXIS_CLASS","FILTER_AXIS_CLASS","SELECTED_NODE_CLASS","renderMode","fieldListPopup","style","zIndex","axis_1","axisContent","NO_DRAG_CLASS","bindEvents","intDestroy","event","setProperties","cursorAt","top","targetTouches","isDevice","GROUP_ALL_FIELDS_CLASS","DROPPABLE_CLASS","slice","call","INDICATOR_HOVER_CLASS","axis_2","filterDialog","dialogPopUp","close","cursor","isButtonDropped","dataSourceUpdate","nodeStateModified","onStateModified","updateDataSource","thisObj","axisFieldModule","dropTarget","axisPanel","droppableElement","isDropped","pivotButtons","droppableTarget","sourcePosition","droppedPosition","n","droppableButton","updateSorting","enableValueSorting","headerText","isRefreshGrid","uiUpdate","properties","triggerPopulateEvent","updateFiltering","pivotObj","fieldListSpinnerElement","showWaitingPopup","mouseEventArgs","filterTargetID","moduleName","parentID","$this_1","interopAdaptor","invokeMethodAsync","then","parsedData","JSON","parse","dateMembers","formattedMembers","formattedText","FormattedText","ActualText","updateFilterEvents","mode","getEngine","removeFilterDialog","bindDialogEvents","hideWaitingPopup","allowExcelLikeFilter","tabObj","index","selectedItem","updateDialogButtonEvents","buttons","buttonModel","dataBind","selected","tabSelect","iconCss","content","disabled","filterObject","ClearFilter","OK_BUTTON_CLASS","isPrimary","updateFilterState","updateCustomFilter","closeFilterDialog","CANCEL_BUTTON_CLASS","selectedIndex","updateCheckedState","removeAttribute","dialogElement","levelName","measure","operator","operand1","operand2","filterItem","condition","value1","Date","value2","selectedField","removeDataSourceSettings","filterItems_2","getFilterItemByName","inputElementString","focusElement","EMPTY_FIELD","focus","filterEventArgs","memberFiltering","lastFilterInfo","refreshPivotButtonState","destroy","setTimeout","setFocus","pivotButtons_1","tabElement","removeButton","removeFieldArgs","fieldRemove","removeFieldFromReport","node","memberTreeView","nodeChecked","action","checkAll","uncheckAll","isHierarchy","updateNodeStates","getAllCheckedNodes","checkedStateAll","checkedNodes","pos","currentTreeItemsPos","currentTreeItems","state","searchItemObj","searchTreeItems","currentMembers","searchMembers","currrentMembers","members_1","member","updateChildNodeStates","checkedNodes_1","members_2","checkedNodes_2","isNodeUnChecked","items","sMembers","levelCount","cNodeLength","sNodeLength","filterItems_3","isDateField","splice","pivotButtons_2","isFiltered","selectedButton","pivotButtons_3","len","lnt","updateDropIndicator","add","handlers","load","on","pivotButtonUpdate","removeEventListener","off"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,MAAnC,EAA2CC,MAA3C,EAAmDC,MAAnD,EAA2DC,iBAA3D,QAAoF,sBAApF;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,MAAjC,QAA+C,sBAA/C;AACA,SAASH,iBAAiB,IAAII,KAA9B,EAAqCC,QAArC,EAA+CC,WAA/C,EAA4DC,OAA5D,EAAqEC,OAArE,QAAoF,sBAApF;AACA,SAASC,cAAT,QAA+B,sCAA/B;AACA,OAAO,KAAKC,GAAZ,MAAqB,gCAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,4BAAxB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,wBAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,iBAAT,QAAkC,mDAAlC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA;AACA;AACA;;AACA;;AACA,IAAIC,WAAW,GAAkB,YAAY;AACzC;AACJ;AACA;AACA;AACI,WAASA,WAAT,CAAqBC,MAArB,EAA6B;AACzB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,UAAL,GAAkB,IAAIN,aAAJ,CAAkB,KAAKK,MAAvB,CAAlB;AACA,SAAKA,MAAL,CAAYE,iBAAZ,GAAgC,IAAhC;AACA,SAAKC,gBAAL;;AACA,QAAI,KAAKH,MAAL,YAAuBX,cAA3B,EAA2C;AACvC,WAAKe,SAAL,GAAiB,IAAIR,iBAAJ,CAAsB,KAAKI,MAA3B,CAAjB;AACH;;AACD,SAAKK,WAAL,GAAmB,KAAnB;AACH;AACD;;;AACAN,EAAAA,WAAW,CAACO,SAAZ,CAAsBC,iBAAtB,GAA0C,UAAUC,IAAV,EAAgB;AACtD,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIC,EAAJ;;AACA,QAAIC,KAAK,GAAGjC,MAAM,CAAC,EAAD,EAAK8B,IAAI,CAACG,KAAV,EAAiB,IAAjB,EAAuB,IAAvB,CAAlB;AACA,QAAIC,IAAI,GAAGJ,IAAI,CAACI,IAAhB;AACA,QAAIC,WAAJ;AACA,QAAIC,QAAQ,GAAG,CAAC,CAAhB;AACA,QAAIC,gBAAgB,GAAI,KAAKf,MAAL,CAAYgB,QAAZ,KAAyB,OAAzB,GAAoC,KAAKhB,MAAL,CAAYiB,aAAZ,OAAgC,gBAAhC,IACxD,KAAKjB,MAAL,CAAYkB,eAD2C,GAEvD,KAAKlB,MAAL,CAAYkB,eAAZ,CAA4BH,gBAF2B,GAER,KAAKf,MAAL,CAAYe,gBAFvC,GAE0D,KAFlF;;AAGA,QAAI,CAAE,KAAKf,MAAL,CAAYmB,kBAAZ,CAA+BC,SAA/B,KAA6C,KAA7C,IAAsDZ,IAAI,CAACI,IAAL,KAAc,MAArE,IACA,KAAKZ,MAAL,CAAYmB,kBAAZ,CAA+BC,SAA/B,KAA6C,QAA7C,IAAyDZ,IAAI,CAACI,IAAL,KAAc,SADxE,KACuFG,gBADvF,IAC2G,KAAKf,MAAL,CAAYmB,kBAAZ,CAA+BE,MAA/B,CAAsCC,MAAtC,GAA+C,CAD9J,EACiK;AAC7JR,MAAAA,QAAQ,GAAGH,KAAK,CAACW,MAAjB;;AACA,UAAI1C,iBAAiB,CAACkB,SAAS,CAACyB,cAAV,CAAyB,KAAKvB,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,QAAlC,CAAzB,EAAsEd,KAAtE,CAAD,CAArB,EAAqG;AACjGA,QAAAA,KAAK,CAACe,IAAN,CAAW;AACPC,UAAAA,IAAI,EAAE,KAAK3B,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,QAAlC,CADC;AAC4CG,UAAAA,OAAO,EAAE,KAAK5B,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,QAAlC,CADrD;AAEPb,UAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFJ;AAEUiB,UAAAA,cAAc,EAAE,IAF1B;AAEgCC,UAAAA,gBAAgB,EAAE;AAFlD,SAAX;AAIH;AACJ;;AACD,SAAKC,aAAL,GAAqB,KAAK/B,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,GAA8C,KAAKjB,MAAL,CAAYgC,OAA1D,GACjBC,QAAQ,CAACC,cAAT,CAAwB,KAAKlC,MAAL,CAAYgC,OAAZ,CAAoBG,EAApB,GAAyB,UAAjD,CADJ;;AAEA,QAAI,KAAKnC,MAAL,CAAYiB,aAAZ,OAAgC,gBAApC,EAAsD;AAClD,WAAKc,aAAL,GAAqBE,QAAQ,CAACC,cAAT,CAAwB,KAAKlC,MAAL,CAAYgC,OAAZ,CAAoBG,EAApB,GAAyB,UAAjD,CAArB;;AACA,UAAI,KAAKJ,aAAL,CAAmBK,aAAnB,CAAiC,MAAM9C,GAAG,CAAC+C,gBAAV,GAA6B,GAA7B,GAAmCzB,IAApE,CAAJ,EAA+E;AAC3E,YAAI0B,UAAU,GAAG,KAAKP,aAAL,CAAmBK,aAAnB,CAAiC,MAAM9C,GAAG,CAAC+C,gBAAV,GAA6B,GAA7B,GAAmCzB,IAApE,EACZwB,aADY,CACE,MAAM9C,GAAG,CAACiD,iBADZ,CAAjB;;AAEA,YAAI5B,KAAK,CAACW,MAAN,KAAiB,CAArB,EAAwB;AACpBpC,UAAAA,WAAW,CAAC,CAACoD,UAAD,CAAD,EAAehD,GAAG,CAACkD,YAAnB,CAAX;AACH,SAFD,MAGK;AACDvD,UAAAA,QAAQ,CAAC,CAACqD,UAAD,CAAD,EAAehD,GAAG,CAACkD,YAAnB,CAAR;AACH;;AACD3B,QAAAA,WAAW,GACP,KAAKkB,aAAL,CAAmBK,aAAnB,CAAiC,MAAM9C,GAAG,CAAC+C,gBAAV,GAA6B,GAA7B,GAAmCzB,IAApE,EAA0EwB,aAA1E,CAAwF,MAAM9C,GAAG,CAACmD,kBAAlG,CADJ;AAEH,OAXD,MAYK;AACD;AACH;AACJ,KAjBD,MAkBK;AACD,WAAKV,aAAL,GAAqB,KAAK/B,MAAL,CAAYgC,OAAjC;AACAnB,MAAAA,WAAW,GAAG,KAAKkB,aAAL,CAAmBK,aAAnB,CAAiC,cAAcxB,IAA/C,CAAd;AACH;;AACD,QAAIC,WAAJ,EAAiB;AACb,UAAI,KAAKb,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,IAA+CN,KAAK,CAACW,MAAN,KAAiB,CAApE,EAAuE;AACnE,aAAK,IAAIoB,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAKZ,aAAL,CAAmBa,gBAAnB,CAAoC,cAAchC,IAAlD,CAAtB,EAA+E8B,EAAE,GAAGC,EAAE,CAACrB,MAAvF,EAA+FoB,EAAE,EAAjG,EAAqG;AACjG,cAAIV,OAAO,GAAGW,EAAE,CAACD,EAAD,CAAhB;;AACA,cAAI,CAACV,OAAO,CAACa,SAAR,CAAkBC,QAAlB,CAA2BxD,GAAG,CAACyD,iBAA/B,CAAD,IAAsD,CAACf,OAAO,CAACa,SAAR,CAAkBC,QAAlB,CAA2BxD,GAAG,CAAC0D,kBAA/B,CAA3D,EAA+G;AAC3G,gBAAIV,UAAU,GAAG/D,aAAa,CAAC,MAAD,EAAS;AACnC0E,cAAAA,SAAS,EAAE3D,GAAG,CAACiD,iBADoB;AAEnCW,cAAAA,SAAS,EAAG,KAAKlD,MAAL,CAAYmD,mBAAZ,CAAgCrB,gBAAhC,GAAmDlB,IAAI,KAAK,MAAT,GAAkB,KAAKZ,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,eAAlC,CAAlB,GAC3Db,IAAI,KAAK,SAAT,GAAqB,KAAKZ,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,kBAAlC,CAArB,GACIb,IAAI,KAAK,QAAT,GAAoB,KAAKZ,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,iBAAlC,CAApB,GACIb,IAAI,KAAK,SAAT,GAAqB,KAAKZ,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,kBAAlC,CAArB,GACI,KAAKzB,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,WAAlC,CAJJ,GAIqD;AAN9B,aAAT,CAA9B;AAQAO,YAAAA,OAAO,CAACoB,WAAR,CAAoBd,UAApB;AACH;AACJ;AACJ,OAfD,MAgBK;AACD,aAAK,IAAIe,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG3C,KAAK,CAACW,MAA5B,EAAoC+B,CAAC,GAAGC,GAAxC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,eAAK,IAAIE,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAI,KAAKxD,MAAL,CAAYiB,aAAZ,OAAgC,gBAAhC,GAAmD,CAACJ,WAAD,CAAnD,GAAmE,KAAKkB,aAAL,CAAmBa,gBAAnB,CAAoC,cAAchC,IAAlD,CAA1F,EAAoJ2C,EAAE,GAAGC,EAAE,CAAClC,MAA5J,EAAoKiC,EAAE,EAAtK,EAA0K;AACtK,gBAAIvB,OAAO,GAAGwB,EAAE,CAACD,EAAD,CAAhB;AACAvB,YAAAA,OAAO,GAAGA,OAAV;AACA,gBAAIyB,cAAc,GAAI,KAAKzD,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,KAAoCL,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAT,CAAc+B,WAAd,OAAgC,YAAhC,IAAgD9C,IAAI,KAAK,QAA7F,CAAtB;AACA,gBAAI+C,oBAAoB,GAAI,KAAK3D,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,IAAmCJ,IAAI,KAAK,QAAxE;;AACA,gBAAI,CAACoB,OAAO,CAACa,SAAR,CAAkBC,QAAlB,CAA2BxD,GAAG,CAACyD,iBAA/B,CAAD,IAAsD,CAACf,OAAO,CAACa,SAAR,CAAkBC,QAAlB,CAA2BxD,GAAG,CAAC0D,kBAA/B,CAA3D,EAA+G;AAC3G,kBAAIY,aAAa,GAAGrF,aAAa,CAAC,KAAD,EAAQ;AACrC0E,gBAAAA,SAAS,EAAE3D,GAAG,CAACuE,0BAAJ,IAAkCR,CAAC,KAAK,CAAN,IAAWzC,IAAI,KAAK,YAApB,GAAmC,cAAnC,GAAoD,EAAtF,CAD0B;AAErCkD,gBAAAA,KAAK,EAAE;AAAE,8BAAYlD,IAAI,GAAG,GAAP,GAAaD,KAAK,CAAC0C,CAAD,CAAL,CAAS1B;AAApC;AAF8B,eAAR,CAAjC;AAIA,kBAAIoC,aAAa,GAAGxF,aAAa,CAAC,KAAD,EAAQ;AACrC4D,gBAAAA,EAAE,EAAExB,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IADwB;AAClBsB,gBAAAA,SAAS,EAAE3D,GAAG,CAAC0E,kBAAJ,GAAyB,GAAzB,GAA+BrD,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAT,CAAcsC,OAAd,CAAsB,aAAtB,EAAqC,EAArC,CADxB;AAErCH,gBAAAA,KAAK,EAAE;AACH,8BAAYnD,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IADlB;AAEH,8BAAa,KAAK3B,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,IAA+C,KAAKjB,MAAL,CAAYkE,IAA3D,IAAmEtD,IAAI,KAAK,MAA5E,IAAsF,CAACoB,OAAO,CAACa,SAAR,CAAkBC,QAAlB,CAA2BxD,GAAG,CAAC6E,eAA/B,CAAxF,GAA2I,IAA3I,GAAkJ,GAF3J;AAGH,6BAAYd,CAAC,KAAKvC,QAAN,IAAkB2C,cAAc,IAAI,CAACE,oBAAtC,GAA8D,MAA9D,GAAuE,OAH/E;AAIH,mCAAiB,OAJd;AAIuB,gCAAchD,KAAK,CAAC0C,CAAD,CAAL,CAASzB,OAAT,GAAmBjB,KAAK,CAAC0C,CAAD,CAAL,CAASzB,OAA5B,GAAsCjB,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAJpF;AAKH,+BAAc,KAAK3B,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,GAAkC2C,oBAAoB,GAAG,sBAAH,GAA4BF,cAAc,GAAG,gBAAH,GAAsB9C,KAAK,CAAC0C,CAAD,CAAL,CAASe,IAA/H,GAAsIzD,KAAK,CAAC0C,CAAD,CAAL,CAASe,IAL1J;AAMH,kCAAgBzD,KAAK,CAAC0C,CAAD,CAAL,CAASzB,OAAT,GAAmBjB,KAAK,CAAC0C,CAAD,CAAL,CAASzB,OAA5B,GAAsCjB,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAN5D;AAOH,oCAAkBhB,KAAK,CAAC0C,CAAD,CAAL,CAASgB,SAPxB;AAQH,mCAAiB1D,KAAK,CAAC0C,CAAD,CAAL,CAASiB;AARvB;AAF8B,eAAR,CAAjC;AAaA,kBAAIC,oBAAoB,GAAGhG,aAAa,CAAC,MAAD,EAAS;AAC7CuF,gBAAAA,KAAK,EAAE;AAAE,8BAAY,IAAd;AAAoB,mCAAiB;AAArC,iBADsC;AAE7Cb,gBAAAA,SAAS,EAAE3D,GAAG,CAACkF;AAF8B,eAAT,CAAxC;AAIA,kBAAIC,wBAAwB,GAAGlG,aAAa,CAAC,MAAD,EAAS;AACjDuF,gBAAAA,KAAK,EAAE;AAAE,8BAAY,IAAd;AAAoB,mCAAiB;AAArC,iBAD0C;AAEjDb,gBAAAA,SAAS,EAAE3D,GAAG,CAACkF,oBAAJ,GAA2B;AAFW,eAAT,CAA5C;AAIA,kBAAIE,WAAW,GAAG,KAAKC,oBAAL,CAA0BhE,KAAK,CAAC0C,CAAD,CAA/B,EAAoCU,aAApC,CAAlB;AACA,kBAAIa,cAAc,GAAG,KAAKC,gBAAL,CAAsBlE,KAAtB,EAA6B0C,CAA7B,EAAgCzC,IAAhC,EAAsCE,QAAtC,CAArB;AACAiD,cAAAA,aAAa,CAACX,WAAd,CAA0BwB,cAA1B;;AACA,kBAAIhE,IAAI,KAAK,YAAb,EAA2B;AACvB,oBAAI,CAAC6C,cAAD,IAAmB,CAAC9C,KAAK,CAAC0C,CAAD,CAAL,CAASyB,UAA7B,IAA2C,CAACnE,KAAK,CAAC0C,CAAD,CAAL,CAAS0B,iBAAzD,EAA4E;AACxE,sBAAI,CAAC,SAAD,EAAY,QAAZ,EAAsBC,OAAtB,CAA8BpE,IAA9B,MAAwC,CAAC,CAAzC,IAA8CE,QAAQ,KAAKuC,CAA3D,IACA,EAAE,KAAKrD,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,KAAqC,KAAKhB,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,IACnC,KAAKjB,MAAL,CAAYiF,oBADsB,IACI,KAAKjF,MAAL,CAAYiB,aAAZ,OAAgC,gBAAhC,IACtC,KAAKjB,MAAL,CAAYkB,eAAZ,KAAgCgE,SADM,IAEtC,KAAKlF,MAAL,CAAYkB,eAAZ,CAA4B+D,oBAH9B,CAAF,CADJ,EAI6D;AACzD,yBAAKE,gBAAL,CAAsBpB,aAAtB,EAAqCpD,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAA9C,EAAoDhB,KAAK,CAAC0C,CAAD,CAAzD;AACH;;AACD,sBAAIzC,IAAI,KAAK,QAAT,IAAqBE,QAAQ,KAAKuC,CAAtC,EAAyC;AACrC,yBAAK+B,kBAAL,CAAwBrB,aAAxB,EAAuCpD,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAhD,EAAsDf,IAAtD,EAA4DD,KAAK,CAAC0C,CAAD,CAAjE;AACH;;AACD,sBAAIzC,IAAI,KAAK,QAAb,EAAuB;AACnB,yBAAKyE,aAAL,CAAmB1E,KAAnB,EAA0B0C,CAA1B,EAA6BU,aAA7B;AACH;AACJ;;AACD,oBAAKpD,KAAK,CAAC0C,CAAD,CAAL,CAAS0B,iBAAT,IAA8BpE,KAAK,CAAC0C,CAAD,CAAL,CAASe,IAAT,KAAkB,iBAArD,EAAyE;AACrE,sBAAIkB,WAAW,GAAG/G,aAAa,CAAC,MAAD,EAAS;AACpCuF,oBAAAA,KAAK,EAAE;AAAE,kCAAY,IAAd;AAAoB,uCAAiB,OAArC;AAA8C,+BAAS,KAAK9D,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,qBAAlC;AAAvD,qBAD6B;AAEpCwB,oBAAAA,SAAS,EAAE3D,GAAG,CAACiG,IAAJ,GAAW,GAAX,GAAiBjG,GAAG,CAACkG;AAFI,mBAAT,CAA/B;;AAIA,sBAAI,KAAKxF,MAAL,CAAYyF,oBAAZ,IAAoC,KAAKzF,MAAL,CAAY0F,qBAAhD,IAAyE/E,KAAK,CAAC0C,CAAD,CAAL,CAASsC,YAAtF,EAAoG;AAChGzG,oBAAAA,WAAW,CAAC,CAACoG,WAAD,CAAD,EAAgBhG,GAAG,CAACkD,YAApB,CAAX;AACH,mBAFD,MAGK;AACDvD,oBAAAA,QAAQ,CAAC,CAACqG,WAAD,CAAD,EAAgBhG,GAAG,CAACkD,YAApB,CAAR;AACH;;AACDuB,kBAAAA,aAAa,CAACX,WAAd,CAA0BkC,WAA1B;AACH;;AACD,oBAAIM,aAAa,GAAGrH,aAAa,CAAC,MAAD,EAAS;AACtCuF,kBAAAA,KAAK,EAAE;AAAE,gCAAY,IAAd;AAAoB,qCAAiB,OAArC;AAA8C,6BAAS,KAAK9D,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,QAAlC;AAAvD,mBAD+B;AAEtCwB,kBAAAA,SAAS,EAAE3D,GAAG,CAACiG,IAAJ,GAAW,GAAX,GAAiBjG,GAAG,CAACuG;AAFM,iBAAT,CAAjC;;AAIA,oBAAI,KAAK7F,MAAL,CAAYiB,aAAZ,OAAgC,WAApC,EAAiD;AAC7C,sBAAK,KAAKjB,MAAL,CAAYmD,mBAAZ,CAAgCtB,cAAhC,IAAkDlB,KAAK,CAAC0C,CAAD,CAAL,CAASxB,cAAhE,EAAiF;AAC7E3C,oBAAAA,WAAW,CAAC,CAAC0G,aAAD,CAAD,EAAkBtG,GAAG,CAACkD,YAAtB,CAAX;AACH,mBAFD,MAGK;AACDvD,oBAAAA,QAAQ,CAAC,CAAC2G,aAAD,CAAD,EAAkBtG,GAAG,CAACkD,YAAtB,CAAR;AACH;AACJ,iBAPD,MAQK;AACD,sBAAI7B,KAAK,CAAC0C,CAAD,CAAL,CAASxB,cAAb,EAA6B;AACzB3C,oBAAAA,WAAW,CAAC,CAAC0G,aAAD,CAAD,EAAkBtG,GAAG,CAACkD,YAAtB,CAAX;AACH,mBAFD,MAGK;AACDvD,oBAAAA,QAAQ,CAAC,CAAC2G,aAAD,CAAD,EAAkBtG,GAAG,CAACkD,YAAtB,CAAR;AACH;AACJ;;AACDuB,gBAAAA,aAAa,CAACX,WAAd,CAA0BwC,aAA1B;AACAhC,gBAAAA,aAAa,CAACR,WAAd,CAA0BmB,oBAA1B;AACAX,gBAAAA,aAAa,CAACR,WAAd,CAA0BW,aAA1B;AACAH,gBAAAA,aAAa,CAACR,WAAd,CAA0BqB,wBAA1B;AACH,eArDD,MAsDK;AACDb,gBAAAA,aAAa,CAACR,WAAd,CAA0BmB,oBAA1B;AACAX,gBAAAA,aAAa,CAACR,WAAd,CAA0BW,aAA1B;AACH;;AACD/B,cAAAA,OAAO,CAACoB,WAAR,CAAoBQ,aAApB;AACA,kBAAIkC,WAAW,GAAG,IAAItG,MAAJ,CAAW;AAAEuG,gBAAAA,SAAS,EAAE,KAAK/F,MAAL,CAAY+F,SAAzB;AAAoCC,gBAAAA,MAAM,EAAE,KAAKhG,MAAL,CAAYgG;AAAxD,eAAX,CAAlB;AACAF,cAAAA,WAAW,CAACG,gBAAZ,GAA+B,IAA/B;AACAH,cAAAA,WAAW,CAACI,QAAZ,CAAqBnC,aAArB;AACA,mBAAKoC,WAAL,CAAiBvC,aAAjB,EAAgCP,CAAC,KAAKvC,QAAN,IAAkBF,IAAI,KAAK,YAA3B,GAA0C,QAA1C,GAAqDA,IAArF,EAA2F6C,cAA3F;AACA,mBAAK2C,SAAL,CAAexC,aAAf,EAA8BP,CAAC,KAAKvC,QAAN,IAAkBF,IAAI,KAAK,YAA3B,GAA0C,QAA1C,GAAqDA,IAAnF,EAAyF6C,cAAzF;;AACA,kBAAK,KAAKzD,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,IAA+C,CAAC,KAAKjB,MAAL,CAAYqG,UAA7D,IACA,KAAKrG,MAAL,CAAYiB,aAAZ,OAAgC,gBADpC,EACsD;AAClD,qBAAKqF,eAAL,CAAqB3F,KAAK,CAAC0C,CAAD,CAA1B,EAA+B,KAAKrD,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,GAA8C2D,cAA9C,GAA+DF,WAA9F;AACAX,gBAAAA,aAAa,CAAC3B,aAAd,CAA4B,MAAM9C,GAAG,CAACiH,gBAAtC,EAAwDC,aAAxD,CAAsE,CAAtE,EAAyEC,gBAAzE,GAA4F,KAA5F;AACH;AACJ;AACJ;AACJ;;AACD,YAAI7F,IAAI,KAAK,QAAb,EAAuB;AACnB,cAAI8F,OAAO,GAAG,UAAU1E,OAAV,EAAmB;AAC7B,gBAAIA,OAAO,CAACa,SAAR,CAAkBC,QAAlB,CAA2BxD,GAAG,CAACyD,iBAA/B,KAAqD4D,MAAM,CAAC3G,MAAP,CAAc4G,WAAvE,EAAoF;AAChF,kBAAIC,SAAS,GAAGlG,KAAK,CAACmG,GAAN,CAAU,UAAUC,IAAV,EAAgB;AAAE,uBAAO;AAAEC,kBAAAA,IAAI,EAAED,IAAI,CAACnF,OAAL,GAAemF,IAAI,CAACnF,OAApB,GAA8BmF,IAAI,CAACpF,IAA3C;AAAiDsF,kBAAAA,KAAK,EAAEF,IAAI,CAACpF;AAA7D,iBAAP;AAA6E,eAAzG,CAAhB;AACA,kBAAIuF,QAAQ,GAAGP,MAAM,CAAC3G,MAAtB;;AACA,kBAAI2G,MAAM,CAACQ,qBAAP,IAAgCnF,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC8H,8BAAhC,CAApC,EAAqG;AACjGT,gBAAAA,MAAM,CAACQ,qBAAP,CAA6BE,UAA7B,GAA0CR,SAA1C;AACAF,gBAAAA,MAAM,CAACQ,qBAAP,CAA6BF,KAA7B,GAAqC,CAACC,QAAQ,CAACI,aAAT,CAAuBC,kBAAxB,GACjCL,QAAQ,CAACN,WAAT,CAAqBY,cADY,GACKX,SAAS,CAAC,CAAD,CAAT,CAAaI,KADvD;AAEH,eAJD,MAKK;AACD,oBAAIQ,MAAM,GAAGlJ,aAAa,CAAC,KAAD,EAAQ;AAAE0E,kBAAAA,SAAS,EAAE3D,GAAG,CAAC8H;AAAjB,iBAAR,CAA1B;AACApF,gBAAAA,OAAO,CAACoB,WAAR,CAAoBqE,MAApB;AACAd,gBAAAA,MAAM,CAACQ,qBAAP,GAA+B,IAAItH,YAAJ,CAAiB;AAC5CwH,kBAAAA,UAAU,EAAER,SADgC;AAE5Cd,kBAAAA,SAAS,EAAEY,MAAM,CAAC3G,MAAP,CAAc+F,SAFmB;AAG5CC,kBAAAA,MAAM,EAAEW,MAAM,CAAC3G,MAAP,CAAcgG,MAHsB;AAI5CiB,kBAAAA,KAAK,EAAE,CAACC,QAAQ,CAACI,aAAT,CAAuBC,kBAAxB,GACHL,QAAQ,CAACN,WAAT,CAAqBY,cADlB,GACmCX,SAAS,CAAC,CAAD,CAAT,CAAaI,KALX;AAM5CS,kBAAAA,KAAK,EAAE,GANqC;AAO5CC,kBAAAA,MAAM,EAAE;AAAEV,oBAAAA,KAAK,EAAE,OAAT;AAAkBD,oBAAAA,IAAI,EAAE;AAAxB,mBAPoC;AAQ5CY,kBAAAA,QAAQ,EAAEtI,GAAG,CAACuI,0BAR8B;AAS5CC,kBAAAA,MAAM,EAAE,UAAUtH,IAAV,EAAgB;AACpB,wBAAIA,IAAI,CAACuH,CAAL,IAAUvH,IAAI,CAACuH,CAAL,KAAW,IAAzB,EAA+B;AAC3Bb,sBAAAA,QAAQ,CAACI,aAAT,CAAuBL,KAAvB,GAA+BzG,IAAI,CAACyG,KAApC;AACH;AACJ;AAb2C,iBAAjB,CAA/B;AAeAN,gBAAAA,MAAM,CAACQ,qBAAP,CAA6BlB,gBAA7B,GAAgD,IAAhD;AACAU,gBAAAA,MAAM,CAACQ,qBAAP,CAA6BjB,QAA7B,CAAsCuB,MAAtC;AACH;AACJ;AACJ,WA/BD;;AAgCA,cAAId,MAAM,GAAG,IAAb;;AACA,eAAK,IAAIqB,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAKlG,aAAL,CAAmBa,gBAAnB,CAAoC,cAAchC,IAAlD,CAAtB,EAA+EoH,EAAE,GAAGC,EAAE,CAAC3G,MAAvF,EAA+F0G,EAAE,EAAjG,EAAqG;AACjG,gBAAIhG,OAAO,GAAGiG,EAAE,CAACD,EAAD,CAAhB;;AACAtB,YAAAA,OAAO,CAAC1E,OAAD,CAAP;AACH;AACJ,SAtCD,MAuCK,IAAIpB,IAAI,KAAK,SAAb,EAAwB;AACzB,cAAIsH,aAAa,GAAGhD,SAApB;;AACA,eAAK,IAAIiD,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAKrG,aAAL,CAAmBa,gBAAnB,CAAoC,cAAchC,IAAlD,CAAtB,EAA+EuH,EAAE,GAAGC,EAAE,CAAC9G,MAAvF,EAA+F6G,EAAE,EAAjG,EAAqG;AACjG,gBAAInG,OAAO,GAAGoG,EAAE,CAACD,EAAD,CAAhB;;AACA,gBAAInG,OAAO,CAACa,SAAR,CAAkBC,QAAlB,CAA2BxD,GAAG,CAAC0D,kBAA/B,KAAsD,KAAKhD,MAAL,CAAY4G,WAAtE,EAAmF;AAC/E,kBAAIY,cAAc,GAAG,KAAKxH,MAAL,CAAY4G,WAAZ,CAAwBY,cAA7C;AACA,kBAAIa,SAAS,GAAG,KAAKrI,MAAL,CAAYsH,aAAZ,CAA0BgB,eAA1B,GAA4C,KAAKtI,MAAL,CAAYsH,aAAZ,CAA0BgB,eAAtE,GAAwF,GAAxG;AACA,kBAAIC,YAAY,GAAI,KAAKvI,MAAL,CAAYsH,aAAZ,CAA0BiB,YAA1B,IAA0C,KAAKvI,MAAL,CAAYsH,aAAZ,CAA0BiB,YAA1B,KAA2C,EAAtF,GACf,KAAKvI,MAAL,CAAYsH,aAAZ,CAA0BiB,YAA1B,CAAuCC,KAAvC,CAA6CH,SAA7C,EAAwDI,IAAxD,CAA6D,KAA7D,CADe,GACuD,EAD1E;AAEA,kBAAIC,YAAY,GAAG,KAAK1I,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,GAAkC,KAAKhB,MAAL,CAAY2I,gBAA9C,GAAiE,KAAK3I,MAAL,CAAY0I,YAAhG;AACA,kBAAIE,WAAW,GAAGF,YAAY,CAACE,WAA/B;AACA,kBAAIC,WAAW,GAAG,KAAK7I,MAAL,CAAY4G,WAAZ,CAAwBkC,mBAAxB,CAA4CF,WAA5C,CAAlB;AACA,kBAAIG,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYL,WAAZ,CAAZ;AACA,kBAAIM,UAAU,GAAG,EAAjB;AACA,kBAAIC,aAAa,GAAG,KAApB;;AACA,mBAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,OAAO,GAAGN,KAA3B,EAAkCK,EAAE,GAAGC,OAAO,CAAC/H,MAA/C,EAAuD8H,EAAE,EAAzD,EAA6D;AACzD,oBAAIE,IAAI,GAAGD,OAAO,CAACD,EAAD,CAAlB;;AACA,oBAAID,aAAJ,EAAmB;AACf;AACH;;AACD,oBAAII,QAAQ,GAAGC,MAAM,CAACF,IAAD,CAArB;;AACA,oBAAIV,WAAW,CAACW,QAAD,CAAX,CAAsB,CAAtB,KAA4BX,WAAW,CAACW,QAAD,CAAX,CAAsB,CAAtB,EAAyB3I,IAAzB,KAAkC,KAA9D,KACC,KAAKZ,MAAL,CAAYmB,kBAAZ,CAA+BsI,IAA/B,CAAoCnI,MAApC,KAA+C,CAA/C,GAAmD,IAAnD,GAA0DsH,WAAW,CAACW,QAAD,CAAX,CAAsB,CAAtB,EAAyBnF,IAAzB,KAAkC,WAD7F,CAAJ,EAC+G;AAC3G,sBAAIsF,YAAY,GAAGd,WAAW,CAACW,QAAD,CAAX,CAAsB,CAAtB,CAAnB;AACA,sBAAII,OAAO,GAAG,KAAK3J,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,GACV0H,YAAY,CAACkB,UAAb,CAAwBF,YAAY,CAACG,OAArC,CADU,GACsC3E,SADpD;AAEA,sBAAIuE,IAAI,GAAGb,WAAW,CAACW,QAAD,CAAtB;AACA,sBAAIO,KAAK,GAAGd,MAAM,CAACC,IAAP,CAAYQ,IAAZ,CAAZ;;AACA,uBAAK,IAAIM,EAAE,GAAG,CAAT,EAAYC,OAAO,GAAGF,KAA3B,EAAkCC,EAAE,GAAGC,OAAO,CAAC1I,MAA/C,EAAuDyI,EAAE,EAAzD,EAA6D;AACzD,wBAAIE,IAAI,GAAGD,OAAO,CAACD,EAAD,CAAlB;AACA,wBAAIG,SAAS,GAAGV,MAAM,CAACS,IAAD,CAAtB;AACA,wBAAIE,IAAI,GAAGvB,WAAW,CAACW,QAAD,CAAX,CAAsBW,SAAtB,CAAX;AACA,wBAAIE,UAAU,GAAI,KAAKpK,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,IAAmC2I,OAAnC,IAA8CA,OAAO,CAACU,WAAvD,GACbV,OAAO,CAACU,WADK,GACSF,IAAI,CAACC,UAD/B;;AAEA,wBAAI,CAACvB,WAAW,CAACsB,IAAI,CAACG,QAAN,CAAZ,IAA+BH,IAAI,CAACvJ,IAAL,KAAc,OAA7C,IAAwD8I,YAAY,CAACtF,IAAb,KAAsB,QAA9E,IACAgG,UAAU,KAAK,EADf,IACqBA,UAAU,KAAK5C,cADxC,EACwD;AACpD2B,sBAAAA,aAAa,GAAG,IAAhB;AACA,0BAAIoB,YAAY,GAAG,KAAKvK,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,GAAkCmJ,IAAI,CAACK,aAAL,CAAmBC,QAAnB,GAA8BjC,KAA9B,CAAoC,OAApC,EAA6CC,IAA7C,CAAkD,KAAlD,CAAlC,GACb0B,IAAI,CAACK,aAAL,CAAmBC,QAAnB,GAA8BjC,KAA9B,CAAoC,KAAKxI,MAAL,CAAYmB,kBAAZ,CAA+BuJ,iBAA/B,CAAiDC,eAArF,EAAsGlC,IAAtG,CAA2G,KAA3G,CADN;AAEAS,sBAAAA,UAAU,CAACxH,IAAX,CAAgB;AAAEuF,wBAAAA,KAAK,EAAEsD,YAAT;AAAuBvD,wBAAAA,IAAI,EAAEuD,YAA7B;AAA2CK,wBAAAA,KAAK,GAAGlK,EAAE,GAAG,EAAL,EAASA,EAAE,CAAC,OAAD,CAAF,GAAc6J,YAAvB,EAAqC7J,EAAxC;AAAhD,uBAAhB;;AACA,0BAAI6J,YAAY,KAAKhC,YAArB,EAAmC;AAC/BL,wBAAAA,aAAa,GAAGgB,UAAU,CAAC5H,MAA3B;AACH;AACJ;AACJ;AACJ;AACJ;;AACD,kBAAI,KAAKuJ,uBAAL,IAAgC7I,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAACwL,+BAAhC,CAApC,EAAsG;AAClG,qBAAKD,uBAAL,CAA6BxD,UAA7B,GAA0C6B,UAA1C;;AACA,oBAAIhB,aAAa,KAAKhD,SAAtB,EAAiC;AAC7B,uBAAK2F,uBAAL,CAA6B5D,KAA7B,GAAqCiC,UAAU,CAAChB,aAAa,GAAG,CAAjB,CAAV,CAA8BjB,KAAnE;AACH,iBAFD,MAGK;AACD,uBAAK4D,uBAAL,CAA6B5D,KAA7B,GAAqCiC,UAAU,CAAC,CAAD,CAAV,CAAcjC,KAAnD;AACH;AACJ,eARD,MASK;AACD,oBAAIQ,MAAM,GAAGlJ,aAAa,CAAC,KAAD,EAAQ;AAAE0E,kBAAAA,SAAS,EAAE3D,GAAG,CAACwL;AAAjB,iBAAR,CAA1B;AACA9I,gBAAAA,OAAO,CAACoB,WAAR,CAAoBqE,MAApB;AACA,qBAAKoD,uBAAL,GAA+B,IAAIhL,YAAJ,CAAiB;AAC5CwH,kBAAAA,UAAU,EAAE6B,UADgC;AAE5CnD,kBAAAA,SAAS,EAAE,KAAK/F,MAAL,CAAY+F,SAFqB;AAG5CC,kBAAAA,MAAM,EAAE,KAAKhG,MAAL,CAAYgG,MAHwB;AAI5CiB,kBAAAA,KAAK,EAAEiB,aAAa,GAAGgB,UAAU,CAAChB,aAAa,GAAG,CAAjB,CAAV,CAA8BjB,KAAjC,GAA0CiC,UAAU,CAAC,CAAD,CAAV,GAAgBA,UAAU,CAAC,CAAD,CAAV,CAAcjC,KAA9B,GAAsC,EAJxD;AAK5CS,kBAAAA,KAAK,EAAE,KALqC;AAM5CC,kBAAAA,MAAM,EAAE;AAAEV,oBAAAA,KAAK,EAAE,OAAT;AAAkBD,oBAAAA,IAAI,EAAE,MAAxB;AAAgC+D,oBAAAA,cAAc,EAAE;AAAhD,mBANoC;AAO5CnD,kBAAAA,QAAQ,EAAEtI,GAAG,CAAC0L,2BAP8B;AAQ5ClD,kBAAAA,MAAM,EAAE,UAAUtH,IAAV,EAAgB;AACpB,wBAAIA,IAAI,CAACuH,CAAL,IAAUvH,IAAI,CAACuH,CAAL,KAAW,IAAzB,EAA+B;AAC3B,0BAAIkD,WAAW,GAAGxK,KAAK,CAACT,MAAN,CAAasH,aAAb,CAA2BgB,eAA3B,GAA6C7H,KAAK,CAACT,MAAN,CAAasH,aAAb,CAA2BgB,eAAxE,GAA0F,GAA5G;AACA7H,sBAAAA,KAAK,CAACT,MAAN,CAAasH,aAAb,CAA2BiB,YAA3B,GAA0C/H,IAAI,CAACyG,KAAL,CAAWuB,KAAX,CAAiB,KAAjB,EAAwBC,IAAxB,CAA6BwC,WAA7B,CAA1C;AACH;AACJ;AAb2C,iBAAjB,CAA/B;AAeA,qBAAKJ,uBAAL,CAA6B5E,gBAA7B,GAAgD,IAAhD;AACA,qBAAK4E,uBAAL,CAA6B3E,QAA7B,CAAsCuB,MAAtC;AACH;AACJ;AACJ;AACJ;AACJ;AACJ,KArPD,MAsPK;AACD;AACH;AACJ,GArSD;;AAsSA1H,EAAAA,WAAW,CAACO,SAAZ,CAAsBuE,gBAAtB,GAAyC,UAAUlE,KAAV,EAAiB0C,CAAjB,EAAoBzC,IAApB,EAA0BE,QAA1B,EAAoC;AACzE,QAAIoK,UAAJ;AACA,QAAIC,WAAJ;AACA,QAAIC,SAAJ;;AACA,QAAIxK,IAAI,KAAK,SAAb,EAAwB;AACpBwK,MAAAA,SAAS,GAAG,KAAKC,gBAAL,CAAsB1K,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAA/B,CAAZ;AACH;;AACD,QAAI+G,YAAJ;;AACA,QAAI,KAAK1I,MAAL,CAAYgB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC0H,MAAAA,YAAY,GAAG,KAAK1I,MAAL,CAAY2I,gBAA3B;AACH,KAFD,MAGK;AACDD,MAAAA,YAAY,GAAG,KAAK1I,MAAL,CAAY0I,YAA3B;AACH;;AACD,QAAIA,YAAY,CAAC4C,SAAb,CAAuB3K,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAhC,MAA0CuD,SAA9C,EAAyD;AACrDiG,MAAAA,WAAW,GAAGzC,YAAY,CAAC4C,SAAb,CAAuB3K,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAhC,EAAsC4J,aAApD;;AACA,UAAKJ,WAAW,KAAK,eAAjB,KAAsCzC,YAAY,CAAC4C,SAAb,CAAuB3K,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAhC,EAAsCyC,IAAtC,KAA+C,QAA/C,IAA2DsE,YAAY,CAAC4C,SAAb,CAAuB3K,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAhC,EAAsCyC,IAAtC,KAA+C,SAA1G,IACtCsE,YAAY,CAAC4C,SAAb,CAAuB3K,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAhC,EAAsCyC,IAAtC,KAA+C,SAD/C,CAAJ,EAC+D;AAC3D+G,QAAAA,WAAW,GAAG,OAAd;AACH,OAHD,MAIK;AACDA,QAAAA,WAAW,GAAGA,WAAW,KAAKjG,SAAhB,GAA4B,KAA5B,GACVwD,YAAY,CAAC4C,SAAb,CAAuB3K,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAhC,EAAsC4J,aAD1C;AAEH;AACJ;;AACD,QAAIvE,IAAI,GAAGrG,KAAK,CAAC0C,CAAD,CAAL,CAASzB,OAAT,GAAmBjB,KAAK,CAAC0C,CAAD,CAAL,CAASzB,OAA5B,GAAsCjB,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAA1D;AACAuJ,IAAAA,UAAU,GAAG3M,aAAa,CAAC,MAAD,EAAS;AAC/BuF,MAAAA,KAAK,EAAE;AACH8G,QAAAA,KAAK,EAAEhK,IAAI,KAAK,SAAT,GAAsB,KAAKZ,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,IAAmC0H,YAAY,CAAC4C,SAAb,CAAuB3K,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAhC,EAAsCyC,IAAtC,KAA+C,iBAAnF,GACxB4C,IADwB,GAChBA,IAAI,GAAG,IAAP,GAAcoE,SAAd,GAA0B,GAD/B,GACuC,KAAKpL,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,GAC1CgG,IAD0C,GAChC,CAAC,KAAKhH,MAAL,CAAYmB,kBAAZ,CAA+BqK,2BAAhC,IAA+D5K,IAAI,KAAK,QAAxE,IAAoFuK,WAAW,KAAK,iBAArG,GACTnE,IADS,GACF,KAAKhH,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC0J,WAAlC,IAAiD,GAAjD,GAAuD,KAAKnL,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,IAAlC,CAAvD,GAAiG,GAAjG,GAAuGuF,IAJ/G;AAKH,oBAAY,IALT;AAKe,yBAAiB,OALhC;AAKyC,yBAAiB,eAL1D;AAMH,qBAAalG,QAAQ,KAAKuC,CAAb,GAAiB,EAAjB,GAAsB8H;AANhC,OADwB;AAS/BlI,MAAAA,SAAS,EAAE3D,GAAG,CAACmM,0BAAJ,GAAiC,GAAjC,IACN,KAAKzL,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,GACG,KAAKjB,MAAL,CAAYmD,mBAAZ,CAAgCrB,gBAAhC,IAAoDnB,KAAK,CAAC0C,CAAD,CAAL,CAASvB,gBAA7D,GAAgF,EAAhF,GAAqFxC,GAAG,CAACoM,kBAD5F,GACiH,EAF3G,CAToB;AAY/BxI,MAAAA,SAAS,EAAEtC,IAAI,KAAK,SAAT,GAAsB,KAAKZ,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,IAAmC0H,YAAY,CAAC4C,SAAb,CAAuB3K,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAhC,EAAsCyC,IAAtC,KAA+C,iBAAnF,GAC5B4C,IAD4B,GACpBA,IAAI,GAAG,IAAP,GAAcoE,SAAd,GAA0B,GAD3B,GACmC,KAAKpL,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,GAC1CgG,IAD0C,GAClC,CAAC,KAAKhH,MAAL,CAAYmB,kBAAZ,CAA+BqK,2BAAhC,IAA+D5K,IAAI,KAAK,QAAxE,IAAoFuK,WAAW,KAAK,iBAApG,GACRnE,IADQ,GACD,KAAKhH,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC0J,WAAlC,IAAiD,GAAjD,GAAuD,KAAKnL,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,IAAlC,CAAvD,GAAiG,GAAjG,GAAuGuF;AAfnF,KAAT,CAA1B;AAiBA,WAAOkE,UAAP;AACH,GA5CD;AA6CA;;;AACAnL,EAAAA,WAAW,CAACO,SAAZ,CAAsB+E,aAAtB,GAAsC,UAAU1E,KAAV,EAAiB0C,CAAjB,EAAoBU,aAApB,EAAmC;AACrE,QAAI2E,YAAJ;;AACA,QAAI,KAAK1I,MAAL,CAAYgB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC0H,MAAAA,YAAY,GAAG,KAAK1I,MAAL,CAAY2I,gBAA3B;AACH,KAFD,MAGK;AACDD,MAAAA,YAAY,GAAG,KAAK1I,MAAL,CAAY0I,YAA3B;AACH;;AACD,QAAIiD,aAAa,GAAGjD,YAAY,CAAC4C,SAAb,CAAuB3K,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAAhC,CAApB;;AACA,QAAIgK,aAAa,CAACJ,aAAd,KAAgC,iBAAhC,IAAqD,KAAKK,gBAAL,CAAsBD,aAAa,CAACvH,IAApC,CAAzD,EAAoG;AAChG,WAAKyH,iBAAL,CAAuB9H,aAAvB,EAAsCpD,KAAK,CAAC0C,CAAD,CAAL,CAAS1B,IAA/C,EAAqDhB,KAAK,CAAC0C,CAAD,CAA1D;AACH;AACJ,GAZD;;AAaAtD,EAAAA,WAAW,CAACO,SAAZ,CAAsBsL,gBAAtB,GAAyC,UAAUxH,IAAV,EAAgB;AACrD,QAAImH,aAAa,GAAG,KAAKvL,MAAL,CAAY8L,cAAhC;;AACA,QAAI1H,IAAI,KAAK,QAAb,EAAuB;AACnB,aAAQmH,aAAa,CAACvG,OAAd,CAAsB,OAAtB,IAAiC,CAAC,CAAlC,IAAuCuG,aAAa,CAACvG,OAAd,CAAsB,eAAtB,IAAyC,CAAC,CAAzF;AACH,KAFD,MAGK;AACD,WAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkI,aAAa,CAACjK,MAAlC,EAA0C+B,CAAC,EAA3C,EAA+C;AAC3C,YAAI,KAAKrD,MAAL,CAAY+L,iBAAZ,GAAgC/G,OAAhC,CAAwCuG,aAAa,CAAClI,CAAD,CAArD,IAA4D,CAAC,CAAjE,EAAoE;AAChE,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,KAAP;AACH;AACJ,GAbD;;AAcAtD,EAAAA,WAAW,CAACO,SAAZ,CAAsBuL,iBAAtB,GAA0C,UAAU/F,WAAV,EAAuBkG,SAAvB,EAAkCrL,KAAlC,EAAyC;AAC/E,QAAIsL,WAAW,GAAG1N,aAAa,CAAC,MAAD,EAAS;AACpCuF,MAAAA,KAAK,EAAE;AAAE,oBAAY,IAAd;AAAoB,yBAAiB,OAArC;AAA8C,iBAAS,KAAK9D,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,QAAlC;AAAvD,OAD6B;AAEpCwB,MAAAA,SAAS,EAAE3D,GAAG,CAACiG,IAAJ,GAAW,GAAX,GAAiBjG,GAAG,CAAC4M;AAFI,KAAT,CAA/B;;AAIA,QAAI,KAAKlM,MAAL,CAAYiB,aAAZ,OAAgC,WAApC,EAAiD;AAC7C,UAAI,KAAKjB,MAAL,CAAYmD,mBAAZ,CAAgCgJ,iBAAhC,IAAqDxL,KAAK,CAACwL,iBAA/D,EAAkF;AAC9EjN,QAAAA,WAAW,CAAC,CAAC+M,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAX;AACH,OAFD,MAGK;AACDvD,QAAAA,QAAQ,CAAC,CAACgN,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAR;AACH;AACJ,KAPD,MAQK;AACD,UAAI7B,KAAK,CAACwL,iBAAV,EAA6B;AACzBjN,QAAAA,WAAW,CAAC,CAAC+M,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAX;AACH,OAFD,MAGK;AACDvD,QAAAA,QAAQ,CAAC,CAACgN,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAR;AACH;AACJ;;AACDsD,IAAAA,WAAW,CAAC1C,WAAZ,CAAwB6I,WAAxB;AACA,WAAOA,WAAP;AACH,GAvBD;;AAwBAlM,EAAAA,WAAW,CAACO,SAAZ,CAAsB8L,gBAAtB,GAAyC,UAAU5L,IAAV,EAAgB;AACrD,SAAKP,UAAL,CAAgBoM,MAAhB,CAAuB7L,IAAvB,EAA6B,KAAKuB,aAAlC;AACA,SAAK/B,MAAL,CAAYE,iBAAZ,GAAgC,IAAhC;AACH,GAHD;;AAIAH,EAAAA,WAAW,CAACO,SAAZ,CAAsBgM,yBAAtB,GAAkD,UAAU9L,IAAV,EAAgB;AAC9D,QAAIwL,SAAS,GAAGxL,IAAI,CAAC+L,MAAL,CAAYxK,aAAZ,CAA0BI,EAA1C;;AACA,QAAI,KAAKnC,MAAL,CAAYiB,aAAZ,OAAgC,WAApC,EAAiD;AAC7C,UAAI,KAAKjB,MAAL,CAAYqG,UAAZ,IAA2B,KAAKrG,MAAL,CAAYwM,aAAZ,IAC3B,KAAKxM,MAAL,CAAYyM,oBADe,IAE3B,CAAC,KAAKzM,MAAL,CAAYyM,oBAAZ,CAAiCpM,WAFtC,EAEoD;AAChD,aAAKL,MAAL,CAAYyM,oBAAZ,CAAiCzK,OAAjC,CACKI,aADL,CACmB,MAAM9C,GAAG,CAACoN,uBAD7B,EACsDC,KADtD;AAEA,aAAK3M,MAAL,CAAYyM,oBAAZ,CAAiCG,cAAjC,CAAgDC,eAAhD,CAAgE9N,MAAhE,CAAuE,CAAvE;AACA;;AACA,aAAKiB,MAAL,CAAYyM,oBAAZ,CAAiC/G,qBAAjC,CACKoH,6BADL,CACmC,IADnC,EACyCd,SADzC;AAEH,OATD,MAUK;AACD,YAAI,CAAC,KAAKhM,MAAL,CAAYqG,UAAjB,EAA6B;AACzB,eAAKrG,MAAL,CAAY0F,qBAAZ,CAAkCqH,UAAlC,GAA+C,IAA/C;AACH;;AACD,aAAK/M,MAAL,CAAYgN,MAAZ,CAAmBzN,MAAM,CAAC0N,mBAA1B,EAA+C;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAclB,UAAAA,SAAS,EAAEA;AAAzB,SAA/C;AACH;AACJ,KAjBD,MAkBK,IAAI,KAAKhM,MAAL,CAAYiB,aAAZ,OAAgC,gBAApC,EAAsD;AACvD,UAAI,KAAKjB,MAAL,CAAYqG,UAAhB,EAA4B;AACxB,aAAKrG,MAAL,CAAY4M,cAAZ,CAA2BC,eAA3B,CAA2C9N,MAA3C,CAAkD,CAAlD;AACA;;AACA,aAAKiB,MAAL,CAAY0F,qBAAZ,CACKoH,6BADL,CACmC,IADnC,EACyCd,SADzC;AAEA,aAAKhM,MAAL,CAAY0F,qBAAZ,CAAkCqH,UAAlC,GAA+C,IAA/C;AACH,OAND,MAOK;AACD,YAAI,KAAK/M,MAAL,CAAY4M,cAAZ,CAA2BO,eAA/B,EAAgD;AAC5C,eAAKnN,MAAL,CAAY4M,cAAZ,CAA2BO,eAA3B,CAA2CC,IAA3C;AACAnO,UAAAA,QAAQ,CAAC,CAAC,KAAKe,MAAL,CAAYgC,OAAZ,CAAoBI,aAApB,CAAkC,MAAM9C,GAAG,CAACoN,uBAA5C,CAAD,CAAD,EAAyEpN,GAAG,CAAC+N,WAA7E,CAAR;AACH;;AACD,aAAKrN,MAAL,CAAYgN,MAAZ,CAAmBzN,MAAM,CAAC0N,mBAA1B,EAA+C;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAclB,UAAAA,SAAS,EAAEA;AAAzB,SAA/C;;AACA,YAAI,KAAKhM,MAAL,CAAY0F,qBAAhB,EAAuC;AACnC,eAAK1F,MAAL,CAAY0F,qBAAZ,CAAkCqH,UAAlC,GAA+C,IAA/C;AACH;AACJ;AACJ;AACJ,GAvCD;;AAwCAhN,EAAAA,WAAW,CAACO,SAAZ,CAAsBgG,eAAtB,GAAwC,UAAU3F,KAAV,EAAiB4L,MAAjB,EAAyB;AAC7D,SAAKe,SAAL,GAAiB,IAAI9O,SAAJ,CAAc+N,MAAd,EAAsB;AACnCgB,MAAAA,KAAK,EAAE,IAD4B;AAEnCC,MAAAA,cAAc,EAAE,IAFmB;AAGnC/G,MAAAA,gBAAgB,EAAE,IAHiB;AAInCgH,MAAAA,MAAM,EAAE,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAJ2B;AAKnCC,MAAAA,SAAS,EAAE,KAAKC,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CALwB;AAMnCG,MAAAA,IAAI,EAAE,KAAKC,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAN6B;AAOnCK,MAAAA,QAAQ,EAAE,KAAKC,UAAL,CAAgBN,IAAhB,CAAqB,IAArB,CAPyB;AAQnCO,MAAAA,KAAK,EAAG,KAAKlO,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,GACJ,EAAE,KAAKjB,MAAL,CAAYmD,mBAAZ,CAAgCrB,gBAAhC,IAAoDnB,KAAK,CAACmB,gBAA5D,IACI,MAAMxC,GAAG,CAAC0E,kBADd,GACmC,EAF/B,GAEoC,CAACrD,KAAK,CAACmB,gBAAP,GAA0B,MAAMxC,GAAG,CAAC0E,kBAApC,GAAyD;AAVlE,KAAtB,CAAjB;AAYH,GAbD;;AAcAjE,EAAAA,WAAW,CAACO,SAAZ,CAAsBqE,oBAAtB,GAA6C,UAAUhE,KAAV,EAAiBmF,WAAjB,EAA8B;AACvE,QAAIpB,WAAW,GAAGnG,aAAa,CAAC,MAAD,EAAS;AACpCuF,MAAAA,KAAK,EAAE;AAAE,oBAAY,IAAd;AAAoB,yBAAiB;AAArC;AAD6B,KAAT,CAA/B;AAGA,QAAIqK,WAAW,GAAG5P,aAAa,CAAC,MAAD,EAAS;AACpCuF,MAAAA,KAAK,EAAE;AACH,oBAAY,IADT;AACe,yBAAiB,OADhC;AACyC,iBAAS,KAAK9D,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,MAAlC;AADlD,OAD6B;AAIpCwB,MAAAA,SAAS,EAAE3D,GAAG,CAACiG,IAAJ,GAAW,GAAX,GAAiBjG,GAAG,CAAC8O,UAArB,GAAkC,GAAlC,IAAyCzN,KAAK,CAACmB,gBAAN,GAAyB,EAAzB,GAA8BxC,GAAG,CAACoM,kBAA3E;AAJyB,KAAT,CAA/B;AAMAhH,IAAAA,WAAW,CAACtB,WAAZ,CAAwB+K,WAAxB;;AACA,QAAI,KAAKnO,MAAL,CAAYiB,aAAZ,OAAgC,gBAApC,EAAsD;AAClD6E,MAAAA,WAAW,CAAC1C,WAAZ,CAAwBsB,WAAxB;AACH;;AACD,WAAOA,WAAP;AACH,GAfD;;AAgBA3E,EAAAA,WAAW,CAACO,SAAZ,CAAsB6E,gBAAtB,GAAyC,UAAUW,WAAV,EAAuBkG,SAAvB,EAAkCrL,KAAlC,EAAyC;AAC9E,QAAI0N,SAAJ;AACA,QAAIpC,WAAJ;AACA,QAAIvD,YAAJ;;AACA,QAAI,KAAK1I,MAAL,CAAYgB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC0H,MAAAA,YAAY,GAAG,KAAK1I,MAAL,CAAY2I,gBAA3B;AACH,KAFD,MAGK;AACDD,MAAAA,YAAY,GAAG,KAAK1I,MAAL,CAAY0I,YAA3B;AACH;;AACD,QAAI,CAAC,KAAK1I,MAAL,CAAYsO,sBAAjB,EAAyC;AACrCD,MAAAA,SAAS,GAAG3F,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCuC,IAAlC,KAA2C,YAA3C,GAA0DjP,GAAG,CAACkP,kBAA9D,GAAmF,EAA/F;AACH,KAFD,MAGK;AACDH,MAAAA,SAAS,GAAG,EAAZ;;AACA,WAAK,IAAIhL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrD,MAAL,CAAYmB,kBAAZ,CAA+BsN,YAA/B,CAA4CnN,MAAhE,EAAwE+B,CAAC,EAAzE,EAA6E;AACzE,YAAI,KAAKrD,MAAL,CAAYmB,kBAAZ,CAA+BsN,YAA/B,CAA4CpL,CAA5C,EAA+C1B,IAA/C,KAAwDqK,SAA5D,EAAuE;AACnEqC,UAAAA,SAAS,GAAG,KAAKrO,MAAL,CAAYmB,kBAAZ,CAA+BsN,YAA/B,CAA4CpL,CAA5C,EAA+CqL,KAA/C,KAAyD,YAAzD,GAAwEpP,GAAG,CAACkP,kBAA5E,GAAiG,EAA7G;AACH;AACJ;AACJ;;AACD,QAAI9F,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCuC,IAAlC,KAA2C,MAA/C,EAAuD;AACnDtC,MAAAA,WAAW,GAAG1N,aAAa,CAAC,MAAD,EAAS;AAChCuF,QAAAA,KAAK,EAAE;AAAE,sBAAY,IAAd;AAAoB,2BAAiB,OAArC;AAA8C,mBAAS,KAAK9D,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,MAAlC;AAAvD,SADyB;AAEhCwB,QAAAA,SAAS,EAAE3D,GAAG,CAACiG;AAFiB,OAAT,CAA3B;AAIH,KALD,MAMK;AACD0G,MAAAA,WAAW,GAAG1N,aAAa,CAAC,MAAD,EAAS;AAChCuF,QAAAA,KAAK,EAAE;AAAE,sBAAY,IAAd;AAAoB,2BAAiB,OAArC;AAA8C,mBAAS,KAAK9D,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,MAAlC;AAAvD,SADyB;AAEhCwB,QAAAA,SAAS,EAAE3D,GAAG,CAACiG,IAAJ,GAAW,GAAX,GAAiBjG,GAAG,CAACqP,UAArB,GAAkC,GAAlC,GAAwCN;AAFnB,OAAT,CAA3B;AAIH;;AACD,QAAI,KAAKrO,MAAL,CAAYmB,kBAAZ,CAA+ByN,aAAnC,EAAkD;AAC9C,UAAI,KAAK5O,MAAL,CAAYiB,aAAZ,OAAgC,WAApC,EAAiD;AAC7C,YAAIN,KAAK,CAACkO,YAAN,IAAsB,KAAK7O,MAAL,CAAYmD,mBAAZ,CAAgC0L,YAA1D,EAAwE;AACpE3P,UAAAA,WAAW,CAAC,CAAC+M,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAX;AACH,SAFD,MAGK;AACDvD,UAAAA,QAAQ,CAAC,CAACgN,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAR;AACH;AACJ,OAPD,MAQK;AACD,YAAI7B,KAAK,CAACkO,YAAV,EAAwB;AACpB3P,UAAAA,WAAW,CAAC,CAAC+M,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAX;AACH,SAFD,MAGK;AACDvD,UAAAA,QAAQ,CAAC,CAACgN,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAR;AACH;AACJ;AACJ,KAjBD,MAkBK;AACDvD,MAAAA,QAAQ,CAAC,CAACgN,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAR;AACH;;AACDsD,IAAAA,WAAW,CAAC1C,WAAZ,CAAwB6I,WAAxB;AACA,WAAOA,WAAP;AACH,GAxDD;;AAyDAlM,EAAAA,WAAW,CAACO,SAAZ,CAAsB8E,kBAAtB,GAA2C,UAAUU,WAAV,EAAuBkG,SAAvB,EAAkCpL,IAAlC,EAAwCD,KAAxC,EAA+C;AACtF,QAAImO,WAAJ;AACA,QAAIpG,YAAJ;;AACA,QAAI,KAAK1I,MAAL,CAAYgB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC0H,MAAAA,YAAY,GAAG,KAAK1I,MAAL,CAAY2I,gBAA3B;AACH,KAFD,MAGK;AACDD,MAAAA,YAAY,GAAG,KAAK1I,MAAL,CAAY0I,YAA3B;AACH;;AACD,QAAI,CAAC,KAAK1I,MAAL,CAAYsO,sBAAjB,EAAyC;AACrC5F,MAAAA,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC+C,MAAlC,GAA2CrG,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC+C,MAAlC,KAA6C,IAA7C,GACvC,EADuC,GAClCrG,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC+C,MAD3C;AAEAD,MAAAA,WAAW,GAAGpG,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC+C,MAAlC,CAAyCzN,MAAzC,KAAoD,CAApD,GACV,CAACoH,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCgD,aAAnC,GAAmD1P,GAAG,CAAC2P,YAAvD,GAAsE3P,GAAG,CAAC4P,cADhE,GACiF5P,GAAG,CAAC4P,cADnG;AAEH,KALD,MAMK;AACDJ,MAAAA,WAAW,GAAGxP,GAAG,CAAC2P,YAAlB;;AACA,WAAK,IAAI5L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrD,MAAL,CAAYmB,kBAAZ,CAA+BgO,cAA/B,CAA8C7N,MAAlE,EAA0E+B,CAAC,EAA3E,EAA+E;AAC3E,YAAI,KAAKrD,MAAL,CAAYmB,kBAAZ,CAA+BgO,cAA/B,CAA8C9L,CAA9C,EAAiD1B,IAAjD,KAA0DqK,SAA9D,EAAyE;AACrE8C,UAAAA,WAAW,GAAGxP,GAAG,CAAC4P,cAAlB;AACH;AACJ;AACJ;;AACD,QAAIjD,WAAW,GAAG1N,aAAa,CAAC,MAAD,EAAS;AACpCuF,MAAAA,KAAK,EAAE;AACH,oBAAY,IADT;AACe,yBAAiB,OADhC;AACyC,iBAAS,KAAK9D,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,QAAlC;AADlD,OAD6B;AAIpCwB,MAAAA,SAAS,EAAE3D,GAAG,CAAC8P,mBAAJ,GAA0B,GAA1B,GAAgC9P,GAAG,CAACiG,IAApC,GAA2C,GAA3C,GAAiDuJ;AAJxB,KAAT,CAA/B;;AAMA,QAAM,CAAC,KAAK9O,MAAL,CAAYmB,kBAAZ,CAA+BkO,gBAA/B,IAAmD,KAAKrP,MAAL,CAAYmB,kBAAZ,CAA+BmO,gBAAnF,KACF1O,IAAI,KAAK,SADR,IACsB,KAAKZ,MAAL,CAAYmB,kBAAZ,CAA+BoO,iBAD1D,EAC8E;AAC1ErQ,MAAAA,WAAW,CAAC,CAAC+M,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAX;AACH,KAHD,MAIK;AACDvD,MAAAA,QAAQ,CAAC,CAACgN,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAR;AACH;;AACD,QAAI,KAAKxC,MAAL,CAAYiB,aAAZ,OAAgC,WAApC,EAAiD;AAC7C,UAAI,CAAE,CAAC,KAAKjB,MAAL,CAAYmB,kBAAZ,CAA+BkO,gBAA/B,IAAmD,KAAKrP,MAAL,CAAYmB,kBAAZ,CAA+BmO,gBAAnF,KACF1O,IAAI,KAAK,SADR,IACsB,KAAKZ,MAAL,CAAYmB,kBAAZ,CAA+BoO,iBADtD,KAEA,KAAKvP,MAAL,CAAYmD,mBAAZ,CAAgCqM,cAFhC,IAEkD7O,KAAK,CAAC6O,cAF5D,EAE4E;AACxEtQ,QAAAA,WAAW,CAAC,CAAC+M,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAX;AACH,OAJD,MAKK;AACDvD,QAAAA,QAAQ,CAAC,CAACgN,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAR;AACH;AACJ,KATD,MAUK;AACD,UAAI7B,KAAK,CAAC6O,cAAN,KAA0B,CAAC,KAAKxP,MAAL,CAAYmB,kBAAZ,CAA+BkO,gBAA/B,IAC3B,KAAKrP,MAAL,CAAYmB,kBAAZ,CAA+BmO,gBADL,KAC0B1O,IAAI,KAAK,SADpC,IAEzB,KAAKZ,MAAL,CAAYmB,kBAAZ,CAA+BoO,iBAF/B,CAAJ,EAEuD;AACnDrQ,QAAAA,WAAW,CAAC,CAAC+M,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAX;AACH,OAJD,MAKK;AACDvD,QAAAA,QAAQ,CAAC,CAACgN,WAAD,CAAD,EAAgB3M,GAAG,CAACkD,YAApB,CAAR;AACH;AACJ;;AACDsD,IAAAA,WAAW,CAAC1C,WAAZ,CAAwB6I,WAAxB;AACA,WAAOA,WAAP;AACH,GA1DD,CA1hByC,CAqlBzC;;;AACAlM,EAAAA,WAAW,CAACO,SAAZ,CAAsB+K,gBAAtB,GAAyC,UAAUW,SAAV,EAAqB;AAC1D,QAAItD,YAAJ;;AACA,QAAI,KAAK1I,MAAL,CAAYgB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC0H,MAAAA,YAAY,GAAG,KAAK1I,MAAL,CAAY2I,gBAA3B;AACH,KAFD,MAGK;AACDD,MAAAA,YAAY,GAAG,KAAK1I,MAAL,CAAY0I,YAA3B;AACH;;AACD,QAAI+G,WAAW,GAAG/G,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC+C,MAAlC,CAAyCzN,MAA3D;AACA,QAAIoO,UAAU,GAAGhH,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC0D,UAAnD;AACA,QAAIC,MAAM,GAAGjH,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC4D,UAAlC,CAA6CtO,MAA1D;AACA,QAAI8J,SAAJ;AACA,QAAIyE,SAAS,GAAGnH,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC+C,MAAlC,CAAyC,CAAzC,CAAhB;;AACA,QAAI,KAAK/O,MAAL,CAAYgB,QAAZ,KAAyB,MAA7B,EAAqC;AACjCoK,MAAAA,SAAS,GAAG,KAAK0E,oBAAL,CAA0BpH,YAA1B,EAAwCsD,SAAxC,EAAmD6D,SAAnD,EAA8DJ,WAA9D,CAAZ;AACH,KAFD,MAGK,IAAIC,UAAU,KAAK,SAAnB,EAA8B;AAC/B,UAAID,WAAW,KAAK,CAApB,EAAuB;AACnBrE,QAAAA,SAAS,GAAGyE,SAAZ;AACH,OAFD,MAGK,IAAIJ,WAAW,GAAG,CAAlB,EAAqB;AACtB,YAAIA,WAAW,KAAKE,MAApB,EAA4B;AACxBvE,UAAAA,SAAS,GAAG,KAAKpL,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,KAAlC,CAAZ;AACH,SAFD,MAGK;AACD2J,UAAAA,SAAS,GAAG,KAAKpL,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,eAAlC,CAAZ;AACH;AACJ;AACJ,KAZI,MAaA,IAAIiO,UAAU,KAAK,SAAnB,EAA8B;AAC/B,UAAID,WAAW,KAAK,CAApB,EAAuB;AACnB,YAAIE,MAAM,KAAK,CAAf,EAAkB;AACd,cAAIE,SAAS,KAAKnH,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC4D,UAAlC,CAA6C,CAA7C,EAAgDxF,UAAlE,EAA8E;AAC1EgB,YAAAA,SAAS,GAAGyE,SAAZ;AACH,WAFD,MAGK;AACDzE,YAAAA,SAAS,GAAG1C,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC4D,UAAlC,CAA6C,CAA7C,EAAgDxF,UAA5D;AACH;AACJ,SAPD,MAQK;AACDgB,UAAAA,SAAS,GAAG,KAAKpL,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,eAAlC,CAAZ;AACH;AACJ,OAZD,MAaK,IAAIgO,WAAW,GAAG,CAAlB,EAAqB;AACtB,YAAIM,CAAC,GAAG,KAAK,CAAb;AACA,YAAIC,QAAQ,GAAGhH,MAAM,CAACC,IAAP,CAAYP,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCiE,OAA9C,CAAf;AACA,YAAIC,aAAa,GAAGxH,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC+C,MAAtD;;AACA,YAAIU,WAAW,KAAMO,QAAQ,CAAC1O,MAAT,GAAkB,CAAvC,EAA2C;AACvC;AACA6O,UAAAA,IAAI,EAAE,KAAKJ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,QAAQ,CAAC1O,MAAzB,EAAiCyO,CAAC,EAAlC,EAAsC;AACxC,gBAAIK,IAAI,GAAGJ,QAAQ,CAACD,CAAD,CAAnB;AACA,gBAAIM,CAAC,GAAGH,aAAa,CAAClL,OAAd,CAAsBoL,IAAtB,CAAR;;AACA,gBAAIC,CAAC,KAAK,CAAC,CAAX,EAAc;AACVjF,cAAAA,SAAS,GAAG4E,QAAQ,CAACD,CAAD,CAApB;AACA,oBAAMI,IAAN;AACA;AACH;AACJ;AACJ,SAXD,MAYK;AACD/E,UAAAA,SAAS,GAAG,KAAKpL,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,eAAlC,CAAZ;AACH;AACJ;AACJ,KAlCI,MAmCA;AACD2J,MAAAA,SAAS,GAAG,KAAKpL,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,KAAlC,CAAZ;AACH;;AACD,WAAO2J,SAAP;AACH,GApED;;AAqEArL,EAAAA,WAAW,CAACO,SAAZ,CAAsBwP,oBAAtB,GAA6C,UAAUpH,YAAV,EAAwBsD,SAAxB,EAAmC6D,SAAnC,EAA8CJ,WAA9C,EAA2D;AACpG,QAAIrE,SAAJ;AACA,QAAIkF,WAAW,GAAG5H,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCuE,YAApD;;AACA,QAAID,WAAW,CAAChP,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,UAAIkP,QAAQ,GAAG9H,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCiE,OAAjD;AACA,UAAIQ,iBAAiB,GAAG,EAAxB;;AACA,UAAI/H,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC0E,aAAlC,CAAgDpP,MAAhD,GAAyD,CAA7D,EAAgE;AAC5D,YAAIqP,gBAAgB,GAAG,EAAvB;;AACA,aAAK,IAAIjO,EAAE,GAAG,CAAT,EAAYkO,aAAa,GAAGN,WAAjC,EAA8C5N,EAAE,GAAGkO,aAAa,CAACtP,MAAjE,EAAyEoB,EAAE,EAA3E,EAA+E;AAC3E,cAAIqE,IAAI,GAAG6J,aAAa,CAAClO,EAAD,CAAxB;AACAiO,UAAAA,gBAAgB,CAAC5J,IAAD,CAAhB,GAAyBA,IAAzB;;AACA,cAAIyJ,QAAQ,CAACzJ,IAAD,CAAZ,EAAoB;AAChB4J,YAAAA,gBAAgB,GAAG,KAAK3Q,MAAL,CAAY6Q,WAAZ,CAAwBC,SAAxB,CAAkCC,aAAlC,CAAgD/E,SAAhD,EAA2DjF,IAA3D,EAAiE4J,gBAAjE,CAAnB;AACH;AACJ;;AACD,YAAIK,kBAAkB,GAAGL,gBAAgB,GAAG3H,MAAM,CAACC,IAAP,CAAY0H,gBAAZ,CAAH,GAAmC,EAA5E;;AACA,aAAK,IAAIjQ,EAAE,GAAG,CAAT,EAAYuQ,oBAAoB,GAAGD,kBAAxC,EAA4DtQ,EAAE,GAAGuQ,oBAAoB,CAAC3P,MAAtF,EAA8FZ,EAAE,EAAhG,EAAoG;AAChG,cAAIqG,IAAI,GAAGkK,oBAAoB,CAACvQ,EAAD,CAA/B;;AACA,cAAI8P,QAAQ,CAACzJ,IAAD,CAAR,CAAemK,UAAnB,EAA+B;AAC3B,gBAAI,EAAEV,QAAQ,CAACzJ,IAAD,CAAR,CAAe/G,MAAf,IAAyBwQ,QAAQ,CAACA,QAAQ,CAACzJ,IAAD,CAAR,CAAe/G,MAAhB,CAAR,CAAgCkR,UAA3D,CAAJ,EAA4E;AACxET,cAAAA,iBAAiB,CAAC/O,IAAlB,CAAuBqF,IAAvB;AACH;AACJ;AACJ;;AACD8I,QAAAA,SAAS,GAAGY,iBAAiB,CAACnP,MAAlB,KAA6B,CAA7B,GAAiCkP,QAAQ,CAACC,iBAAiB,CAAC,CAAD,CAAlB,CAAR,CAA+B7O,OAAhE,GAA0EiO,SAAtF;AACH;;AACDJ,MAAAA,WAAW,GAAGgB,iBAAiB,CAACnP,MAAlB,KAA6B,CAA7B,GAAiCmO,WAAjC,GAA+CgB,iBAAiB,CAACnP,MAA/E;AACH;;AACD,QAAImO,WAAW,KAAK,CAApB,EAAuB;AACnBrE,MAAAA,SAAS,GAAI1C,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCmF,SAAlC,GACTzI,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCmF,SADzB,GACqC,KAAKnR,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,KAAlC,CADlD;AAEH,KAHD,MAIK,IAAIgO,WAAW,KAAK,CAApB,EAAuB;AACxBrE,MAAAA,SAAS,GAAGyE,SAAZ;AACH,KAFI,MAGA,IAAIJ,WAAW,GAAG,CAAlB,EAAqB;AACtBrE,MAAAA,SAAS,GAAG,KAAKpL,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,eAAlC,CAAZ;AACH;;AACD,WAAO2J,SAAP;AACH,GAvCD;;AAwCArL,EAAAA,WAAW,CAACO,SAAZ,CAAsBoN,eAAtB,GAAwC,UAAUlN,IAAV,EAAgB;AACpD,QAAIwB,OAAO,GAAG7C,OAAO,CAACqB,IAAI,CAACwB,OAAN,EAAe,MAAM1C,GAAG,CAAC0E,kBAAzB,CAArB;AACA,QAAIoN,YAAY,GAAG7S,aAAa,CAAC,KAAD,EAAQ;AACpC4D,MAAAA,EAAE,EAAE,KAAKnC,MAAL,CAAYgC,OAAZ,CAAoBG,EAApB,GAAyB,YADO;AAEpCc,MAAAA,SAAS,EAAE3D,GAAG,CAAC+R;AAFqB,KAAR,CAAhC;AAIA,QAAIzM,cAAc,GAAGrG,aAAa,CAAC,MAAD,EAAS;AACvC0E,MAAAA,SAAS,EAAE3D,GAAG,CAACgS,kBADwB;AAEvCpO,MAAAA,SAAS,EAAElB,OAAO,CAACuP;AAFoB,KAAT,CAAlC;AAIAH,IAAAA,YAAY,CAAChO,WAAb,CAAyBwB,cAAzB;AACA3C,IAAAA,QAAQ,CAACuP,IAAT,CAAcpO,WAAd,CAA0BgO,YAA1B;AACA,WAAOA,YAAP;AACH,GAbD;;AAcArR,EAAAA,WAAW,CAACO,SAAZ,CAAsBuN,WAAtB,GAAoC,UAAU9F,CAAV,EAAa;AAC7C,QAAItH,KAAK,GAAG,IAAZ;;AACA,QAAIuB,OAAO,GAAG7C,OAAO,CAAC4I,CAAC,CAAC/F,OAAH,EAAY,MAAM1C,GAAG,CAAC0E,kBAAtB,CAArB;AACA,QAAIyN,QAAQ,GAAGxP,QAAQ,CAACC,cAAT,CAAwB,KAAKlC,MAAL,CAAYgC,OAAZ,CAAoBG,EAApB,GAAyB,YAAjD,CAAf;AACA,QAAIuP,SAAS,GAAG5R,SAAS,CAAC6R,YAAV,CAAuB3P,OAAO,CAAC4P,YAAR,CAAqB,UAArB,CAAvB,EAAyD,KAAK5R,MAA9D,CAAhB;AACA,QAAI6R,aAAa,GAAG;AAChB7F,MAAAA,SAAS,EAAE0F,SAAS,CAAC1F,SADL;AAEhB8F,MAAAA,SAAS,EAAEJ,SAAS,CAACI,SAFL;AAGhBlR,MAAAA,IAAI,EAAE8Q,SAAS,CAAC9Q,IAHA;AAIhBO,MAAAA,kBAAkB,EAAErB,SAAS,CAACiS,2BAAV,CAAsC,KAAK/R,MAAL,CAAYmB,kBAAlD,CAJJ;AAKhB6Q,MAAAA,MAAM,EAAE;AALQ,KAApB;AAOA,QAAIC,OAAO,GAAG,KAAKjS,MAAL,CAAYiB,aAAZ,OAAgC,gBAAhC,IACV,KAAKjB,MAAL,CAAYkS,WADF,GACgB,KAAKlS,MAAL,CAAYkB,eAD5B,GAC8C,KAAKlB,MADjE;AAEAiS,IAAAA,OAAO,CAACE,OAAR,CAAgB5S,MAAM,CAAC6S,cAAvB,EAAuCP,aAAvC,EAAsD,UAAUQ,YAAV,EAAwB;AAC1E,UAAI,CAACA,YAAY,CAACL,MAAlB,EAA0B;AACtBvR,QAAAA,KAAK,CAACT,MAAN,CAAasS,UAAb,GAA0B,IAA1B;AACA,YAAI5J,YAAY,GAAG,KAAK,CAAxB;;AACA,YAAIjI,KAAK,CAACT,MAAN,CAAagB,QAAb,KAA0B,MAA9B,EAAsC;AAClC0H,UAAAA,YAAY,GAAGjI,KAAK,CAACT,MAAN,CAAa2I,gBAA5B;AACH,SAFD,MAGK;AACDD,UAAAA,YAAY,GAAGjI,KAAK,CAACT,MAAN,CAAa0I,YAA5B;AACH;;AACD,YAAI6J,IAAI,GAAG7J,YAAY,CAAC4C,SAAb,CAAuBtJ,OAAO,CAAC4P,YAAR,CAAqB,UAArB,CAAvB,CAAX;AACA,YAAIhR,IAAI,GAAG,CAACtB,GAAG,CAACkT,cAAL,EAAqBlT,GAAG,CAACmT,iBAAzB,EAA4CnT,GAAG,CAACoT,iBAAhD,CAAX;AACAzT,QAAAA,QAAQ,CAAC,CAAC+C,OAAD,CAAD,EAAY1C,GAAG,CAACqT,mBAAhB,CAAR;;AACA,YAAIlB,QAAQ,IAAI,CAAChR,KAAK,CAACT,MAAN,CAAaiB,aAAb,OAAiC,gBAAjC,IACbR,KAAK,CAACT,MAAN,CAAa4S,UADD,MACiB,OADjC,EAC0C;AACtC,cAAIC,cAAc,GAAGpS,KAAK,CAACT,MAA3B;AACAyR,UAAAA,QAAQ,CAACqB,KAAT,CAAeC,MAAf,GAAwB,CAACF,cAAc,CAACjG,cAAf,CAA8BO,eAA9B,CAA8C4F,MAA9C,GAAuD,CAAxD,EAA2DtI,QAA3D,EAAxB;AACH;;AACD,YAAI8H,IAAI,IAAIA,IAAI,CAAChH,aAAL,KAAuB,iBAAnC,EAAsD;AAClD,eAAK,IAAI7I,EAAE,GAAG,CAAT,EAAYsQ,MAAM,GAAGpS,IAA1B,EAAgC8B,EAAE,GAAGsQ,MAAM,CAAC1R,MAA5C,EAAoDoB,EAAE,EAAtD,EAA0D;AACtD,gBAAIuQ,WAAW,GAAGD,MAAM,CAACtQ,EAAD,CAAxB;AACAzD,YAAAA,QAAQ,CAAC,CAACwB,KAAK,CAACsB,aAAN,CAAoBK,aAApB,CAAkC,MAAM6Q,WAAxC,CAAD,CAAD,EAAyD3T,GAAG,CAAC4T,aAA7D,CAAR;AACH;AACJ;;AACD,YAAIpU,QAAQ,EAAZ,EAAgB;AACZiJ,UAAAA,CAAC,CAACoL,UAAF,CAAapL,CAAC,CAACoG,WAAf;AACH;AACJ,OA1BD,MA2BK;AACD1N,QAAAA,KAAK,CAACT,MAAN,CAAasS,UAAb,GAA0B,KAA1B;;AACA7R,QAAAA,KAAK,CAAC6M,SAAN,CAAgB8F,UAAhB,CAA2BrL,CAAC,CAACsL,KAA7B;;AACA1U,QAAAA,MAAM,CAAC8S,QAAD,CAAN;AACH;AACJ,KAjCD;AAkCH,GAhDD;;AAiDA1R,EAAAA,WAAW,CAACO,SAAZ,CAAsByN,UAAtB,GAAmC,UAAUhG,CAAV,EAAa;AAC5C,SAAKuF,SAAL,CAAegG,aAAf,CAA6B;AAAEC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAG,CAACxU,KAAK,CAAC+I,CAAC,CAACsL,KAAF,CAAQI,aAAT,CAAN,IAAiCrU,OAAO,CAACsU,QAA1C,GAAsD,EAAtD,GAA2D,CAAC;AAAnE;AAAZ,KAA7B;AACH,GAFD;;AAGA3T,EAAAA,WAAW,CAACO,SAAZ,CAAsB2N,UAAtB,GAAmC,UAAUzN,IAAV,EAAgB;AAC/C,SAAKR,MAAL,CAAYsS,UAAZ,GAAyB,KAAzB;;AACA,QAAI9R,IAAI,CAAC+L,MAAL,IAAe/L,IAAI,CAACwB,OAApB,IAAgC7C,OAAO,CAACqB,IAAI,CAACwB,OAAN,EAAe,MAAM1C,GAAG,CAACqU,sBAAzB,CAAP,IAChC,CAACxU,OAAO,CAACqB,IAAI,CAAC+L,MAAN,EAAc,MAAMjN,GAAG,CAACsU,eAAxB,CADZ,EACuD;AAAE;AACrDpT,MAAAA,IAAI,CAACwR,MAAL,GAAc,IAAd;AACH;;AACD,QAAIhQ,OAAO,GAAG7C,OAAO,CAACqB,IAAI,CAACwB,OAAN,EAAe,MAAM1C,GAAG,CAAC0E,kBAAzB,CAArB;AACA9E,IAAAA,WAAW,CAAC,GAAG2U,KAAH,CAASC,IAAT,CAAc,KAAK/R,aAAL,CAAmBa,gBAAnB,CAAoC,MAAMtD,GAAG,CAAC0E,kBAA9C,CAAd,CAAD,EAAmF1E,GAAG,CAACqT,mBAAvF,CAAX;AACAzT,IAAAA,WAAW,CAAC,GAAG2U,KAAH,CAASC,IAAT,CAAc,KAAK/R,aAAL,CAAmBa,gBAAnB,CAAoC,MAAMtD,GAAG,CAACkF,oBAA9C,CAAd,CAAD,EAAqFlF,GAAG,CAACyU,qBAAzF,CAAX;AACA,QAAInT,IAAI,GAAG,CAACtB,GAAG,CAACkT,cAAL,EAAqBlT,GAAG,CAACmT,iBAAzB,EAA4CnT,GAAG,CAACoT,iBAAhD,CAAX;;AACA,SAAK,IAAIhQ,EAAE,GAAG,CAAT,EAAYsR,MAAM,GAAGpT,IAA1B,EAAgC8B,EAAE,GAAGsR,MAAM,CAAC1S,MAA5C,EAAoDoB,EAAE,EAAtD,EAA0D;AACtD,UAAIuQ,WAAW,GAAGe,MAAM,CAACtR,EAAD,CAAxB;AACAxD,MAAAA,WAAW,CAAC,CAAC,KAAK6C,aAAL,CAAmBK,aAAnB,CAAiC,MAAM6Q,WAAvC,CAAD,CAAD,EAAwD3T,GAAG,CAAC4T,aAA5D,CAAX;AACH;;AACD,QAAI,KAAKlT,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCC,WAAzC,EAAsD;AAClD,WAAKlU,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCC,WAArC,CAAiDC,KAAjD;AACH;;AACD,QAAIlS,QAAQ,CAACC,cAAT,CAAwB,KAAKlC,MAAL,CAAYgC,OAAZ,CAAoBG,EAApB,GAAyB,YAAjD,CAAJ,EAAoE;AAChE1D,MAAAA,MAAM,CAACwD,QAAQ,CAACC,cAAT,CAAwB,KAAKlC,MAAL,CAAYgC,OAAZ,CAAoBG,EAApB,GAAyB,YAAjD,CAAD,CAAN;AACH;;AACDF,IAAAA,QAAQ,CAACuP,IAAT,CAAcsB,KAAd,CAAoBsB,MAApB,GAA6B,MAA7B;;AACA,QAAI,CAAC,KAAKC,eAAL,CAAqB7T,IAAI,CAAC+L,MAA1B,EAAkCvK,OAAlC,CAAD,IAA+CxB,IAAI,CAACwR,MAAxD,EAAgE;AAC5D;AACH;;AACD,SAAKhS,MAAL,CAAY6Q,WAAZ,CAAwByD,gBAAxB,CAAyCrC,OAAzC,GAAmD,KAAKjS,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,GAA8C,KAAKjB,MAAnD,GAC9C,KAAKA,MAAL,CAAYkB,eAAZ,GAA8B,KAAKlB,MAAL,CAAYkB,eAA1C,GAA4D,KAAKlB,MADtE;;AAEA,QAAI,KAAKA,MAAL,CAAY6Q,WAAZ,CAAwB0D,iBAAxB,CAA0CC,eAA1C,CAA0DhU,IAA1D,EAAgEwB,OAAO,CAACG,EAAxE,CAAJ,EAAiF;AAC7E,WAAKsS,gBAAL;AACA;;AACA,UAAIC,OAAO,GAAG,IAAd;AACA;;AACAA,MAAAA,OAAO,CAAC1U,MAAR,CAAe2U,eAAf,CAA+BtI,MAA/B;AACH;AACJ,GAjCD;;AAkCAtM,EAAAA,WAAW,CAACO,SAAZ,CAAsB+T,eAAtB,GAAwC,UAAUO,UAAV,EAAsBrI,MAAtB,EAA8B;AAClE,QAAIsI,SAAS,GAAG1V,OAAO,CAACoN,MAAD,EAAS,MAAMjN,GAAG,CAACsU,eAAnB,CAAvB;AACA,QAAIkB,gBAAgB,GAAG3V,OAAO,CAACyV,UAAD,EAAa,MAAMtV,GAAG,CAACsU,eAAvB,CAA9B;AACA,QAAImB,SAAS,GAAG,IAAhB;;AACA,QAAIF,SAAS,IAAIA,SAAS,KAAKC,gBAA/B,EAAiD;AAC7C,UAAIE,YAAY,GAAG,GAAGnB,KAAH,CAASC,IAAT,CAAce,SAAS,CAACjS,gBAAV,CAA2B,MAAMtD,GAAG,CAAC0E,kBAArC,CAAd,CAAnB;AACA,UAAIiR,eAAe,GAAG9V,OAAO,CAACyV,UAAD,EAAa,MAAMtV,GAAG,CAACuE,0BAAvB,CAA7B;AACA,UAAIqR,cAAc,GAAG,KAAK,CAA1B;AACA,UAAIC,eAAe,GAAG,CAAC,CAAvB;;AACA,WAAK,IAAI9R,CAAC,GAAG,CAAR,EAAW+R,CAAC,GAAGJ,YAAY,CAAC1T,MAAjC,EAAyC+B,CAAC,GAAG+R,CAA7C,EAAgD/R,CAAC,EAAjD,EAAqD;AACjD,YAAI2R,YAAY,CAAC3R,CAAD,CAAZ,CAAgBlB,EAAhB,KAAuBoK,MAAM,CAACpK,EAAlC,EAAsC;AAClC+S,UAAAA,cAAc,GAAG7R,CAAjB;AACH;;AACD,YAAI4R,eAAJ,EAAqB;AACjB,cAAII,eAAe,GAAGJ,eAAe,CAAC7S,aAAhB,CAA8B,MAAM9C,GAAG,CAAC0E,kBAAxC,CAAtB;;AACA,cAAIgR,YAAY,CAAC3R,CAAD,CAAZ,CAAgBlB,EAAhB,KAAuBkT,eAAe,CAAClT,EAA3C,EAA+C;AAC3CgT,YAAAA,eAAe,GAAG9R,CAAlB;AACH;AACJ;AACJ;;AACD,UAAI6R,cAAc,KAAKC,eAAnB,IAAuCD,cAAc,KAAMF,YAAY,CAAC1T,MAAb,GAAsB,CAA1C,IAAgD6T,eAAe,KAAK,CAAC,CAAhH,EAAoH;AAChHjW,QAAAA,WAAW,CAAC,GAAG2U,KAAH,CAASC,IAAT,CAAc,KAAK/R,aAAL,CAAmBa,gBAAnB,CAAoC,MAAMtD,GAAG,CAACkF,oBAA9C,CAAd,CAAD,EAAqFlF,GAAG,CAACyU,qBAAzF,CAAX;AACAgB,QAAAA,SAAS,GAAG,KAAZ;AACH;AACJ;;AACD,WAAOA,SAAP;AACH,GA1BD;;AA2BAhV,EAAAA,WAAW,CAACO,SAAZ,CAAsBgV,aAAtB,GAAsC,UAAU9U,IAAV,EAAgB;AAClD,QAAIuD,aAAa,GAAG5E,OAAO,CAACqB,IAAI,CAAC+L,MAAN,EAAc,MAAMjN,GAAG,CAAC0E,kBAAxB,CAA3B;AACA,QAAI0N,SAAS,GAAG5R,SAAS,CAAC6R,YAAV,CAAwB5N,aAAa,GAAGA,aAAa,CAAC5B,EAAjB,GAAsB,EAA3D,EAAgE,KAAKnC,MAArE,CAAhB;;AACA,QAAI,CAAEQ,IAAI,CAAC+L,MAAL,CAAY1J,SAAZ,CAAsBC,QAAtB,CAA+BxD,GAAG,CAAC8P,mBAAnC,CAAF,IACA,CAAE5O,IAAI,CAAC+L,MAAL,CAAY1J,SAAZ,CAAsBC,QAAtB,CAA+BxD,GAAG,CAACuG,YAAnC,CADF,IAEA,CAAErF,IAAI,CAAC+L,MAAL,CAAY1J,SAAZ,CAAsBC,QAAtB,CAA+BxD,GAAG,CAAC8O,UAAnC,CAFF,IAGCrK,aAAa,IAAI2N,SAAS,CAACI,SAA3B,KAAyCJ,SAAS,CAACI,SAAV,CAAoBjD,YAApB,IACtCjQ,iBAAiB,CAAC8S,SAAS,CAACI,SAAV,CAAoBjD,YAArB,CADpB,CAHL,EAI+D;AAC3D,UAAI,CAAC,KAAK7O,MAAL,YAAuBX,cAAvB,IAAyC,KAAKW,MAAL,CAAYmD,mBAAZ,CAAgC0L,YAA1E,KACA,KAAK7O,MAAL,CAAYmB,kBAAZ,CAA+ByN,aAD/B,IAEA,EAAE,KAAK5O,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,KAAqC,KAAKhB,MAAL,CAAYiB,aAAZ,OAAgC,gBAAhC,IACnC,KAAKjB,MAAL,CAAYkB,eAAZ,KAAgCgE,SADG,IAEnC,KAAKlF,MAAL,CAAYkB,eAAZ,CAA4B+D,oBAFM,IAGjC,KAAKjF,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,IAA+C,KAAKjB,MAAL,CAAYiF,oBAH9D,CAAF,CAFJ,EAK6F;AACzF,YAAM,KAAKjF,MAAL,CAAYiB,aAAZ,OAAgC,WAAhC,IAA+C,KAAKjB,MAAL,CAAYuV,kBAA5D,IACA,KAAKvV,MAAL,CAAYiB,aAAZ,OAAgC,gBAAhC,IAAoD,KAAKjB,MAAL,CAAYkB,eAAZ,KAAgCgE,SAApF,IACG,KAAKlF,MAAL,CAAYkB,eAAZ,CAA4BqU,kBAFpC,EAE0D;AACtD,cAAI,KAAKvV,MAAL,CAAYuV,kBAAZ,IAAkC,KAAKvV,MAAL,CAAYkB,eAAZ,CAA4BqU,kBAAlE,EAAsF;AAAE;AACpF,gBAAI/U,IAAI,CAAC+L,MAAL,CAAY1J,SAAZ,CAAsBC,QAAtB,CAA+B,gBAA/B,CAAJ,EAAsD;AAClD,kBAAItC,IAAI,CAAC+L,MAAL,CAAYxK,aAAZ,CAA0B6P,YAA1B,CAAuC,UAAvC,EAAmDpJ,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,MAAqE,MAAzE,EAAiF;AAC7E,qBAAKxI,MAAL,CAAYsT,aAAZ,CAA0B;AAAEnS,kBAAAA,kBAAkB,EAAE;AAAEuJ,oBAAAA,iBAAiB,EAAE;AAAE8K,sBAAAA,UAAU,EAAE;AAAd;AAArB;AAAtB,iBAA1B,EAA6F,IAA7F;AACH;AACJ,aAJD,MAKK;AACD,kBAAIhV,IAAI,CAAC+L,MAAL,CAAYxK,aAAZ,CAA0BA,aAA1B,CAAwC6P,YAAxC,CAAqD,UAArD,EAAiEpJ,KAAjE,CAAuE,GAAvE,EAA4E,CAA5E,MAAmF,MAAvF,EAA+F;AAC3F,qBAAKxI,MAAL,CAAYsT,aAAZ,CAA0B;AAAEnS,kBAAAA,kBAAkB,EAAE;AAAEuJ,oBAAAA,iBAAiB,EAAE;AAAE8K,sBAAAA,UAAU,EAAE;AAAd;AAArB;AAAtB,iBAA1B,EAA6F,IAA7F;AACH;AACJ;AACJ;AACJ;;AACD,aAAKxV,MAAL,CAAY6Q,WAAZ,CAAwBC,SAAxB,CAAkCwE,aAAlC,CAAgD9U,IAAhD;;AACA,YAAI,CAAC,KAAKR,MAAL,CAAYsO,sBAAb,IAAuC,KAAKtO,MAAL,CAAYiB,aAAZ,OAAgC,gBAA3E,EAA6F;AACzF,eAAKwT,gBAAL,CAAsB,IAAtB;AACH;AACD;;;AACA,YAAIC,OAAO,GAAG,IAAd;AACA;;AACA,YAAIA,OAAO,CAAC1U,MAAR,YAA0BX,cAA9B,EAA8C;AAC1CqV,UAAAA,OAAO,CAACtU,SAAR,CAAkBiM,MAAlB;AACH;AACJ;AACJ;AACJ,GA1CD;AA2CA;;AACA;;;AACAtM,EAAAA,WAAW,CAACO,SAAZ,CAAsBmU,gBAAtB,GAAyC,UAAUgB,aAAV,EAAyB;AAC9D,QAAI,CAAC,KAAKzV,MAAL,CAAYsO,sBAAb,IAAuC,KAAKtO,MAAL,CAAYiB,aAAZ,OAAgC,WAA3E,EAAwF;AACpF,WAAKjB,MAAL,CAAYyU,gBAAZ,CAA6BgB,aAA7B;AACH,KAFD,MAGK;AACD,UAAI,KAAKzV,MAAL,CAAYiB,aAAZ,OAAgC,gBAAhC,IAAoD,KAAKjB,MAAL,CAAYkS,WAAhE,IAA+E,KAAKlS,MAAL,CAAYkB,eAA/F,EAAgH;AAC5G,YAAI,KAAKlB,MAAL,CAAYgB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC,eAAKhB,MAAL,CAAYkB,eAAZ,CAA4ByH,gBAA5B,GAA+C,KAAK3I,MAAL,CAAY2I,gBAA3D;AACH,SAFD,MAGK;AACD,eAAK3I,MAAL,CAAYkB,eAAZ,CAA4BwH,YAA5B,GAA2C,KAAK1I,MAAL,CAAY0I,YAAvD;AACH;AACD;;;AACA,aAAK1I,MAAL,CAAYkB,eAAZ,CAA4B8L,MAA5B,CAAmCzN,MAAM,CAACmW,QAA1C,EAAoD,IAApD;AACA,aAAK1V,MAAL,CACIkB,eADJ,CACoBoS,aADpB,CACkC;AAAEnS,UAAAA,kBAAkB,EAAE,KAAKnB,MAAL,CAAYmB,kBAAZ,CAA+BwU;AAArD,SADlC,EACqG,IADrG;AAEA;AACH,OAZD,MAaK;AACD,aAAK3V,MAAL,CAAY4V,oBAAZ;AACH;AACJ;AACJ,GAtBD;;AAuBA7V,EAAAA,WAAW,CAACO,SAAZ,CAAsBuV,eAAtB,GAAwC,UAAUrV,IAAV,EAAgB;AACpD;AACA,QAAIsV,QAAQ,GAAG,KAAK9V,MAAL,CAAYkB,eAAZ,GAA8B,KAAKlB,MAAL,CAAYkB,eAA1C,GAA4D,KAAKlB,MAAhF;;AACA,QAAI8V,QAAQ,CAAC7U,aAAT,OAA6B,gBAAjC,EAAmD;AAC/CxB,MAAAA,WAAW,CAACqW,QAAQ,CAACC,uBAAV,CAAX;AACH,KAFD,MAGK;AACDD,MAAAA,QAAQ,CAACE,gBAAT;AACH;;AACDF,IAAAA,QAAQ,CAACG,cAAT,GAA0BzV,IAA1B;AACAsV,IAAAA,QAAQ,CAACI,cAAT,GAA0B,KAAKlW,MAAL,CAAY6Q,WAAZ,CAAwBsF,UAAxB,KAAuC,gBAAvC,GACtB,KAAKnW,MAAL,CAAYgC,OADU,GACAC,QAAQ,CAACC,cAAT,CAAwB,KAAKlC,MAAL,CAAY6Q,WAAZ,CAAwBuF,QAAxB,GAAmC,UAA3D,CAD1B;AAEA,QAAIpK,SAAS,GAAGxL,IAAI,CAAC+L,MAAL,CAAYxK,aAAZ,CAA0BI,EAA1C;;AACA,QAAI2T,QAAQ,IAAIA,QAAQ,CAAC7Q,oBAArB,IAA6CnG,QAAQ,EAArD,IAA2DgX,QAAQ,CAAC9U,QAAT,KAAsB,OAArF,EAA8F;AAC1F,UAAIqV,OAAO,GAAG,IAAd;AACAP,MAAAA,QAAQ,CAACQ,cAAT,CAAwBC,iBAAxB,CAA0C,oBAA1C,EAAgE,mBAAhE,EAAqFvK,SAArF,EAAgGwK,IAAhG,CAAqG,UAAUjE,IAAV,EAAgB;AACjH,YAAIkE,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWpE,IAAI,CAACqE,WAAhB,CAAjB;AACA,YAAIA,WAAW,GAAG,EAAlB;AACA,YAAIC,gBAAgB,GAAG,EAAvB;AACA,YAAI5G,OAAO,GAAG,EAAd;;AACA,aAAK,IAAI5M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoT,UAAU,CAACnV,MAA/B,EAAuC+B,CAAC,EAAxC,EAA4C;AACxCuT,UAAAA,WAAW,CAAClV,IAAZ,CAAiB;AAAEoV,YAAAA,aAAa,EAAEL,UAAU,CAACpT,CAAD,CAAV,CAAc0T,aAA/B;AAA8C3M,YAAAA,UAAU,EAAEqM,UAAU,CAACpT,CAAD,CAAV,CAAc2T;AAAxE,WAAjB;AACAH,UAAAA,gBAAgB,CAACJ,UAAU,CAACpT,CAAD,CAAV,CAAc0T,aAAf,CAAhB,GAAgD,EAAhD;AACA9G,UAAAA,OAAO,CAACwG,UAAU,CAACpT,CAAD,CAAV,CAAc2T,UAAf,CAAP,GAAoC,EAApC;AACH;;AACDX,QAAAA,OAAO,CAACrW,MAAR,CAAe0I,YAAf,CAA4B4C,SAA5B,CAAsCU,SAAtC,EAAiD4D,UAAjD,GAA8DgH,WAA9D;AACAP,QAAAA,OAAO,CAACrW,MAAR,CAAe0I,YAAf,CAA4B4C,SAA5B,CAAsCU,SAAtC,EAAiD6K,gBAAjD,GAAoEA,gBAApE;AACAR,QAAAA,OAAO,CAACrW,MAAR,CAAe0I,YAAf,CAA4B4C,SAA5B,CAAsCU,SAAtC,EAAiDiE,OAAjD,GAA2DA,OAA3D;AACAoG,QAAAA,OAAO,CAACY,kBAAR;AACH,OAdD;AAeH,KAjBD,MAkBK,IAAInB,QAAQ,CAAC3U,kBAAT,CAA4B+V,IAA5B,KAAqC,QAAzC,EAAmD;AACpD,UAAI,KAAKlX,MAAL,CAAY0I,YAAZ,CAAyB4C,SAAzB,CAAmCU,SAAnC,EAA8CiE,OAA9C,IAAyDjH,MAAM,CAACC,IAAP,CAAY,KAAKjJ,MAAL,CAAY0I,YAAZ,CAAyB4C,SAAzB,CAAmCU,SAAnC,EAA8CiE,OAA1D,EAAmE3O,MAAnE,GAA4E,CAAzI,EAA4I;AACxI,aAAK2V,kBAAL;AACH,OAFD,MAGK;AACDnB,QAAAA,QAAQ,CAACqB,SAAT,CAAmB,mBAAnB,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,EAA0D,IAA1D,EAAgE,IAAhE,EAAsEnL,SAAtE;AACH;AACJ,KAPI,MAQA;AACD,WAAKiL,kBAAL;AACH;AACD;;AACH,GA3CD;AA4CA;;AACA;;;AACAlX,EAAAA,WAAW,CAACO,SAAZ,CAAsB2W,kBAAtB,GAA2C,YAAY;AACnD;AACA,QAAInB,QAAQ,GAAG,KAAK9V,MAAL,CAAYkB,eAAZ,GAA8B,KAAKlB,MAAL,CAAYkB,eAA1C,GAA4D,KAAKlB,MAAhF;AACA,SAAKA,MAAL,CAAY6Q,WAAZ,CAAwBC,SAAxB,CAAkC+E,eAAlC,CAAkDC,QAAQ,CAACG,cAA3D;AACA,QAAI1J,MAAM,GAAGuJ,QAAQ,CAACG,cAAT,CAAwB1J,MAArC;AACA,SAAKP,SAAL,GAAiBO,MAAM,CAACxK,aAAP,CAAqBI,EAAtC;;AACA,QAAI,KAAKnC,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCC,WAAzC,EAAsD;AAClD,WAAKA,WAAL,GAAmB,KAAKlU,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCC,WAAxD;AACA,WAAKlU,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCC,WAArC,CAAiDC,KAAjD,GAAyD,KAAKiD,kBAAL,CAAwBzJ,IAAxB,CAA6B,IAA7B,CAAzD,CAFkD,CAGlD;AACA;AACA;;AACA,WAAK0J,gBAAL;AACH;;AACD,QAAIvB,QAAQ,CAAC7U,aAAT,OAA6B,gBAAjC,EAAmD;AAC/CvB,MAAAA,WAAW,CAACoW,QAAQ,CAACC,uBAAV,CAAX;AACH,KAFD,MAGK;AACDD,MAAAA,QAAQ,CAACwB,gBAAT;AACH;AACJ,GApBD;;AAqBAvX,EAAAA,WAAW,CAACO,SAAZ,CAAsB+W,gBAAtB,GAAyC,YAAY;AACjD,QAAI,KAAKrX,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCsD,oBAArC,IAA6D,KAAKvX,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCuD,MAAtG,EAA8G;AAC1G,WAAKC,KAAL,GAAa,KAAKzX,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCuD,MAArC,CAA4CE,YAAzD;AACA,WAAKC,wBAAL;AACA,WAAKzD,WAAL,CAAiB0D,OAAjB,GAA2B,KAAKC,WAAL,EAA3B;AACA,WAAK3D,WAAL,CAAiB4D,QAAjB;AACA,WAAK9X,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCuD,MAArC,CAA4CO,QAA5C,GAAuD,KAAKC,SAAL,CAAerK,IAAf,CAAoB,IAApB,CAAvD;AACH,KAND,MAOK,IAAI,KAAK3N,MAAL,CAAYmB,kBAAZ,CAA+BoO,iBAAnC,EAAsD;AACvD,WAAKkI,KAAL,GAAa,CAAb;AACA,WAAKE,wBAAL;AACH;AACJ,GAZD;;AAaA5X,EAAAA,WAAW,CAACO,SAAZ,CAAsBuX,WAAtB,GAAoC,YAAY;AAC5C,WAAO,CACH;AACIA,MAAAA,WAAW,EAAE;AACTjQ,QAAAA,QAAQ,EAAE,2BAA2B,KAAK5H,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCsD,oBAArC,GAA4D,EAA5D,GAAiE,MAAMjY,GAAG,CAACkD,YAAtG,CADD;AAETyV,QAAAA,OAAO,EAAE,6BAFA;AAE+BlS,QAAAA,SAAS,EAAE,KAAK/F,MAAL,CAAY+F,SAFtD;AAGTmS,QAAAA,OAAO,EAAE,KAAKlY,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,aAAlC,CAHA;AAGkD0W,QAAAA,QAAQ,EAAG,KAAKnY,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCmE,YAArC,GAAoD,KAApD,GAA4D;AAHzH,OADjB;AAMIzL,MAAAA,KAAK,EAAE,KAAK0L,WAAL,CAAiB1K,IAAjB,CAAsB,IAAtB;AANX,KADG,EASH;AACIkK,MAAAA,WAAW,EAAE;AACTjQ,QAAAA,QAAQ,EAAEtI,GAAG,CAACgZ,eADL;AACsBJ,QAAAA,OAAO,EAAE,KAAKlY,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,IAAlC,CAD/B;AACwE8W,QAAAA,SAAS,EAAE;AADnF,OADjB;AAII5L,MAAAA,KAAK,EAAG,KAAK8K,KAAL,KAAe,CAAf,GAAmB,KAAKe,iBAAL,CAAuB7K,IAAvB,CAA4B,IAA5B,EAAkC,KAAK3B,SAAvC,CAAnB,GAAuE,KAAKyM,kBAAL,CAAwB9K,IAAxB,CAA6B,IAA7B;AAJnF,KATG,EAeH;AACIhB,MAAAA,KAAK,EAAE,KAAK3M,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqCyE,iBAArC,CAAuD/K,IAAvD,CAA4D,IAA5D,CADX;AAEIkK,MAAAA,WAAW,EAAE;AAAEjQ,QAAAA,QAAQ,EAAEtI,GAAG,CAACqZ,mBAAhB;AAAqCT,QAAAA,OAAO,EAAE,KAAKlY,MAAL,CAAYwB,SAAZ,CAAsBC,WAAtB,CAAkC,QAAlC;AAA9C;AAFjB,KAfG,CAAP;AAoBH,GArBD;;AAsBA1B,EAAAA,WAAW,CAACO,SAAZ,CAAsB0X,SAAtB,GAAkC,UAAUjQ,CAAV,EAAa;AAC3C,SAAK0P,KAAL,GAAa1P,CAAC,CAAC6Q,aAAf;AACA,SAAKjB,wBAAL;AACAzY,IAAAA,WAAW,CAAC,GAAG2U,KAAH,CAASC,IAAT,CAAc,KAAKI,WAAL,CAAiBlS,OAAjB,CAAyBY,gBAAzB,CAA0C,iBAA1C,CAAd,CAAD,EAA8E,gBAA9E,CAAX;;AACA,QAAImF,CAAC,CAAC6Q,aAAF,GAAkB,CAAtB,EAAyB;AACrB3Z,MAAAA,QAAQ,CAAC,CAAC,KAAKiV,WAAL,CAAiBlS,OAAjB,CAAyBI,aAAzB,CAAuC,0BAA0B,GAA1B,IAAiC2F,CAAC,CAAC6Q,aAAF,KAAoB,CAApB,IAAyB,KAAK5Y,MAAL,CAAYmB,kBAAZ,CAA+BkO,gBAAxD,GAA2E,gBAA3E,GAA8F,gBAA/H,CAAvC,CAAD,CAAD,EAA6L,gBAA7L,CAAR;AACH;;AACD,QAAItH,CAAC,CAAC6Q,aAAF,KAAoB,CAAxB,EAA2B;AACvB,WAAK5Y,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqC4E,kBAArC;AACH,KAFD,MAGK;AACD,WAAK3E,WAAL,CAAiB0D,OAAjB,CAAyB,CAAzB,EAA4BC,WAA5B,CAAwCM,QAAxC,GAAmD,KAAnD;AACA,WAAKjE,WAAL,CAAiBlS,OAAjB,CAAyBI,aAAzB,CAAuC,MAAM9C,GAAG,CAACgZ,eAAjD,EAAkEQ,eAAlE,CAAkF,UAAlF;AACH;AACJ,GAdD;;AAeA/Y,EAAAA,WAAW,CAACO,SAAZ,CAAsBqX,wBAAtB,GAAiD,YAAY;AACzD,SAAKzD,WAAL,CAAiB0D,OAAjB,GAA2B,KAAKC,WAAL,EAA3B;AACA,SAAK3D,WAAL,CAAiB4D,QAAjB;AACH,GAHD;;AAIA/X,EAAAA,WAAW,CAACO,SAAZ,CAAsBmY,kBAAtB,GAA2C,UAAUjY,IAAV,EAAgB;AACvD,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIsY,aAAa,GAAG,KAAK7E,WAAL,CAAiBlS,OAAjB,CAAyBI,aAAzB,CAAuC,iBAAvC,CAApB;AACA,QAAI4J,SAAS,GAAG+M,aAAa,CAACnH,YAAd,CAA2B,gBAA3B,CAAhB;AACA,QAAIoH,SAAS,GAAGD,aAAa,CAACnH,YAAd,CAA2B,oBAA3B,CAAhB;AACA,QAAIlC,UAAU,GAAGqJ,aAAa,CAACnH,YAAd,CAA2B,WAA3B,CAAjB;AACA,QAAIqH,OAAO,GAAGF,aAAa,CAACnH,YAAd,CAA2B,cAA3B,CAAd;AACA,QAAIsH,QAAQ,GAAGH,aAAa,CAACnH,YAAd,CAA2B,eAA3B,CAAf;AACA,QAAIuH,QAAQ,GAAGJ,aAAa,CAACnH,YAAd,CAA2B,aAA3B,CAAf;AACA,QAAIwH,QAAQ,GAAGL,aAAa,CAACnH,YAAd,CAA2B,aAA3B,CAAf;AACA,QAAIxN,IAAI,GAAKsL,UAAU,KAAK,OAAhB,GAA2B,OAA3B,GAAsCA,UAAU,KAAK,MAAhB,GAA0B,MAA1B,GAC5CA,UAAU,KAAK,QAAhB,GAA4B,QAA5B,GAAuC,OAD3C;AAEA,QAAI2J,UAAU,GAAG;AACb1X,MAAAA,IAAI,EAAEqK,SADO;AAEb5H,MAAAA,IAAI,EAAEA,IAFO;AAGb6U,MAAAA,OAAO,EAAEA,OAHI;AAIbK,MAAAA,SAAS,EAAEJ,QAJE;AAKbK,MAAAA,MAAM,EAAE7J,UAAU,KAAK,MAAf,IAAyB,CAAC5Q,QAAQ,EAAlC,GAAuC,IAAI0a,IAAJ,CAASL,QAAT,CAAvC,GAA4DA,QALvD;AAMbM,MAAAA,MAAM,EAAE/J,UAAU,KAAK,MAAf,IAAyB,CAAC5Q,QAAQ,EAAlC,GAAuC,IAAI0a,IAAJ,CAASJ,QAAT,CAAvC,GAA4DA;AANvD,KAAjB;AAQA,QAAIhB,YAAJ;;AACA,QAAI,KAAKpY,MAAL,CAAYgB,QAAZ,KAAyB,MAA7B,EAAqC;AACjCqY,MAAAA,UAAU,CAACK,aAAX,GAA2BV,SAA3B;AACA,WAAKW,wBAAL,CAA8B3N,SAA9B,EAAyCgN,SAAzC,EAAoD5U,IAApD;AACA,UAAIkM,WAAW,GAAG,KAAKtQ,MAAL,CAAYmB,kBAAZ,CAA+BgO,cAAjD;;AACA,WAAK,IAAIzM,EAAE,GAAG,CAAT,EAAYkX,aAAa,GAAGtJ,WAAjC,EAA8C5N,EAAE,GAAGkX,aAAa,CAACtY,MAAjE,EAAyEoB,EAAE,EAA3E,EAA+E;AAC3E,YAAIqE,IAAI,GAAG6S,aAAa,CAAClX,EAAD,CAAxB;;AACA,YAAIqE,IAAI,CAACpF,IAAL,KAAcqK,SAAd,IAA2BjF,IAAI,CAAC2S,aAAL,KAAuBV,SAAtD,EAAiE;AAC7DZ,UAAAA,YAAY,GAAGrR,IAAf;AACH;AACJ;AACJ,KAVD,MAWK;AACDqR,MAAAA,YAAY,GAAGtY,SAAS,CAAC+Z,mBAAV,CAA8B7N,SAA9B,EAAyC,KAAKhM,MAAL,CAAYmB,kBAAZ,CAA+BgO,cAAxE,CAAf;AACH;;AACD,QAAKnQ,KAAK,CAACma,QAAD,CAAL,IAAmBA,QAAQ,KAAK,EAAjC,IACC,CAAC,SAAD,EAAY,YAAZ,EAA0BnU,OAA1B,CAAkCkU,QAAlC,IAA8C,CAAC,CAA/C,KAAqDla,KAAK,CAACoa,QAAD,CAAL,IAAmBA,QAAQ,KAAK,EAArF,CADL,EACgG;AAC5F,UAAIU,kBAAkB,GAAI1V,IAAI,CAACV,WAAL,MAAuB1E,KAAK,CAACma,QAAD,CAAL,IAAmBA,QAAQ,KAAK,EAAjC,GAAuC,iBAAvC,GAA2D,iBAAjF,CAA1B;AACA,UAAIY,YAAY,GAAGhb,MAAM,CAAC,MAAM,KAAKiB,MAAL,CAAYgC,OAAZ,CAAoBG,EAA1B,GAA+B,GAA/B,GAAqC2X,kBAAtC,EAA0Df,aAA1D,CAAzB;AACA9Z,MAAAA,QAAQ,CAAC,CAAC8a,YAAD,CAAD,EAAiBza,GAAG,CAAC0a,WAArB,CAAR;AACAD,MAAAA,YAAY,CAACE,KAAb;AACA;AACH;;AACD,QAAIC,eAAe,GAAG;AAClBlI,MAAAA,MAAM,EAAE,KADU;AAElB7C,MAAAA,cAAc,EAAEkK,UAFE;AAGlBlY,MAAAA,kBAAkB,EAAErB,SAAS,CAACiS,2BAAV,CAAsC,KAAK/R,MAAL,CAAYmB,kBAAlD;AAHF,KAAtB;AAKA,QAAI8Q,OAAO,GAAG,KAAKjS,MAAL,CAAYiB,aAAZ,OAAgC,gBAAhC,IACV,KAAKjB,MAAL,CAAYkS,WADF,GACgB,KAAKlS,MAAL,CAAYkB,eAD5B,GAC8C,KAAKlB,MADjE;AAEAiS,IAAAA,OAAO,CAACE,OAAR,CAAgB5S,MAAM,CAAC4a,eAAvB,EAAwCD,eAAxC,EAAyD,UAAU7H,YAAV,EAAwB;AAC7E,UAAI,CAACA,YAAY,CAACL,MAAlB,EAA0B;AACtBqH,QAAAA,UAAU,GAAGhH,YAAY,CAAClD,cAA1B;;AACA,YAAIiJ,YAAJ,EAAkB;AACd;AACAA,UAAAA,YAAY,GAAGA,YAAY,CAACzC,UAAb,GACXyC,YAAY,CAACzC,UADF,GACeyC,YAD9B;AAEAA,UAAAA,YAAY,CAAChU,IAAb,GAAoBiV,UAAU,CAACjV,IAA/B;AACAgU,UAAAA,YAAY,CAACa,OAAb,GAAuBI,UAAU,CAACJ,OAAlC;AACAb,UAAAA,YAAY,CAACkB,SAAb,GAAyBD,UAAU,CAACC,SAApC;AACAlB,UAAAA,YAAY,CAACmB,MAAb,GAAsBF,UAAU,CAACE,MAAjC;AACAnB,UAAAA,YAAY,CAACqB,MAAb,GAAsBJ,UAAU,CAACI,MAAjC;;AACA,cAAIhZ,KAAK,CAACT,MAAN,CAAagB,QAAb,KAA0B,MAA9B,EAAsC;AAClCoX,YAAAA,YAAY,CAACsB,aAAb,GAA6BL,UAAU,CAACK,aAAxC;AACH;AACJ,SAZD,MAaK;AACDjZ,UAAAA,KAAK,CAACT,MAAN,CAAamB,kBAAb,CAAgCgO,cAAhC,CAA+CzN,IAA/C,CAAoD2X,UAApD;AACH;AACJ;;AACD,UAAIjV,IAAI,KAAK,OAAb,EAAsB;AAClB3D,QAAAA,KAAK,CAACT,MAAN,CAAaoa,cAAb,GAA8Bta,SAAS,CAAC+Z,mBAAV,CAA8B7N,SAA9B,EAAyCvL,KAAK,CAACT,MAAN,CAAamB,kBAAb,CAAgCgO,cAAzE,CAA9B;AACH;;AACD1O,MAAAA,KAAK,CAACyT,WAAN,CAAkBC,KAAlB;;AACA,UAAI,CAAC9B,YAAY,CAACL,MAAlB,EAA0B;AACtBvR,QAAAA,KAAK,CAAC4Z,uBAAN,CAA8BrO,SAA9B,EAAyC,IAAzC;;AACAvL,QAAAA,KAAK,CAACgU,gBAAN,CAAuB,IAAvB;AACH;AACJ,KA5BD;AA6BH,GA/ED;;AAgFA1U,EAAAA,WAAW,CAACO,SAAZ,CAAsB8W,kBAAtB,GAA2C,YAAY;AACnD,QAAI,KAAKlD,WAAL,IAAoB,CAAC,KAAKA,WAAL,CAAiB7T,WAA1C,EAAuD;AACnD,WAAK6T,WAAL,CAAiBoG,OAAjB;AACAC,MAAAA,UAAU,CAAC,KAAKC,QAAL,CAAc7M,IAAd,CAAmB,IAAnB,CAAD,CAAV;AACH;;AACD,QAAI1L,QAAQ,CAACC,cAAT,CAAwB,KAAKH,aAAL,CAAmBI,EAAnB,GAAwB,iBAAhD,CAAJ,EAAwE;AACpE1D,MAAAA,MAAM,CAACwD,QAAQ,CAACC,cAAT,CAAwB,KAAKH,aAAL,CAAmBI,EAAnB,GAAwB,iBAAhD,CAAD,CAAN;AACH;AACJ,GARD;;AASApC,EAAAA,WAAW,CAACO,SAAZ,CAAsBka,QAAtB,GAAiC,YAAY;AACzC,QAAI,KAAKzY,aAAT,EAAwB;AACpB,UAAIiT,YAAY,GAAG,GAAGnB,KAAH,CAASC,IAAT,CAAc,KAAK/R,aAAL,CAAmBa,gBAAnB,CAAoC,iBAApC,CAAd,CAAnB;;AACA,WAAK,IAAIF,EAAE,GAAG,CAAT,EAAY+X,cAAc,GAAGzF,YAAlC,EAAgDtS,EAAE,GAAG+X,cAAc,CAACnZ,MAApE,EAA4EoB,EAAE,EAA9E,EAAkF;AAC9E,YAAIqE,IAAI,GAAG0T,cAAc,CAAC/X,EAAD,CAAzB;;AACA,YAAIqE,IAAI,CAAC6K,YAAL,CAAkB,UAAlB,MAAkC,KAAK5F,SAA3C,EAAsD;AAClDjF,UAAAA,IAAI,CAACkT,KAAL;AACA;AACH;AACJ;AACJ;AACJ,GAXD;;AAYAla,EAAAA,WAAW,CAACO,SAAZ,CAAsB+X,WAAtB,GAAoC,UAAUtQ,CAAV,EAAa;AAC7C,QAAIgR,aAAa,GAAG,KAAK7E,WAAL,CAAiBlS,OAArC;AACA,QAAIgK,SAAS,GAAG+M,aAAa,CAACnH,YAAd,CAA2B,gBAA3B,CAAhB;AACA,QAAI8I,UAAU,GAAG3B,aAAa,CAAC3W,aAAd,CAA4B,iBAA5B,CAAjB;AACA,SAAK8R,WAAL,CAAiBC,KAAjB;;AACA,QAAI,KAAKnU,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,IAAmC0Z,UAAvC,EAAmD;AAC/C,UAAI1B,SAAS,GAAG0B,UAAU,CAAC9I,YAAX,CAAwB,oBAAxB,CAAhB;AACA,WAAK+H,wBAAL,CAA8B3N,SAA9B,EAAyCgN,SAAzC;AACH,KAHD,MAIK;AACD,WAAKW,wBAAL,CAA8B3N,SAA9B;AACH;;AACD,QAAIoM,YAAY,GAAGtY,SAAS,CAAC+Z,mBAAV,CAA8B7N,SAA9B,EAAyC,KAAKhM,MAAL,CAAYmB,kBAAZ,CAA+BgO,cAAxE,CAAnB;AACA,SAAKkL,uBAAL,CAA6BrO,SAA7B,EAAwCoM,YAAY,GAAG,IAAH,GAAU,KAA9D;AACA,SAAK3D,gBAAL,CAAsB,IAAtB;AACH,GAfD;;AAgBA1U,EAAAA,WAAW,CAACO,SAAZ,CAAsBqa,YAAtB,GAAqC,UAAUna,IAAV,EAAgB;AACjD,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI8L,MAAM,GAAG/L,IAAI,CAAC+L,MAAlB;AACA,QAAIP,SAAS,GAAGO,MAAM,CAACxK,aAAP,CAAqBI,EAArC;AACA,QAAIuP,SAAS,GAAG5R,SAAS,CAAC6R,YAAV,CAAuB3F,SAAvB,EAAkC,KAAKhM,MAAvC,CAAhB;AACA,QAAI4a,eAAe,GAAG;AAClB5I,MAAAA,MAAM,EAAE,KADU;AACHhG,MAAAA,SAAS,EAAEA,SADR;AAElB7K,MAAAA,kBAAkB,EAAErB,SAAS,CAACiS,2BAAV,CAAsC,KAAK/R,MAAL,CAAYmB,kBAAlD,CAFF;AAGlB2Q,MAAAA,SAAS,EAAEJ,SAAS,CAACI,SAHH;AAGclR,MAAAA,IAAI,EAAE8Q,SAAS,CAAC9Q;AAH9B,KAAtB;AAKA,QAAIqR,OAAO,GAAG,KAAKjS,MAAL,CAAYiB,aAAZ,OAAgC,gBAAhC,IACV,KAAKjB,MAAL,CAAYkS,WADF,GACgB,KAAKlS,MAAL,CAAYkB,eAD5B,GAC8C,KAAKlB,MADjE;AAEAiS,IAAAA,OAAO,CAACE,OAAR,CAAgB5S,MAAM,CAACsb,WAAvB,EAAoCD,eAApC,EAAqD,UAAUvI,YAAV,EAAwB;AACzE,UAAI,CAACA,YAAY,CAACL,MAAlB,EAA0B;AACtB,YAAIzF,MAAM,CAACxK,aAAP,CAAqB6P,YAArB,CAAkC,SAAlC,MAAiD,MAArD,EAA6D;AACzDnR,UAAAA,KAAK,CAACT,MAAN,CAAasT,aAAb,CAA2B;AAAEnS,YAAAA,kBAAkB,EAAE;AAAEE,cAAAA,MAAM,EAAE;AAAV;AAAtB,WAA3B,EAAmE,IAAnE;;AACA,cAAIZ,KAAK,CAACT,MAAN,CAAagB,QAAb,KAA0B,MAA9B,EAAsC;AAClCP,YAAAA,KAAK,CAACT,MAAN,CAAa6Q,WAAb,CAAyByD,gBAAzB,CAA0CwG,qBAA1C,CAAgE,YAAhE;AACH;AACJ,SALD,MAMK;AACDra,UAAAA,KAAK,CAACT,MAAN,CAAa6Q,WAAb,CAAyByD,gBAAzB,CAA0CwG,qBAA1C,CAAgE9O,SAAhE;;AACA,cAAIvL,KAAK,CAACT,MAAN,CAAagB,QAAb,KAA0B,MAA1B,IAAoCP,KAAK,CAACT,MAAN,CAAamB,kBAAb,CAAgCE,MAAhC,CAAuCC,MAAvC,KAAkD,CAA1F,EAA6F;AACzFb,YAAAA,KAAK,CAACT,MAAN,CAAa6Q,WAAb,CAAyByD,gBAAzB,CAA0CwG,qBAA1C,CAAgE,YAAhE;AACH;AACJ;;AACD,YAAIra,KAAK,CAACT,MAAN,CAAaiB,aAAb,OAAiC,gBAArC,EAAuD;AACnDR,UAAAA,KAAK,CAACT,MAAN,CAAa2U,eAAb,CAA6BtI,MAA7B;AACH;;AACD5L,QAAAA,KAAK,CAACgU,gBAAN;AACH;AACJ,KAnBD;AAoBH,GAhCD;AAiCA;;;AACA1U,EAAAA,WAAW,CAACO,SAAZ,CAAsBiU,iBAAtB,GAA0C,UAAU/T,IAAV,EAAgB;AACtD,QAAI+L,MAAM,GAAGpN,OAAO,CAACqB,IAAI,CAACua,IAAN,EAAY,IAAZ,CAApB;AACA,QAAI/O,SAAS,GAAGO,MAAM,CAACqF,YAAP,CAAoB,gBAApB,CAAhB;;AACA,QAAIrF,MAAM,CAACqF,YAAP,CAAoB,eAApB,MAAyC,KAA7C,EAAoD;AAChD,WAAKoJ,cAAL,CAAoBC,WAApB,GAAkC,IAAlC;;AACA,UAAIza,IAAI,CAAC0a,MAAL,KAAgB,OAApB,EAA6B;AACzB,aAAKF,cAAL,CAAoBG,QAApB;AACH,OAFD,MAGK;AACD,aAAKH,cAAL,CAAoBI,UAApB;AACH;;AACD,UAAI,KAAKpb,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,IAAmC,KAAKhB,MAAL,CAAY2I,gBAA/C,IACA,CAAC,KAAK3I,MAAL,CAAY2I,gBAAZ,CAA6B2C,SAA7B,CAAuCU,SAAvC,EAAkDqP,WADvD,EACoE;AAChE,aAAKC,gBAAL,CAAsB,KAAKN,cAAL,CAAoBO,kBAApB,EAAtB,EAAgEvP,SAAhE,EAA2ExL,IAAI,CAAC0a,MAAhF;AACH;;AACD,WAAKM,eAAL,CAAqBhb,IAAI,CAAC0a,MAA1B;AACA,WAAKF,cAAL,CAAoBC,WAApB,GAAkC,KAAK1G,iBAAL,CAAuB5G,IAAvB,CAA4B,IAA5B,CAAlC;AACH,KAdD,MAeK;AACD,UAAI,KAAK3N,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,IAAmC,KAAKhB,MAAL,CAAY2I,gBAA/C,IACA,CAAC,KAAK3I,MAAL,CAAY2I,gBAAZ,CAA6B2C,SAA7B,CAAuCU,SAAvC,EAAkDqP,WADvD,EACoE;AAChE;AACA,YAAII,YAAY,GAAG,KAAKT,cAAL,CAAoBO,kBAApB,EAAnB,CAFgE,CAGhE;AACA;;AACA,aAAKD,gBAAL,CAAsBG,YAAtB,EAAoCzP,SAApC,EAA+CxL,IAAI,CAAC0a,MAApD;AACH;;AACD,UAAIQ,GAAG,GAAG,KAAK1b,MAAL,CAAY6Q,WAAZ,CAAwB8K,mBAAxB,CAA4CpP,MAAM,CAACqF,YAAP,CAAoB,eAApB,CAA5C,EAAkF6F,KAA5F;;AACA,UAAI,KAAKzX,MAAL,CAAY6Q,WAAZ,CAAwB+K,gBAAxB,CAAyCF,GAAzC,CAAJ,EAAmD;AAC/C,aAAK1b,MAAL,CAAY6Q,WAAZ,CAAwB+K,gBAAxB,CAAyCF,GAAzC,EAA8CxK,UAA9C,GAA2D1Q,IAAI,CAAC0a,MAAL,KAAgB,OAA3E;AACA,aAAKlb,MAAL,CAAY6Q,WAAZ,CAAwB8K,mBAAxB,CAA4CpP,MAAM,CAACqF,YAAP,CAAoB,eAApB,CAA5C,EAAkFV,UAAlF,GAA+F1Q,IAAI,CAAC0a,MAAL,KAAgB,OAA/G;AACH;AACJ;;AACD,SAAKlb,MAAL,CAAY6Q,WAAZ,CAAwBoD,YAAxB,CAAqC4E,kBAArC;AACH,GAlCD;;AAmCA9Y,EAAAA,WAAW,CAACO,SAAZ,CAAsBkb,eAAtB,GAAwC,UAAUK,KAAV,EAAiB;AACrD,QAAIC,aAAa,GAAG,EAApB;AACA;;AACA,SAAK,IAAIpZ,EAAE,GAAG,CAAT,EAAYhC,EAAE,GAAG,KAAKV,MAAL,CAAY6Q,WAAZ,CAAwBkL,eAA9C,EAA+DrZ,EAAE,GAAGhC,EAAE,CAACY,MAAvE,EAA+EoB,EAAE,EAAjF,EAAqF;AACjF,UAAIqE,IAAI,GAAGrG,EAAE,CAACgC,EAAD,CAAb;AACAqE,MAAAA,IAAI,CAACmK,UAAL,GAAkB2K,KAAK,KAAK,OAA5B;AACAC,MAAAA,aAAa,CAAC/U,IAAI,CAACgE,cAAL,CAAoB,eAApB,CAAD,CAAb,GAAsDhE,IAAI,CAACgE,cAAL,CAAoB,eAApB,CAAtD;AACH;;AACD,SAAK,IAAIpI,EAAE,GAAG,CAAT,EAAYY,EAAE,GAAG,KAAKvD,MAAL,CAAY6Q,WAAZ,CAAwB+K,gBAA9C,EAAgEjZ,EAAE,GAAGY,EAAE,CAACjC,MAAxE,EAAgFqB,EAAE,EAAlF,EAAsF;AAClF,UAAIoE,IAAI,GAAGxD,EAAE,CAACZ,EAAD,CAAb;;AACA,UAAImZ,aAAa,CAAC/U,IAAI,CAACgE,cAAL,CAAoB,eAApB,CAAD,CAAb,KAAwD7F,SAA5D,EAAuE;AACnE6B,QAAAA,IAAI,CAACmK,UAAL,GAAkB2K,KAAK,KAAK,OAA5B;AACA,aAAK7b,MAAL,CAAY6Q,WAAZ,CAAwB8K,mBAAxB,CAA4C5U,IAAI,CAACgE,cAAL,CAAoB,eAApB,CAA5C,EAAkFmG,UAAlF,GAA+F2K,KAAK,KAAK,OAAzG;AACH;AACJ;AACD;;AACH,GAhBD;;AAiBA9b,EAAAA,WAAW,CAACO,SAAZ,CAAsBgb,gBAAtB,GAAyC,UAAUG,YAAV,EAAwBzP,SAAxB,EAAmC6P,KAAnC,EAA0C;AAC/E,QAAIvQ,SAAS,GAAG,KAAKtL,MAAL,CAAY6Q,WAAZ,CAAwBnI,YAAxB,CAAqC4C,SAArC,CAA+CU,SAA/C,CAAhB;AACA,QAAIgQ,cAAc,GAAG1Q,SAAS,CAAC2E,OAA/B;AACA,QAAIgM,aAAa,GAAG3Q,SAAS,CAAC4Q,eAA9B;;AACA,QAAI5Q,SAAS,CAAC2Q,aAAV,CAAwB3a,MAAxB,GAAiC,CAArC,EAAwC;AACpC,UAAI2O,OAAO,GAAGjH,MAAM,CAACC,IAAP,CAAYgT,aAAZ,CAAd;;AACA,WAAK,IAAIvZ,EAAE,GAAG,CAAT,EAAYyZ,SAAS,GAAGlM,OAA7B,EAAsCvN,EAAE,GAAGyZ,SAAS,CAAC7a,MAArD,EAA6DoB,EAAE,EAA/D,EAAmE;AAC/D,YAAI0Z,MAAM,GAAGD,SAAS,CAACzZ,EAAD,CAAtB;;AACA,YAAIuZ,aAAa,CAACG,MAAD,CAAjB,EAA2B;AACvBH,UAAAA,aAAa,CAACG,MAAD,CAAb,CAAsBlL,UAAtB,GAAmC,KAAnC;AACH;;AACD,YAAI8K,cAAc,CAACI,MAAD,CAAlB,EAA4B;AACxBJ,UAAAA,cAAc,CAACI,MAAD,CAAd,CAAuBlL,UAAvB,GAAoC,KAApC;;AACA,cAAI,KAAK8J,cAAL,CAAoBhZ,OAApB,CAA4BI,aAA5B,CAA0C,uBAAuBga,MAAvB,GAAgC,IAA1E,CAAJ,EAAqF;AACjF,gBAAIpa,OAAO,GAAG,KAAKgZ,cAAL,CAAoBhZ,OAApB,CAA4BI,aAA5B,CAA0C,uBAAuBga,MAAvB,GAAgC,IAA1E,CAAd;;AACA,gBAAIpa,OAAO,IAAI,CAACA,OAAO,CAACI,aAAR,CAAsB,IAAtB,CAAhB,EAA6C;AACzC,mBAAKpC,MAAL,CAAY6Q,WAAZ,CAAwBC,SAAxB,CAAkCuL,qBAAlC,CAAwD/Q,SAAS,CAACoF,aAAlE,EAAiF1E,SAAjF,EAA4FoQ,MAA5F,EAAoG,KAApG;AACH;AACJ;AACJ;AACJ;;AACD,WAAK,IAAI1b,EAAE,GAAG,CAAT,EAAY4b,cAAc,GAAGb,YAAlC,EAAgD/a,EAAE,GAAG4b,cAAc,CAAChb,MAApE,EAA4EZ,EAAE,EAA9E,EAAkF;AAC9E,YAAIqa,IAAI,GAAGuB,cAAc,CAAC5b,EAAD,CAAzB;;AACA,YAAIsb,cAAc,CAACjB,IAAD,CAAlB,EAA0B;AACtB,cAAI,KAAKC,cAAL,CAAoBhZ,OAApB,CAA4BI,aAA5B,CAA0C,uBAAuB2Y,IAAvB,GAA8B,IAAxE,CAAJ,EAAmF;AAC/E,gBAAI/Y,OAAO,GAAG,KAAKgZ,cAAL,CAAoBhZ,OAApB,CAA4BI,aAA5B,CAA0C,uBAAuB2Y,IAAvB,GAA8B,IAAxE,CAAd;;AACA,gBAAI/Y,OAAO,IAAI,CAACA,OAAO,CAACI,aAAR,CAAsB,IAAtB,CAAhB,EAA6C;AACzC4Z,cAAAA,cAAc,CAACjB,IAAD,CAAd,CAAqB7J,UAArB,GAAkC,IAAlC;AACA,mBAAKlR,MAAL,CAAY6Q,WAAZ,CAAwBC,SAAxB,CAAkCuL,qBAAlC,CAAwD/Q,SAAS,CAACoF,aAAlE,EAAiF1E,SAAjF,EAA4F+O,IAA5F,EAAkG,IAAlG;AACH;AACJ;AACJ;;AACD,YAAIkB,aAAa,CAAClB,IAAD,CAAjB,EAAyB;AACrBkB,UAAAA,aAAa,CAAClB,IAAD,CAAb,CAAoB7J,UAApB,GAAiC,IAAjC;AACH;AACJ;AACJ,KAhCD,MAiCK;AACD,UAAIjB,OAAO,GAAGjH,MAAM,CAACC,IAAP,CAAY+S,cAAZ,CAAd;;AACA,WAAK,IAAIrZ,EAAE,GAAG,CAAT,EAAY4Z,SAAS,GAAGtM,OAA7B,EAAsCtN,EAAE,GAAG4Z,SAAS,CAACjb,MAArD,EAA6DqB,EAAE,EAA/D,EAAmE;AAC/D,YAAIyZ,MAAM,GAAGG,SAAS,CAAC5Z,EAAD,CAAtB;;AACA,YAAIqZ,cAAc,CAACI,MAAD,CAAd,CAAuBlL,UAA3B,EAAuC;AACnC8K,UAAAA,cAAc,CAACI,MAAD,CAAd,CAAuBlL,UAAvB,GAAoC,KAApC;AACH;AACJ;;AACD,WAAK,IAAI3N,EAAE,GAAG,CAAT,EAAYiZ,cAAc,GAAGf,YAAlC,EAAgDlY,EAAE,GAAGiZ,cAAc,CAAClb,MAApE,EAA4EiC,EAAE,EAA9E,EAAkF;AAC9E,YAAIwX,IAAI,GAAGyB,cAAc,CAACjZ,EAAD,CAAzB;;AACA,YAAIyY,cAAc,CAACjB,IAAD,CAAlB,EAA0B;AACtBiB,UAAAA,cAAc,CAACjB,IAAD,CAAd,CAAqB7J,UAArB,GAAkC,IAAlC;AACA,eAAKlR,MAAL,CAAY6Q,WAAZ,CAAwBC,SAAxB,CAAkCuL,qBAAlC,CAAwD/Q,SAAS,CAACoF,aAAlE,EAAiF1E,SAAjF,EAA4F+O,IAA5F,EAAkG,IAAlG;AACH;AACJ;AACJ;AACJ,GArDD;;AAsDAhb,EAAAA,WAAW,CAACO,SAAZ,CAAsBkY,iBAAtB,GAA0C,UAAUxM,SAAV,EAAqBxL,IAArB,EAA2B;AACjE,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIgc,eAAe,GAAG,KAAtB;AACA,QAAIpD,UAAU,GAAG;AAAEqD,MAAAA,KAAK,EAAE,EAAT;AAAa/a,MAAAA,IAAI,EAAEqK,SAAnB;AAA8B5H,MAAAA,IAAI,EAAE;AAApC,KAAjB;AACA,QAAIsE,YAAY,GAAG,KAAK1I,MAAL,CAAY2I,gBAA/B;;AACA,QAAI,KAAK3I,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,IAAmC0H,YAAnC,IACA,CAACA,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCqP,WADvC,EACoD;AAChD,UAAI7K,QAAQ,GAAG9H,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCiE,OAAjD;AACA,UAAI0M,QAAQ,GAAGjU,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCkQ,eAAjD;AACA7C,MAAAA,UAAU,CAACqD,KAAX,GAAmB,KAAK1B,cAAL,CAAoBO,kBAApB,EAAnB;AACAlC,MAAAA,UAAU,CAACuD,UAAX,GAAwBlU,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkC4Q,UAA1D;AACAH,MAAAA,eAAe,GAAIpD,UAAU,CAACqD,KAAX,CAAiBpb,MAAjB,KACf,KAAK0Z,cAAL,CAAoBrT,MAApB,CAA2BN,UAA3B,CAAsC/F,MADvB,GACgC,KADhC,GACwC,IAD3D;;AAEA,UAAIoH,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCiQ,aAAlC,CAAgD3a,MAAhD,GAAyD,CAAzD,IAA8D,CAACmb,eAAnE,EAAoF;AAChF,YAAII,WAAW,GAAG7T,MAAM,CAACC,IAAP,CAAYuH,QAAZ,EAAsBlP,MAAxC;AACA,YAAIwb,WAAW,GAAG9T,MAAM,CAACC,IAAP,CAAY0T,QAAZ,EAAsBrb,MAAxC;AACAmb,QAAAA,eAAe,GAAGI,WAAW,KAAKC,WAAhB,IAA+BD,WAAW,KAAKxD,UAAU,CAACqD,KAAX,CAAiBpb,MAAhE,GAAyE,KAAzE,GAAiF,IAAnG;AACH;;AACD,UAAIgP,WAAW,GAAG+I,UAAU,CAACqD,KAA7B;;AACA,WAAK,IAAIha,EAAE,GAAG,CAAT,EAAYqa,aAAa,GAAGzM,WAAjC,EAA8C5N,EAAE,GAAGqa,aAAa,CAACzb,MAAjE,EAAyEoB,EAAE,EAA3E,EAA+E;AAC3E,YAAIqY,IAAI,GAAGgC,aAAa,CAACra,EAAD,CAAxB;;AACA,YAAIgG,YAAY,CAAC4C,SAAb,CAAuBU,SAAvB,EAAkCiQ,aAAlC,CAAgD3a,MAAhD,GAAyD,CAAzD,IAA8Dqb,QAAQ,CAAC5B,IAAD,CAA1E,EAAkF;AAC9E4B,UAAAA,QAAQ,CAAC5B,IAAD,CAAR,CAAe7J,UAAf,GAA4B,IAA5B;AACH,SAFD,MAGK,IAAIV,QAAQ,CAACuK,IAAD,CAAZ,EAAoB;AACrBvK,UAAAA,QAAQ,CAACuK,IAAD,CAAR,CAAe7J,UAAf,GAA4B,IAA5B;AACH;AACJ;AACJ,KAvBD,MAwBK;AACD,WAAK,IAAIxQ,EAAE,GAAG,CAAT,EAAYiC,EAAE,GAAG,KAAK3C,MAAL,CAAY6Q,WAAZ,CAAwBkL,eAA9C,EAA+Drb,EAAE,GAAGiC,EAAE,CAACrB,MAAvE,EAA+EZ,EAAE,EAAjF,EAAqF;AACjF,YAAIqG,IAAI,GAAGpE,EAAE,CAACjC,EAAD,CAAb;;AACA,YAAIqG,IAAI,CAACmK,UAAT,EAAqB;AACjB,cAAI,KAAKlR,MAAL,CAAY6Q,WAAZ,CAAwBmM,WAA5B,EAAyC;AACrC3D,YAAAA,UAAU,CAACqD,KAAX,CAAiBhb,IAAjB,CAAsBqF,IAAI,CAACpF,IAA3B;AACH,WAFD,MAGK;AACD0X,YAAAA,UAAU,CAACqD,KAAX,CAAiBhb,IAAjB,CAAsBqF,IAAI,CAACgE,cAAL,CAAoB,eAApB,CAAtB;AACH;AACJ;AACJ;;AACD0R,MAAAA,eAAe,GAAIpD,UAAU,CAACqD,KAAX,CAAiBpb,MAAjB,KAA4B,KAAKtB,MAAL,CAAY6Q,WAAZ,CAAwB+K,gBAAxB,CAAyCta,MAArE,GACf,KADe,GACP,IADZ;AAEH;;AACD,QAAI,KAAKtB,MAAL,CAAYgB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC,WAAK2Y,wBAAL,CAA8B3N,SAA9B;AACH;;AACD,QAAI,KAAKhM,MAAL,CAAYsO,sBAAhB,EAAwC;AACpC,WAAKtO,MAAL,CAAY0I,YAAZ,CAAyB4C,SAAzB,CAAmC+N,UAAU,CAAC1X,IAA9C,EAAoD+N,UAApD,GAAiE2J,UAAU,CAACjV,IAAX,CAAgBV,WAAhB,EAAjE;AACA,WAAK1D,MAAL,CAAY0I,YAAZ,CAAyB4C,SAAzB,CAAmC+N,UAAU,CAAC1X,IAA9C,EAAoDoN,MAApD,GAA6D,EAA7D;;AACA,WAAK,IAAI1L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgW,UAAU,CAACqD,KAAX,CAAiBpb,MAArC,EAA6C+B,CAAC,EAA9C,EAAkD;AAC9C,aAAKrD,MAAL,CAAY0I,YAAZ,CAAyB4C,SAAzB,CAAmC+N,UAAU,CAAC1X,IAA9C,EAAoDoN,MAApD,CAA2DrN,IAA3D,CAAgE2X,UAAU,CAACqD,KAAX,CAAiBrZ,CAAjB,CAAhE;AACH;AACJ;;AACD,QAAI6W,eAAe,GAAG;AAClB/K,MAAAA,cAAc,EAAEkK,UADE;AAElBlY,MAAAA,kBAAkB,EAAErB,SAAS,CAACiS,2BAAV,CAAsC,KAAK/R,MAAL,CAAYmB,kBAAlD,CAFF;AAGlB6Q,MAAAA,MAAM,EAAE;AAHU,KAAtB;AAKA,QAAIC,OAAO,GAAG,KAAKjS,MAAL,CAAYiB,aAAZ,OAAgC,gBAAhC,IACV,KAAKjB,MAAL,CAAYkS,WADF,GACgB,KAAKlS,MAAL,CAAYkB,eAD5B,GAC8C,KAAKlB,MADjE;AAEAiS,IAAAA,OAAO,CAACE,OAAR,CAAgB5S,MAAM,CAAC4a,eAAvB,EAAwCD,eAAxC,EAAyD,UAAU7H,YAAV,EAAwB;AAC7EgH,MAAAA,UAAU,GAAGhH,YAAY,CAAClD,cAA1B;;AACA,UAAI,CAACkD,YAAY,CAACL,MAAlB,EAA0B;AACtB,YAAIoG,YAAY,GAAGtY,SAAS,CAAC+Z,mBAAV,CAA8B7N,SAA9B,EAAyCvL,KAAK,CAACT,MAAN,CAAamB,kBAAb,CAAgCgO,cAAzE,CAAnB;;AACA,YAAIiJ,YAAJ,EAAkB;AACd,eAAK,IAAI/U,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5C,KAAK,CAACT,MAAN,CAAamB,kBAAb,CAAgCgO,cAAhC,CAA+C7N,MAAnE,EAA2E+B,CAAC,EAA5E,EAAgF;AAC5E,gBAAI5C,KAAK,CAACT,MAAN,CAAamB,kBAAb,CAAgCgO,cAAhC,CAA+C9L,CAA/C,EAAkD1B,IAAlD,KAA2DqK,SAA/D,EAA0E;AACtEvL,cAAAA,KAAK,CAACT,MAAN,CAAamB,kBAAb,CAAgCgO,cAAhC,CAA+C8N,MAA/C,CAAsD5Z,CAAtD,EAAyD,CAAzD;;AACA;AACH;AACJ;AACJ;;AACD5C,QAAAA,KAAK,CAACT,MAAN,CAAamB,kBAAb,CAAgCgO,cAAhC,CAA+CzN,IAA/C,CAAoD2X,UAApD;AACH;;AACD5Y,MAAAA,KAAK,CAACyT,WAAN,CAAkBC,KAAlB;;AACA,UAAI,CAAC9B,YAAY,CAACL,MAAlB,EAA0B;AACtBvR,QAAAA,KAAK,CAAC4Z,uBAAN,CAA8BrO,SAA9B,EAAyCyQ,eAAzC;;AACA,YAAI,CAACA,eAAL,EAAsB;AAClBhc,UAAAA,KAAK,CAACkZ,wBAAN,CAA+B3N,SAA/B;AACH;;AACDvL,QAAAA,KAAK,CAACT,MAAN,CAAaoa,cAAb,GAA8Bf,UAA9B;;AACA5Y,QAAAA,KAAK,CAACgU,gBAAN,CAAuB,IAAvB;;AACA,YAAIC,OAAO,GAAGjU,KAAd,CAPsB,CAQtB;;AACA,YAAIiU,OAAO,CAAC1U,MAAR,YAA0BX,cAA9B,EAA8C;AAC1CqV,UAAAA,OAAO,CAACtU,SAAR,CAAkBiM,MAAlB;AACH,SAXqB,CAYtB;;AACH;;AACD,UAAI2I,YAAY,GAAG,GAAGnB,KAAH,CAASC,IAAT,CAAcrT,KAAK,CAACsB,aAAN,CAAoBa,gBAApB,CAAqC,iBAArC,CAAd,CAAnB;;AACA,WAAK,IAAIF,EAAE,GAAG,CAAT,EAAYwa,cAAc,GAAGlI,YAAlC,EAAgDtS,EAAE,GAAGwa,cAAc,CAAC5b,MAApE,EAA4EoB,EAAE,EAA9E,EAAkF;AAC9E,YAAIqE,IAAI,GAAGmW,cAAc,CAACxa,EAAD,CAAzB;;AACA,YAAIqE,IAAI,CAAC6K,YAAL,CAAkB,UAAlB,MAAkC5F,SAAtC,EAAiD;AAC7CjF,UAAAA,IAAI,CAACkT,KAAL;AACA;AACH;AACJ;AACJ,KArCD;AAsCH,GAnGD;;AAoGAla,EAAAA,WAAW,CAACO,SAAZ,CAAsB+Z,uBAAtB,GAAgD,UAAUrO,SAAV,EAAqBmR,UAArB,EAAiC;AAC7E,QAAInI,YAAY,GAAG,GAAGnB,KAAH,CAASC,IAAT,CAAc,KAAK/R,aAAL,CAAmBa,gBAAnB,CAAoC,iBAApC,CAAd,CAAnB;AACA,QAAIwa,cAAJ;;AACA,SAAK,IAAI1a,EAAE,GAAG,CAAT,EAAY2a,cAAc,GAAGrI,YAAlC,EAAgDtS,EAAE,GAAG2a,cAAc,CAAC/b,MAApE,EAA4EoB,EAAE,EAA9E,EAAkF;AAC9E,UAAIqE,IAAI,GAAGsW,cAAc,CAAC3a,EAAD,CAAzB;;AACA,UAAIqE,IAAI,CAAC6K,YAAL,CAAkB,UAAlB,MAAkC5F,SAAtC,EAAiD;AAC7CoR,QAAAA,cAAc,GAAGrW,IAAI,CAAC3E,aAAL,CAAmB,MAAM9C,GAAG,CAAC8P,mBAA7B,CAAjB;AACA;AACH;AACJ;;AACD,QAAI+N,UAAJ,EAAgB;AACZje,MAAAA,WAAW,CAAC,CAACke,cAAD,CAAD,EAAmB9d,GAAG,CAAC2P,YAAvB,CAAX;AACAhQ,MAAAA,QAAQ,CAAC,CAACme,cAAD,CAAD,EAAmB9d,GAAG,CAAC4P,cAAvB,CAAR;AACH,KAHD,MAIK;AACDhQ,MAAAA,WAAW,CAAC,CAACke,cAAD,CAAD,EAAmB9d,GAAG,CAAC4P,cAAvB,CAAX;AACAjQ,MAAAA,QAAQ,CAAC,CAACme,cAAD,CAAD,EAAmB9d,GAAG,CAAC2P,YAAvB,CAAR;AACH;AACJ,GAlBD;;AAmBAlP,EAAAA,WAAW,CAACO,SAAZ,CAAsBqZ,wBAAtB,GAAiD,UAAU3N,SAAV,EAAqB0N,aAArB,EAAoCtV,IAApC,EAA0C;AACvF,QAAI+K,cAAc,GAAG,KAAKnP,MAAL,CAAYmB,kBAAZ,CAA+BgO,cAApD;;AACA,SAAK,IAAImO,GAAG,GAAG,CAAV,EAAaC,GAAG,GAAGpO,cAAc,CAAC7N,MAAvC,EAA+Cgc,GAAG,GAAGC,GAArD,EAA0DD,GAAG,EAA7D,EAAiE;AAC7D,UAAI,KAAKtd,MAAL,CAAYgB,QAAZ,KAAyB,MAAzB,IAAmC0Y,aAAvC,EAAsD;AAClD,YAAI,CAACtV,IAAD,IAAS+K,cAAc,CAACmO,GAAD,CAAd,CAAoB3b,IAApB,KAA6BqK,SAAtC,IACAmD,cAAc,CAACmO,GAAD,CAAd,CAAoB5D,aAApB,KAAsCA,aAD1C,EACyD;AACrDvK,UAAAA,cAAc,CAAC8N,MAAf,CAAsBK,GAAtB,EAA2B,CAA3B;AACA;AACH,SAJD,MAKK,IAAIlZ,IAAJ,EAAU;AACX,cAAI+K,cAAc,CAACmO,GAAD,CAAd,CAAoBlZ,IAApB,KAA6BA,IAA7B,IACA+K,cAAc,CAACmO,GAAD,CAAd,CAAoB3b,IAApB,KAA6BqK,SADjC,EAC4C;AACxCmD,YAAAA,cAAc,CAAC8N,MAAf,CAAsBK,GAAtB,EAA2B,CAA3B;AACAC,YAAAA,GAAG;AACHD,YAAAA,GAAG;AACN;AACJ;AACJ,OAdD,MAeK;AACD,YAAInO,cAAc,CAACmO,GAAD,CAAd,CAAoB3b,IAApB,KAA6BqK,SAAjC,EAA4C;AACxCmD,UAAAA,cAAc,CAAC8N,MAAf,CAAsBK,GAAtB,EAA2B,CAA3B;;AACA,cAAI,KAAKtd,MAAL,CAAYgB,QAAZ,KAAyB,MAA7B,EAAqC;AACjC;AACH;;AACDuc,UAAAA,GAAG;AACHD,UAAAA,GAAG;AACN;AACJ;AACJ;AACJ,GA7BD;;AA8BAvd,EAAAA,WAAW,CAACO,SAAZ,CAAsBkd,mBAAtB,GAA4C,UAAUzV,CAAV,EAAa;AACrD,QAAI,KAAK/H,MAAL,CAAYsS,UAAhB,EAA4B;AACxBpT,MAAAA,WAAW,CAAC,GAAG2U,KAAH,CAASC,IAAT,CAAc,KAAK/R,aAAL,CAAmBa,gBAAnB,CAAoC,MAAMtD,GAAG,CAACkF,oBAAV,GAAiC,OAArE,CAAd,CAAD,EAA+FlF,GAAG,CAACyU,qBAAnG,CAAX;AACA7U,MAAAA,WAAW,CAAC,GAAG2U,KAAH,CAASC,IAAT,CAAc,KAAK/R,aAAL,CAAmBa,gBAAnB,CAAoC,MAAMtD,GAAG,CAACkF,oBAA9C,CAAd,CAAD,EAAqFlF,GAAG,CAACyU,qBAAzF,CAAX;;AACA,UAAI5U,OAAO,CAAC4I,CAAC,CAACwE,MAAH,EAAW,MAAMjN,GAAG,CAACsU,eAArB,CAAX,EAAkD;AAC9C,YAAI5R,OAAO,GAAG7C,OAAO,CAAC4I,CAAC,CAACwE,MAAH,EAAW,MAAMjN,GAAG,CAACuE,0BAArB,CAArB;AACA5E,QAAAA,QAAQ,CAAC,CAAC+C,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAACkF,oBAAhC,CAAD,CAAD,EAA0DlF,GAAG,CAACyU,qBAA9D,CAAR;AACH;AACJ;AACJ,GATD;;AAUAhU,EAAAA,WAAW,CAACO,SAAZ,CAAsB8F,SAAtB,GAAkC,UAAUpE,OAAV,EAAmBpB,IAAnB,EAAyB6C,cAAzB,EAAyC;AACvE5E,IAAAA,YAAY,CAAC4e,GAAb,CAAiBzb,OAAjB,EAA0B,WAA1B,EAAuC,KAAKwb,mBAA5C,EAAiE,IAAjE;;AACA,QAAI,CAAC/Z,cAAL,EAAqB;AACjB,UAAI,CAAC,SAAD,EAAY,QAAZ,EAAsBuB,OAAtB,CAA8BpE,IAA9B,MAAwC,CAAC,CAAzC,IAA8CoB,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC0E,kBAAhC,MAAwD,IAA1G,EAAgH;AAC5GnF,QAAAA,YAAY,CAAC4e,GAAb,CAAiBzb,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC0E,kBAAhC,CAAjB,EAAsE,OAAtE,EAA+E,KAAKsR,aAApF,EAAmG,IAAnG;AACH;;AACD,UAAI1U,IAAI,KAAK,QAAT,IAAqBoB,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC8P,mBAAhC,MAAyD,IAAlF,EAAwF;AACpFvQ,QAAAA,YAAY,CAAC4e,GAAb,CAAiBzb,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC8P,mBAAhC,CAAjB,EAAuE,OAAvE,EAAgF,KAAKyG,eAArF,EAAsG,IAAtG;AACH;;AACD,UAAIjV,IAAI,KAAK,QAAT,IAAqBoB,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC4M,oBAAhC,MAA0D,IAAnF,EAAyF;AACrFrN,QAAAA,YAAY,CAAC4e,GAAb,CAAiBzb,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC4M,oBAAhC,CAAjB,EAAwE,OAAxE,EAAiF,KAAKE,gBAAtF,EAAwG,IAAxG;AACH;AACJ;;AACD,QAAIpK,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAACkG,SAAhC,MAA+C,IAAnD,EAAyD;AACrD3G,MAAAA,YAAY,CAAC4e,GAAb,CAAiBzb,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAACkG,SAAhC,CAAjB,EAA6D,OAA7D,EAAsE,KAAK8G,yBAA3E,EAAsG,IAAtG;AACH;;AACD,QAAItK,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAACuG,YAAhC,MAAkD,IAAtD,EAA4D;AACxDhH,MAAAA,YAAY,CAAC4e,GAAb,CAAiBzb,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAACuG,YAAhC,CAAjB,EAAgE,OAAhE,EAAyE,KAAK8U,YAA9E,EAA4F,IAA5F;AACH;AACJ,GAnBD;;AAoBA5a,EAAAA,WAAW,CAACO,SAAZ,CAAsB6F,WAAtB,GAAoC,UAAUnE,OAAV,EAAmBpB,IAAnB,EAAyB6C,cAAzB,EAAyC;AACzE5E,IAAAA,YAAY,CAACJ,MAAb,CAAoBuD,OAApB,EAA6B,WAA7B,EAA0C,KAAKwb,mBAA/C;;AACA,QAAI,CAAC/Z,cAAL,EAAqB;AACjB,UAAI,CAAC,SAAD,EAAY,QAAZ,EAAsBuB,OAAtB,CAA8BpE,IAA9B,MAAwC,CAAC,CAAzC,IAA8CoB,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC0E,kBAAhC,MAAwD,IAA1G,EAAgH;AAC5GnF,QAAAA,YAAY,CAACJ,MAAb,CAAoBuD,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC0E,kBAAhC,CAApB,EAAyE,OAAzE,EAAkF,KAAKsR,aAAvF;AACH;;AACD,UAAI1U,IAAI,KAAK,QAAT,IAAqBoB,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC8P,mBAAhC,MAAyD,IAAlF,EAAwF;AACpFvQ,QAAAA,YAAY,CAACJ,MAAb,CAAoBuD,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC8P,mBAAhC,CAApB,EAA0E,OAA1E,EAAmF,KAAKyG,eAAxF;AACH;;AACD,UAAIjV,IAAI,KAAK,QAAT,IAAqBoB,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC4M,oBAAhC,MAA0D,IAAnF,EAAyF;AACrFrN,QAAAA,YAAY,CAACJ,MAAb,CAAoBuD,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAAC4M,oBAAhC,CAApB,EAA2E,OAA3E,EAAoF,KAAKE,gBAAzF;AACH;AACJ;;AACD,QAAIpK,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAACkG,SAAhC,MAA+C,IAAnD,EAAyD;AACrD3G,MAAAA,YAAY,CAACJ,MAAb,CAAoBuD,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAACkG,SAAhC,CAApB,EAAgE,OAAhE,EAAyE,KAAK8G,yBAA9E;AACH;;AACD,QAAItK,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAACuG,YAAhC,MAAkD,IAAtD,EAA4D;AACxDhH,MAAAA,YAAY,CAACJ,MAAb,CAAoBuD,OAAO,CAACI,aAAR,CAAsB,MAAM9C,GAAG,CAACuG,YAAhC,CAApB,EAAmE,OAAnE,EAA4E,KAAK8U,YAAjF;AACH;AACJ,GAnBD;AAoBA;AACJ;AACA;;;AACI5a,EAAAA,WAAW,CAACO,SAAZ,CAAsBH,gBAAtB,GAAyC,YAAY;AACjD,SAAKud,QAAL,GAAgB;AACZC,MAAAA,IAAI,EAAE,KAAKpd;AADC,KAAhB;;AAGA,QAAI,KAAKP,MAAL,CAAYK,WAAhB,EAA6B;AACzB;AACH;;AACD,SAAKL,MAAL,CAAY4d,EAAZ,CAAere,MAAM,CAACse,iBAAtB,EAAyC,KAAKH,QAAL,CAAcC,IAAvD,EAA6D,IAA7D;AACH,GARD;AASA;AACJ;AACA;;;AACI5d,EAAAA,WAAW,CAACO,SAAZ,CAAsBwd,mBAAtB,GAA4C,YAAY;AACpD,QAAI,KAAK9d,MAAL,CAAYK,WAAhB,EAA6B;AACzB;AACH;;AACD,SAAKL,MAAL,CAAY+d,GAAZ,CAAgBxe,MAAM,CAACse,iBAAvB,EAA0C,KAAKH,QAAL,CAAcC,IAAxD;AACH,GALD;AAMA;AACJ;AACA;AACA;AACA;;;AACI5d,EAAAA,WAAW,CAACO,SAAZ,CAAsBga,OAAtB,GAAgC,YAAY;AACxC,QAAI,KAAKra,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBqa,OAAhB;AACH;;AACD,QAAI,KAAKnT,qBAAL,IAA8B,CAAC,KAAKA,qBAAL,CAA2B9G,WAA9D,EAA2E;AACvE,WAAK8G,qBAAL,CAA2BmT,OAA3B;AACA,WAAKnT,qBAAL,GAA6B,IAA7B;AACH;;AACD,QAAI,KAAK0D,uBAAL,IAAgC,CAAC,KAAKA,uBAAL,CAA6BxK,WAAlE,EAA+E;AAC3E,WAAKwK,uBAAL,CAA6ByP,OAA7B;AACA,WAAKzP,uBAAL,GAA+B,IAA/B;AACH;;AACD,QAAI,KAAKmQ,cAAL,IAAuB,CAAC,KAAKA,cAAL,CAAoB3a,WAAhD,EAA6D;AACzD,WAAK2a,cAAL,CAAoBV,OAApB;AACA,WAAKU,cAAL,GAAsB,IAAtB;AACH;;AACD,QAAI,KAAK9G,WAAL,IAAoB,CAAC,KAAKA,WAAL,CAAiB7T,WAA1C,EAAuD;AACnD,WAAK6T,WAAL,CAAiBoG,OAAjB;AACA,WAAKpG,WAAL,GAAmB,IAAnB;AACH;;AACD,QAAI,KAAK5G,SAAL,IAAkB,CAAC,KAAKA,SAAL,CAAejN,WAAtC,EAAmD;AAC/C,WAAKiN,SAAL,CAAegN,OAAf;AACA,WAAKhN,SAAL,GAAiB,IAAjB;AACH;;AACD,QAAI,KAAKlN,SAAT,EAAoB;AAChB,WAAKA,SAAL,GAAiB,IAAjB;AACH;;AACD,SAAK0d,mBAAL;AACA,SAAKzd,WAAL,GAAmB,IAAnB;AACH,GA7BD;;AA8BA,SAAON,WAAP;AACH,CAhgDgC,EAAjC;;AAigDA,SAASA,WAAT","sourcesContent":["import { createElement, Draggable, remove, extend, detach, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { EventHandler, isBlazor, select } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, addClass, removeClass, closest, Browser } from '@syncfusion/ej2-base';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { AggregateMenu } from '../popups/aggregate-menu';\nimport { AxisFieldRenderer } from '../../pivotfieldlist/renderer/axis-field-renderer';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotButton = /** @class */ (function () {\n    /**\n     * Constructor for render module.\n     * @param {PivotView | PivotFieldList} parent - Component instance.\n     */\n    function PivotButton(parent) {\n        this.parent = parent;\n        this.menuOption = new AggregateMenu(this.parent);\n        this.parent.pivotButtonModule = this;\n        this.addEventListener();\n        if (this.parent instanceof PivotFieldList) {\n            this.axisField = new AxisFieldRenderer(this.parent);\n        }\n        this.isDestroyed = false;\n    }\n    /* eslint-disable */\n    PivotButton.prototype.renderPivotButton = function (args) {\n        var _this = this;\n        var _a;\n        var field = extend([], args.field, null, true);\n        var axis = args.axis;\n        var axisElement;\n        var valuePos = -1;\n        var showValuesButton = (this.parent.dataType === 'pivot' ? (this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.pivotGridModule) ?\n            this.parent.pivotGridModule.showValuesButton : this.parent.showValuesButton : false);\n        if (((this.parent.dataSourceSettings.valueAxis === 'row' && args.axis === 'rows') ||\n            (this.parent.dataSourceSettings.valueAxis === 'column' && args.axis === 'columns')) && showValuesButton && this.parent.dataSourceSettings.values.length > 1) {\n            valuePos = field.length;\n            if (isNullOrUndefined(PivotUtil.getFieldByName(this.parent.localeObj.getConstant('values'), field))) {\n                field.push({\n                    name: this.parent.localeObj.getConstant('values'), caption: this.parent.localeObj.getConstant('values'),\n                    axis: args.axis, showRemoveIcon: true, allowDragAndDrop: true\n                });\n            }\n        }\n        this.parentElement = this.parent.getModuleName() === 'pivotview' ? this.parent.element :\n            document.getElementById(this.parent.element.id + '_Wrapper');\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n            if (this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)) {\n                var axisPrompt = this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)\n                    .querySelector('.' + cls.AXIS_PROMPT_CLASS);\n                if (field.length === 0) {\n                    removeClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                axisElement =\n                    this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis).querySelector('.' + cls.AXIS_CONTENT_CLASS);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.parentElement = this.parent.element;\n            axisElement = this.parentElement.querySelector('.e-group-' + axis);\n        }\n        if (axisElement) {\n            if (this.parent.getModuleName() === 'pivotview' && field.length === 0) {\n                for (var _i = 0, _b = this.parentElement.querySelectorAll('.e-group-' + axis); _i < _b.length; _i++) {\n                    var element = _b[_i];\n                    if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                        var axisPrompt = createElement('span', {\n                            className: cls.AXIS_PROMPT_CLASS,\n                            innerHTML: (this.parent.groupingBarSettings.allowDragAndDrop ? axis === 'rows' ? this.parent.localeObj.getConstant('rowAxisPrompt') :\n                                axis === 'columns' ? this.parent.localeObj.getConstant('columnAxisPrompt') :\n                                    axis === 'values' ? this.parent.localeObj.getConstant('valueAxisPrompt') :\n                                        axis === 'filters' ? this.parent.localeObj.getConstant('filterAxisPrompt') :\n                                            this.parent.localeObj.getConstant('allFields') : '')\n                        });\n                        element.appendChild(axisPrompt);\n                    }\n                }\n            }\n            else {\n                for (var i = 0, cnt = field.length; i < cnt; i++) {\n                    for (var _c = 0, _d = (this.parent.getModuleName() === 'pivotfieldlist' ? [axisElement] : this.parentElement.querySelectorAll('.e-group-' + axis)); _c < _d.length; _c++) {\n                        var element = _d[_c];\n                        element = element;\n                        var isMeasureAvail = (this.parent.dataType === 'olap' && (field[i].name.toLowerCase() === '[measures]' || axis === 'values'));\n                        var isMeasureFieldsAvail = (this.parent.dataType === 'olap' && axis === 'values');\n                        if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                            var buttonWrapper = createElement('div', {\n                                className: cls.PIVOT_BUTTON_WRAPPER_CLASS + (i === 0 && axis !== 'all-fields' ? ' e-first-btn' : ''),\n                                attrs: { 'data-tag': axis + ':' + field[i].name }\n                            });\n                            var buttonElement = createElement('div', {\n                                id: field[i].name, className: cls.PIVOT_BUTTON_CLASS + ' ' + field[i].name.replace(/[^A-Z0-9]/ig, ''),\n                                attrs: {\n                                    'data-uid': field[i].name,\n                                    'tabindex': (this.parent.getModuleName() === 'pivotview' && this.parent.grid && axis === 'rows' && !element.classList.contains(cls.GROUP_CHART_ROW)) ? '-1' : '0',\n                                    'isvalue': (i === valuePos || isMeasureAvail && !isMeasureFieldsAvail) ? 'true' : 'false',\n                                    'aria-disabled': 'false', 'aria-label': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-type': (this.parent.dataType === 'olap' ? isMeasureFieldsAvail ? 'isMeasureFieldsAvail' : isMeasureAvail ? 'isMeasureAvail' : field[i].type : field[i].type),\n                                    'data-caption': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-basefield': field[i].baseField,\n                                    'data-baseitem': field[i].baseItem\n                                }\n                            });\n                            var dropIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS\n                            });\n                            var dropLastIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS + '-last'\n                            });\n                            var dragWrapper = this.createButtonDragIcon(field[i], buttonElement);\n                            var contentElement = this.createButtonText(field, i, axis, valuePos);\n                            buttonElement.appendChild(contentElement);\n                            if (axis !== 'all-fields') {\n                                if (!isMeasureAvail && !field[i].isNamedSet && !field[i].isCalculatedField) {\n                                    if (['filters', 'values'].indexOf(axis) === -1 && valuePos !== i &&\n                                        !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotview' &&\n                                            this.parent.enableVirtualization) || (this.parent.getModuleName() === 'pivotfieldlist' &&\n                                            this.parent.pivotGridModule !== undefined &&\n                                            this.parent.pivotGridModule.enableVirtualization)))) {\n                                        this.createSortOption(buttonElement, field[i].name, field[i]);\n                                    }\n                                    if (axis !== 'values' && valuePos !== i) {\n                                        this.createFilterOption(buttonElement, field[i].name, axis, field[i]);\n                                    }\n                                    if (axis === 'values') {\n                                        this.getTypeStatus(field, i, buttonElement);\n                                    }\n                                }\n                                if ((field[i].isCalculatedField || field[i].type === 'CalculatedField')) {\n                                    var calcElement = createElement('span', {\n                                        attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('editCalculatedField') },\n                                        className: cls.ICON + ' ' + cls.CALC_EDIT\n                                    });\n                                    if (this.parent.allowCalculatedField && this.parent.calculatedFieldModule && field[i].showEditIcon) {\n                                        removeClass([calcElement], cls.ICON_DISABLE);\n                                    }\n                                    else {\n                                        addClass([calcElement], cls.ICON_DISABLE);\n                                    }\n                                    buttonElement.appendChild(calcElement);\n                                }\n                                var removeElement = createElement('span', {\n                                    attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('remove') },\n                                    className: cls.ICON + ' ' + cls.REMOVE_CLASS\n                                });\n                                if (this.parent.getModuleName() === 'pivotview') {\n                                    if ((this.parent.groupingBarSettings.showRemoveIcon && field[i].showRemoveIcon)) {\n                                        removeClass([removeElement], cls.ICON_DISABLE);\n                                    }\n                                    else {\n                                        addClass([removeElement], cls.ICON_DISABLE);\n                                    }\n                                }\n                                else {\n                                    if (field[i].showRemoveIcon) {\n                                        removeClass([removeElement], cls.ICON_DISABLE);\n                                    }\n                                    else {\n                                        addClass([removeElement], cls.ICON_DISABLE);\n                                    }\n                                }\n                                buttonElement.appendChild(removeElement);\n                                buttonWrapper.appendChild(dropIndicatorElement);\n                                buttonWrapper.appendChild(buttonElement);\n                                buttonWrapper.appendChild(dropLastIndicatorElement);\n                            }\n                            else {\n                                buttonWrapper.appendChild(dropIndicatorElement);\n                                buttonWrapper.appendChild(buttonElement);\n                            }\n                            element.appendChild(buttonWrapper);\n                            var pivotButton = new Button({ enableRtl: this.parent.enableRtl, locale: this.parent.locale });\n                            pivotButton.isStringTemplate = true;\n                            pivotButton.appendTo(buttonElement);\n                            this.unWireEvent(buttonWrapper, i === valuePos && axis !== 'all-fields' ? 'values' : axis, isMeasureAvail);\n                            this.wireEvent(buttonWrapper, i === valuePos && axis !== 'all-fields' ? 'values' : axis, isMeasureAvail);\n                            if ((this.parent.getModuleName() === 'pivotview' && !this.parent.isAdaptive) ||\n                                this.parent.getModuleName() === 'pivotfieldlist') {\n                                this.createDraggable(field[i], this.parent.getModuleName() === 'pivotview' ? contentElement : dragWrapper);\n                                buttonElement.querySelector('.' + cls.BUTTON_DRAGGABLE).ej2_instances[0].enableAutoScroll = false;\n                            }\n                        }\n                    }\n                }\n                if (axis === 'values') {\n                    var _loop_1 = function (element) {\n                        if (element.classList.contains(cls.GROUP_CHART_VALUE) && this_1.parent.chartModule) {\n                            var valueData = field.map(function (item) { return { text: item.caption ? item.caption : item.name, value: item.name }; });\n                            var parent_1 = this_1.parent;\n                            if (this_1.valueFiedDropDownList && element.querySelector('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV)) {\n                                this_1.valueFiedDropDownList.dataSource = valueData;\n                                this_1.valueFiedDropDownList.value = !parent_1.chartSettings.enableMultipleAxis ?\n                                    parent_1.chartModule.currentMeasure : valueData[0].value;\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_VALUE_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this_1.valueFiedDropDownList = new DropDownList({\n                                    dataSource: valueData,\n                                    enableRtl: this_1.parent.enableRtl,\n                                    locale: this_1.parent.locale,\n                                    value: !parent_1.chartSettings.enableMultipleAxis ?\n                                        parent_1.chartModule.currentMeasure : valueData[0].value,\n                                    width: 200,\n                                    fields: { value: 'value', text: 'text' },\n                                    cssClass: cls.GROUP_CHART_VALUE_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            parent_1.chartSettings.value = args.value;\n                                        }\n                                    }\n                                });\n                                this_1.valueFiedDropDownList.isStringTemplate = true;\n                                this_1.valueFiedDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    };\n                    var this_1 = this;\n                    for (var _e = 0, _f = this.parentElement.querySelectorAll('.e-group-' + axis); _e < _f.length; _e++) {\n                        var element = _f[_e];\n                        _loop_1(element);\n                    }\n                }\n                else if (axis === 'columns') {\n                    var availColindex = undefined;\n                    for (var _g = 0, _h = this.parentElement.querySelectorAll('.e-group-' + axis); _g < _h.length; _g++) {\n                        var element = _h[_g];\n                        if (element.classList.contains(cls.GROUP_CHART_COLUMN) && this.parent.chartModule) {\n                            var currentMeasure = this.parent.chartModule.currentMeasure;\n                            var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n                            var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n                                this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n                            var engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n                            var pivotValues = engineModule.pivotValues;\n                            var totColIndex = this.parent.chartModule.getColumnTotalIndex(pivotValues);\n                            var rKeys = Object.keys(pivotValues);\n                            var columnData = [];\n                            var firstValueRow = false;\n                            for (var _j = 0, rKeys_1 = rKeys; _j < rKeys_1.length; _j++) {\n                                var rKey = rKeys_1[_j];\n                                if (firstValueRow) {\n                                    break;\n                                }\n                                var rowIndex = Number(rKey);\n                                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                                    (this.parent.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                                    var firstRowCell = pivotValues[rowIndex][0];\n                                    var tupInfo = this.parent.dataType === 'olap' ?\n                                        engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                                    var rows = pivotValues[rowIndex];\n                                    var cKeys = Object.keys(rows);\n                                    for (var _k = 0, cKeys_1 = cKeys; _k < cKeys_1.length; _k++) {\n                                        var cKey = cKeys_1[_k];\n                                        var cellIndex = Number(cKey);\n                                        var cell = pivotValues[rowIndex][cellIndex];\n                                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                                            tupInfo.measureName : cell.actualText;\n                                        if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                                            actualText !== '' && actualText === currentMeasure) {\n                                            firstValueRow = true;\n                                            var columnSeries = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                                : cell.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                                            columnData.push({ value: columnSeries, text: columnSeries, title: (_a = {}, _a['title'] = columnSeries, _a) });\n                                            if (columnSeries === columnHeader) {\n                                                availColindex = columnData.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (this.columnFieldDropDownList && element.querySelector('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV)) {\n                                this.columnFieldDropDownList.dataSource = columnData;\n                                if (availColindex !== undefined) {\n                                    this.columnFieldDropDownList.value = columnData[availColindex - 1].value;\n                                }\n                                else {\n                                    this.columnFieldDropDownList.value = columnData[0].value;\n                                }\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_COLUMN_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this.columnFieldDropDownList = new DropDownList({\n                                    dataSource: columnData,\n                                    enableRtl: this.parent.enableRtl,\n                                    locale: this.parent.locale,\n                                    value: availColindex ? columnData[availColindex - 1].value : (columnData[0] ? columnData[0].value : ''),\n                                    width: '200',\n                                    fields: { value: 'value', text: 'text', htmlAttributes: 'title' },\n                                    cssClass: cls.GROUP_CHART_COLUMN_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            var delimiter_1 = _this.parent.chartSettings.columnDelimiter ? _this.parent.chartSettings.columnDelimiter : '-';\n                                            _this.parent.chartSettings.columnHeader = args.value.split(' - ').join(delimiter_1);\n                                        }\n                                    }\n                                });\n                                this.columnFieldDropDownList.isStringTemplate = true;\n                                this.columnFieldDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotButton.prototype.createButtonText = function (field, i, axis, valuePos) {\n        var buttonText;\n        var aggregation;\n        var filterMem;\n        if (axis === 'filters') {\n            filterMem = this.updateButtontext(field[i].name);\n        }\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fieldList[field[i].name] !== undefined) {\n            aggregation = engineModule.fieldList[field[i].name].aggregateType;\n            if ((aggregation !== 'DistinctCount') && (engineModule.fieldList[field[i].name].type !== 'number' || engineModule.fieldList[field[i].name].type === 'include' ||\n                engineModule.fieldList[field[i].name].type === 'exclude')) {\n                aggregation = 'Count';\n            }\n            else {\n                aggregation = aggregation === undefined ? 'Sum' :\n                    engineModule.fieldList[field[i].name].aggregateType;\n            }\n        }\n        var text = field[i].caption ? field[i].caption : field[i].name;\n        buttonText = createElement('span', {\n            attrs: {\n                title: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                    text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                    text : (((!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField') ?\n                    text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))),\n                'tabindex': '-1', 'aria-disabled': 'false', 'oncontextmenu': 'return false;',\n                'data-type': valuePos === i ? '' : aggregation\n            },\n            className: cls.PIVOT_BUTTON_CONTENT_CLASS + ' ' +\n                (this.parent.getModuleName() === 'pivotview' ?\n                    this.parent.groupingBarSettings.allowDragAndDrop && field[i].allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : ''),\n            innerHTML: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                text : (!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField' ?\n                text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))\n        });\n        return buttonText;\n    };\n    /* eslint-enable */\n    PivotButton.prototype.getTypeStatus = function (field, i, buttonElement) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var fieldListItem = engineModule.fieldList[field[i].name];\n        if (fieldListItem.aggregateType !== 'CalculatedField' && this.validateDropdown(fieldListItem.type)) {\n            this.createSummaryType(buttonElement, field[i].name, field[i]);\n        }\n    };\n    PivotButton.prototype.validateDropdown = function (type) {\n        var aggregateType = this.parent.aggregateTypes;\n        if (type !== 'number') {\n            return (aggregateType.indexOf('Count') > -1 || aggregateType.indexOf('DistinctCount') > -1);\n        }\n        else {\n            for (var i = 0; i < aggregateType.length; i++) {\n                if (this.parent.getAllSummaryType().indexOf(aggregateType[i]) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    };\n    PivotButton.prototype.createSummaryType = function (pivotButton, fieldName, field) {\n        var spanElement = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('format') },\n            className: cls.ICON + ' ' + cls.AXISFIELD_ICON_CLASS\n        });\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.groupingBarSettings.showValueTypeIcon && field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createMenuOption = function (args) {\n        this.menuOption.render(args, this.parentElement);\n        this.parent.pivotButtonModule = this;\n    };\n    PivotButton.prototype.openCalculatedFieldDialog = function (args) {\n        var fieldName = args.target.parentElement.id;\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.isAdaptive && (this.parent.showFieldList &&\n                this.parent.pivotFieldListModule &&\n                !this.parent.pivotFieldListModule.isDestroyed)) {\n                this.parent.pivotFieldListModule.element\n                    .querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                this.parent.pivotFieldListModule.dialogRenderer.adaptiveElement.select(4);\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                this.parent.pivotFieldListModule.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n            }\n            else {\n                if (!this.parent.isAdaptive) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n            }\n        }\n        else if (this.parent.getModuleName() === 'pivotfieldlist') {\n            if (this.parent.isAdaptive) {\n                this.parent.dialogRenderer.adaptiveElement.select(4);\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                this.parent.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n                this.parent.calculatedFieldModule.buttonCall = true;\n            }\n            else {\n                if (this.parent.dialogRenderer.fieldListDialog) {\n                    this.parent.dialogRenderer.fieldListDialog.hide();\n                    addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n                if (this.parent.calculatedFieldModule) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.createDraggable = function (field, target) {\n        this.draggable = new Draggable(target, {\n            clone: true,\n            enableTailMode: true,\n            enableAutoScroll: true,\n            helper: this.createDragClone.bind(this),\n            dragStart: this.onDragStart.bind(this),\n            drag: this.onDragging.bind(this),\n            dragStop: this.onDragStop.bind(this),\n            abort: (this.parent.getModuleName() === 'pivotview' ?\n                !(this.parent.groupingBarSettings.allowDragAndDrop && field.allowDragAndDrop) ?\n                    '.' + cls.PIVOT_BUTTON_CLASS : '' : !field.allowDragAndDrop ? '.' + cls.PIVOT_BUTTON_CLASS : '')\n        });\n    };\n    PivotButton.prototype.createButtonDragIcon = function (field, pivotButton) {\n        var dragWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' }\n        });\n        var dragElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('drag')\n            },\n            className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' + (field.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS)\n        });\n        dragWrapper.appendChild(dragElement);\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            pivotButton.appendChild(dragWrapper);\n        }\n        return dragWrapper;\n    };\n    PivotButton.prototype.createSortOption = function (pivotButton, fieldName, field) {\n        var sortCLass;\n        var spanElement;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            sortCLass = engineModule.fieldList[fieldName].sort === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n        }\n        else {\n            sortCLass = '';\n            for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                    sortCLass = this.parent.dataSourceSettings.sortSettings[i].order === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n                }\n            }\n        }\n        if (engineModule.fieldList[fieldName].sort === 'None') {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON\n            });\n        }\n        else {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON + ' ' + cls.SORT_CLASS + ' ' + sortCLass\n            });\n        }\n        if (this.parent.dataSourceSettings.enableSorting) {\n            if (this.parent.getModuleName() === 'pivotview') {\n                if (field.showSortIcon && this.parent.groupingBarSettings.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n            else {\n                if (field.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createFilterOption = function (pivotButton, fieldName, axis, field) {\n        var filterCLass;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            engineModule.fieldList[fieldName].filter = engineModule.fieldList[fieldName].filter === null ?\n                [] : engineModule.fieldList[fieldName].filter;\n            filterCLass = engineModule.fieldList[fieldName].filter.length === 0 ?\n                !engineModule.fieldList[fieldName].isExcelFilter ? cls.FILTER_CLASS : cls.FILTERED_CLASS : cls.FILTERED_CLASS;\n        }\n        else {\n            filterCLass = cls.FILTER_CLASS;\n            for (var i = 0; i < this.parent.dataSourceSettings.filterSettings.length; i++) {\n                if (this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                    filterCLass = cls.FILTERED_CLASS;\n                }\n            }\n        }\n        var spanElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('filter')\n            },\n            className: cls.FILTER_COMMON_CLASS + ' ' + cls.ICON + ' ' + filterCLass\n        });\n        if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n            axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter)) {\n            removeClass([spanElement], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        if (this.parent.getModuleName() === 'pivotview') {\n            if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n                axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter) &&\n                this.parent.groupingBarSettings.showFilterIcon && field.showFilterIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showFilterIcon && (((this.parent.dataSourceSettings.allowLabelFilter ||\n                this.parent.dataSourceSettings.allowValueFilter) && axis !== 'filters') ||\n                this.parent.dataSourceSettings.allowMemberFilter)) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    // To update button text\n    PivotButton.prototype.updateButtontext = function (fieldName) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var filterCount = engineModule.fieldList[fieldName].filter.length;\n        var filterType = engineModule.fieldList[fieldName].filterType;\n        var memLen = engineModule.fieldList[fieldName].dateMember.length;\n        var filterMem;\n        var firstNode = engineModule.fieldList[fieldName].filter[0];\n        if (this.parent.dataType === 'olap') {\n            filterMem = this.updateOlapButtonText(engineModule, fieldName, firstNode, filterCount);\n        }\n        else if (filterType === 'include') {\n            if (filterCount === 1) {\n                filterMem = firstNode;\n            }\n            else if (filterCount > 1) {\n                if (filterCount === memLen) {\n                    filterMem = this.parent.localeObj.getConstant('all');\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else if (filterType === 'exclude') {\n            if (filterCount === 1) {\n                if (memLen === 2) {\n                    if (firstNode !== engineModule.fieldList[fieldName].dateMember[0].actualText) {\n                        filterMem = firstNode;\n                    }\n                    else {\n                        filterMem = engineModule.fieldList[fieldName].dateMember[0].actualText;\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n            else if (filterCount > 1) {\n                var j = void 0;\n                var allNodes = Object.keys(engineModule.fieldList[fieldName].members);\n                var filteredItems = engineModule.fieldList[fieldName].filter;\n                if (filterCount === (allNodes.length - 1)) {\n                    /* eslint-disable */\n                    loop: for (j = 0; j < allNodes.length; j++) {\n                        var test = allNodes[j];\n                        var x = filteredItems.indexOf(test);\n                        if (x === -1) {\n                            filterMem = allNodes[j];\n                            break loop;\n                            /* eslint-enable */\n                        }\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else {\n            filterMem = this.parent.localeObj.getConstant('all');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.updateOlapButtonText = function (engineModule, fieldName, firstNode, filterCount) {\n        var filterMem;\n        var filterItems = engineModule.fieldList[fieldName].actualFilter;\n        if (filterItems.length > 0) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var actualFilterItems = [];\n            if (engineModule.fieldList[fieldName].filterMembers.length > 0) {\n                var dummyfilterItems = {};\n                for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n                    var item = filterItems_1[_i];\n                    dummyfilterItems[item] = item;\n                    if (cMembers[item]) {\n                        dummyfilterItems = this.parent.pivotCommon.eventBase.getParentNode(fieldName, item, dummyfilterItems);\n                    }\n                }\n                var updatedFilterItems = dummyfilterItems ? Object.keys(dummyfilterItems) : [];\n                for (var _a = 0, updatedFilterItems_1 = updatedFilterItems; _a < updatedFilterItems_1.length; _a++) {\n                    var item = updatedFilterItems_1[_a];\n                    if (cMembers[item].isSelected) {\n                        if (!(cMembers[item].parent && cMembers[cMembers[item].parent].isSelected)) {\n                            actualFilterItems.push(item);\n                        }\n                    }\n                }\n                firstNode = actualFilterItems.length === 1 ? cMembers[actualFilterItems[0]].caption : firstNode;\n            }\n            filterCount = actualFilterItems.length === 0 ? filterCount : actualFilterItems.length;\n        }\n        if (filterCount === 0) {\n            filterMem = (engineModule.fieldList[fieldName].allMember ?\n                engineModule.fieldList[fieldName].allMember : this.parent.localeObj.getConstant('all'));\n        }\n        else if (filterCount === 1) {\n            filterMem = firstNode;\n        }\n        else if (filterCount > 1) {\n            filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.createDragClone = function (args) {\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var cloneElement = createElement('div', {\n            id: this.parent.element.id + '_DragClone',\n            className: cls.DRAG_CLONE_CLASS\n        });\n        var contentElement = createElement('span', {\n            className: cls.TEXT_CONTENT_CLASS,\n            innerHTML: element.textContent\n        });\n        cloneElement.appendChild(contentElement);\n        document.body.appendChild(cloneElement);\n        return cloneElement;\n    };\n    PivotButton.prototype.onDragStart = function (e) {\n        var _this = this;\n        var element = closest(e.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var dragItem = document.getElementById(this.parent.element.id + '_DragClone');\n        var fieldInfo = PivotUtil.getFieldInfo(element.getAttribute('data-uid'), this.parent);\n        var dragEventArgs = {\n            fieldName: fieldInfo.fieldName,\n            fieldItem: fieldInfo.fieldItem,\n            axis: fieldInfo.axis,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.isDragging = true;\n                var engineModule = void 0;\n                if (_this.parent.dataType === 'olap') {\n                    engineModule = _this.parent.olapEngineModule;\n                }\n                else {\n                    engineModule = _this.parent.engineModule;\n                }\n                var data = engineModule.fieldList[element.getAttribute('data-uid')];\n                var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                addClass([element], cls.SELECTED_NODE_CLASS);\n                if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                    _this.parent.renderMode) === 'Popup') {\n                    var fieldListPopup = _this.parent;\n                    dragItem.style.zIndex = (fieldListPopup.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                }\n                if (data && data.aggregateType === 'CalculatedField') {\n                    for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                        var axisContent = axis_1[_i];\n                        addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                    }\n                }\n                if (isBlazor()) {\n                    e.bindEvents(e.dragElement);\n                }\n            }\n            else {\n                _this.parent.isDragging = false;\n                _this.draggable.intDestroy(e.event);\n                detach(dragItem);\n            }\n        });\n    };\n    PivotButton.prototype.onDragging = function (e) {\n        this.draggable.setProperties({ cursorAt: { top: (!isNOU(e.event.targetTouches) || Browser.isDevice) ? 60 : -20 } });\n    };\n    PivotButton.prototype.onDragStop = function (args) {\n        this.parent.isDragging = false;\n        if (args.target && args.element && (closest(args.element, '.' + cls.GROUP_ALL_FIELDS_CLASS) &&\n            !closest(args.target, '.' + cls.DROPPABLE_CLASS))) { /* eslint-disable-line */\n            args.cancel = true;\n        }\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS)), cls.SELECTED_NODE_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisContent = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n        }\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        if (document.getElementById(this.parent.element.id + '_DragClone')) {\n            remove(document.getElementById(this.parent.element.id + '_DragClone'));\n        }\n        document.body.style.cursor = 'auto';\n        if (!this.isButtonDropped(args.target, element) || args.cancel) {\n            return;\n        }\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, element.id)) {\n            this.updateDataSource();\n            /* eslint-disable */\n            var thisObj = this;\n            /* eslint-enable */\n            thisObj.parent.axisFieldModule.render();\n        }\n    };\n    PivotButton.prototype.isButtonDropped = function (dropTarget, target) {\n        var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n        var droppableElement = closest(dropTarget, '.' + cls.DROPPABLE_CLASS);\n        var isDropped = true;\n        if (axisPanel && axisPanel === droppableElement) {\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var droppableTarget = closest(dropTarget, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            var sourcePosition = void 0;\n            var droppedPosition = -1;\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === target.id) {\n                    sourcePosition = i;\n                }\n                if (droppableTarget) {\n                    var droppableButton = droppableTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                    if (pivotButtons[i].id === droppableButton.id) {\n                        droppedPosition = i;\n                    }\n                }\n            }\n            if (sourcePosition === droppedPosition || (sourcePosition === (pivotButtons.length - 1) && droppedPosition === -1)) {\n                removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                isDropped = false;\n            }\n        }\n        return isDropped;\n    };\n    PivotButton.prototype.updateSorting = function (args) {\n        var buttonElement = closest(args.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        var fieldInfo = PivotUtil.getFieldInfo((buttonElement ? buttonElement.id : ''), this.parent);\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS)) &&\n            !(args.target.classList.contains(cls.DRAG_CLASS)) &&\n            (buttonElement && fieldInfo.fieldItem && (fieldInfo.fieldItem.showSortIcon ||\n                isNullOrUndefined(fieldInfo.fieldItem.showSortIcon)))) {\n            if ((this.parent instanceof PivotFieldList || this.parent.groupingBarSettings.showSortIcon) &&\n                this.parent.dataSourceSettings.enableSorting &&\n                !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotfieldlist' &&\n                    this.parent.pivotGridModule !== undefined &&\n                    this.parent.pivotGridModule.enableVirtualization) ||\n                    (this.parent.getModuleName() === 'pivotview' && this.parent.enableVirtualization)))) {\n                if (((this.parent.getModuleName() === 'pivotview' && this.parent.enableValueSorting) ||\n                    (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule !== undefined &&\n                        this.parent.pivotGridModule.enableValueSorting))) {\n                    if (this.parent.enableValueSorting || this.parent.pivotGridModule.enableValueSorting) { /* eslint-disable-line */\n                        if (args.target.classList.contains('e-pivot-button')) {\n                            if (args.target.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                        else {\n                            if (args.target.parentElement.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                    }\n                }\n                this.parent.pivotCommon.eventBase.updateSorting(args);\n                if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n                    this.updateDataSource(true);\n                }\n                /* eslint-disable */\n                var thisObj = this;\n                /* eslint-enable */\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotButton.prototype.updateDataSource = function (isRefreshGrid) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshGrid);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView && this.parent.pivotGridModule) {\n                if (this.parent.dataType === 'olap') {\n                    this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n                }\n                else {\n                    this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                }\n                /* eslint-disable */\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                this.parent.\n                    pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n                /* eslint-enable */\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    PivotButton.prototype.updateFiltering = function (args) {\n        /* eslint-disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        if (pivotObj.getModuleName() === 'pivotfieldlist') {\n            showSpinner(pivotObj.fieldListSpinnerElement);\n        }\n        else {\n            pivotObj.showWaitingPopup();\n        }\n        pivotObj.mouseEventArgs = args;\n        pivotObj.filterTargetID = this.parent.pivotCommon.moduleName !== 'pivotfieldlist' ?\n            this.parent.element : document.getElementById(this.parent.pivotCommon.parentID + '_Wrapper');\n        var fieldName = args.target.parentElement.id;\n        if (pivotObj && pivotObj.enableVirtualization && isBlazor() && pivotObj.dataType === 'pivot') {\n            var $this_1 = this;\n            pivotObj.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'fetchFieldMembers', fieldName).then(function (data) {\n                var parsedData = JSON.parse(data.dateMembers);\n                var dateMembers = [];\n                var formattedMembers = {};\n                var members = {};\n                for (var i = 0; i < parsedData.length; i++) {\n                    dateMembers.push({ formattedText: parsedData[i].FormattedText, actualText: parsedData[i].ActualText });\n                    formattedMembers[parsedData[i].FormattedText] = {};\n                    members[parsedData[i].ActualText] = {};\n                }\n                $this_1.parent.engineModule.fieldList[fieldName].dateMember = dateMembers;\n                $this_1.parent.engineModule.fieldList[fieldName].formattedMembers = formattedMembers;\n                $this_1.parent.engineModule.fieldList[fieldName].members = members;\n                $this_1.updateFilterEvents();\n            });\n        }\n        else if (pivotObj.dataSourceSettings.mode === 'Server') {\n            if (this.parent.engineModule.fieldList[fieldName].members && Object.keys(this.parent.engineModule.fieldList[fieldName].members).length > 0) {\n                this.updateFilterEvents();\n            }\n            else {\n                pivotObj.getEngine('fetchFieldMembers', null, null, null, null, null, fieldName);\n            }\n        }\n        else {\n            this.updateFilterEvents();\n        }\n        /* eslint-enable */\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotButton.prototype.updateFilterEvents = function () {\n        /* eslint-disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        this.parent.pivotCommon.eventBase.updateFiltering(pivotObj.mouseEventArgs);\n        var target = pivotObj.mouseEventArgs.target;\n        this.fieldName = target.parentElement.id;\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.dialogPopUp = this.parent.pivotCommon.filterDialog.dialogPopUp;\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close = this.removeFilterDialog.bind(this);\n            // this.memberTreeView = this.parent.pivotCommon.filterDialog.memberTreeView;\n            // this.parent.pivotCommon.filterDialog.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n            // this.parent.pivotCommon.filterDialog.allMemberSelect.nodeChecked = this.nodeStateModified.bind(this);\n            this.bindDialogEvents();\n        }\n        if (pivotObj.getModuleName() === 'pivotfieldlist') {\n            hideSpinner(pivotObj.fieldListSpinnerElement);\n        }\n        else {\n            pivotObj.hideWaitingPopup();\n        }\n    };\n    PivotButton.prototype.bindDialogEvents = function () {\n        if (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter && this.parent.pivotCommon.filterDialog.tabObj) {\n            this.index = this.parent.pivotCommon.filterDialog.tabObj.selectedItem;\n            this.updateDialogButtonEvents();\n            this.dialogPopUp.buttons = this.buttonModel();\n            this.dialogPopUp.dataBind();\n            this.parent.pivotCommon.filterDialog.tabObj.selected = this.tabSelect.bind(this);\n        }\n        else if (this.parent.dataSourceSettings.allowMemberFilter) {\n            this.index = 0;\n            this.updateDialogButtonEvents();\n        }\n    };\n    PivotButton.prototype.buttonModel = function () {\n        return [\n            {\n                buttonModel: {\n                    cssClass: 'e-clear-filter-button' + (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                    iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                    content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.parent.pivotCommon.filterDialog.filterObject ? false : true)\n                },\n                click: this.ClearFilter.bind(this)\n            },\n            {\n                buttonModel: {\n                    cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                },\n                click: (this.index === 0 ? this.updateFilterState.bind(this, this.fieldName) : this.updateCustomFilter.bind(this))\n            },\n            {\n                click: this.parent.pivotCommon.filterDialog.closeFilterDialog.bind(this),\n                buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n            }\n        ];\n    };\n    PivotButton.prototype.tabSelect = function (e) {\n        this.index = e.selectedIndex;\n        this.updateDialogButtonEvents();\n        removeClass([].slice.call(this.dialogPopUp.element.querySelectorAll('.e-selected-tab')), 'e-selected-tab');\n        if (e.selectedIndex > 0) {\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (e.selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n        if (e.selectedIndex === 0) {\n            this.parent.pivotCommon.filterDialog.updateCheckedState();\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n            this.dialogPopUp.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n        }\n    };\n    PivotButton.prototype.updateDialogButtonEvents = function () {\n        this.dialogPopUp.buttons = this.buttonModel();\n        this.dialogPopUp.dataBind();\n    };\n    PivotButton.prototype.updateCustomFilter = function (args) {\n        var _this = this;\n        var dialogElement = this.dialogPopUp.element.querySelector('.e-selected-tab');\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var levelName = dialogElement.getAttribute('data-selectedField');\n        var filterType = dialogElement.getAttribute('data-type');\n        var measure = dialogElement.getAttribute('data-measure');\n        var operator = dialogElement.getAttribute('data-operator');\n        var operand1 = dialogElement.getAttribute('data-value1');\n        var operand2 = dialogElement.getAttribute('data-value2');\n        var type = ((filterType === 'value') ? 'Value' : (filterType === 'date') ? 'Date' :\n            (filterType === 'number') ? 'Number' : 'Label');\n        var filterItem = {\n            name: fieldName,\n            type: type,\n            measure: measure,\n            condition: operator,\n            value1: filterType === 'date' && !isBlazor() ? new Date(operand1) : operand1,\n            value2: filterType === 'date' && !isBlazor() ? new Date(operand2) : operand2\n        };\n        var filterObject;\n        if (this.parent.dataType === 'olap') {\n            filterItem.selectedField = levelName;\n            this.removeDataSourceSettings(fieldName, levelName, type);\n            var filterItems = this.parent.dataSourceSettings.filterSettings;\n            for (var _i = 0, filterItems_2 = filterItems; _i < filterItems_2.length; _i++) {\n                var item = filterItems_2[_i];\n                if (item.name === fieldName && item.selectedField === levelName) {\n                    filterObject = item;\n                }\n            }\n        }\n        else {\n            filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        }\n        if ((isNOU(operand1) || operand1 === '') ||\n            (['Between', 'NotBetween'].indexOf(operator) > -1 && (isNOU(operand2) || operand2 === ''))) {\n            var inputElementString = (type.toLowerCase() + ((isNOU(operand1) || operand1 === '') ? '_input_option_1' : '_input_option_2'));\n            var focusElement = select('#' + this.parent.element.id + '_' + inputElementString, dialogElement);\n            addClass([focusElement], cls.EMPTY_FIELD);\n            focusElement.focus();\n            return;\n        }\n        var filterEventArgs = {\n            cancel: false,\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings)\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                filterItem = observedArgs.filterSettings;\n                if (filterObject) {\n                    // this.removeDataSourceSettings(fieldName);\n                    filterObject = filterObject.properties ?\n                        filterObject.properties : filterObject;\n                    filterObject.type = filterItem.type;\n                    filterObject.measure = filterItem.measure;\n                    filterObject.condition = filterItem.condition;\n                    filterObject.value1 = filterItem.value1;\n                    filterObject.value2 = filterItem.value2;\n                    if (_this.parent.dataType === 'olap') {\n                        filterObject.selectedField = filterItem.selectedField;\n                    }\n                }\n                else {\n                    _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n                }\n            }\n            if (type !== 'Value') {\n                _this.parent.lastFilterInfo = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, true);\n                _this.updateDataSource(true);\n            }\n        });\n    };\n    PivotButton.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n            setTimeout(this.setFocus.bind(this));\n        }\n        if (document.getElementById(this.parentElement.id + '_EditorTreeView')) {\n            remove(document.getElementById(this.parentElement.id + '_EditorTreeView'));\n        }\n    };\n    PivotButton.prototype.setFocus = function () {\n        if (this.parentElement) {\n            var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.ClearFilter = function (e) {\n        var dialogElement = this.dialogPopUp.element;\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var tabElement = dialogElement.querySelector('.e-selected-tab');\n        this.dialogPopUp.close();\n        if (this.parent.dataType === 'olap' && tabElement) {\n            var levelName = tabElement.getAttribute('data-selectedField');\n            this.removeDataSourceSettings(fieldName, levelName);\n        }\n        else {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        this.refreshPivotButtonState(fieldName, filterObject ? true : false);\n        this.updateDataSource(true);\n    };\n    PivotButton.prototype.removeButton = function (args) {\n        var _this = this;\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n        var removeFieldArgs = {\n            cancel: false, fieldName: fieldName,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                if (target.parentElement.getAttribute('isvalue') === 'true') {\n                    _this.parent.setProperties({ dataSourceSettings: { values: [] } }, true);\n                    if (_this.parent.dataType === 'olap') {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                else {\n                    _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(fieldName);\n                    if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                if (_this.parent.getModuleName() === 'pivotfieldlist') {\n                    _this.parent.axisFieldModule.render();\n                }\n                _this.updateDataSource();\n            }\n        });\n    };\n    /** @hidden */\n    PivotButton.prototype.nodeStateModified = function (args) {\n        var target = closest(args.node, 'li');\n        var fieldName = target.getAttribute('data-fieldname');\n        if (target.getAttribute('data-memberId') === 'all') {\n            this.memberTreeView.nodeChecked = null;\n            if (args.action === 'check') {\n                this.memberTreeView.checkAll();\n            }\n            else {\n                this.memberTreeView.uncheckAll();\n            }\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                this.updateNodeStates(this.memberTreeView.getAllCheckedNodes(), fieldName, args.action);\n            }\n            this.checkedStateAll(args.action);\n            this.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n        }\n        else {\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                // let st1: number = new Date().getTime();\n                var checkedNodes = this.memberTreeView.getAllCheckedNodes();\n                // let st2: number = (new Date().getTime() - st1) / 1000;\n                // console.log('getAllCheckedNodes:' + st2);\n                this.updateNodeStates(checkedNodes, fieldName, args.action);\n            }\n            var pos = this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-memberId')].index;\n            if (this.parent.pivotCommon.currentTreeItems[pos]) {\n                this.parent.pivotCommon.currentTreeItems[pos].isSelected = args.action === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-memberId')].isSelected = args.action === 'check';\n            }\n        }\n        this.parent.pivotCommon.filterDialog.updateCheckedState();\n    };\n    PivotButton.prototype.checkedStateAll = function (state) {\n        var searchItemObj = {};\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        for (var _i = 0, _a = this.parent.pivotCommon.searchTreeItems; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.isSelected = state === 'check';\n            searchItemObj[item.htmlAttributes['data-memberId']] = item.htmlAttributes['data-memberId'];\n        }\n        for (var _b = 0, _c = this.parent.pivotCommon.currentTreeItems; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (searchItemObj[item.htmlAttributes['data-memberId']] !== undefined) {\n                item.isSelected = state === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[item.htmlAttributes['data-memberId']].isSelected = state === 'check';\n            }\n        }\n        /* eslint-enable @typescript-eslint/no-explicit-any */\n    };\n    PivotButton.prototype.updateNodeStates = function (checkedNodes, fieldName, state) {\n        var fieldList = this.parent.pivotCommon.engineModule.fieldList[fieldName];\n        var currentMembers = fieldList.members;\n        var searchMembers = fieldList.currrentMembers;\n        if (fieldList.searchMembers.length > 0) {\n            var members = Object.keys(searchMembers);\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var member = members_1[_i];\n                if (searchMembers[member]) {\n                    searchMembers[member].isSelected = false;\n                }\n                if (currentMembers[member]) {\n                    currentMembers[member].isSelected = false;\n                    if (this.memberTreeView.element.querySelector('li[data-memberId=\"' + member + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-memberId=\"' + member + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, member, false);\n                        }\n                    }\n                }\n            }\n            for (var _a = 0, checkedNodes_1 = checkedNodes; _a < checkedNodes_1.length; _a++) {\n                var node = checkedNodes_1[_a];\n                if (currentMembers[node]) {\n                    if (this.memberTreeView.element.querySelector('li[data-memberId=\"' + node + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-memberId=\"' + node + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            currentMembers[node].isSelected = true;\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                        }\n                    }\n                }\n                if (searchMembers[node]) {\n                    searchMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            var members = Object.keys(currentMembers);\n            for (var _b = 0, members_2 = members; _b < members_2.length; _b++) {\n                var member = members_2[_b];\n                if (currentMembers[member].isSelected) {\n                    currentMembers[member].isSelected = false;\n                }\n            }\n            for (var _c = 0, checkedNodes_2 = checkedNodes; _c < checkedNodes_2.length; _c++) {\n                var node = checkedNodes_2[_c];\n                if (currentMembers[node]) {\n                    currentMembers[node].isSelected = true;\n                    this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateFilterState = function (fieldName, args) {\n        var _this = this;\n        var isNodeUnChecked = false;\n        var filterItem = { items: [], name: fieldName, type: 'Include' };\n        var engineModule = this.parent.olapEngineModule;\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var sMembers = engineModule.fieldList[fieldName].currrentMembers;\n            filterItem.items = this.memberTreeView.getAllCheckedNodes();\n            filterItem.levelCount = engineModule.fieldList[fieldName].levelCount;\n            isNodeUnChecked = (filterItem.items.length ===\n                this.memberTreeView.fields.dataSource.length ? false : true);\n            if (engineModule.fieldList[fieldName].searchMembers.length > 0 && !isNodeUnChecked) {\n                var cNodeLength = Object.keys(cMembers).length;\n                var sNodeLength = Object.keys(sMembers).length;\n                isNodeUnChecked = cNodeLength === sNodeLength && cNodeLength === filterItem.items.length ? false : true;\n            }\n            var filterItems = filterItem.items;\n            for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n                var node = filterItems_3[_i];\n                if (engineModule.fieldList[fieldName].searchMembers.length > 0 && sMembers[node]) {\n                    sMembers[node].isSelected = true;\n                }\n                else if (cMembers[node]) {\n                    cMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            for (var _a = 0, _b = this.parent.pivotCommon.searchTreeItems; _a < _b.length; _a++) {\n                var item = _b[_a];\n                if (item.isSelected) {\n                    if (this.parent.pivotCommon.isDateField) {\n                        filterItem.items.push(item.name);\n                    }\n                    else {\n                        filterItem.items.push(item.htmlAttributes['data-memberId']);\n                    }\n                }\n            }\n            isNodeUnChecked = (filterItem.items.length === this.parent.pivotCommon.currentTreeItems.length ?\n                false : true);\n        }\n        if (this.parent.dataType === 'olap') {\n            this.removeDataSourceSettings(fieldName);\n        }\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.parent.engineModule.fieldList[filterItem.name].filterType = filterItem.type.toLowerCase();\n            this.parent.engineModule.fieldList[filterItem.name].filter = [];\n            for (var i = 0; i < filterItem.items.length; i++) {\n                this.parent.engineModule.fieldList[filterItem.name].filter.push(filterItem.items[i]);\n            }\n        }\n        var filterEventArgs = {\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            filterItem = observedArgs.filterSettings;\n            if (!observedArgs.cancel) {\n                var filterObject = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n                if (filterObject) {\n                    for (var i = 0; i < _this.parent.dataSourceSettings.filterSettings.length; i++) {\n                        if (_this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                            _this.parent.dataSourceSettings.filterSettings.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, isNodeUnChecked);\n                if (!isNodeUnChecked) {\n                    _this.removeDataSourceSettings(fieldName);\n                }\n                _this.parent.lastFilterInfo = filterItem;\n                _this.updateDataSource(true);\n                var thisObj = _this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n            var pivotButtons = [].slice.call(_this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_2 = pivotButtons; _i < pivotButtons_2.length; _i++) {\n                var item = pivotButtons_2[_i];\n                if (item.getAttribute('data-uid') === fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        });\n    };\n    PivotButton.prototype.refreshPivotButtonState = function (fieldName, isFiltered) {\n        var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n        var selectedButton;\n        for (var _i = 0, pivotButtons_3 = pivotButtons; _i < pivotButtons_3.length; _i++) {\n            var item = pivotButtons_3[_i];\n            if (item.getAttribute('data-uid') === fieldName) {\n                selectedButton = item.querySelector('.' + cls.FILTER_COMMON_CLASS);\n                break;\n            }\n        }\n        if (isFiltered) {\n            removeClass([selectedButton], cls.FILTER_CLASS);\n            addClass([selectedButton], cls.FILTERED_CLASS);\n        }\n        else {\n            removeClass([selectedButton], cls.FILTERED_CLASS);\n            addClass([selectedButton], cls.FILTER_CLASS);\n        }\n    };\n    PivotButton.prototype.removeDataSourceSettings = function (fieldName, selectedField, type) {\n        var filterSettings = this.parent.dataSourceSettings.filterSettings;\n        for (var len = 0, lnt = filterSettings.length; len < lnt; len++) {\n            if (this.parent.dataType === 'olap' && selectedField) {\n                if (!type && filterSettings[len].name === fieldName &&\n                    filterSettings[len].selectedField === selectedField) {\n                    filterSettings.splice(len, 1);\n                    break;\n                }\n                else if (type) {\n                    if (filterSettings[len].type !== type &&\n                        filterSettings[len].name === fieldName) {\n                        filterSettings.splice(len, 1);\n                        lnt--;\n                        len--;\n                    }\n                }\n            }\n            else {\n                if (filterSettings[len].name === fieldName) {\n                    filterSettings.splice(len, 1);\n                    if (this.parent.dataType !== 'olap') {\n                        break;\n                    }\n                    lnt--;\n                    len--;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateDropIndicator = function (e) {\n        if (this.parent.isDragging) {\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            if (closest(e.target, '.' + cls.DROPPABLE_CLASS)) {\n                var element = closest(e.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n                addClass([element.querySelector('.' + cls.DROP_INDICATOR_CLASS)], cls.INDICATOR_HOVER_CLASS);\n            }\n        }\n    };\n    PivotButton.prototype.wireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting, this);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering, this);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption, this);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.add(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog, this);\n        }\n        if (element.querySelector('.' + cls.REMOVE_CLASS) !== null) {\n            EventHandler.add(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton, this);\n        }\n    };\n    PivotButton.prototype.unWireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.remove(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog);\n        }\n        if (element.querySelector('.' + cls.REMOVE_CLASS) !== null) {\n            EventHandler.remove(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderPivotButton\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.pivotButtonUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.pivotButtonUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @returns {void}\n     * @hidden\n     */\n    PivotButton.prototype.destroy = function () {\n        if (this.menuOption) {\n            this.menuOption.destroy();\n        }\n        if (this.valueFiedDropDownList && !this.valueFiedDropDownList.isDestroyed) {\n            this.valueFiedDropDownList.destroy();\n            this.valueFiedDropDownList = null;\n        }\n        if (this.columnFieldDropDownList && !this.columnFieldDropDownList.isDestroyed) {\n            this.columnFieldDropDownList.destroy();\n            this.columnFieldDropDownList = null;\n        }\n        if (this.memberTreeView && !this.memberTreeView.isDestroyed) {\n            this.memberTreeView.destroy();\n            this.memberTreeView = null;\n        }\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n            this.dialogPopUp = null;\n        }\n        if (this.draggable && !this.draggable.isDestroyed) {\n            this.draggable.destroy();\n            this.draggable = null;\n        }\n        if (this.axisField) {\n            this.axisField = null;\n        }\n        this.removeEventListener();\n        this.isDestroyed = true;\n    };\n    return PivotButton;\n}());\nexport { PivotButton };\n"]},"metadata":{},"sourceType":"module"}