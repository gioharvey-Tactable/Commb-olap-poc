{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Property, Browser, Component, createElement, setStyleAttribute, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, Complex, extend, ChildProperty, Collection, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n, NotifyPropertyChanges, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { removeClass, addClass, Event, setValue, closest, select } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { PivotEngine } from '../../base/engine';\nimport { Tooltip, createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Render } from '../renderer/render';\nimport { Common } from '../../common/actions/common';\nimport { DataSourceSettings } from '../model/datasourcesettings';\nimport { GridSettings } from '../model/gridsettings';\nimport { Grid, Reorder, Resize, getObject } from '@syncfusion/ej2-grids';\nimport { ExcelExport } from '../actions/excel-export';\nimport { PDFExport } from '../actions/pdf-export';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { PivotContextMenu } from '../../common/popups/context-menu';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { VirtualScroll } from '../actions/virtualscroll';\nimport { DrillThrough } from '../actions/drill-through';\nimport { PivotUtil } from '../../base/util';\nimport { PivotChart } from '../../pivotchart/index';\nimport { ChartSettings } from '../model/chartsettings';\nimport { OlapEngine } from '../../base/olap/engine';\n/* eslint-disable */\n\n/**\n * Allows a set of options for customizing the grouping bar UI with a variety of settings such as UI visibility to a specific view port,\n * customizing the pivot button features such as filtering, sorting, changing aggregate types, removing any fields.\n * The options available to customize the grouping bar UI are:\n * * `showFilterIcon`: Allows you to show or hide the filter icon that used to be displayed on the pivot button of the grouping bar UI.\n * This filter icon is used to filter the members of a particular field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon that used to be displayed in the pivot button of the grouping bar UI.\n * This sort icon is used to order members of a particular fields either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon that used to be displayed in the pivot button of the grouping bar UI.\n * This remove icon is used to remove any field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon that used to be displayed in the pivot button of the grouping bar UI.\n * This value type icon helps to select the appropriate aggregation type to value fields at runtime.\n * * `displayMode`: Allow options to show the grouping bar UI to specific view port such as either pivot table or pivot chart or both table and chart.\n * For example, to show the grouping bar UI to pivot table on its own, set the property `displayMode` to **Table**.\n * * `allowDragAndDrop`: Allows you to restrict the pivot buttons that were used to drag on runtime in the grouping bar UI. This will prevent you from modifying the current report.\n */\n\nvar GroupingBarSettings = function (_super) {\n  __extends(GroupingBarSettings, _super);\n\n  function GroupingBarSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(true)], GroupingBarSettings.prototype, \"showFilterIcon\", void 0);\n\n  __decorate([Property(true)], GroupingBarSettings.prototype, \"showSortIcon\", void 0);\n\n  __decorate([Property(true)], GroupingBarSettings.prototype, \"showRemoveIcon\", void 0);\n\n  __decorate([Property(true)], GroupingBarSettings.prototype, \"showValueTypeIcon\", void 0);\n\n  __decorate([Property('Both')], GroupingBarSettings.prototype, \"displayMode\", void 0);\n\n  __decorate([Property(true)], GroupingBarSettings.prototype, \"allowDragAndDrop\", void 0);\n\n  __decorate([Property(false)], GroupingBarSettings.prototype, \"showFieldsPanel\", void 0);\n\n  return GroupingBarSettings;\n}(ChildProperty);\n\nexport { GroupingBarSettings };\n/**\n * Allow options for performing CRUD operations, such as add, edit, delete, and update the raw items of any cell from the pivot table.\n * The raw items can be viewed in a data grid that used to be displayed as a dialog by double-clicking the appropriate value cell in the pivot table.\n * CRUD operations can be performed in this data grid either by double-clicking the cells or using toolbar options.\n * The options available are as follows:\n * * `allowAdding`: Allows you to add a new record to the data grid used to update the appropriate cells in the pivot table.\n * * `allowEditing`: Allows you to edit the existing record in the data grid that used to update the appropriate cells in the pivot table.\n * * `allowDeleting`: Allows you to delete the existing record from the data grid that used to  update the appropriate cells in the pivot table.\n * * `allowCommandColumns`: Allows an additional column appended in the data grid layout holds the command buttons to perform the CRUD operations to edit,\n * delete, and update the raw items to the data grid that used to update the appropriate cells in the pivot table.\n * * `mode`: Allow options for performing CRUD operations with different modes in the data grid that used to update the appropriate cells in the pivot table.\n * The available modes are normal, batch and dialog. **Normal** mode is enabled for CRUD operations in the data grid by default.\n * * `allowEditOnDblClick`: Allows you to restrict CRUD operations by double-clicking the appropriate value cell in the pivot table.\n * * `showConfirmDialog`: Allows you to show the confirmation dialog to save and discard CRUD operations performed in the data grid that used to update the appropriate cells in the pivot table.\n * * `showDeleteConfirmDialog`: Allows you to show the confirmation dialog to delete any records from the data grid.\n *\n * > This feature is applicable only for the relational data source.\n */\n\nvar CellEditSettings = function (_super) {\n  __extends(CellEditSettings, _super);\n\n  function CellEditSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], CellEditSettings.prototype, \"allowAdding\", void 0);\n\n  __decorate([Property(false)], CellEditSettings.prototype, \"allowEditing\", void 0);\n\n  __decorate([Property(false)], CellEditSettings.prototype, \"allowDeleting\", void 0);\n\n  __decorate([Property(false)], CellEditSettings.prototype, \"allowCommandColumns\", void 0);\n\n  __decorate([Property(false)], CellEditSettings.prototype, \"allowInlineEditing\", void 0);\n\n  __decorate([Property('Normal')], CellEditSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], CellEditSettings.prototype, \"allowEditOnDblClick\", void 0);\n\n  __decorate([Property(true)], CellEditSettings.prototype, \"showConfirmDialog\", void 0);\n\n  __decorate([Property(false)], CellEditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n\n  return CellEditSettings;\n}(ChildProperty);\n\nexport { CellEditSettings };\n/**\n * Allow options for setting the visibility of hyperlink based on specific condition. The options available here are as follows:\n * * `measure`: Allows you to specify the value field caption to get visibility of hyperlink option for specific measure.\n * * `condition`: Allows you to choose the operator type such as equals, greater than, less than, etc.\n * * `value1`: Allows you to set the start value.\n * * `value2`: Allows you to set the end value. This option will be used by default when the operator **Between** and **NotBetween** is chosen to apply.\n */\n\nvar ConditionalSettings = function (_super) {\n  __extends(ConditionalSettings, _super);\n\n  function ConditionalSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], ConditionalSettings.prototype, \"measure\", void 0);\n\n  __decorate([Property()], ConditionalSettings.prototype, \"label\", void 0);\n\n  __decorate([Property('NotEquals')], ConditionalSettings.prototype, \"conditions\", void 0);\n\n  __decorate([Property()], ConditionalSettings.prototype, \"value1\", void 0);\n\n  __decorate([Property()], ConditionalSettings.prototype, \"value2\", void 0);\n\n  return ConditionalSettings;\n}(ChildProperty);\n\nexport { ConditionalSettings };\n/**\n * Allow a set of options to display a hyperlink to link data for individual cells that are shown in the pivot table.\n * These options allow you to enable a separate hyperlink for row headers, column headers, value cells, and summary cells in the `hyperlinkSettings` class.\n * The options available are:\n * * `showHyperlink`: Allows you to set the visibility of hyperlink in all cells.\n * * `showRowHeaderHyperlink`: Allows you to set the visibility of hyperlink in row headers.\n * * `showColumnHeaderHyperlink`: Allows you to set the visibility of hyperlink in column headers.\n * * `showValueCellHyperlink`: Allows you to set the visibility of hyperlink in value cells.\n * * `showSummaryCellHyperlink`: Allows you to set the visibility of hyperlink in summary cells.\n * * `headerText`: Allows you to set the visibility of hyperlink based on header text.\n * * `conditionalSettings`: Allows you to set the visibility of hyperlink based on specific condition.\n * * `cssClass`: Allows you to add CSS class name to the hyperlink options.\n *\n * > By default, the hyperlink options are disabled for all cells in the pivot table.\n */\n\nvar HyperlinkSettings = function (_super) {\n  __extends(HyperlinkSettings, _super);\n\n  function HyperlinkSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], HyperlinkSettings.prototype, \"showHyperlink\", void 0);\n\n  __decorate([Property(false)], HyperlinkSettings.prototype, \"showRowHeaderHyperlink\", void 0);\n\n  __decorate([Property(false)], HyperlinkSettings.prototype, \"showColumnHeaderHyperlink\", void 0);\n\n  __decorate([Property(false)], HyperlinkSettings.prototype, \"showValueCellHyperlink\", void 0);\n\n  __decorate([Property(false)], HyperlinkSettings.prototype, \"showSummaryCellHyperlink\", void 0);\n\n  __decorate([Collection([], ConditionalSettings)], HyperlinkSettings.prototype, \"conditionalSettings\", void 0);\n\n  __decorate([Property()], HyperlinkSettings.prototype, \"headerText\", void 0);\n\n  __decorate([Property('')], HyperlinkSettings.prototype, \"cssClass\", void 0);\n\n  return HyperlinkSettings;\n}(ChildProperty);\n\nexport { HyperlinkSettings };\n/**\n * Allow options to configure the view port as either pivot table or pivot chart or both table and chart. The options available are:\n * * `view`: Allows you to choose the view port as either pivot table or pivot chart or both table and chart.\n * * `primary`: Allows you to set the primary view to be either pivot table or pivot chart. To use this option, it requires the property `view` to be **Both**.\n */\n\nvar DisplayOption = function (_super) {\n  __extends(DisplayOption, _super);\n\n  function DisplayOption() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Table')], DisplayOption.prototype, \"view\", void 0);\n\n  __decorate([Property('Table')], DisplayOption.prototype, \"primary\", void 0);\n\n  return DisplayOption;\n}(ChildProperty);\n\nexport { DisplayOption };\n/* eslint-enable */\n\n/**\n * Represents the PivotView component.\n * ```html\n * <div id=\"PivotView\"></div>\n * <script>\n *  var pivotviewObj = new PivotView({ enableGroupingBar: true });\n *  pivotviewObj.appendTo(\"#pivotview\");\n * </script>\n * ```\n */\n\nvar PivotView = function (_super) {\n  __extends(PivotView, _super);\n  /* eslint-enable */\n\n  /**\n   * Constructor for creating the widget\n   * @param  {PivotViewModel} options - options.\n   * @param  {string|HTMLElement} element - element.\n   */\n\n\n  function PivotView(options, element) {\n    var _this_1 = _super.call(this, options, element) || this;\n    /** @hidden */\n\n\n    _this_1.verticalScrollScale = 1;\n    /** @hidden */\n\n    _this_1.horizontalScrollScale = 1;\n    /** @hidden */\n\n    _this_1.scrollerBrowserLimit = 8000000;\n    /** @hidden */\n\n    _this_1.lastSortInfo = {};\n    /** @hidden */\n\n    _this_1.lastFilterInfo = {};\n    /** @hidden */\n\n    _this_1.lastAggregationInfo = {};\n    /** @hidden */\n\n    _this_1.lastCalcFieldInfo = {};\n    /** @hidden */\n\n    _this_1.isScrolling = false;\n    /** @hidden */\n\n    _this_1.isInitial = true;\n    _this_1.shiftLockedPos = [];\n    _this_1.savedSelectedCellsPos = [];\n    _this_1.cellSelectionPos = [];\n    _this_1.isPopupClicked = false;\n    _this_1.isMouseDown = false;\n    _this_1.isMouseUp = false;\n    _this_1.fieldsType = {};\n    _this_1.remoteData = [];\n    _this_1.defaultItems = {};\n    _this_1.isCellBoxMultiSelection = false;\n    /** @hidden */\n\n    _this_1.gridHeaderCellInfo = [];\n    /** @hidden */\n\n    _this_1.gridCellCollection = {};\n    /** @hidden */\n\n    _this_1.rowRangeSelection = {\n      enable: false,\n      startIndex: 0,\n      endIndex: 0\n    };\n    /** @hidden */\n\n    _this_1.isStaticRefresh = false;\n    /** @hidden */\n\n    _this_1.resizeInfo = {};\n    /** @hidden */\n\n    _this_1.scrollPosObject = {\n      vertical: 0,\n      horizontal: 0,\n      verticalSection: 0,\n      horizontalSection: 0,\n      top: 0,\n      left: 0,\n      scrollDirection: {\n        direction: '',\n        position: 0\n      }\n    };\n    /** @hidden */\n\n    _this_1.pivotColumns = [];\n    /** @hidden */\n\n    _this_1.totColWidth = 0;\n    /** @hidden */\n\n    _this_1.posCount = 0;\n    /** @hidden */\n\n    _this_1.isModified = false;\n    /** @hidden */\n\n    _this_1.isInitialRendering = false;\n    _this_1.needsID = true;\n    _this_1.pivotRefresh = Component.prototype.refresh;\n    /* eslint-disable-line */\n\n    _this_1.request = new XMLHttpRequest();\n    /** @hidden */\n\n    _this_1.isServerWaitingPopup = false;\n    _this_1.pivotView = _this_1;\n    setValue('mergePersistData', _this_1.mergePersistPivotData, _this_1);\n    return _this_1;\n  }\n\n  PivotView_1 = PivotView;\n  /**\n   * To provide the array of modules needed for control rendering\n   * @returns {ModuleDeclaration[]} - return.\n   * @hidden\n   */\n\n  PivotView.prototype.requiredModules = function () {\n    var modules = [];\n    modules.push({\n      args: [this],\n      member: 'groupingBar'\n    });\n\n    if (this.allowConditionalFormatting) {\n      modules.push({\n        args: [this],\n        member: 'conditionalFormatting'\n      });\n    }\n\n    if (this.allowNumberFormatting) {\n      modules.push({\n        args: [this],\n        member: 'numberFormatting'\n      });\n    }\n\n    if (this.allowCalculatedField) {\n      modules.push({\n        args: [this],\n        member: 'calculatedField'\n      });\n    }\n\n    if (this.showToolbar && (this.toolbar.length > 0 || this.toolbarTemplate)) {\n      modules.push({\n        args: [this],\n        member: 'toolbar'\n      });\n    }\n\n    if (this.showFieldList) {\n      modules.push({\n        args: [this],\n        member: 'fieldList'\n      });\n    }\n\n    if (this.allowExcelExport) {\n      modules.push({\n        args: [this],\n        member: 'excelExport'\n      });\n    }\n\n    if (this.allowPdfExport) {\n      modules.push({\n        args: [this],\n        member: 'pdfExport'\n      });\n    }\n\n    if (this.enableVirtualization) {\n      modules.push({\n        args: [this],\n        member: 'virtualscroll'\n      });\n    }\n\n    if (this.allowGrouping) {\n      modules.push({\n        args: [this],\n        member: 'grouping'\n      });\n    }\n\n    return modules;\n  };\n  /* eslint-disable-next-line */\n\n  /**\n   * For internal use only - Initializing internal properties;\n   * @private\n   */\n\n\n  PivotView.prototype.preRender = function () {\n    if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n      this.dataType = 'olap';\n      this.olapEngineModule = new OlapEngine();\n    } else {\n      this.dataType = 'pivot';\n      this.engineModule = new PivotEngine();\n    }\n\n    this.isAdaptive = Browser.isDevice;\n\n    if (Browser.isIE || Browser.info.name === 'edge') {\n      this.scrollerBrowserLimit = 1500000;\n    } else if (Browser.info.name === 'chrome') {\n      this.scrollerBrowserLimit = 15000000;\n    }\n\n    this.isTouchMode = closest(this.element, 'e-bigger') ? true : false;\n    this.initProperties();\n    this.renderToolTip();\n    this.keyboardModule = new KeyboardInteraction(this);\n    this.contextMenuModule = new PivotContextMenu(this);\n    this.globalize = new Internationalization(this.locale);\n\n    if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField || this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n      this.commonModule = new Common(this);\n    }\n    /* eslint-disable */\n\n\n    this.defaultLocale = {\n      grandTotal: 'Grand Total',\n      total: 'Total',\n      value: 'Value',\n      noValue: 'No value',\n      row: 'Row',\n      column: 'Column',\n      collapse: 'Collapse',\n      expand: 'Expand',\n      rowAxisPrompt: 'Drop row here',\n      columnAxisPrompt: 'Drop column here',\n      valueAxisPrompt: 'Drop value here',\n      filterAxisPrompt: 'Drop filter here',\n      filter: 'Filter',\n      filtered: 'Filtered',\n      sort: 'Sort',\n      filters: 'Filters',\n      rows: 'Rows',\n      columns: 'Columns',\n      values: 'Values',\n      close: 'Close',\n      cancel: 'Cancel',\n      delete: 'Delete',\n      CalculatedField: 'Calculated Field',\n      createCalculatedField: 'Create Calculated Field',\n      fieldName: 'Enter the field name',\n      error: 'Error',\n      invalidFormula: 'Invalid formula.',\n      dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n      dropTextMobile: 'Add fields and edit formula here.',\n      dropAction: 'Calculated field cannot be place in any other region except value axis.',\n      alert: 'Alert',\n      warning: 'Warning',\n      ok: 'OK',\n      search: 'Search',\n      drag: 'Drag',\n      remove: 'Remove',\n      allFields: 'All Fields',\n      formula: 'Formula',\n      addToRow: 'Add to Row',\n      addToColumn: 'Add to Column',\n      addToValue: 'Add to Value',\n      addToFilter: 'Add to Filter',\n      emptyData: 'No records to display',\n      fieldExist: 'A field already exists in this name. Please enter a different name.',\n      confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n      noMatches: 'No matches',\n      format: 'Summaries values by',\n      edit: 'Edit',\n      clear: 'Clear',\n      sortAscending: 'Sort ascending order',\n      sortDescending: 'Sort descending order',\n      sortNone: 'Sort data order',\n      clearCalculatedField: 'Clear edited field info',\n      editCalculatedField: 'Edit calculated field',\n      formulaField: 'Drag and drop fields to formula',\n      dragField: 'Drag field to formula',\n      clearFilter: 'Clear',\n      by: 'by',\n      all: 'All',\n      multipleItems: 'Multiple items',\n      member: 'Member',\n      label: 'Label',\n      date: 'Date',\n      enterValue: 'Enter value',\n      chooseDate: 'Enter date',\n      Before: 'Before',\n      BeforeOrEqualTo: 'Before Or Equal To',\n      After: 'After',\n      AfterOrEqualTo: 'After Or Equal To',\n      labelTextContent: 'Show the items for which the label',\n      dateTextContent: 'Show the items for which the date',\n      valueTextContent: 'Show the items for which',\n      Equals: 'Equals',\n      DoesNotEquals: 'Does Not Equal',\n      BeginWith: 'Begins With',\n      DoesNotBeginWith: 'Does Not Begin With',\n      EndsWith: 'Ends With',\n      DoesNotEndsWith: 'Does Not End With',\n      Contains: 'Contains',\n      DoesNotContains: 'Does Not Contain',\n      GreaterThan: 'Greater Than',\n      GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n      LessThan: 'Less Than',\n      LessThanOrEqualTo: 'Less Than Or Equal To',\n      Between: 'Between',\n      NotBetween: 'Not Between',\n      And: 'and',\n      Sum: 'Sum',\n      Count: 'Count',\n      DistinctCount: 'Distinct Count',\n      Product: 'Product',\n      Avg: 'Avg',\n      Median: 'Median',\n      Min: 'Min',\n      SampleVar: 'Sample Var',\n      PopulationVar: 'Population Var',\n      RunningTotals: 'Running Totals',\n      Max: 'Max',\n      Index: 'Index',\n      SampleStDev: 'Sample StDev',\n      PopulationStDev: 'Population StDev',\n      PercentageOfRowTotal: '% of Row Total',\n      PercentageOfParentTotal: '% of Parent Total',\n      PercentageOfParentColumnTotal: '% of Parent Column Total',\n      PercentageOfParentRowTotal: '% of Parent Row Total',\n      DifferenceFrom: 'Difference From',\n      PercentageOfDifferenceFrom: '% of Difference From',\n      PercentageOfGrandTotal: '% of Grand Total',\n      PercentageOfColumnTotal: '% of Column Total',\n      MoreOption: 'More...',\n      NotEquals: 'Not Equals',\n      AllValues: 'All Values',\n      conditionalFormating: 'Conditional Formatting',\n      apply: 'Apply',\n      condition: 'Add Condition',\n      formatLabel: 'Format',\n      valueFieldSettings: 'Value field settings',\n      baseField: 'Base field',\n      baseItem: 'Base item',\n      summarizeValuesBy: 'Summarize values by',\n      sourceName: 'Field name :',\n      sourceCaption: 'Field caption',\n      example: 'e.g:',\n      editorDataLimitMsg: ' more items. Search to refine further.',\n      details: 'Details',\n      manageRecords: 'Manage Records',\n      Years: 'Years',\n      Quarters: 'Quarters',\n      Months: 'Months',\n      Days: 'Days',\n      Hours: 'Hours',\n      Minutes: 'Minutes',\n      Seconds: 'Seconds',\n      save: 'Save a report',\n      new: 'Create a new report',\n      load: 'Load',\n      saveAs: 'Save as current report',\n      rename: 'Rename a current report',\n      deleteReport: 'Delete a current report',\n      export: 'Export',\n      subTotals: 'Sub totals',\n      grandTotals: 'Grand totals',\n      reportName: 'Report Name :',\n      pdf: 'PDF',\n      excel: 'Excel',\n      csv: 'CSV',\n      png: 'PNG',\n      jpeg: 'JPEG',\n      svg: 'SVG',\n      mdxQuery: 'MDX Query',\n      showSubTotals: 'Show sub totals',\n      doNotShowSubTotals: 'Do not show sub totals',\n      showSubTotalsRowsOnly: 'Show sub totals rows only',\n      showSubTotalsColumnsOnly: 'Show sub totals columns only',\n      showGrandTotals: 'Show grand totals',\n      doNotShowGrandTotals: 'Do not show grand totals',\n      showGrandTotalsRowsOnly: 'Show grand totals rows only',\n      showGrandTotalsColumnsOnly: 'Show grand totals columns only',\n      fieldList: 'Show fieldlist',\n      grid: 'Show table',\n      toolbarFormatting: 'Conditional formatting',\n      chart: 'Chart',\n      reportMsg: 'Please enter vaild report name!!!',\n      reportList: 'Report list',\n      removeConfirm: 'Are you sure you want to delete this report?',\n      emptyReport: 'No reports found!!',\n      bar: 'Bar',\n      pie: 'Pie',\n      funnel: 'Funnel',\n      doughnut: 'Doughnut',\n      pyramid: 'Pyramid',\n      stackingcolumn: 'Stacked Column',\n      stackingarea: 'Stacked Area',\n      stackingbar: 'Stacked Bar',\n      stepline: 'Step Line',\n      steparea: 'Step Area',\n      splinearea: 'Spline Area',\n      spline: 'Spline',\n      stackingcolumn100: '100% Stacked Column',\n      stackingbar100: '100% Stacked Bar',\n      stackingarea100: '100% Stacked Area',\n      bubble: 'Bubble',\n      pareto: 'Pareto',\n      radar: 'Radar',\n      line: 'Line',\n      area: 'Area',\n      scatter: 'Scatter',\n      polar: 'Polar',\n      of: 'of',\n      emptyFormat: 'No format found!!!',\n      emptyInput: 'Enter a value',\n      newReportConfirm: 'Do you want to save the changes to this report?',\n      emptyReportName: 'Enter a report name',\n      qtr: 'Qtr',\n      null: 'null',\n      undefined: 'undefined',\n      groupOutOfRange: 'Out of Range',\n      fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n      aggregate: 'Aggregate',\n      drillThrough: 'Drill Through',\n      ascending: 'Ascending',\n      descending: 'Descending',\n      number: 'Number',\n      currency: 'Currency',\n      percentage: 'Percentage',\n      formatType: 'Format Type',\n      customText: 'Currency Symbol',\n      symbolPosition: 'Symbol Position',\n      left: 'Left',\n      right: 'Right',\n      grouping: 'Grouping',\n      true: 'True',\n      false: 'False',\n      decimalPlaces: 'Decimal Places',\n      numberFormat: 'Number Formatting',\n      memberType: 'Field Type',\n      formatString: 'Format',\n      expressionField: 'Expression',\n      customFormat: 'Enter custom format string',\n      numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n      selectedHierarchy: 'Parent Hierarchy',\n      olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n      Percent: 'Percent',\n      Currency: 'Currency',\n      Custom: 'Custom',\n      Measure: 'Measure',\n      Dimension: 'Dimension',\n      Standard: 'Standard',\n      blank: '(Blank)',\n      fieldTooltip: 'Drag and drop fields to create an expression. ' + 'And, if you want to edit the existing calculated fields! ' + 'You can achieve it by simply selecting the field under \"Calculated Members\".',\n      fieldTitle: 'Field Name',\n      QuarterYear: 'Quarter Year',\n      drillError: 'Cannot show the raw items of calculated fields.',\n      caption: 'Field Caption',\n      copy: 'Copy',\n      defaultReport: 'Sample Report',\n      customFormatString: 'Custom Format',\n      invalidFormat: 'Invalid Format.',\n      group: 'Group',\n      unGroup: 'Ungroup',\n      invalidSelection: 'Cannot group that selection.',\n      groupName: 'Enter the caption to display in header',\n      captionName: 'Enter the caption for group field',\n      selectedItems: 'Selected items',\n      groupFieldCaption: 'Field caption',\n      groupTitle: 'Group name',\n      startAt: 'Starting at',\n      endAt: 'Ending at',\n      groupBy: 'Interval by',\n      selectGroup: 'Select groups',\n      multipleAxes: 'Multiple Axis',\n      showLegend: 'Show Legend',\n      exit: 'Exit',\n      chartTypeSettings: 'Chart Type Settings',\n      ChartType: 'Chart Type',\n      yes: 'Yes',\n      no: 'No',\n      numberFormatMenu: 'Number Formatting...',\n      conditionalFormatingMenu: 'Conditional Formatting...',\n      removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n      replaceConfirmBefore: 'A report named ',\n      replaceConfirmAfter: ' already exists. Do you want to replace it?',\n      invalidJSON: 'Invalid JSON data',\n      invalidCSV: 'Invalid CSV data',\n      stacked: 'Stacked',\n      single: 'Single',\n      multipleAxisMode: 'Multiple Axis Mode'\n    };\n    /* eslint-enable */\n\n    this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    this.renderContextMenu();\n    this.isDragging = false;\n    this.addInternalEvents(); //setCurrencyCode(this.currencyCode);\n  };\n\n  PivotView.prototype.onBeforeTooltipOpen = function (args) {\n    args.element.classList.add('e-pivottooltipwrap');\n  };\n\n  PivotView.prototype.renderToolTip = function () {\n    if (this.showTooltip) {\n      if (this.tooltipTemplate) {\n        this.tooltip = new Tooltip({\n          target: 'td.e-valuescontent',\n          cssClass: 'e-pivottooltiptemplate',\n          showTipPointer: false,\n          position: 'BottomRight',\n          mouseTrail: true,\n          enableRtl: this.enableRtl,\n          locale: this.locale,\n          beforeRender: this.setToolTip.bind(this),\n          beforeOpen: this.onBeforeTooltipOpen\n        });\n      } else {\n        this.tooltip = new Tooltip({\n          target: 'td.e-valuescontent',\n          showTipPointer: false,\n          position: 'BottomRight',\n          mouseTrail: true,\n          enableRtl: this.enableRtl,\n          locale: this.locale,\n          beforeRender: this.setToolTip.bind(this),\n          beforeOpen: this.onBeforeTooltipOpen\n        });\n      }\n\n      this.tooltip.isStringTemplate = true;\n      this.tooltip.appendTo(this.element);\n    } else if (this.tooltip) {\n      this.tooltip.destroy();\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.renderContextMenu = function () {\n    if (this.gridSettings.contextMenuItems || this.allowGrouping && this.dataType === 'pivot') {\n      var conmenuItems = [];\n      var groupItems = [];\n      var customItems = [];\n      var exportItems = [];\n      var aggItems = [];\n      var expItems = [];\n      var aggregateItems = [];\n\n      if (this.gridSettings.contextMenuItems) {\n        for (var _i = 0, _a = this.gridSettings.contextMenuItems; _i < _a.length; _i++) {\n          var item = _a[_i];\n\n          if (typeof item === 'string' && this.getDefaultItems().indexOf(item) !== -1) {\n            if (item.toString().toLowerCase().indexOf('aggregate') !== -1 && this.dataType === 'pivot') {\n              aggregateItems = [{\n                text: this.localeObj.getConstant('Sum')\n              }];\n              var aggregateGroup = this.buildDefaultItems('Aggregate');\n              aggregateGroup.items = aggregateItems;\n              aggItems.push(aggregateGroup);\n            } else if (item.toString().toLowerCase().indexOf('export') !== -1) {\n              exportItems.push(this.buildDefaultItems(item));\n            } else {\n              conmenuItems.push(this.buildDefaultItems(item));\n            }\n          } else if (typeof item !== 'string') {\n            customItems.push(item);\n          }\n        }\n      }\n\n      if (this.allowGrouping && this.dataType === 'pivot') {\n        if (!this.getFieldByID(this.element.id + '_custom_group', this.gridSettings.contextMenuItems)) {\n          groupItems.push(this.buildDefaultItems('Group'));\n        }\n\n        if (!this.getFieldByID(this.element.id + '_custom_ungroup', this.gridSettings.contextMenuItems)) {\n          groupItems.push(this.buildDefaultItems('Ungroup'));\n        }\n      }\n\n      if (exportItems.length > 0) {\n        var exportGroupItems = this.buildDefaultItems('export');\n        exportGroupItems.items = exportItems;\n        expItems.push(exportGroupItems);\n      }\n\n      this.gridSettings.contextMenuItems = [];\n      Array.prototype.push.apply(this.gridSettings.contextMenuItems, aggItems);\n      Array.prototype.push.apply(this.gridSettings.contextMenuItems, conmenuItems);\n      Array.prototype.push.apply(this.gridSettings.contextMenuItems, groupItems);\n      Array.prototype.push.apply(this.gridSettings.contextMenuItems, expItems);\n      Array.prototype.push.apply(this.gridSettings.contextMenuItems, customItems);\n    }\n  };\n\n  PivotView.prototype.getFieldByID = function (id, fields) {\n    return new DataManager({\n      json: fields\n    }).executeLocal(new Query().where('id', 'equal', id))[0];\n  };\n  /* eslint-disable-next-line */\n\n  /**\n   * @hidden\n   */\n\n\n  PivotView.prototype.getAllSummaryType = function () {\n    return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Median', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n  };\n\n  PivotView.prototype.getDefaultItems = function () {\n    return ['Drillthrough', 'Expand', 'Collapse', 'Pdf Export', 'Excel Export', 'Csv Export', 'Sort Ascending', 'Sort Descending', 'Aggregate', 'CalculatedField'];\n  };\n\n  PivotView.prototype.buildDefaultItems = function (item) {\n    var menuItem;\n\n    switch (item) {\n      case 'Aggregate':\n        menuItem = {\n          text: this.localeObj.getConstant('aggregate'),\n          target: 'th.e-valuesheader,td.e-valuescontent,.e-stot.e-rowsheader',\n          id: this.element.id + '_aggregate'\n        };\n        break;\n\n      case 'CalculatedField':\n        menuItem = {\n          text: this.localeObj.getConstant('CalculatedField'),\n          target: 'td.e-valuescontent',\n          id: this.element.id + '_CalculatedField'\n        };\n        break;\n\n      case 'Drillthrough':\n        menuItem = {\n          text: this.localeObj.getConstant('drillThrough'),\n          target: 'td.e-valuescontent',\n          id: this.element.id + '_drillthrough_menu',\n          iconCss: cls.PIVOTVIEW_GRID + ' ' + cls.ICON\n        };\n        break;\n\n      case 'export':\n        menuItem = {\n          text: this.localeObj.getConstant('export'),\n          target: 'td.e-valuescontent',\n          id: this.element.id + '_exporting',\n          iconCss: cls.PIVOTVIEW_EXPORT + ' ' + cls.ICON\n        };\n        break;\n\n      case 'Pdf Export':\n        menuItem = {\n          text: this.localeObj.getConstant('pdf'),\n          id: this.element.id + '_pdf',\n          iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON\n        };\n        break;\n\n      case 'Excel Export':\n        menuItem = {\n          text: this.localeObj.getConstant('excel'),\n          id: this.element.id + '_excel',\n          iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON\n        };\n        break;\n\n      case 'Csv Export':\n        menuItem = {\n          text: this.localeObj.getConstant('csv'),\n          id: this.element.id + '_csv',\n          iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON\n        };\n        break;\n\n      case 'Expand':\n        menuItem = {\n          text: this.localeObj.getConstant('expand'),\n          target: 'td.e-rowsheader,.e-columnsheader',\n          id: this.element.id + '_expand',\n          iconCss: cls.PIVOTVIEW_EXPAND + ' ' + cls.ICON\n        };\n        break;\n\n      case 'Collapse':\n        menuItem = {\n          text: this.localeObj.getConstant('collapse'),\n          target: 'td.e-rowsheader,.e-columnsheader',\n          id: this.element.id + '_collapse',\n          iconCss: cls.PIVOTVIEW_COLLAPSE + ' ' + cls.ICON\n        };\n        break;\n\n      case 'Sort Ascending':\n        menuItem = {\n          text: this.localeObj.getConstant('ascending'),\n          target: 'th.e-valuesheader,.e-stot',\n          id: this.element.id + '_sortasc',\n          iconCss: cls.ICON_ASC + ' ' + cls.ICON\n        };\n        break;\n\n      case 'Sort Descending':\n        menuItem = {\n          text: this.localeObj.getConstant('descending'),\n          target: 'th.e-valuesheader,.e-stot',\n          id: this.element.id + '_sortdesc',\n          iconCss: cls.ICON_DESC + ' ' + cls.ICON\n        };\n        break;\n\n      case 'Group':\n        menuItem = {\n          text: this.localeObj.getConstant('group'),\n          target: 'td.e-rowsheader,.e-columnsheader',\n          id: this.element.id + '_custom_group',\n          iconCss: cls.PIVOTVIEW_GROUP + ' ' + cls.ICON\n        };\n        break;\n\n      case 'Ungroup':\n        menuItem = {\n          text: this.localeObj.getConstant('unGroup'),\n          target: 'td.e-rowsheader,.e-columnsheader',\n          id: this.element.id + '_custom_ungroup',\n          iconCss: cls.PIVOTVIEW_UN_GROUP + ' ' + cls.ICON\n        };\n        break;\n    }\n\n    this.defaultItems[item] = {\n      text: menuItem.text,\n      id: menuItem.id,\n      target: menuItem.target,\n      iconCss: menuItem.iconCss\n    };\n    return this.defaultItems[item];\n  };\n\n  PivotView.prototype.initProperties = function () {\n    this.pivotRefresh = Component.prototype.refresh;\n    this.minHeight = isNullOrUndefined(this.minHeight) ? 300 : this.minHeight < 10 ? 10 : this.minHeight;\n    this.isScrolling = false;\n    this.allowServerDataBinding = false;\n    this.isStaticRefresh = false;\n    this.setProperties({\n      pivotValues: []\n    }, true);\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n    delete this.bulkChanges.pivotValues;\n    this.allowServerDataBinding = true;\n    this.scrollPosObject = {\n      vertical: 0,\n      horizontal: 0,\n      verticalSection: 0,\n      horizontalSection: 0,\n      top: 0,\n      left: 0,\n      scrollDirection: {\n        direction: '',\n        position: 0\n      }\n    };\n    this.queryCellInfo = this.gridSettings.queryCellInfo ? this.gridSettings.queryCellInfo.bind(this) : undefined;\n    this.headerCellInfo = this.gridSettings.headerCellInfo ? this.gridSettings.headerCellInfo.bind(this) : undefined;\n    this.resizing = this.gridSettings.resizing ? this.gridSettings.resizing.bind(this) : undefined;\n    this.resizeStop = this.gridSettings.resizeStop ? this.gridSettings.resizeStop.bind(this) : undefined;\n    this.pdfHeaderQueryCellInfo = this.gridSettings.pdfHeaderQueryCellInfo ? this.gridSettings.pdfHeaderQueryCellInfo.bind(this) : undefined;\n    this.pdfQueryCellInfo = this.gridSettings.pdfQueryCellInfo ? this.gridSettings.pdfQueryCellInfo.bind(this) : undefined;\n    this.excelHeaderQueryCellInfo = this.gridSettings.excelHeaderQueryCellInfo ? this.gridSettings.excelHeaderQueryCellInfo.bind(this) : undefined;\n    this.excelQueryCellInfo = this.gridSettings.excelQueryCellInfo ? this.gridSettings.excelQueryCellInfo.bind(this) : undefined;\n    this.columnDragStart = this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined;\n    this.columnDrag = this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined;\n    this.columnDrop = this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined;\n    this.beforeColumnsRender = this.gridSettings.columnRender ? this.gridSettings.columnRender : undefined;\n    this.selected = this.gridSettings.cellSelected ? this.gridSettings.cellSelected : undefined;\n    this.cellDeselected = this.gridSettings.cellDeselected ? this.gridSettings.cellDeselected : undefined;\n    this.rowSelected = this.gridSettings.rowSelected ? this.gridSettings.rowSelected : undefined;\n    this.rowDeselected = this.gridSettings.rowDeselected ? this.gridSettings.rowDeselected : undefined;\n    this.chartTooltipRender = this.chartSettings.tooltipRender ? this.chartSettings.tooltipRender : undefined;\n    this.chartLoaded = this.chartSettings.loaded ? this.chartSettings.loaded : undefined;\n    this.chartLoad = this.chartSettings.load ? this.chartSettings.load : undefined;\n    this.chartResized = this.chartSettings.resized ? this.chartSettings.resized : undefined;\n    this.chartAxisLabelRender = this.chartSettings.axisLabelRender ? this.chartSettings.axisLabelRender : undefined;\n    this.multiLevelLabelClick = this.chartSettings.multiLevelLabelClick ? this.chartSettings.multiLevelLabelClick : undefined;\n    this.chartPointClick = this.chartSettings.pointClick ? this.chartSettings.pointClick : undefined;\n    this.contextMenuClick = this.gridSettings.contextMenuClick ? this.gridSettings.contextMenuClick : undefined;\n    this.contextMenuOpen = this.gridSettings.contextMenuOpen ? this.gridSettings.contextMenuOpen : undefined;\n    this.beforePdfExport = this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined;\n    this.beforeExcelExport = this.gridSettings.beforeExcelExport ? this.gridSettings.beforeExcelExport.bind(this) : undefined;\n\n    if (this.gridSettings.rowHeight === null) {\n      if (this.isTouchMode) {\n        this.setProperties({\n          gridSettings: {\n            rowHeight: 36\n          }\n        }, true);\n      } else {\n        this.setProperties({\n          gridSettings: {\n            rowHeight: this.isAdaptive ? 36 : 30\n          }\n        }, true);\n      }\n    }\n\n    if (this.chartSettings && this.chartSettings.enableMultiAxis && !this.chartSettings.enableMultipleAxis) {\n      this.setProperties({\n        chartSettings: {\n          enableMultipleAxis: true\n        }\n      }, true);\n    }\n\n    this.element.style.height = '100%';\n\n    if (this.enableVirtualization) {\n      this.updatePageSettings(true);\n\n      if (this.allowExcelExport) {\n        PivotView_1.Inject(ExcelExport);\n      }\n\n      if (this.allowPdfExport) {\n        PivotView_1.Inject(PDFExport);\n      }\n\n      if (this.editSettings.allowEditing) {\n        PivotView_1.Inject(DrillThrough);\n      }\n    }\n\n    this.isCellBoxMultiSelection = this.gridSettings.allowSelection && this.gridSettings.selectionSettings.cellSelectionMode === 'Box' && this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n\n    if (this.allowGrouping && !this.isCellBoxMultiSelection) {\n      this.isCellBoxMultiSelection = true;\n      this.setProperties({\n        gridSettings: {\n          allowSelection: true,\n          selectionSettings: {\n            cellSelectionMode: 'Box',\n            mode: 'Cell',\n            type: 'Multiple'\n          }\n        }\n      }, true);\n    }\n\n    if (this.displayOption.view !== 'Table') {\n      this.chartModule = new PivotChart();\n    }\n\n    this.currentView = this.currentView ? this.currentView : this.displayOption.view === 'Both' ? this.displayOption.primary : this.displayOption.view;\n  };\n  /* eslint-disable-next-line */\n\n  /**\n   * @hidden\n   */\n\n\n  PivotView.prototype.updatePageSettings = function (isInit) {\n    if (this.enableVirtualization) {\n      var colValues = 1;\n      var rowValues = 1;\n\n      if (this.dataSourceSettings.values.length > 1 && this.dataType === 'pivot') {\n        if (this.dataSourceSettings.valueAxis === 'row') {\n          rowValues = this.dataSourceSettings.values.length;\n        } else {\n          colValues = this.dataSourceSettings.values.length;\n        }\n      }\n\n      var heightAsNumber = this.getHeightAsNumber();\n\n      if (isNaN(heightAsNumber)) {\n        heightAsNumber = this.element.offsetHeight;\n      }\n\n      this.pageSettings = {\n        columnCurrentPage: isInit ? 1 : this.pageSettings.columnCurrentPage,\n        rowCurrentPage: isInit ? 1 : this.pageSettings.rowCurrentPage,\n        columnSize: Math.ceil((Math.floor(this.getWidthAsNumber() / this.gridSettings.columnWidth) - 1) / colValues),\n        rowSize: Math.ceil(Math.floor(heightAsNumber / this.gridSettings.rowHeight) / rowValues),\n        allowDataCompression: this.allowDataCompression\n      };\n    }\n  };\n  /* eslint-disable */\n\n  /**\n   * Initialize the control rendering\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PivotView.prototype.render = function () {\n    this.loadData();\n  };\n\n  PivotView.prototype.loadData = function () {\n    if (this.dataSourceSettings.formatSettings.length > 0) {\n      var formatfield = this.dataSourceSettings.formatSettings;\n\n      for (var i = 0; i < formatfield.length; i++) {\n        if ((!isNullOrUndefined(formatfield[i].maximumFractionDigits) || !isNullOrUndefined(formatfield[i].minimumFractionDigits)) && formatfield[i].format.match(/^(P|N|C|P[0-9]|C[0-9]|N[0-9])$/g) === null) {\n          formatfield[i].maximumFractionDigits = undefined;\n          formatfield[i].minimumIntegerDigits = undefined;\n        }\n      }\n    }\n\n    if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n      if (this.dataSourceSettings.mode === 'Server') {\n        this.guid = PivotUtil.generateUUID();\n        this.initialLoad();\n\n        if (this.displayOption.view !== 'Chart') {\n          this.renderEmptyGrid();\n        }\n\n        this.showWaitingPopup();\n      } else {\n        this.request.open(\"GET\", this.dataSourceSettings.url, true);\n        this.request.withCredentials = false;\n        this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n        this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n        this.request.send(null);\n      }\n    } else {\n      this.initialLoad();\n    }\n  };\n  /* eslint-enable */\n\n\n  PivotView.prototype.onSuccess = function () {\n    if (this.request.readyState === XMLHttpRequest.DONE) {\n      this.isServerWaitingPopup = true;\n\n      try {\n        /* eslint-disable */\n        var engine = JSON.parse(this.request.responseText);\n\n        if (this.currentAction === 'fetchFieldMembers') {\n          var currentMembers = JSON.parse(engine.members);\n          var dateMembers = [];\n          var formattedMembers = {};\n          var members = {};\n          /* eslint-enable */\n\n          for (var i = 0; i < currentMembers.length; i++) {\n            dateMembers.push({\n              formattedText: currentMembers[i].FormattedText,\n              actualText: currentMembers[i].ActualText\n            });\n            formattedMembers[currentMembers[i].FormattedText] = {};\n            members[currentMembers[i].ActualText] = {};\n          }\n\n          this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n          this.engineModule.fieldList[engine.memberName].formattedMembers = formattedMembers;\n          this.engineModule.fieldList[engine.memberName].members = members;\n\n          if (this.showGroupingBar) {\n            this.pivotButtonModule.updateFilterEvents();\n          } else {\n            this.pivotFieldListModule.pivotButtonModule.updateFilterEvents();\n          }\n        } else if (this.currentAction === 'fetchRawData') {\n          var valueCaption = this.engineModule.fieldList[this.drillThroughValue.actualText.toString()] ? this.engineModule.fieldList[this.drillThroughValue.actualText.toString()].caption : this.drillThroughValue.actualText.toString();\n          /* eslint-disable-line */\n\n          var aggType = this.engineModule.fieldList[this.drillThroughValue.actualText] ? this.engineModule.fieldList[this.drillThroughValue.actualText].aggregateType : '';\n          var rawData = JSON.parse(engine.rawData);\n          var parsedObj = JSON.parse(engine.indexObject);\n          /* eslint-disable-line */\n\n          var indexObject = {};\n          /* eslint-disable-line */\n\n          for (var len = 0; len < parsedObj.length; len++) {\n            indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n          }\n\n          this.drillThroughValue.indexObject = indexObject;\n          this.drillThroughModule.triggerDialog(valueCaption, aggType, rawData, this.drillThroughValue, this.drillThroughElement);\n        } else {\n          var fList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n\n          if (this.engineModule.fieldList) {\n            var keys = Object.keys(this.engineModule.fieldList);\n\n            for (var i = 0; i < keys.length; i++) {\n              if (this.engineModule.fieldList[keys[i]] && fList[keys[i]]) {\n                fList[keys[i]].dateMember = this.engineModule.fieldList[keys[i]].dateMember;\n                fList[keys[i]].formattedMembers = this.engineModule.fieldList[keys[i]].formattedMembers;\n                fList[keys[i]].members = this.engineModule.fieldList[keys[i]].members;\n              }\n            }\n          }\n\n          this.engineModule.fieldList = fList;\n          this.engineModule.fields = JSON.parse(engine.fields);\n          this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n          this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n          this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n          this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n          this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n          this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n          var rowPos = void 0;\n          var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n          /* eslint-disable-line */\n\n          for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n              rowPos = rCnt;\n              break;\n            }\n          }\n\n          this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n          this.engineModule.pageSettings = this.pageSettings;\n\n          if (this.dataSourceSettings.groupSettings.length > 0) {\n            PivotUtil.updateReport(this, JSON.parse(engine.dataSourceSettings));\n          }\n\n          var valueSort = JSON.parse(engine.dataSourceSettings).ValueSortSettings;\n          /* eslint-disable-line */\n\n          this.engineModule.valueSortSettings = {\n            headerText: valueSort.HeaderText,\n            headerDelimiter: valueSort.HeaderDelimiter,\n            sortOrder: valueSort.SortOrder,\n            columnIndex: valueSort.ColumnIndex\n          };\n          this.engineModule.pivotValues = pivotValues;\n        }\n      } catch (error) {\n        this.engineModule.pivotValues = [];\n      }\n\n      if (this.currentAction === 'onScroll') {\n        if (this.scrollDirection === 'vertical') {\n          var rowValues = this.dataSourceSettings.valueAxis === 'row' ? this.dataSourceSettings.values.length : 1;\n          var exactSize = this.pageSettings.rowSize * rowValues * this.gridSettings.rowHeight;\n          var exactPage = Math.ceil(this.engineModule.rowStartPos / (this.pageSettings.rowSize * rowValues));\n          var pos = exactSize * exactPage - this.engineModule.rowFirstLvl * rowValues * this.gridSettings.rowHeight;\n          this.scrollPosObject.verticalSection = pos;\n        } else if (this.scrollDirection === 'horizondal') {\n          var colValues = this.dataSourceSettings.valueAxis === 'column' ? this.dataSourceSettings.values.length : 1;\n          var exactSize = this.pageSettings.columnSize * colValues * this.gridSettings.columnWidth;\n          var exactPage = Math.ceil(this.engineModule.colStartPos / (this.pageSettings.columnSize * colValues));\n          var pos = exactSize * exactPage - this.engineModule.colFirstLvl * colValues * this.gridSettings.columnWidth;\n          this.scrollPosObject.horizontalSection = pos;\n        }\n      }\n\n      if (this.currentAction !== 'fetchFieldMembers' && this.currentAction !== 'fetchRawData') {\n        this.initEngine();\n\n        if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n          this.calculatedFieldModule.endDialog();\n          this.calculatedFieldModule.isRequireUpdate = false;\n        }\n\n        if (this.pivotFieldListModule && this.pivotFieldListModule.calculatedFieldModule && this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate) {\n          /* eslint-disable-line */\n          this.pivotFieldListModule.calculatedFieldModule.endDialog();\n          this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate = false;\n        }\n      }\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n    var _this_1 = this;\n\n    this.currentAction = action;\n    this.isServerWaitingPopup = false;\n    var customProperties = {\n      pageSettings: this.pageSettings,\n      enableValueSorting: this.enableValueSorting,\n      enableDrillThrough: this.allowDrillThrough || this.editSettings.allowEditing,\n      locale: JSON.stringify(PivotUtil.getLocalizedObject(this))\n    };\n    this.request.open('POST', this.dataSourceSettings.url, true);\n    var params = {\n      request: this.request,\n      dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n      action: action,\n      customProperties: {},\n      internalProperties: customProperties,\n      drillItem: drillItem,\n      sortItem: sortItem,\n      aggregatedItem: aggField,\n      calculatedItem: cField,\n      filterItem: filterItem,\n      memberName: memberName,\n      fetchRawDataArgs: rawDataArgs,\n      editArgs: editArgs,\n      hash: this.guid\n    };\n    this.trigger(events.beforeServiceInvoke, params, function (observedArgs) {\n      _this_1.request = observedArgs.request;\n      params.internalProperties = observedArgs.internalProperties;\n      params.customProperties = observedArgs.customProperties;\n      params.dataSourceSettings = observedArgs.dataSourceSettings;\n      params.calculatedItem = observedArgs.calculatedItem;\n      params.drillItem = observedArgs.drillItem;\n      params.editArgs = observedArgs.editArgs;\n      params.fetchRawDataArgs = observedArgs.fetchRawDataArgs;\n      params.filterItem = observedArgs.filterItem;\n      params.hash = observedArgs.hash;\n      params.memberName = observedArgs.memberName;\n      params.sortItem = observedArgs.sortItem;\n    });\n    this.request.withCredentials = false;\n    this.request.onreadystatechange = this.onSuccess.bind(this);\n    this.request.setRequestHeader('Content-type', 'application/json');\n    this.request.send(JSON.stringify(params));\n  };\n\n  PivotView.prototype.onReadyStateChange = function () {\n    if (this.request.readyState === XMLHttpRequest.DONE) {\n      var dataSource = [];\n\n      if (this.dataSourceSettings.type === 'CSV') {\n        var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/); // (dataSource as string[][]).push(jsonObject[0].split(',').map(function (e) { return e.replace(/ /g, '').replace(/^\\\"(.+)\\\"$/, \"$1\"); }));\n\n        for (var i = 0; i < jsonObject.length; i++) {\n          if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n            dataSource.push(jsonObject[i].split(','));\n          }\n        }\n      } else {\n        try {\n          dataSource = JSON.parse(this.request.responseText);\n        } catch (error) {\n          dataSource = [];\n        }\n      }\n\n      if (isBlazor() && dataSource && dataSource.length > 0) {\n        this.remoteData = dataSource;\n      } else if (dataSource && dataSource.length > 0) {\n        this.setProperties({\n          dataSourceSettings: {\n            dataSource: dataSource\n          }\n        }, true);\n      }\n\n      this.initialLoad();\n    }\n  };\n\n  PivotView.prototype.initialLoad = function () {\n    var _this_1 = this;\n\n    this.cellTemplateFn = this.templateParser(this.cellTemplate);\n    this.tooltipTemplateFn = this.templateParser(this.tooltipTemplate);\n\n    if (this.spinnerTemplate) {\n      createSpinner({\n        target: this.element,\n        template: this.spinnerTemplate\n      }, this.createElement);\n    } else {\n      createSpinner({\n        target: this.element\n      }, this.createElement);\n    }\n\n    var loadArgs = {\n      dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings,\n      pivotview: isBlazor() ? undefined : this,\n      fieldsType: {}\n    };\n    this.trigger(events.load, loadArgs, function (observedArgs) {\n      if (isBlazor()) {\n        observedArgs.dataSourceSettings.dataSource = _this_1.dataSourceSettings.dataSource;\n        PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n      } else {\n        _this_1.dataSourceSettings = observedArgs.dataSourceSettings;\n      }\n\n      _this_1.fieldsType = observedArgs.fieldsType;\n\n      _this_1.updateClass();\n\n      _this_1.notify(events.initSubComponent, {});\n\n      if (_this_1.dataSourceSettings.mode !== 'Server') {\n        _this_1.notify(events.initialLoad, {});\n      }\n\n      if (_this_1.isAdaptive) {\n        _this_1.contextMenuModule.render();\n      }\n\n      _this_1.notify(events.initToolbar, {});\n    });\n\n    if (isBlazor()) {\n      this.renderComplete();\n    }\n  };\n  /**\n   * Register the internal events.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PivotView.prototype.addInternalEvents = function () {\n    this.on(events.initialLoad, this.generateData, this);\n    this.on(events.dataReady, this.renderPivotGrid, this);\n    this.on(events.contentReady, this.onContentReady, this);\n  };\n  /**\n   * De-Register the internal events.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PivotView.prototype.removeInternalEvents = function () {\n    this.off(events.initialLoad, this.generateData);\n    this.off(events.dataReady, this.renderPivotGrid);\n    this.off(events.contentReady, this.onContentReady);\n  };\n  /**\n   * Get the Pivot widget properties to be maintained in the persisted state.\n   * @returns {string} - string.\n   */\n\n\n  PivotView.prototype.getPersistData = function () {\n    var keyEntity = ['dataSourceSettings', 'pivotValues', 'gridSettings', 'chartSettings', 'displayOption'];\n    /* eslint-disable */\n\n    var columnRender = this.gridSettings['columnRender'];\n    this.gridSettings['columnRender'] = undefined;\n    this.chartSettings['tooltipRender'] = undefined;\n    var persistData = this.addOnPersist(keyEntity);\n    this.gridSettings['columnRender'] = columnRender;\n    /* eslint-enable */\n\n    return persistData;\n  };\n  /**\n   * Loads pivot Layout\n   * @param {string} persistData - Specifies the persist data to be loaded to pivot.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.loadPersistData = function (persistData) {\n    var pivotData;\n    /* eslint-disable */\n\n    if (isBlazor()) {\n      pivotData = typeof persistData === \"string\" ? JSON.parse(persistData) : persistData;\n      pivotData.dataSourceSettings.dataSource = this.dataSourceSettings.dataSource;\n    } else {\n      pivotData = JSON.parse(persistData);\n    }\n\n    this.allowServerDataBinding = false;\n    this.setProperties({\n      gridSettings: pivotData.gridSettings,\n      pivotValues: pivotData.pivotValues,\n      chartSettings: pivotData.chartSettings,\n      displayOption: pivotData.displayOption\n    }, true);\n    delete this.bulkChanges.pivotValues;\n    this.allowServerDataBinding = true;\n    /* eslint-enable */\n\n    this.dataSourceSettings = pivotData.dataSourceSettings;\n  };\n\n  PivotView.prototype.mergePersistPivotData = function () {\n    var blazdataSource;\n\n    if (isBlazor()) {\n      blazdataSource = this.dataSourceSettings.dataSource;\n    }\n\n    var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n\n    if (!(isNullOrUndefined(data) || data === '')) {\n      this.setProperties(JSON.parse(data), true);\n    }\n\n    if (this.dataSourceSettings.dataSource instanceof Object && isBlazor()) {\n      this.setProperties({\n        dataSourceSettings: {\n          dataSource: blazdataSource\n        }\n      }, true);\n    }\n  };\n  /**\n   * Method to open conditional formatting dialog.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.showConditionalFormattingDialog = function () {\n    if (this.conditionalFormattingModule) {\n      this.conditionalFormattingModule.showConditionalFormattingDialog();\n    }\n  };\n  /**\n   * Method to open calculated field dialog.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.createCalculatedFieldDialog = function () {\n    if (this.calculatedFieldModule) {\n      this.calculatedFieldModule.createCalculatedFieldDialog();\n    }\n  };\n  /**\n   * It returns the Module name.\n   * @returns {string} - string.\n   * @hidden\n   */\n\n\n  PivotView.prototype.getModuleName = function () {\n    return 'pivotview';\n  };\n  /**\n   * Copy the selected rows or cells data into clipboard.\n   * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PivotView.prototype.copy = function (withHeader) {\n    this.grid.copy(withHeader);\n  };\n  /**\n   * By default, prints all the pages of the Grid and hides the pager.\n   * > You can customize print options using the\n   * [`printMode`](./api-pivotgrid.html#printmode-string).\n   * @returns {void}\n   * @hidden\n   */\n  // public print(): void {\n  //     this.grid.print();\n  // }\n\n  /* eslint-disable  */\n\n  /**\n   * Called internally if any of the property value changed.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PivotView.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'dataSourceSettings':\n        case 'hyperlinkSettings':\n        case 'allowDrillThrough':\n        case 'editSettings':\n        case 'allowDataCompression':\n          if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1 && newProp.dataSourceSettings.groupSettings && this.dataType === 'pivot') {\n            this.updateGroupingReport(newProp.dataSourceSettings.groupSettings, 'Date');\n          }\n\n          if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1 && Object.keys(newProp.dataSourceSettings)[0] === 'dataSource') {\n            if (!isNullOrUndefined(this.savedDataSourceSettings) && this.dataSourceSettings.dataSource.length > 0) {\n              PivotUtil.updateDataSourceSettings(this, this.savedDataSourceSettings);\n              this.savedDataSourceSettings = undefined;\n            }\n\n            if ((newProp.dataSourceSettings.dataSource && newProp.dataSourceSettings.dataSource).length === 0) {\n              this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n              this.setProperties({\n                dataSourceSettings: {\n                  rows: []\n                }\n              }, true);\n              this.setProperties({\n                dataSourceSettings: {\n                  columns: []\n                }\n              }, true);\n              this.setProperties({\n                dataSourceSettings: {\n                  values: []\n                }\n              }, true);\n              this.setProperties({\n                dataSourceSettings: {\n                  filters: []\n                }\n              }, true);\n            }\n\n            if (!this.isStaticRefresh) {\n              this.pivotValues = [];\n              this.engineModule.fieldList = null;\n            }\n\n            if (this.dataSourceSettings.groupSettings.length > 0) {\n              this.clonedDataSet = newProp.dataSourceSettings.dataSource;\n              this.updateGroupingReport(this.dataSourceSettings.groupSettings, 'Date');\n            }\n\n            this.showWaitingPopup();\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n          } else {\n            if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n              if (this.showGroupingBar && this.groupingBarModule) {\n                this.axisFieldModule.render();\n              }\n\n              if (this.showFieldList && this.pivotFieldListModule) {\n                var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                this.pivotFieldListModule.setProperties({\n                  dataSourceSettings: {\n                    rows: rows,\n                    columns: columns,\n                    values: values,\n                    filters: filters\n                  }\n                }, true);\n                this.pivotFieldListModule.axisFieldModule.render();\n\n                if (this.pivotFieldListModule.treeViewModule.fieldTable && !this.isAdaptive) {\n                  this.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                }\n              }\n            } else {\n              this.remoteData = [];\n\n              if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '' && ('type' in newProp.dataSourceSettings || 'url' in newProp.dataSourceSettings)) {\n                this.engineModule.fieldList = null;\n                this.loadData();\n              } else {\n                if (newProp.dataSourceSettings && 'dataSource' in newProp.dataSourceSettings) {\n                  if (newProp.dataSourceSettings.dataSource && newProp.dataSourceSettings.dataSource.length === 0) {\n                    this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                    this.setProperties({\n                      dataSourceSettings: {\n                        rows: []\n                      }\n                    }, true);\n                    this.setProperties({\n                      dataSourceSettings: {\n                        columns: []\n                      }\n                    }, true);\n                    this.setProperties({\n                      dataSourceSettings: {\n                        values: []\n                      }\n                    }, true);\n                    this.setProperties({\n                      dataSourceSettings: {\n                        filters: []\n                      }\n                    }, true);\n                  }\n\n                  if (!this.isStaticRefresh) {\n                    this.engineModule.fieldList = null;\n                    this.pivotValues = [];\n                  }\n                }\n\n                this.notify(events.initialLoad, {});\n              }\n            }\n          }\n\n          break;\n\n        case 'height':\n        case 'width':\n          this.layoutRefresh();\n          break;\n\n        case 'pivotValues':\n        case 'displayOption':\n          if (!this.showToolbar && newProp.displayOption && Object.keys(newProp.displayOption).length === 1 && newProp.displayOption.view) {\n            this.currentView = newProp.displayOption.view === 'Both' ? this.displayOption.primary : newProp.displayOption.view;\n\n            if (this.showGroupingBar || this.showFieldList) {\n              if (this.showFieldList && this.pivotFieldListModule) {\n                this.pivotFieldListModule.destroy();\n              }\n\n              if (this.showGroupingBar && this.groupingBarModule) {\n                this.groupingBarModule.destroy();\n              }\n\n              this.notify(events.initSubComponent, this);\n            }\n\n            if (!this.grid && newProp.displayOption.view !== 'Chart') {\n              this.renderEmptyGrid();\n\n              if (newProp.displayOption.view === 'Table') {\n                if (this.chartModule) {\n                  this.chartModule.destroy();\n                  this.chart = undefined;\n                  this.chartModule = undefined;\n                }\n              }\n            } else if (!this.chartModule && this.displayOption.view !== 'Table') {\n              this.chartModule = new PivotChart();\n            }\n          } else if (this.showToolbar && !isNullOrUndefined(newProp.displayOption) && newProp.displayOption.view) {\n            this.currentView = newProp.displayOption.view === 'Both' ? this.displayOption.primary : newProp.displayOption.view;\n          }\n\n          var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n\n          if (!isNullOrUndefined(engine.fieldList) || !isNullOrUndefined(engine.pivotValues)) {\n            this.notify(events.dataReady, {});\n          }\n\n          break;\n\n        case 'gridSettings':\n          this.lastGridSettings = newProp.gridSettings;\n          this.isCellBoxMultiSelection = this.gridSettings.allowSelection && this.gridSettings.selectionSettings.cellSelectionMode === 'Box' && this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n\n          if (this.allowGrouping && this.groupingModule && !this.isCellBoxMultiSelection) {\n            this.setProperties({\n              gridSettings: {\n                allowSelection: true,\n                selectionSettings: {\n                  cellSelectionMode: 'Box',\n                  mode: 'Cell',\n                  type: 'Multiple'\n                }\n              }\n            }, true);\n            this.isCellBoxMultiSelection = true;\n          }\n\n          this.renderModule.updateGridSettings();\n          break;\n\n        case 'chartSettings':\n          if (this.showGroupingBar && this.groupingBarModule && (Object.keys(newProp.chartSettings).indexOf('enableMultipleAxis') !== -1 || newProp.chartSettings.chartSeries && Object.keys(newProp.chartSettings.chartSeries).indexOf('type') !== -1)) {\n            this.groupingBarModule.renderLayout();\n          }\n\n          if (isNullOrUndefined(this.chartModule) && this.displayOption.view !== 'Table') {\n            this.chartModule = new PivotChart();\n          }\n\n          var engineModule = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n\n          if (!isNullOrUndefined(this.chartModule) && !isNullOrUndefined(engineModule.pivotValues)) {\n            this.chartModule.loadChart(this, this.chartSettings);\n          }\n\n          if (!isNullOrUndefined(engineModule.pivotValues) && !isNullOrUndefined(engineModule.fieldList)) {\n            this.notify(events.uiUpdate, this);\n          }\n\n          break;\n\n        case 'locale':\n        case 'currencyCode':\n        case 'enableRtl':\n          if (this.tooltip) {\n            this.tooltip.destroy();\n          }\n\n          if (this.dataSourceSettings.groupSettings && this.dataSourceSettings.groupSettings.length > 0 && this.clonedDataSet && !isBlazor()) {\n            var dataSet = PivotUtil.getClonedData(this.clonedDataSet);\n            this.setProperties({\n              dataSourceSettings: {\n                dataSource: dataSet\n              }\n            }, true);\n          }\n\n          if (isBlazor()) {\n            this.refresh();\n          } else {\n            _super.prototype.refresh.call(this);\n          }\n\n          this.updateClass();\n          break;\n\n        case 'enableValueSorting':\n          this.enableValueSorting = newProp.enableValueSorting;\n          this.updateDataSource();\n          break;\n\n        case 'showGroupingBar':\n          if (this.element.querySelector('.e-grouping-bar')) {\n            this.element.querySelector('.e-grouping-bar').remove();\n          }\n\n          if (isNullOrUndefined(newProp.showFieldList)) this.renderPivotGrid();\n          break;\n\n        case 'showFieldList':\n          this.initialLoad();\n          break;\n\n        case 'groupingBarSettings':\n          if (newProp.groupingBarSettings && this.showGroupingBar && this.groupingBarModule && Object.keys(newProp.groupingBarSettings).indexOf(\"showFieldsPanel\") > -1) {\n            this.groupingBarModule.RefreshFieldsPanel();\n            this.layoutRefresh();\n          } else {\n            this.axisFieldModule.render();\n          }\n\n          break;\n\n        case 'showTooltip':\n          this.renderToolTip();\n          break;\n\n        case 'toolbar':\n          if (this.toolbarModule) {\n            this.toolbarModule.refreshToolbar();\n          }\n\n          break;\n\n        case 'chartTypes':\n          if (this.toolbarModule) {\n            this.toolbarModule.createChartMenu();\n          }\n\n          break;\n\n        case 'aggregateTypes':\n          if (this.showGroupingBar) {\n            if (this.axisFieldModule) {\n              this.axisFieldModule.render();\n            }\n          }\n\n          if (this.showFieldList && this.pivotFieldListModule && this.pivotFieldListModule.axisFieldModule) {\n            this.pivotFieldListModule.setProperties({\n              aggregateTypes: newProp.aggregateTypes\n            }, true);\n            this.pivotFieldListModule.axisFieldModule.render();\n          }\n\n          break;\n      }\n    }\n  };\n  /**\n   * Method to parse the template string.\n   */\n\n\n  PivotView.prototype.templateParser = function (template) {\n    if (template) {\n      try {\n        if (document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        }\n      } catch (error) {\n        return compile(template);\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * Method to get the cell template.\n   */\n\n\n  PivotView.prototype.getCellTemplate = function () {\n    return this.cellTemplateFn;\n  };\n  /**\n   * @hidden\n   */\n\n\n  PivotView.prototype.appendHtml = function (node, innerHtml) {\n    var tempElement = document.createElement('div');\n    tempElement.innerHTML = innerHtml;\n\n    if (!isNullOrUndefined(tempElement.firstChild)) {\n      node.appendChild(tempElement.firstChild);\n    }\n\n    return node;\n  };\n  /**\n   * Render the UI section of PivotView.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PivotView.prototype.renderPivotGrid = function () {\n    this.clearTemplate();\n\n    if (this.currentView === 'Table') {\n      if (this.cellTemplate && isBlazor()) {\n        resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n      }\n    }\n\n    if (this.chartModule) {\n      this.chartModule.engineModule = this.engineModule;\n      this.chartModule.loadChart(this, this.chartSettings);\n\n      if (this.enableRtl && this.chart && document.body.getAttribute('dir') !== 'rtl') {\n        addClass([this.chart.element], cls.PIVOTCHART_LTR);\n      }\n    }\n\n    if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField || this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n      this.notify(events.uiUpdate, this);\n\n      if (this.pivotFieldListModule && this.allowDeferLayoutUpdate) {\n        this.pivotFieldListModule.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n      }\n    }\n\n    if (this.enableVirtualization) {\n      this.virtualscrollModule = new VirtualScroll(this);\n    }\n\n    if (this.allowDrillThrough || this.editSettings.allowEditing) {\n      this.drillThroughModule = new DrillThrough(this);\n    }\n\n    if (this.displayOption.view !== 'Chart') {\n      if (this.hyperlinkSettings) {\n        this.isRowCellHyperlink = this.hyperlinkSettings.showRowHeaderHyperlink ? true : this.hyperlinkSettings.showHyperlink ? true : false;\n        this.isColumnCellHyperlink = this.hyperlinkSettings.showColumnHeaderHyperlink ? true : this.hyperlinkSettings.showHyperlink ? true : false;\n        this.isValueCellHyperlink = this.hyperlinkSettings.showValueCellHyperlink ? true : this.hyperlinkSettings.showHyperlink ? true : false;\n        this.isSummaryCellHyperlink = this.hyperlinkSettings.showSummaryCellHyperlink ? true : this.hyperlinkSettings.showHyperlink ? true : false;\n        this.applyHyperlinkSettings();\n      }\n\n      this.renderModule = new Render(this);\n      this.renderModule.render();\n    } else if (this.grid) {\n      remove(this.grid.element);\n    }\n\n    if (this.allowConditionalFormatting) {\n      this.applyFormatting(this.pivotValues);\n    }\n\n    if (this.showToolbar) {\n      if (this.displayOption.view === 'Both' && this.chart && this.grid) {\n        if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n          this.groupingBarModule.refreshUI();\n        }\n\n        if (this.toolbarModule && this.toolbarModule.toolbar) {\n          this.toolbarModule.toolbar.width = this.getGridWidthAsNumber() - 2;\n        }\n\n        this.chart.element.style.width = formatUnit(this.getGridWidthAsNumber());\n        this.chart.width = formatUnit(this.getGridWidthAsNumber());\n\n        if (this.currentView === 'Table') {\n          this.grid.element.style.display = '';\n          this.chart.element.style.display = 'none';\n\n          if (this.chartSettings.enableMultipleAxis && this.chartSettings.enableScrollOnMultiAxis) {\n            this.element.querySelector('.e-pivotchart').style.display = 'none';\n          }\n        } else {\n          this.grid.element.style.display = 'none';\n          this.chart.element.style.display = '';\n\n          if (this.chartSettings.enableMultipleAxis && this.chartSettings.enableScrollOnMultiAxis) {\n            this.element.querySelector('.e-pivotchart').style.display = '';\n          }\n        }\n      }\n    }\n\n    if (this.toolbarModule) {\n      if (this.showFieldList && select('#' + this.element.id + '_PivotFieldList', this.element)) {\n        select('#' + this.element.id + '_PivotFieldList', this.element).style.display = 'none';\n      }\n\n      if (this.toolbar && this.toolbar.indexOf('FieldList') !== -1 && this.showToolbar && this.element.querySelector('.e-toggle-field-list')) {\n        this.element.querySelector('.e-toggle-field-list').style.display = 'none';\n      }\n\n      if (this.toolbarModule && this.toolbarModule.action !== 'New' && this.toolbarModule.action !== 'Load' && this.toolbarModule.action !== 'Remove') {\n        this.isModified = true;\n      }\n\n      if (!this.isInitialRendering) {\n        this.isModified = false;\n        this.isInitialRendering = !this.isInitialRendering;\n      }\n\n      this.toolbarModule.action = '';\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  PivotView.prototype.showWaitingPopup = function () {\n    if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n      showSpinner(this.grid.element);\n    } else {\n      showSpinner(this.element);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  PivotView.prototype.hideWaitingPopup = function () {\n    if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n      hideSpinner(this.grid.element);\n    } else {\n      hideSpinner(this.element);\n    }\n  };\n  /* eslint-disable  */\n\n  /**\n   * Updates the PivotEngine using dataSource from Pivot View component.\n   * @function updateDataSource\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PivotView.prototype.updateDataSource = function (isRefreshGrid) {\n    var _this_1 = this;\n\n    this.showWaitingPopup();\n    var pivot = this; //setTimeout(() => {\n\n    var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n    var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n    var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n    var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n    var args = {\n      dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n    };\n    pivot.trigger(events.enginePopulating, args, function (observedArgs) {\n      if (!(pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n        PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n      }\n\n      pivot.updatePageSettings(false);\n\n      if (pivot.dataType === 'pivot' && pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n        var interopArguments = {};\n\n        if (isSorted) {\n          pivot.setProperties({\n            dataSourceSettings: {\n              valueSortSettings: {\n                headerText: ''\n              }\n            }\n          }, true);\n\n          if (isBlazor()) {\n            var sfBlazor = 'sfBlazor';\n            var sortInfo = {\n              name: pivot.lastSortInfo.name,\n              order: pivot.lastSortInfo.order\n            };\n            var sortArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastSortInfo], pivot.lastSortInfo);\n            interopArguments = {\n              'key': 'onSort',\n              'arg': sortArgs\n            };\n          } else if (_this_1.dataSourceSettings.mode === 'Server') {\n            pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n          } else {\n            pivot.engineModule.onSort(pivot.lastSortInfo);\n          }\n\n          pivot.lastSortInfo = {};\n        }\n\n        if (isAggChange) {\n          if (isBlazor()) {\n            /* eslint-disable */\n            var sfBlazor = 'sfBlazor';\n            var aggregateArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastAggregationInfo], pivot.lastAggregationInfo);\n            interopArguments = {\n              'key': 'onAggregation',\n              'arg': aggregateArgs\n            };\n            /* eslint-enable */\n          } else if (_this_1.dataSourceSettings.mode === 'Server') {\n            pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n          } else {\n            pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n          }\n\n          pivot.lastAggregationInfo = {};\n        }\n\n        if (isCalcChange) {\n          if (isBlazor()) {\n            /* eslint-disable */\n            var dataSourceSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n            interopArguments = {\n              'key': 'onCalcOperation',\n              'arg': {\n                lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                values: dataSourceSettings.values,\n                calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings\n              }\n            };\n            /* eslint-enable */\n          } else if (_this_1.dataSourceSettings.mode === 'Server') {\n            pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n          } else {\n            pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n          }\n\n          pivot.lastCalcFieldInfo = {};\n        }\n\n        if (isFiltered) {\n          if (isBlazor()) {\n            /* eslint-disable */\n            var filterArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.lastFilterInfo], pivot.lastFilterInfo);\n            var filterSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n            interopArguments = {\n              'key': 'onFilter',\n              'arg': {\n                'lastFilterInfo': filterArgs,\n                'filterSettings': filterSettings\n              }\n            };\n            /* eslint-enable */\n          } else if (_this_1.dataSourceSettings.mode === 'Server') {\n            pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n          } else {\n            pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n          }\n\n          pivot.lastFilterInfo = {};\n        }\n\n        if (isBlazor()) {\n          /* eslint-disable */\n          pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', interopArguments['key'], interopArguments['arg']).then(function (data) {\n            pivot.updateBlazorData(data, pivot);\n            pivot.allowServerDataBinding = false;\n            pivot.setProperties({\n              pivotValues: pivot.engineModule.pivotValues\n            }, true);\n            delete pivot.bulkChanges.pivotValues;\n            pivot.allowServerDataBinding = true;\n            pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n\n            if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n              pivot.calculatedFieldModule.endDialog();\n              pivot.calculatedFieldModule.isRequireUpdate = false;\n            }\n          });\n          /* eslint-enable */\n        } else {\n          pivot.allowServerDataBinding = false;\n          pivot.setProperties({\n            pivotValues: pivot.engineModule.pivotValues\n          }, true);\n          /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n          delete pivot.bulkChanges.pivotValues;\n          pivot.allowServerDataBinding = true;\n\n          if (pivot.dataSourceSettings.mode !== 'Server') {\n            pivot.enginePopulatedEventMethod('updateDataSource');\n          }\n        }\n      } else {\n        if (pivot.dataType === 'olap') {\n          var customProperties = {\n            mode: '',\n            savedFieldList: pivot.olapEngineModule.fieldList,\n            savedFieldListData: pivot.olapEngineModule.fieldListData,\n            pageSettings: pivot.pageSettings,\n            enableValueSorting: pivot.enableValueSorting,\n            isDrillThrough: pivot.allowDrillThrough || pivot.editSettings.allowEditing,\n            localeObj: pivot.localeObj\n          };\n\n          if (isCalcChange || isSorted) {\n            pivot.olapEngineModule.savedFieldList = pivot.olapEngineModule.fieldList;\n            pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n\n            if (isCalcChange) {\n              pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n              pivot.lastCalcFieldInfo = {};\n            } else {\n              pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n              pivot.lastSortInfo = {};\n            }\n          } else {\n            pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n          }\n\n          pivot.allowServerDataBinding = false;\n          pivot.setProperties({\n            pivotValues: pivot.olapEngineModule.pivotValues\n          }, true);\n          /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n          delete pivot.bulkChanges.pivotValues;\n          pivot.allowServerDataBinding = true;\n          pivot.enginePopulatedEventMethod('updateDataSource');\n        } else {\n          var customProperties = {\n            mode: '',\n            savedFieldList: pivot.engineModule.fieldList,\n            pageSettings: pivot.pageSettings,\n            enableValueSorting: pivot.enableValueSorting,\n            isDrillThrough: pivot.allowDrillThrough || pivot.editSettings.allowEditing,\n            localeObj: pivot.localeObj,\n            fieldsType: pivot.fieldsType,\n            clonedReport: pivot.clonedReport\n          };\n          /* eslint-enable @typescript-eslint/indent */\n\n          if (isBlazor() && pivot.enableVirtualization) {\n            /* eslint-disable */\n            var sfBlazor = 'sfBlazor';\n            var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n            var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n            pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', {\n              'dataSourceSettings': datasourceSettings,\n              'customProperties': customArgs\n            }).then(function (data) {\n              pivot.updateBlazorData(data, pivot);\n              pivot.allowServerDataBinding = false;\n              pivot.setProperties({\n                pivotValues: pivot.engineModule.pivotValues\n              }, true);\n              delete pivot.bulkChanges.pivotValues;\n              pivot.allowServerDataBinding = true;\n              pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n            });\n          } else if (pivot.dataSourceSettings.mode === 'Server') {\n            if (isSorted) pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);else if (isAggChange) pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);else if (isCalcChange) pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);else if (isFiltered) pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);else pivot.getEngine('onDrop', null, null, null, null, null, null);\n            /* eslint-enable */\n\n            pivot.lastSortInfo = {};\n            pivot.lastAggregationInfo = {};\n            pivot.lastCalcFieldInfo = {};\n            pivot.lastFilterInfo = {};\n          } else {\n            pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n            pivot.allowServerDataBinding = false;\n            pivot.setProperties({\n              pivotValues: pivot.engineModule.pivotValues\n            }, true);\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n            delete pivot.bulkChanges.pivotValues;\n            pivot.allowServerDataBinding = true;\n            pivot.enginePopulatedEventMethod('updateDataSource');\n          }\n        }\n      }\n    }); //});\n  };\n  /**\n   * Export Pivot widget data to Excel file(.xlsx).\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n    if (this.enableVirtualization && this.dataSourceSettings.mode !== 'Server') {\n      this.excelExportModule.exportToExcel('Excel', excelExportProperties);\n    } else {\n      this.exportType = 'Excel';\n      this.grid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n    }\n  };\n  /**\n   * Export PivotGrid data to CSV file.\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n    if (this.enableVirtualization && this.dataSourceSettings.mode !== 'Server') {\n      this.excelExportModule.exportToExcel('CSV', excelExportProperties);\n    } else {\n      this.exportType = 'CSV';\n      this.grid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n    }\n  };\n  /**\n   * Export Pivot widget data to PDF document.\n   * @param  {PdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n    if (this.enableVirtualization && this.dataSourceSettings.mode !== 'Server') {\n      this.pdfExportModule.exportToPDF(pdfExportProperties);\n    } else {\n      this.grid.pdfExport(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    }\n  };\n  /**\n   * Export method for the chart.\n   * @param {ExportType} type - Defines the export type.\n   * @param {string} fileName - Defines file name of export document.\n   * @param {PdfPageOrientation} orientation - Defines the page orientation on pdf export(0 for Portrait mode, 1 for Landscape mode).\n   * @param {number} width - Defines width of the export document.\n   * @param {number} height - Defines height of the export document.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.chartExport = function (type, fileName, orientation, width, height) {\n    if (this.chart && this.chart.enableExport) {\n      this.chart.exportModule.export(type, fileName, orientation, null, width, height);\n    }\n  };\n  /**\n   * Print method for the chart.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.printChart = function () {\n    if (this.chart) {\n      this.chart.print();\n    }\n  };\n  /** @hidden */\n\n  /* eslint-disable  */\n\n\n  PivotView.prototype.onDrill = function (target, chartDrillInfo) {\n    var _this_1 = this;\n\n    var delimiter = this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter ? this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n    var fieldName = '';\n    var axis = '';\n    var action = '';\n\n    if (chartDrillInfo) {\n      fieldName = chartDrillInfo.fieldName;\n      axis = chartDrillInfo.cell.axis;\n      action = chartDrillInfo.isDrilled ? 'up' : 'down';\n    } else {\n      fieldName = target.parentElement.getAttribute('fieldname');\n      axis = target.parentElement.classList.contains(cls.ROWSHEADER) ? 'row' : 'column';\n      action = target.classList.contains(cls.COLLAPSE) ? 'up' : 'down';\n    }\n\n    if (this.dataType === 'pivot') {\n      var clonedDrillMembers_1 = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n      var currentCell = chartDrillInfo ? chartDrillInfo.cell : this.engineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n      var memberName = currentCell.valueSort.levelName.split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n      var fieldAvail = false;\n\n      if (this.dataSourceSettings.drilledMembers.length === 0) {\n        this.setProperties({\n          dataSourceSettings: {\n            drilledMembers: [{\n              name: fieldName,\n              items: [memberName],\n              delimiter: delimiter\n            }]\n          }\n        }, true);\n      } else {\n        var drillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n\n        for (var fCnt = 0; fCnt < drillMembers.length; fCnt++) {\n          var field = drillMembers[fCnt];\n          memberName = memberName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n          delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n\n          if (field.name === fieldName) {\n            fieldAvail = true;\n            var memIndex = field.items.indexOf(memberName);\n\n            if (memIndex > -1) {\n              field.items.splice(memIndex, 1);\n            } else {\n              field.items.push(memberName);\n            }\n          } else {\n            continue;\n          }\n        }\n\n        this.setProperties({\n          dataSourceSettings: {\n            drilledMembers: drillMembers\n          }\n        }, true);\n\n        if (!fieldAvail) {\n          this.dataSourceSettings.drilledMembers.push({\n            name: fieldName,\n            items: [memberName],\n            delimiter: delimiter\n          });\n        }\n      }\n\n      this.showWaitingPopup();\n      var pivot_1 = this; //setTimeout(() => {\n\n      var drilledItem_1 = {\n        fieldName: fieldName,\n        memberName: memberName,\n        delimiter: delimiter,\n        axis: axis,\n        action: action,\n        currentCell: currentCell\n      };\n      var drillArgs_1 = {\n        drillInfo: drilledItem_1,\n        pivotview: isBlazor() ? undefined : pivot_1,\n        cancel: false\n      };\n      pivot_1.trigger(events.drill, drillArgs_1, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this_1.dataSourceSettings)\n          };\n          pivot_1.trigger(events.enginePopulating, args);\n          pivot_1.setProperties({\n            dataSourceSettings: args.dataSourceSettings\n          }, true);\n\n          if (pivot_1.enableVirtualization) {\n            if (isBlazor()) {\n              /* eslint-disable */\n              var sfBlazor = 'sfBlazor';\n              var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n              var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem_1], drilledItem_1);\n              var args_1 = window[sfBlazor].copyWithoutCircularReferences([drillArgs_1], drillArgs_1);\n              pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', {\n                'dataSourceSettings': dataSourceSettings,\n                'drilledItem': drillItem\n              }).then(function (data) {\n                pivot_1.updateBlazorData(data, pivot_1);\n                pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                pivot_1.allowServerDataBinding = false;\n                pivot_1.setProperties({\n                  pivotValues: pivot_1.engineModule.pivotValues\n                }, true);\n                delete pivot_1.bulkChanges.pivotValues;\n                pivot_1.allowServerDataBinding = true;\n                pivot_1.renderPivotGrid();\n              });\n              /* eslint-enable */\n            } else if (_this_1.dataSourceSettings.mode === 'Server') {\n              _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n            } else {\n              pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n              pivot_1.engineModule.onDrill(drilledItem_1);\n            }\n          } else if (_this_1.dataSourceSettings.mode === 'Server') {\n            _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n          } else {\n            pivot_1.engineModule.generateGridData(pivot_1.dataSourceSettings);\n          }\n\n          if (!(isBlazor() && pivot_1.enableVirtualization)) {\n            pivot_1.allowServerDataBinding = false;\n            pivot_1.setProperties({\n              pivotValues: pivot_1.engineModule.pivotValues\n            }, true);\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n            delete pivot_1.bulkChanges.pivotValues;\n            pivot_1.allowServerDataBinding = true;\n            var eventArgs = {\n              dataSourceSettings: PivotUtil.getClonedDataSourceSettings(args.dataSourceSettings),\n              pivotValues: _this_1.pivotValues\n            };\n\n            _this_1.trigger(events.enginePopulated, eventArgs);\n\n            pivot_1.engineModule.pivotValues = eventArgs.pivotValues;\n            pivot_1.renderPivotGrid();\n          }\n        } else {\n          _this_1.hideWaitingPopup();\n\n          _this_1.setProperties({\n            dataSourceSettings: {\n              drilledMembers: clonedDrillMembers_1\n            }\n          }, true);\n        }\n      });\n    } else {\n      this.onOlapDrill(fieldName, axis, action, delimiter, target, chartDrillInfo);\n    }\n  };\n  /* eslint-disable */\n\n\n  PivotView.prototype.onOlapDrill = function (fieldName, axis, action, delimiter, target, chartDrillInfo) {\n    var _this_1 = this;\n\n    var pivot = this;\n    var clonedDrillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n    var currentCell = chartDrillInfo ? chartDrillInfo.cell : this.olapEngineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n    var tupInfo = axis === 'row' ? this.olapEngineModule.tupRowInfo[currentCell.ordinal] : this.olapEngineModule.tupColumnInfo[currentCell.ordinal];\n    var drillInfo = {\n      axis: axis,\n      action: action,\n      fieldName: fieldName,\n      delimiter: '~~',\n      memberName: tupInfo.uNameCollection,\n      currentCell: currentCell\n    };\n    this.showWaitingPopup();\n    var drillArgs = {\n      drillInfo: drillInfo,\n      pivotview: isBlazor() ? undefined : pivot,\n      cancel: false\n    };\n    var isAttributeHierarchy = this.olapEngineModule.fieldList[drillInfo.fieldName] && this.olapEngineModule.fieldList[drillInfo.fieldName].isHierarchy;\n    var fieldPos = tupInfo.drillInfo.map(function (item) {\n      return item.hierarchy;\n    }).indexOf(currentCell.hierarchy.toString());\n    var clonedMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n\n    if (drillInfo && drillInfo.action === 'down') {\n      var fields = tupInfo.drillInfo.map(function (item) {\n        return item.uName;\n      });\n      var member = '';\n\n      for (var pos = 0; pos <= fieldPos; pos++) {\n        var field = fields[pos];\n        var members = field.split('~~');\n        member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n      }\n\n      var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, this.olapEngineModule.fieldList[currentCell.hierarchy] && !this.olapEngineModule.fieldList[currentCell.hierarchy].hasAllMember ? currentCell.valueSort.levelName.split(this.dataSourceSettings.valueSortSettings.headerDelimiter).length - 1 : fieldPos, axis);\n      var keys = Object.keys(drillSets);\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        var drillSet = drillSets[key];\n\n        for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n          var drillMembers = clonedMembers[i];\n          var memberItem = drillSet;\n\n          if (drillMembers.delimiter) {\n            memberItem = memberItem.replace(/~~/g, drillMembers.delimiter);\n          }\n\n          var items = [];\n\n          for (var itemPos = 0; itemPos < drillMembers.items.length; itemPos++) {\n            if (drillMembers.items[itemPos].indexOf(memberItem) !== 0) {\n              items[items.length] = drillMembers.items[itemPos];\n            }\n          }\n\n          drillMembers.items = items;\n        }\n      }\n\n      this.olapEngineModule.drilledSets[currentCell.actualText] = tupInfo.members[fieldPos];\n      drillInfo.memberName = member;\n      var drillItem = [];\n\n      for (var _a = 0, clonedMembers_1 = clonedMembers; _a < clonedMembers_1.length; _a++) {\n        var field = clonedMembers_1[_a];\n\n        if (field.name === drillInfo.fieldName) {\n          drillItem.push(field);\n        }\n      }\n\n      if (drillItem.length > 0) {\n        if (drillItem[0].delimiter) {\n          member = member.replace(/~~/g, drillItem[0].delimiter);\n        }\n\n        var index = PivotUtil.inArray(member, drillItem[0].items);\n\n        if (index === -1) {\n          drillItem[0].items.push(member);\n        }\n\n        if (isAttributeHierarchy) {\n          var i = 0;\n\n          while (i < drillItem[0].items.length) {\n            if (drillItem[0].items[i] === member) {\n              drillItem[0].items.splice(i, 1);\n            } else {\n              ++i;\n            }\n          }\n        }\n      } else if (!isAttributeHierarchy) {\n        var drilledMember = {\n          name: drillInfo.fieldName,\n          items: [member],\n          delimiter: '~~'\n        };\n\n        if (!clonedMembers) {\n          clonedMembers = [drilledMember];\n        } else {\n          clonedMembers.push(drilledMember);\n        }\n      }\n\n      drillArgs.drillInfo.memberName = member;\n      this.setProperties({\n        dataSourceSettings: {\n          drilledMembers: clonedMembers\n        }\n      }, true);\n      pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this_1.dataSourceSettings)\n          };\n\n          _this_1.trigger(events.enginePopulating, args);\n\n          _this_1.setProperties({\n            dataSourceSettings: args.dataSourceSettings\n          }, true);\n\n          _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n\n          _this_1.allowServerDataBinding = false;\n\n          _this_1.setProperties({\n            pivotValues: _this_1.olapEngineModule.pivotValues\n          }, true);\n\n          delete _this_1.bulkChanges.pivotValues;\n          _this_1.allowServerDataBinding = true;\n          var eventArgs = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(args.dataSourceSettings),\n            pivotValues: pivot.olapEngineModule.pivotValues\n          };\n\n          _this_1.trigger(events.enginePopulated, eventArgs);\n\n          _this_1.olapEngineModule.pivotValues = eventArgs.pivotValues;\n\n          _this_1.renderPivotGrid();\n        } else {\n          _this_1.hideWaitingPopup();\n\n          _this_1.setProperties({\n            dataSourceSettings: {\n              drilledMembers: clonedDrillMembers\n            }\n          }, true);\n        }\n      });\n    } else {\n      delete this.olapEngineModule.drilledSets[currentCell.actualText];\n      var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, fieldPos, axis);\n      var keys = Object.keys(drillSets);\n      var fields = tupInfo.drillInfo.map(function (item) {\n        return item.uName;\n      });\n      var member = '';\n\n      for (var pos = 0; pos <= fieldPos; pos++) {\n        var field = fields[pos];\n        var members = field.split('~~');\n        member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n      }\n\n      for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n        var key = keys_2[_b];\n        var drillSet = drillSets[key];\n        var drillItemCollection = [];\n\n        for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n          var drillItem = clonedMembers[i];\n          var member_1 = drillSet;\n\n          if (drillItem.name === drillInfo.fieldName) {\n            drillItemCollection.push(drillItem);\n          }\n\n          if (drillItem.delimiter) {\n            member_1 = drillSet.replace(/~~/g, drillItem.delimiter);\n          }\n\n          if (!isAttributeHierarchy) {\n            var items = [];\n\n            for (var itemPos = 0; itemPos < drillItem.items.length; itemPos++) {\n              if (drillItem.items[itemPos].indexOf(member_1) !== 0) {\n                items[items.length] = drillItem.items[itemPos];\n              }\n            }\n\n            drillItem.items = items;\n          }\n        }\n\n        if (isAttributeHierarchy) {\n          if (drillItemCollection.length > 0) {\n            if (drillItemCollection[0].delimiter) {\n              member = member.replace(/~~/g, drillItemCollection[0].delimiter);\n            }\n\n            var index = PivotUtil.inArray(member, drillItemCollection[0].items);\n\n            if (index === -1) {\n              drillItemCollection[0].items.push(member);\n            }\n          } else {\n            var drilledMember = {\n              name: drillInfo.fieldName,\n              items: [member],\n              delimiter: '~~'\n            };\n\n            if (!clonedMembers) {\n              clonedMembers = [drilledMember];\n            } else {\n              clonedMembers.push(drilledMember);\n            }\n          }\n        }\n      }\n\n      var drilledMembers_1 = [];\n\n      for (var _c = 0, clonedMembers_2 = clonedMembers; _c < clonedMembers_2.length; _c++) {\n        var fields_1 = clonedMembers_2[_c];\n\n        if (fields_1.items.length > 0) {\n          drilledMembers_1.push(fields_1);\n        }\n      }\n\n      this.setProperties({\n        dataSourceSettings: {\n          drilledMembers: clonedMembers\n        }\n      }, true);\n      pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this_1.dataSourceSettings)\n          };\n\n          _this_1.trigger(events.enginePopulating, args);\n\n          _this_1.setProperties({\n            dataSourceSettings: args.dataSourceSettings\n          }, true);\n\n          _this_1.setProperties({\n            dataSourceSettings: {\n              drilledMembers: drilledMembers_1\n            }\n          }, true);\n\n          _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n\n          _this_1.allowServerDataBinding = false;\n\n          _this_1.setProperties({\n            pivotValues: _this_1.olapEngineModule.pivotValues\n          }, true);\n\n          delete _this_1.bulkChanges.pivotValues;\n          _this_1.allowServerDataBinding = true;\n          var eventArgs = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(args.dataSourceSettings),\n            pivotValues: pivot.olapEngineModule.pivotValues\n          };\n\n          _this_1.trigger(events.enginePopulated, eventArgs);\n\n          _this_1.olapEngineModule.pivotValues = eventArgs.pivotValues;\n\n          _this_1.renderPivotGrid();\n        } else {\n          _this_1.hideWaitingPopup();\n\n          _this_1.setProperties({\n            dataSourceSettings: {\n              drilledMembers: clonedDrillMembers\n            }\n          }, true);\n        }\n      });\n    }\n  };\n  /* eslint-enable */\n\n\n  PivotView.prototype.onContentReady = function () {\n    if (this.currentView !== 'Table') {\n      if (this.cellTemplate && isBlazor()) {\n        resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n      }\n    }\n\n    this.isPopupClicked = false;\n\n    if (this.showFieldList) {\n      hideSpinner(this.pivotFieldListModule.fieldListSpinnerElement);\n    } else if (this.fieldListSpinnerElement) {\n      hideSpinner(this.fieldListSpinnerElement);\n    }\n\n    if (!this.isEmptyGrid) {\n      if (this.dataSourceSettings.mode === 'Server' && this.isServerWaitingPopup || this.dataSourceSettings.mode === 'Local') {\n        this.hideWaitingPopup();\n      }\n\n      this.trigger(events.dataBound);\n    } else {\n      this.isEmptyGrid = false;\n      this.notEmpty = true;\n    }\n\n    if (this.grid) {\n      var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n\n      if (this.enableVirtualization && engine) {\n        if (this.element.querySelector('.' + cls.MOVABLECONTENT_DIV) && !this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n          this.virtualDiv = createElement('div', {\n            className: cls.VIRTUALTRACK_DIV\n          });\n          this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).appendChild(this.virtualDiv);\n        }\n\n        if (this.element.querySelector('.' + cls.MOVABLEHEADER_DIV) && !this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n          this.virtualHeaderDiv = createElement('div', {\n            className: cls.VIRTUALTRACK_DIV\n          });\n          this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).appendChild(this.virtualHeaderDiv);\n        } else {\n          this.virtualHeaderDiv = this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV);\n        }\n\n        var movableTable = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n        var vHeight = this.gridSettings.rowHeight * engine.rowCount + 0.1 - movableTable.clientHeight;\n\n        if (vHeight > this.scrollerBrowserLimit) {\n          this.verticalScrollScale = vHeight / this.scrollerBrowserLimit;\n          vHeight = this.scrollerBrowserLimit;\n        }\n\n        var vWidth = this.gridSettings.columnWidth * engine.columnCount;\n\n        if (vWidth > this.scrollerBrowserLimit) {\n          this.horizontalScrollScale = vWidth / this.scrollerBrowserLimit;\n          vWidth = this.scrollerBrowserLimit;\n        }\n\n        setStyleAttribute(this.virtualDiv, {\n          height: (vHeight > 0.1 ? vHeight : 0.1) + 'px',\n          width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n        });\n        setStyleAttribute(this.virtualHeaderDiv, {\n          height: 0,\n          width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n        });\n        var mCnt = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n        var fCnt = this.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n        var mHdr = this.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n\n        if (this.isAdaptive) {\n          mCnt.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).children[0].style.minHeight = \"1px\";\n          mCnt.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).style.minHeight = \"1px\";\n        }\n\n        var ele = this.isAdaptive ? mCnt : mCnt.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV);\n        var verOffset = mCnt.parentElement.scrollTop > this.scrollerBrowserLimit ? mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() : -(mCnt.parentElement.scrollTop * this.verticalScrollScale - this.scrollPosObject.verticalSection - mCnt.parentElement.scrollTop) + 'px)';\n        var horiOffset = ele.scrollLeft > this.scrollerBrowserLimit ? mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',' : 'translate(' + -(ele.scrollLeft * this.horizontalScrollScale - this.scrollPosObject.horizontalSection - ele.scrollLeft) + 'px,';\n        setStyleAttribute(fCnt.querySelector('.e-table'), {\n          transform: 'translate(' + 0 + 'px,' + verOffset\n        });\n        setStyleAttribute(mCnt.querySelector('.e-table'), {\n          transform: horiOffset + verOffset\n        });\n        setStyleAttribute(mHdr.querySelector('.e-table'), {\n          transform: horiOffset + 0 + 'px)'\n        });\n        /* eslint-disable */\n\n        if (!isNullOrUndefined(this.resizedValue)) {\n          this.element.querySelector('.e-frozenscrollbar').style.width = this.resizedValue + 'px';\n        }\n\n        this.grid.element.querySelector('.' + cls.MOVABLECHILD_DIV).style.width = vWidth + (mCnt.parentElement.offsetWidth - mCnt.parentElement.clientWidth) + 'px';\n        var colValues = this.dataType === 'pivot' ? this.dataSourceSettings.valueAxis === 'column' ? this.dataSourceSettings.values.length : 1 : 1;\n        var exactSize = this.pageSettings.columnSize * colValues * this.gridSettings.columnWidth;\n        var hScrollPos = ele.scrollWidth - (ele.scrollLeft + ele.offsetWidth);\n\n        if (this.virtualscrollModule && exactSize > 0 && hScrollPos <= exactSize && ele.scrollLeft > 0) {\n          this.virtualDiv.style.display = 'none';\n          var mCntScrollPos = mCnt.scrollWidth - (mCnt.scrollLeft + mCnt.offsetWidth);\n          this.virtualDiv.style.display = '';\n          var mCntVScrollPos = mCnt.scrollWidth - (mCnt.scrollLeft + mCnt.offsetWidth);\n          this.scrollPosObject.horizontalSection -= hScrollPos <= 0 ? mCntScrollPos > hScrollPos ? mCntScrollPos : -mCntVScrollPos : mCntVScrollPos === mCntScrollPos ? mCntScrollPos - hScrollPos : mCntScrollPos < mCntVScrollPos && (hScrollPos === mCntVScrollPos || hScrollPos > mCntScrollPos) ? -(mCntVScrollPos - mCntScrollPos) : 0;\n          horiOffset = ele.scrollLeft > this.scrollerBrowserLimit ? mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',' : 'translate(' + -(ele.scrollLeft * this.horizontalScrollScale - this.scrollPosObject.horizontalSection - ele.scrollLeft) + 'px,';\n          setStyleAttribute(mCnt.querySelector('.e-table'), {\n            transform: horiOffset + verOffset\n          });\n          setStyleAttribute(mHdr.querySelector('.e-table'), {\n            transform: horiOffset + 0 + 'px)'\n          });\n        }\n\n        if (this.grid.height !== 'auto') {\n          this.grid.contentModule.setHeightToContent(this.virtualDiv.offsetHeight + movableTable.clientHeight);\n        } else {\n          this.grid.contentModule.setHeightToContent(this.element.querySelector('.' + cls.FROZENCONTENT_DIV + ' .' + cls.TABLE).offsetHeight);\n        }\n        /* eslint-enable */\n\n      }\n\n      if (this.currentView !== 'Chart') {\n        this.grid.hideScroll();\n      }\n\n      if (this.showGroupingBar) {\n        this.element.style.minWidth = '400px';\n        this.grid.element.style.minWidth = '400px';\n      } else {\n        this.element.style.minWidth = '310px';\n        this.grid.element.style.minWidth = '310px';\n      }\n    }\n\n    this.unwireEvents();\n    this.wireEvents();\n    this.isChartLoaded = false;\n\n    if (this.cellTemplate && isBlazor()) {\n      var gridCells = Object.keys(this.gridCellCollection);\n\n      if (gridCells.length > 0) {\n        for (var _i = 0, gridCells_1 = gridCells; _i < gridCells_1.length; _i++) {\n          var cell = gridCells_1[_i];\n          var templateObject = {};\n          var tCell = this.gridCellCollection[cell];\n          var colIndex = Number(tCell.getAttribute('aria-colindex'));\n          var rowIndex = Number(tCell.getAttribute('index'));\n          var pivotCell = this.pivotValues[rowIndex][colIndex];\n          templateObject.axis = pivotCell.axis;\n\n          if (templateObject.axis === 'column' || templateObject.axis === 'row') {\n            templateObject.fieldName = pivotCell.valueSort.axis;\n            templateObject.formattedText = pivotCell.formattedText;\n          } else {\n            templateObject.fieldName = pivotCell.actualText;\n            templateObject.formattedText = pivotCell.formattedText;\n            templateObject.value = pivotCell.value;\n          }\n\n          templateObject.rowHeaders = pivotCell.rowHeaders;\n          templateObject.columnHeaders = pivotCell.columnHeaders;\n          templateObject.rowIndex = pivotCell.rowIndex;\n          templateObject.columnIndex = pivotCell.colIndex;\n          templateObject.isGrandTotal = pivotCell.isGrandSum;\n          templateObject.isTotal = pivotCell.isSum;\n          templateObject.rowSpan = pivotCell.rowSpan;\n          templateObject.columnSpan = pivotCell.colSpan;\n          templateObject.isDrilled = pivotCell.isDrilled;\n          templateObject.hasChild = pivotCell.hasChild;\n          templateObject.valueSortInfo = pivotCell.valueSort;\n          /* eslint-disable-next-line */\n\n          var element = this.getCellTemplate()(templateObject, this, 'cellTemplate', this.element.id + '_cellTemplate');\n\n          if (element && element !== '' && element.length > 0) {\n            if (this.enableHtmlSanitizer) {\n              this.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n            } else {\n              this.appendHtml(tCell, element[0].outerHTML);\n            }\n          }\n        }\n\n        updateBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate', this);\n      }\n    }\n  };\n\n  PivotView.prototype.setToolTip = function (args) {\n    var colIndex = Number(args.target.getAttribute('aria-colindex'));\n    var rowIndex = Number(args.target.getAttribute('index'));\n    var cell = this.dataSourceSettings.values.length > 0 && this.pivotValues && this.pivotValues[rowIndex] && this.pivotValues[rowIndex][colIndex] ? this.pivotValues[rowIndex][colIndex] : undefined;\n    this.tooltip.content = '';\n    var aggregateType;\n    var caption;\n    var hasField = false;\n\n    if (cell && this.dataType === 'olap') {\n      if (this.olapEngineModule.fieldList[cell.actualText]) {\n        var field = this.olapEngineModule.fieldList[cell.actualText];\n        aggregateType = field.isCalculatedField ? field.type : field.aggregateType;\n        caption = this.olapEngineModule.dataFields[cell.actualText] && this.olapEngineModule.dataFields[cell.actualText].caption ? this.olapEngineModule.dataFields[cell.actualText].caption : field.caption;\n        hasField = true;\n      }\n    } else {\n      if (cell && this.engineModule.fieldList[cell.actualText]) {\n        var field = this.engineModule.fieldList[cell.actualText];\n        aggregateType = field.aggregateType;\n        caption = field.caption;\n        hasField = true;\n      }\n    }\n\n    if (cell && hasField) {\n      var rowHeaders = this.getRowText(rowIndex, 0);\n      var columnHeaders = this.getColText(0, colIndex, rowIndex);\n      var value = cell.formattedText === '0' || cell.formattedText === '' ? this.localeObj.getConstant('noValue') : cell.formattedText;\n\n      if (this.tooltipTemplate && this.getTooltipTemplate() !== undefined) {\n        var rowFields = this.getHeaderField(rowIndex, colIndex, 'row');\n        var columnFields = this.getHeaderField(rowIndex, colIndex, 'column');\n        var templateObject = {\n          rowHeaders: rowHeaders,\n          columnHeaders: columnHeaders,\n          aggregateType: aggregateType,\n          valueField: caption,\n          value: value,\n          rowFields: rowFields,\n          columnFields: columnFields\n        };\n        this.tooltip.content = this.getTooltipTemplate()(templateObject, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n      } else {\n        this.tooltip.content = '<div class=' + cls.PIVOTTOOLTIP + '><p class=' + cls.TOOLTIP_HEADER + '>' + this.localeObj.getConstant('row') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + rowHeaders + '</p></br><p class=' + cls.TOOLTIP_HEADER + '>' + this.localeObj.getConstant('column') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + columnHeaders + '</p></br>' + (cell.actualText !== '' ? '<p class=' + cls.TOOLTIP_HEADER + '>' + (this.dataType === 'olap' ? '' : this.localeObj.getConstant(aggregateType) + ' ' + this.localeObj.getConstant('of') + ' ') + caption + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + value + '</p></div>' : '');\n      }\n    } else {\n      args.cancel = true;\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.getTooltipTemplate = function () {\n    return this.tooltipTemplateFn;\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.getHeaderField = function (rowIndex, colIndex, axis) {\n    var fields = '';\n    var len;\n    var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n    var delimiter = engineModule.valueSortSettings.headerDelimiter;\n\n    if (axis === 'row') {\n      len = this.pivotValues[rowIndex][0].valueSort.levelName.toString().split(delimiter).length;\n\n      for (var i = 0; i < len && engineModule.rows.length > 0 && engineModule.rows[i]; i++) {\n        fields += (i ? ' - ' : '') + (engineModule.rows[i].caption ? engineModule.rows[i].caption : engineModule.rows[i].name);\n      }\n    } else {\n      if (engineModule.columns.length > 0) {\n        var pos = engineModule.values.length === 0 ? 0 : Number(Object.keys(engineModule.headerContent)[Object.keys(engineModule.headerContent).length - 1]);\n        len = this.pivotValues[pos][colIndex].valueSort.levelName.toString().split(delimiter).length;\n        len = engineModule.values.length > 1 ? len - 1 : len;\n      }\n\n      for (var j = 0; j < len && engineModule.columns.length > 0 && engineModule.columns[j]; j++) {\n        fields += (j ? ' - ' : '') + (engineModule.columns[j].caption ? engineModule.columns[j].caption : engineModule.columns[j].name);\n      }\n      /* eslint-enable max-len */\n\n    }\n\n    return fields;\n  };\n\n  PivotView.prototype.getRowText = function (rowIndex, colIndex) {\n    var cell = this.pivotValues[rowIndex][colIndex];\n    var level = cell.level;\n    var rowText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n\n    while (level > 0 || cell.index === undefined) {\n      rowIndex--;\n      cell = this.pivotValues[rowIndex][colIndex];\n\n      if (cell.index !== undefined) {\n        if (level > cell.level) {\n          rowText = rowText + ' - ' + cell.formattedText;\n          level = level - 1;\n        }\n      }\n    }\n\n    return rowText.split(' - ').reverse().join(' - ');\n  };\n\n  PivotView.prototype.getColText = function (rowIndex, colIndex, limit) {\n    var cell = this.pivotValues[0][colIndex];\n    var axis = cell.axis;\n    var colText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n\n    while (axis !== 'value' && limit > rowIndex) {\n      rowIndex++;\n\n      if (this.pivotValues[rowIndex]) {\n        cell = this.pivotValues[rowIndex][colIndex];\n        axis = cell.axis;\n\n        if (cell.type !== 'sum' && cell.type !== 'grand sum' && axis !== 'value') {\n          colText = colText + ' - ' + cell.formattedText;\n        }\n      }\n    }\n\n    return colText;\n  };\n\n  PivotView.prototype.updateClass = function () {\n    if (this.enableRtl) {\n      addClass([this.element], cls.RTL);\n    } else {\n      removeClass([this.element], cls.RTL);\n    }\n\n    if (this.isAdaptive) {\n      addClass([this.element], cls.DEVICE);\n    } else {\n      removeClass([this.element], cls.DEVICE);\n    }\n  };\n\n  PivotView.prototype.mouseRclickHandler = function (e) {\n    if (e.which === 3) {\n      this.lastCellClicked = e.target;\n    } else if (e.which === 0) {\n      this.lastCellClicked = e.target;\n    }\n\n    this.lastCellClicked = e.target;\n  };\n\n  PivotView.prototype.mouseDownHandler = function (e) {\n    if (e.which === 3) {\n      this.lastCellClicked = e.target;\n    }\n\n    if (this.isCellBoxMultiSelection) {\n      this.isMouseDown = true;\n      this.isMouseUp = false;\n      var parent_1 = this.parentAt(e.target, 'TH');\n      this.clearSelection(parent_1, e, Number(parent_1.getAttribute('aria-colindex')), Number(parent_1.getAttribute('index')));\n      this.lastSelectedElement = undefined;\n    }\n  };\n\n  PivotView.prototype.mouseMoveHandler = function (e) {\n    if (this.isCellBoxMultiSelection) {\n      e.preventDefault();\n\n      if (this.isMouseDown && e.target) {\n        var ele = e.target;\n        var parentElement = this.parentAt(ele, 'TH');\n\n        if (this.lastSelectedElement && this.lastSelectedElement !== parentElement && parentElement.classList.contains(cls.SELECTED_BGCOLOR)) {\n          this.lastSelectedElement.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n          this.lastSelectedElement.classList.remove(cls.SELECTED_BGCOLOR);\n          this.lastSelectedElement = parentElement;\n        } else {\n          this.lastSelectedElement = parentElement;\n          parentElement.classList.add(cls.CELL_ACTIVE_BGCOLOR);\n          parentElement.classList.add(cls.SELECTED_BGCOLOR);\n        }\n\n        this.renderModule.selected();\n      }\n    }\n  };\n\n  PivotView.prototype.mouseUpHandler = function (e) {\n    if (this.isCellBoxMultiSelection) {\n      this.isMouseDown = false;\n      this.isMouseUp = true;\n    }\n  };\n\n  PivotView.prototype.parentAt = function (target, tagName) {\n    while (target.tagName !== tagName) {\n      if (target.parentElement) {\n        target = target.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return target;\n  };\n\n  PivotView.prototype.mouseClickHandler = function (e) {\n    if (e.which === 3) {\n      this.lastCellClicked = e.target;\n    } else if (e.which === 0) {\n      this.lastCellClicked = e.target;\n    }\n\n    var target = e.target;\n\n    if ((target.classList.contains('e-headercell') || target.classList.contains('e-headercelldiv') || target.classList.contains('e-rowsheader') || target.classList.contains('e-rowcell') || target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-headertext') || target.classList.contains('e-ascending') || target.classList.contains('e-descending')) && this.enableValueSorting && this.dataType === 'pivot') {\n      var ele = null;\n\n      if (target.classList.contains('e-headercell') || target.classList.contains('e-rowsheader') || target.classList.contains('e-rowcell')) {\n        ele = target;\n      } else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-headercelldiv') || target.classList.contains('e-ascending') || target.classList.contains('e-descending')) {\n        ele = target.parentElement;\n      } else if (target.classList.contains('e-headertext')) {\n        ele = target.parentElement.parentElement;\n      }\n\n      this.CellClicked(target, e);\n\n      if (ele.parentElement.parentElement.parentElement.parentElement.classList.contains('e-movableheader') && this.dataSourceSettings.valueAxis === 'column' || ele.parentElement.classList.contains('e-row') && this.dataSourceSettings.valueAxis === 'row' && (ele.classList.contains('e-rowsheader') || ele.classList.contains('e-stot'))) {\n        var colIndex = Number(ele.getAttribute('aria-colindex'));\n        var rowIndex = Number(ele.getAttribute('index'));\n\n        if (this.dataSourceSettings.valueAxis === 'row' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n          rowIndex = this.pivotValues[rowIndex][colIndex].type === 'value' ? rowIndex : rowIndex + 1;\n        } else if (this.dataSourceSettings.valueAxis === 'column' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n          colIndex = Number(ele.getAttribute('aria-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1;\n          rowIndex = this.engineModule.headerContent.length - 1;\n        }\n\n        this.setProperties({\n          dataSourceSettings: {\n            valueSortSettings: {\n              columnIndex: Number(ele.getAttribute('aria-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1,\n              sortOrder: this.dataSourceSettings.valueSortSettings.sortOrder === 'Descending' ? 'Ascending' : 'Descending',\n              headerText: this.pivotValues[rowIndex][colIndex].valueSort.levelName,\n              headerDelimiter: this.dataSourceSettings.valueSortSettings.headerDelimiter ? this.dataSourceSettings.valueSortSettings.headerDelimiter : '.'\n            }\n          }\n        }, true);\n        this.showWaitingPopup();\n        var pivot_2 = this;\n        /* eslint-disable-line */\n\n        pivot_2.engineModule.enableValueSorting = true;\n\n        if (pivot_2.enableVirtualization) {\n          if (pivot_2.dataSourceSettings.enableSorting) {\n            for (var _i = 0, _a = Object.keys(pivot_2.engineModule.fieldList); _i < _a.length; _i++) {\n              var key = _a[_i];\n              pivot_2.engineModule.fieldList[key].sort = 'Ascending';\n            }\n\n            pivot_2.setProperties({\n              dataSourceSettings: {\n                sortSettings: []\n              }\n            }, true);\n          }\n\n          if (isBlazor()) {\n            /* eslint-disable */\n            pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'applyValueSorting', {\n              'valueSortSettings': pivot_2.dataSourceSettings.valueSortSettings.properties\n            }).then(function (data) {\n              pivot_2.updateBlazorData(data, pivot_2);\n              pivot_2.allowServerDataBinding = false;\n              pivot_2.setProperties({\n                pivotValues: pivot_2.engineModule.pivotValues\n              }, true);\n              delete pivot_2.bulkChanges.pivotValues;\n              pivot_2.allowServerDataBinding = true;\n              pivot_2.renderPivotGrid();\n            });\n            /* eslint-enable */\n          } else if (pivot_2.dataSourceSettings.mode === 'Server') {\n            pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n          } else {\n            pivot_2.engineModule.rMembers = pivot_2.engineModule.headerCollection.rowHeaders;\n            pivot_2.engineModule.cMembers = pivot_2.engineModule.headerCollection.columnHeaders;\n            pivot_2.engineModule.applyValueSorting();\n            pivot_2.engineModule.updateEngine();\n          }\n        } else if (pivot_2.dataSourceSettings.mode === 'Server') {\n          pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n        } else {\n          pivot_2.engineModule.generateGridData(pivot_2.dataSourceSettings);\n        }\n\n        if (!(isBlazor() && pivot_2.enableVirtualization)) {\n          pivot_2.allowServerDataBinding = false;\n          pivot_2.setProperties({\n            pivotValues: pivot_2.engineModule.pivotValues\n          }, true);\n          /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n          delete pivot_2.bulkChanges.pivotValues;\n          pivot_2.allowServerDataBinding = true;\n          pivot_2.renderPivotGrid();\n        }\n      }\n    } else if (target.classList.contains(cls.COLLAPSE) || target.classList.contains(cls.EXPAND)) {\n      this.onDrill(target);\n    } else {\n      this.CellClicked(target, e);\n      return;\n    }\n  };\n\n  PivotView.prototype.updateTotColWidth = function () {\n    this.totColWidth = 0;\n\n    for (var _i = 0, _a = this.pivotColumns; _i < _a.length; _i++) {\n      var column = _a[_i];\n      this.totColWidth = this.totColWidth + column.width;\n    }\n  };\n\n  PivotView.prototype.framePivotColumns = function (gridcolumns) {\n    for (var _i = 0, gridcolumns_1 = gridcolumns; _i < gridcolumns_1.length; _i++) {\n      var column = gridcolumns_1[_i];\n\n      if (column.columns && column.columns.length > 0) {\n        this.framePivotColumns(column.columns);\n      } else {\n        /* eslint-disable */\n        var levelName = column.field === '0.formattedText' ? '' : column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '';\n        var width = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field : levelName, Number(column.width === 'auto' ? column.minWidth : column.width));\n        this.pivotColumns.push({\n          allowReordering: column.allowReordering,\n          allowResizing: column.allowResizing,\n          headerText: levelName,\n          width: width,\n          autoFit: column.autoFit\n        });\n        this.totColWidth = this.totColWidth + Number(width);\n        /* eslint-enable */\n      }\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.setGridColumns = function (gridcolumns) {\n    if (!isNullOrUndefined(this.totColWidth) && this.totColWidth > 0) {\n      for (var _i = 0, gridcolumns_2 = gridcolumns; _i < gridcolumns_2.length; _i++) {\n        var column = gridcolumns_2[_i];\n\n        if (column.columns && column.columns.length > 0) {\n          this.setGridColumns(column.columns);\n        } else {\n          /* eslint-disable */\n          var levelName = column.field === '0.formattedText' ? '' : column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '';\n          column.allowReordering = this.pivotColumns[this.posCount].allowReordering;\n          column.allowResizing = this.pivotColumns[this.posCount].allowResizing;\n          column.autoFit = this.pivotColumns[this.posCount].autoFit;\n          var calcWidth = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field : levelName, Number(this.pivotColumns[this.posCount].width));\n\n          if (column.width !== 'auto') {\n            column.width = calcWidth;\n          } else {\n            column.minWidth = calcWidth;\n          }\n\n          this.posCount++;\n\n          if (column.allowReordering) {\n            this.gridSettings.allowReordering = true;\n          }\n\n          if (column.allowResizing) {\n            this.gridSettings.allowResizing = true;\n          }\n        }\n      }\n\n      if (this.gridSettings.allowReordering) {\n        Grid.Inject(Reorder);\n      }\n\n      if (this.gridSettings.allowResizing) {\n        Grid.Inject(Resize);\n      }\n      /* eslint-enable */\n\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.fillGridColumns = function (gridcolumns) {\n    for (var _i = 0, gridcolumns_3 = gridcolumns; _i < gridcolumns_3.length; _i++) {\n      var column = gridcolumns_3[_i];\n      column.allowReordering = this.gridSettings.allowReordering;\n      column.allowResizing = this.gridSettings.allowResizing;\n      this.posCount++;\n\n      if (column.columns && column.columns.length > 0) {\n        this.fillGridColumns(column.columns);\n      }\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.triggerColumnRenderEvent = function (gridcolumns) {\n    this.pivotColumns = [];\n    this.totColWidth = 0;\n    this.framePivotColumns(gridcolumns);\n    var firstColWidth = this.pivotColumns[0].width;\n    var eventArgs = {\n      columns: this.pivotColumns,\n      dataSourceSettings: this.dataSourceSettings\n    };\n    this.trigger(events.beforeColumnsRender, eventArgs);\n\n    if (this.enableVirtualization && eventArgs.columns.length > 0 && eventArgs.columns[0].width !== gridcolumns[0].width) {\n      this.element.querySelector('.e-frozenscrollbar').style.width = Number(eventArgs.columns[0].width.toString().split('px')[0]) + 'px';\n    }\n\n    this.updateTotColWidth();\n\n    if (firstColWidth !== this.pivotColumns[0].width) {\n      this.firstColWidth = this.pivotColumns[0].width;\n      this.renderModule.resColWidth = parseInt(this.firstColWidth.toString());\n      /* eslint-disable-line */\n    }\n\n    this.posCount = 0;\n    this.setGridColumns(gridcolumns);\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.setCommonColumnsWidth = function (columns, width) {\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n\n      if (column.field !== '0.formattedText') {\n        if (column.columns) {\n          this.setCommonColumnsWidth(column.columns, width);\n        } else {\n          if (column.width !== 'auto') {\n            column.width = width;\n          } else {\n            column.minWidth = width;\n          }\n        }\n      } else {\n        column.width = !this.firstColWidth ? column.width : this.firstColWidth;\n      }\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.getHeightAsNumber = function () {\n    var height;\n\n    if (isNaN(this.height)) {\n      if (this.height.toString().indexOf('%') > -1) {\n        height = parseFloat(this.height.toString()) / 100 * this.element.offsetHeight;\n      } else if (this.height.toString().indexOf('px') > -1) {\n        height = Number(this.height.toString().split('px')[0]);\n      }\n    } else {\n      height = Number(this.height);\n    }\n\n    if (height < this.minHeight) {\n      height = this.minHeight;\n    }\n\n    return height;\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.getWidthAsNumber = function () {\n    var width;\n\n    if (isNaN(this.width)) {\n      if (this.width.toString().indexOf('%') > -1) {\n        width = parseFloat(this.width.toString()) / 100 * this.element.offsetWidth;\n      } else if (this.width.toString().indexOf('px') > -1) {\n        width = Number(this.width.toString().split('px')[0]);\n      }\n\n      if (isNaN(width)) {\n        width = this.element.offsetWidth;\n      }\n    } else {\n      width = Number(this.width);\n    }\n\n    if (width < 400) {\n      width = 400;\n    }\n\n    return width;\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.getGridWidthAsNumber = function () {\n    var width;\n    var offsetWidth = this.element.offsetWidth ? this.element.offsetWidth : this.element.getBoundingClientRect().width;\n\n    if (isNaN(this.grid.width)) {\n      if (this.grid.width.toString().indexOf('%') > -1) {\n        width = parseFloat(this.grid.width.toString()) / 100 * offsetWidth;\n      } else if (this.grid.width.toString().indexOf('px') > -1) {\n        width = Number(this.grid.width.toString().split('px')[0]);\n      }\n\n      if (isNaN(width)) {\n        width = offsetWidth;\n      }\n    } else {\n      width = Number(this.grid.width);\n    }\n\n    return width;\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.onWindowResize = function () {\n    clearTimeout(this.timeOutObj);\n    this.timeOutObj = setTimeout(this.layoutRefresh.bind(this), 500);\n  };\n  /**\n   * Refreshes the Pivot Table for blazor layoutRefresh is called for other base refresh is called.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.refresh = function () {\n    if (isBlazor()) {\n      this.layoutRefresh();\n    } else {\n      this.pivotRefresh();\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.layoutRefresh = function () {\n    if (this.element && this.element.classList.contains('e-pivotview') && (this.dataType === 'olap' ? this.olapEngineModule && this.olapEngineModule.pivotValues : this.engineModule && this.engineModule.pivotValues)) {\n      if (this.grid) {\n        var colLength = this.dataType === 'olap' && this.olapEngineModule.pivotValues.length > 0 ? this.olapEngineModule.pivotValues[0].length : this.dataSourceSettings.values.length > 0 && this.engineModule.pivotValues.length > 0 ? this.engineModule.pivotValues[0].length : 2;\n        var colWidth = this.renderModule.resizeColWidth(colLength);\n        this.grid.width = this.renderModule.calculateGridWidth();\n        this.renderModule.calculateGridHeight(true);\n\n        if (this.gridSettings.allowAutoResizing) {\n          this.setCommonColumnsWidth(this.grid.columns, colWidth);\n        }\n\n        this.pivotColumns = [];\n        this.totColWidth = 0;\n        this.framePivotColumns(this.grid.columns);\n        this.posCount = 0;\n\n        if (!this.showGroupingBar) {\n          this.setGridColumns(this.grid.columns);\n        }\n\n        if (this.currentView === 'Table') {\n          if (this.cellTemplate && isBlazor()) {\n            resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n          }\n        }\n\n        this.grid.refreshColumns();\n\n        if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n          this.groupingBarModule.setGridRowWidth();\n        }\n      }\n\n      if (this.showToolbar && this.toolbarModule && this.toolbarModule.toolbar) {\n        this.toolbarModule.toolbar.width = this.grid ? this.getGridWidthAsNumber() - 2 : this.getWidthAsNumber() - 2;\n      }\n\n      if (this.chart && (this.showToolbar && this.currentView === 'Chart' || !this.showToolbar)) {\n        this.chart.width = this.showToolbar && this.grid ? this.getGridWidthAsNumber().toString() : this.displayOption.view === 'Both' && this.grid ? this.getGridWidthAsNumber().toString() : this.getWidthAsNumber().toString();\n\n        if (this.displayOption.view === 'Chart' && this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS)) {\n          this.groupingBarModule.refreshUI();\n        }\n      }\n    }\n  };\n\n  PivotView.prototype.CellClicked = function (target, e) {\n    var _this_1 = this;\n\n    var ele = null;\n\n    if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n      ele = target;\n    } else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') || target.classList.contains('e-headercelldiv')) {\n      ele = target.parentElement;\n    } else if (target.classList.contains('e-headertext')) {\n      ele = target.parentElement.parentElement;\n    } else if (target.classList.contains(cls.ROW_SELECT)) {\n      if (target.classList.contains(cls.SPAN_CLICKED)) {\n        this.isPopupClicked = false;\n      } else {\n        this.isPopupClicked = true;\n      }\n    }\n    /* eslint-disable */\n\n\n    if (ele && !isNullOrUndefined(this.pivotValues) && this.pivotValues.length > 0) {\n      var colIndex_1 = Number(ele.getAttribute('aria-colindex'));\n      var rowIndex_1 = Number(ele.getAttribute('index'));\n      var colSpan_1 = Number(ele.getAttribute('aria-colspan')); // let selectArgs: PivotCellSelectedEventArgs = { isCellClick: true, currentCell: target };\n\n      var selectArgs = {\n        cancel: false,\n        isCellClick: true,\n        currentCell: ele,\n        data: this.pivotValues[rowIndex_1][colIndex_1]\n      };\n      this.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n        if (_this_1.gridSettings.allowSelection) {\n          if (_this_1.gridSettings.selectionSettings.mode === 'Both' ? !ele.classList.contains(cls.ROW_CELL_CLASS) : _this_1.gridSettings.selectionSettings.mode !== 'Row') {\n            _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n\n            if (!observedArgs.cancel) {\n              _this_1.applyColumnSelection(e, ele, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? colSpan_1 - 1 : 0), rowIndex_1);\n            }\n          } else {\n            _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n          }\n\n          if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !ele.classList.contains(cls.COLUMNSHEADER)) {\n            _this_1.rowDeselect(ele, e, rowIndex_1, _this_1.gridSettings.selectionSettings.mode, observedArgs);\n          }\n\n          if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !observedArgs.cancel) {\n            if (_this_1.gridSettings.selectionSettings.type === \"Multiple\" ? !e.ctrlKey && !e.shiftKey : true && _this_1.selectedRowIndex !== rowIndex_1) {\n              _this_1.selectedRowIndex = rowIndex_1;\n\n              _this_1.grid.selectionModule.selectRow(rowIndex_1 - _this_1.renderModule.rowStartPos);\n            } else {\n              _this_1.selectedRowIndex = undefined;\n            }\n          }\n        }\n\n        if (_this_1.cellClick && observedArgs.isCellClick) {\n          _this_1.trigger(events.cellClick, {\n            currentCell: ele,\n            data: _this_1.pivotValues[rowIndex_1][colIndex_1],\n            nativeEvent: e\n          });\n        }\n\n        _this_1.getSelectedCellsPos();\n      });\n    }\n  };\n\n  PivotView.prototype.rowDeselect = function (ele, e, rowIndex, mode, observedArgs) {\n    if (!e.shiftKey && !e.ctrlKey && this.gridSettings.selectionSettings.mode !== 'Both' || this.gridSettings.selectionSettings.type === 'Single') {\n      if (!ele.classList.contains(cls.CELL_SELECTED_BGCOLOR) && !ele.classList.contains(cls.SELECTED_BGCOLOR) && !ele.classList.contains(cls.CELL_ACTIVE_BGCOLOR)) {\n        if (!observedArgs.cancel) {\n          removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n          removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n          removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n        } else {\n          this.setSavedSelectedCells();\n        }\n      } else {\n        removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n        removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n        removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n\n        if (!observedArgs.cancel) {\n          if (mode === 'Cell') {\n            addClass([ele], [cls.CELL_SELECTED_BGCOLOR]);\n          } else if (mode === 'Row' || this.gridSettings.selectionSettings.type === 'Single') {\n            var query = '[index=\"' + rowIndex + '\"]';\n            addClass(this.element.querySelectorAll(query), [cls.SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n\n            if (mode !== 'Row') {\n              ele.classList.add(cls.CELL_SELECTED_BGCOLOR);\n            }\n          }\n        } else {\n          this.setSavedSelectedCells();\n        }\n      }\n    } else if ((e.shiftKey || e.ctrlKey || this.gridSettings.selectionSettings.mode == 'Both') && observedArgs.cancel) {\n      removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n      removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n      removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n      this.setSavedSelectedCells();\n    }\n  };\n  /** @hidden */\n\n\n  PivotView.prototype.clearSelection = function (ele, e, colIndex, rowIndex) {\n    if (!e.shiftKey && !e.ctrlKey || this.gridSettings.selectionSettings.type === 'Single') {\n      if (this.gridSettings.selectionSettings.mode === 'Cell') {\n        if (ele.classList.contains(cls.COLUMNSHEADER)) {\n          removeClass(this.element.querySelectorAll('.' + cls.ROW_CELL_CLASS + '.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n        } else {\n          removeClass(this.element.querySelectorAll('.' + cls.COLUMNSHEADER + '.' + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n        }\n      } else if (this.gridSettings.selectionSettings.mode === 'Both') {\n        if (ele.classList.contains(cls.ROW_CELL_CLASS)) {\n          for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR + ', .' + cls.CELL_SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n            var ele_1 = _a[_i]; // if (Number((ele as HTMLElement).getAttribute('index')) !== rowIndex) {\n\n            removeClass([ele_1], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR]); // }\n          }\n        } else {\n          removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n        }\n      }\n    }\n  };\n  /** @hidden */\n\n\n  PivotView.prototype.applyRowSelection = function (colIndex, rowIndex, e) {\n    var pivotValue = this.engineModule.pivotValues[rowIndex][colIndex];\n\n    if (!e.ctrlKey && !e.shiftKey && pivotValue && this.selectedRowIndex !== rowIndex) {\n      this.selectedRowIndex = rowIndex;\n      var parentLevel = pivotValue.level;\n      var rCount = rowIndex;\n\n      do {\n        rCount++;\n        pivotValue = this.engineModule.pivotValues[rCount][colIndex];\n      } while (pivotValue && parentLevel < pivotValue.level);\n\n      var _this = this;\n\n      if (this.isAdaptive) {\n        this.rowRangeSelection = {\n          enable: true,\n          startIndex: rowIndex - _this.renderModule.rowStartPos,\n          endIndex: rCount - (1 + _this.renderModule.rowStartPos)\n        };\n      } else {\n        _this.grid.selectionModule.selectRowsByRange(rowIndex - _this.renderModule.rowStartPos, rCount - (1 + _this.renderModule.rowStartPos));\n      }\n    } else {\n      this.selectedRowIndex = undefined;\n    }\n  };\n  /** @hidden */\n\n\n  PivotView.prototype.applyColumnSelection = function (e, target, colStart, colEnd, rowStart) {\n    if (!target.classList.contains(cls.ROWSHEADER) && (this.gridSettings.selectionSettings.mode === 'Cell' ? target.classList.contains(cls.COLUMNSHEADER) : true)) {\n      var isCtrl = e.ctrlKey;\n\n      if (this.isAdaptive && this.gridSettings.selectionSettings.type === 'Multiple') {\n        this.grid.selectionModule.showPopup(e);\n\n        if (this.isPopupClicked) {\n          this.element.querySelector('.' + cls.ROW_SELECT).classList.add(cls.SPAN_CLICKED);\n          isCtrl = true;\n        } else {\n          this.element.querySelector('.' + cls.ROW_SELECT).classList.remove(cls.SPAN_CLICKED);\n          isCtrl = false;\n        }\n      }\n\n      var queryStringArray = [];\n      var type = this.gridSettings.selectionSettings.type;\n      var isToggle = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n      var activeColumns = [];\n      var actColPos = {};\n\n      for (var cCnt = colStart; cCnt <= colEnd; cCnt++) {\n        activeColumns.push(cCnt.toString());\n      }\n\n      if (!isCtrl || type === 'Single') {\n        for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR)); _i < _a.length; _i++) {\n          var ele = _a[_i];\n          removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n\n          if (activeColumns.indexOf(ele.getAttribute('aria-colindex')) === -1) {\n            isToggle = false;\n          }\n\n          var colIndex = Number(ele.getAttribute('aria-colindex'));\n          actColPos[colIndex] = colIndex;\n        }\n\n        activeColumns = Object.keys(actColPos).length > 0 ? Object.keys(actColPos).sort(function (a, b) {\n          return a - b;\n        }) : activeColumns;\n      } else {\n        isToggle = false;\n      }\n\n      if (type === 'Multiple' && e.shiftKey) {\n        this.shiftLockedPos = this.shiftLockedPos.length === 0 ? activeColumns : this.shiftLockedPos;\n\n        if (Number(this.shiftLockedPos[0]) <= colStart) {\n          colStart = Number(this.shiftLockedPos[0]);\n        } else {\n          colEnd = colEnd < Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) ? Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) : colEnd;\n        }\n      } else {\n        this.shiftLockedPos = [];\n      }\n\n      var rowSelectedList = [];\n\n      if (e.ctrlKey && this.gridSettings.selectionSettings.mode === 'Both' && type === 'Multiple' && !target.classList.contains(cls.ROWSHEADER)) {\n        for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.ROWSHEADER + '.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n          var ele = _c[_b];\n          rowSelectedList.push(ele.getAttribute('index'));\n        }\n      }\n\n      var count = colStart;\n\n      while (count <= colEnd) {\n        queryStringArray.push('[aria-colindex=\"' + count + '\"]' + (this.gridSettings.selectionSettings.mode === 'Cell' ? '[index=\"' + rowStart + '\"]' : \"\") + '');\n        count++;\n      }\n\n      if (!isToggle) {\n        rowStart = target.classList.contains('e-headercell') ? rowStart : this.renderModule.rowStartPos - 1;\n        var isTargetSelected = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n\n        for (var _d = 0, _e = [].slice.call(this.element.querySelectorAll(queryStringArray.toString())); _d < _e.length; _d++) {\n          var ele = _e[_d];\n\n          if (Number(ele.getAttribute('index')) >= rowStart) {\n            if (isTargetSelected && isCtrl && rowSelectedList.indexOf(ele.getAttribute('index')) === -1) {\n              removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n            } else {\n              addClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n            }\n          }\n        }\n      }\n\n      this.renderModule.selected();\n    }\n  };\n\n  PivotView.prototype.getSelectedCellsPos = function () {\n    var control = this;\n    control.savedSelectedCellsPos = [];\n    control.cellSelectionPos = [];\n\n    for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n      var ele = _a[_i];\n      control.savedSelectedCellsPos.push({\n        rowIndex: ele.getAttribute('index'),\n        colIndex: ele.getAttribute('aria-colindex')\n      });\n    }\n\n    for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n      var ele = _c[_b];\n      control.cellSelectionPos.push({\n        rowIndex: ele.getAttribute('index'),\n        colIndex: ele.getAttribute('aria-colindex')\n      });\n    }\n  };\n\n  PivotView.prototype.setSavedSelectedCells = function () {\n    var control = this;\n\n    for (var _i = 0, _a = [].slice.call(this.savedSelectedCellsPos); _i < _a.length; _i++) {\n      var item = _a[_i];\n      var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n      addClass([control.element.querySelector(query)], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n    }\n\n    for (var _b = 0, _c = [].slice.call(this.cellSelectionPos); _b < _c.length; _b++) {\n      var item = _c[_b];\n      var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n      addClass([control.element.querySelector(query)], [cls.CELL_SELECTED_BGCOLOR]);\n    }\n  };\n  /* eslint-enable */\n\n\n  PivotView.prototype.renderEmptyGrid = function () {\n    var _this_1 = this;\n\n    this.isEmptyGrid = true;\n    this.notEmpty = false;\n    this.isInitial = true;\n    this.renderModule = new Render(this);\n\n    if (this.grid && this.grid.element && this.element.querySelector('.e-grid')) {\n      this.notEmpty = true;\n      this.grid.setProperties({\n        columns: this.renderModule.frameEmptyColumns(),\n        dataSource: this.renderModule.frameEmptyData()\n      }, true);\n      this.grid.notify('datasource-modified', {});\n      this.grid.refreshColumns();\n    } else {\n      if (this.element.querySelector('.' + cls.GRID_CLASS)) {\n        remove(this.element.querySelector('.' + cls.GRID_CLASS));\n      }\n\n      this.renderModule.bindGrid(this, true);\n\n      this.grid.showSpinner = function () {};\n      /* eslint-disable-line */\n\n\n      this.grid.hideSpinner = function () {};\n      /* eslint-disable-line */\n\n\n      var element = createElement('div', {\n        id: this.element.id + '_grid'\n      });\n      this.element.appendChild(element);\n      this.grid.isStringTemplate = true;\n      this.grid.appendTo(element);\n      this.grid.on('refresh-frozen-height', function () {\n        if (!_this_1.enableVirtualization) {\n          _this_1.grid.contentModule.setHeightToContent(_this_1.grid.contentModule.getTable().offsetHeight);\n          /* eslint-disable-line */\n\n        }\n      });\n      this.grid.off('data-ready', this.grid.dataReady);\n      /* eslint-disable-line */\n\n      this.grid.on('data-ready', function () {\n        _this_1.grid.scrollModule.setWidth();\n\n        _this_1.grid.scrollModule.setHeight();\n      });\n    }\n  };\n  /* eslint-disable */\n\n\n  PivotView.prototype.initEngine = function () {\n    var _this_1 = this;\n\n    if (this.dataType === 'pivot') {\n      var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] : !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n\n      if (data && this.pivotCommon) {\n        var isArray = Object.prototype.toString.call(data) == '[object Array]';\n\n        if (isArray && this.dataSourceSettings.type === 'JSON') {\n          this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n          return;\n        } else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n          this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n          return;\n        }\n      }\n    }\n\n    var args = {\n      dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n    };\n    this.trigger(events.enginePopulating, args, function (observedArgs) {\n      PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n\n      _this_1.updatePageSettings(false);\n\n      var customProperties = {\n        mode: '',\n        savedFieldList: undefined,\n        pageSettings: _this_1.pageSettings,\n        enableValueSorting: _this_1.enableValueSorting,\n        isDrillThrough: _this_1.allowDrillThrough || _this_1.editSettings.allowEditing,\n        localeObj: _this_1.localeObj,\n        fieldsType: _this_1.fieldsType,\n        clonedReport: _this_1.clonedReport\n      };\n\n      if (_this_1.dataType === 'pivot') {\n        if (_this_1.dataSourceSettings.groupSettings && _this_1.dataSourceSettings.groupSettings.length > 0) {\n          var dataSet = _this_1.engineModule.data;\n          _this_1.clonedDataSet = _this_1.clonedDataSet ? _this_1.clonedDataSet : PivotUtil.getClonedData(dataSet);\n\n          if (isBlazor()) {\n            _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n          } else {\n            var dataSourceSettings = JSON.parse(_this_1.getPersistData()).dataSourceSettings;\n            dataSourceSettings.dataSource = [];\n            _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : dataSourceSettings;\n          }\n        }\n\n        if (isBlazor() && _this_1.enableVirtualization) {\n          var pivot_3 = _this_1;\n          var sfBlazor = 'sfBlazor';\n          var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n          var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_3.dataSourceSettings], pivot_3.dataSourceSettings);\n          pivot_3.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', {\n            'dataSourceSettings': datasourceSettings,\n            'customProperties': customArgs\n          }).then(function (data) {\n            if (data === 0) {\n              _this_1.pivotCommon.errorDialog.createErrorDialog(_this_1.localeObj.getConstant('error'), pivot_3.dataSourceSettings.type === 'CSV' ? _this_1.localeObj.getConstant('invalidCSV') : _this_1.localeObj.getConstant('invalidJSON'));\n\n              return;\n            } else {\n              pivot_3.updateBlazorData(data, pivot_3);\n              PivotUtil.setPivotProperties(pivot_3, {\n                pivotValues: pivot_3.engineModule.pivotValues\n              });\n              pivot_3.enginePopulatedEventMethod('initEngine', pivot_3);\n            }\n          });\n        } else {\n          if (_this_1.dataSourceSettings.mode !== 'Server') {\n            _this_1.engineModule.renderEngine(_this_1.dataSourceSettings, customProperties, _this_1.getValueCellInfo.bind(_this_1));\n          }\n\n          _this_1.allowServerDataBinding = false;\n\n          _this_1.setProperties({\n            pivotValues: _this_1.engineModule.pivotValues\n          }, true);\n\n          delete _this_1.bulkChanges.pivotValues;\n          _this_1.allowServerDataBinding = true;\n\n          _this_1.enginePopulatedEventMethod('initEngine');\n        }\n      } else if (_this_1.dataSourceSettings.providerType === 'SSAS' && _this_1.dataType === 'olap') {\n        customProperties.savedFieldList = _this_1.olapEngineModule.fieldList;\n        customProperties.savedFieldListData = _this_1.olapEngineModule.fieldListData;\n\n        _this_1.olapEngineModule.renderEngine(_this_1.dataSourceSettings, customProperties);\n\n        _this_1.allowServerDataBinding = false;\n\n        _this_1.setProperties({\n          pivotValues: _this_1.olapEngineModule.pivotValues\n        }, true);\n\n        delete _this_1.bulkChanges.pivotValues;\n        _this_1.allowServerDataBinding = true;\n\n        _this_1.enginePopulatedEventMethod('initEngine');\n      }\n    });\n  };\n\n  PivotView.prototype.enginePopulatedEventMethod = function (action, control) {\n    var _this_1 = this;\n\n    if (action === 'initEngine') {\n      var this$_1 = control ? control : this;\n      this.trigger(events.enginePopulated, {\n        pivotValues: this.pivotValues\n      }, function (observedArgs) {\n        if (this$_1.dataType === 'olap') {\n          this$_1.olapEngineModule.pivotValues = isBlazor() ? _this_1.olapEngineModule.pivotValues : observedArgs.pivotValues;\n          this$_1.pivotValues = this$_1.olapEngineModule.pivotValues;\n        } else {\n          this$_1.engineModule.pivotValues = isBlazor() ? _this_1.engineModule.pivotValues : observedArgs.pivotValues;\n          this$_1.pivotValues = this$_1.engineModule.pivotValues;\n        }\n\n        this$_1.notify(events.dataReady, {});\n        this$_1.notEmpty = true;\n      });\n    } else {\n      var pivot_4 = control ? control : this;\n      var eventArgs = {\n        dataSourceSettings: pivot_4.dataSourceSettings,\n        pivotValues: isBlazor() ? pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule.pivotValues : pivot_4.engineModule.pivotValues : pivot_4.pivotValues\n      };\n      pivot_4.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n        var dataSource = pivot_4.dataSourceSettings.dataSource;\n\n        if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n          observedArgs.dataSourceSettings.dataSource = dataSource;\n        }\n\n        pivot_4.dataSourceSettings = observedArgs.dataSourceSettings;\n\n        if (pivot_4.dataType === 'olap') {\n          pivot_4.olapEngineModule.pivotValues = isBlazor() ? pivot_4.olapEngineModule.pivotValues : observedArgs.pivotValues;\n          pivot_4.allowServerDataBinding = false;\n          pivot_4.setProperties({\n            pivotValues: pivot_4.olapEngineModule.pivotValues\n          }, true);\n          delete pivot_4.bulkChanges.pivotValues;\n          pivot_4.allowServerDataBinding = true;\n        } else {\n          pivot_4.engineModule.pivotValues = isBlazor() ? pivot_4.engineModule.pivotValues : observedArgs.pivotValues;\n          pivot_4.allowServerDataBinding = false;\n          pivot_4.setProperties({\n            pivotValues: pivot_4.engineModule.pivotValues\n          }, true);\n          delete pivot_4.bulkChanges.pivotValues;\n          pivot_4.allowServerDataBinding = true;\n        }\n\n        pivot_4.pivotCommon.engineModule = pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule : pivot_4.engineModule;\n        pivot_4.pivotCommon.dataSourceSettings = pivot_4.dataSourceSettings;\n        pivot_4.renderPivotGrid();\n      });\n    }\n  };\n  /** @hidden */\n\n\n  PivotView.prototype.updateBlazorData = function (data, control) {\n    control.allowServerDataBinding = false;\n    var pivVal;\n    var pivotFL;\n    var pivotFields;\n    var valueSort;\n    var blazPivot = control;\n    var valContent = [];\n    var headContent = [];\n    pivotFL = JSON.parse(data[\"fieldList\"]);\n    pivVal = JSON.parse(data[\"pivotValue\"]);\n    pivotFields = JSON.parse(data[\"fields\"]);\n    valueSort = JSON.parse(data[\"valueSortSettings\"]);\n    var len = pivVal.length;\n    var pvalues = JSON.parse(pivVal[0]);\n    var pvalLen = pvalues.length;\n    var blazPivotValues = new Array(len);\n\n    for (i = 0; i < len; i++) {\n      blazPivotValues[i] = new Array(pvalLen);\n    }\n\n    for (var i = 0; i < len; i++) {\n      if (pivVal[i] != null) {\n        var values = JSON.parse(pivVal[i]);\n        var valLen = values.length;\n\n        for (var j = 0; j < valLen; j++) {\n          blazPivotValues[i][j] = values[j];\n        }\n      } else {\n        blazPivotValues[i] = undefined; //headContent[i] = undefined;\n      }\n    }\n\n    var pivotValues = blazPivotValues;\n    var rowPos;\n\n    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n      if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n        rowPos = rCnt;\n        break;\n      }\n    }\n\n    blazPivot.pivotValues = blazPivotValues;\n    valContent = PivotUtil.frameContent(blazPivotValues, 'value', rowPos, blazPivot);\n    headContent = PivotUtil.frameContent(blazPivotValues, 'header', rowPos, blazPivot);\n    this.engineModule.pivotValues = blazPivotValues;\n    this.engineModule.fieldList = pivotFL;\n    this.engineModule.fields = pivotFields;\n    this.engineModule.valueSortSettings = valueSort;\n    this.engineModule.valueContent = valContent;\n    this.engineModule.headerContent = headContent;\n    this.engineModule.isEngineUpdated = JSON.parse(data[\"isEngineUpdated\"]);\n    this.engineModule.isEmptyData = JSON.parse(data[\"isEmptyData\"]);\n    this.engineModule.rowCount = JSON.parse(data[\"rowCount\"]);\n    this.engineModule.columnCount = JSON.parse(data[\"columnCount\"]);\n    this.engineModule.rowStartPos = JSON.parse(data[\"rowStartPos\"]);\n    this.engineModule.colStartPos = JSON.parse(data[\"colStartPos\"]);\n    this.engineModule.rowFirstLvl = JSON.parse(data[\"rowFirstLvl\"]);\n    this.engineModule.colFirstLvl = JSON.parse(data[\"colFirstLvl\"]);\n    control.allowServerDataBinding = true;\n  };\n  /* eslint-enable */\n\n\n  PivotView.prototype.generateData = function () {\n    if (!this.isStaticRefresh) {\n      if (this.displayOption.view !== 'Chart') {\n        this.renderEmptyGrid();\n        this.showWaitingPopup();\n      } else if (this.displayOption.view === 'Chart') {\n        this.showWaitingPopup();\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n      }\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.refreshData = function () {\n    var pivot = this;\n    /* eslint-disable-line */\n\n    if (!pivot.isStaticRefresh) {\n      if (isBlazor()) {\n        if (pivot.dataType === 'olap') {\n          if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n            pivot.allowServerDataBinding = false;\n            pivot.setProperties({\n              dataSourceSettings: {\n                dataSource: undefined\n              }\n            }, true);\n            pivot.allowServerDataBinding = true;\n          }\n        }\n      }\n\n      if (pivot.dataSourceSettings && (pivot.dataSourceSettings.dataSource || pivot.dataSourceSettings.url)) {\n        if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n          if (isBlazor() && pivot.enableVirtualization) {\n            if (!pivot.element.querySelector('.e-spinner-pane')) {\n              this.showWaitingPopup();\n            }\n\n            pivot.initEngine();\n          } else {\n            if (pivot.dataType === 'pivot' && pivot.remoteData.length > 0) {\n              if (!this.element.querySelector('.e-spinner-pane')) {\n                this.showWaitingPopup();\n              }\n\n              this.engineModule.data = pivot.remoteData;\n              this.initEngine();\n            } else {\n              setTimeout(pivot.getData.bind(pivot), 100);\n            }\n          }\n        } else if (this.dataSourceSettings.url !== '' && this.dataType === 'olap' || pivot.dataSourceSettings.dataSource && pivot.dataSourceSettings.dataSource.length > 0 || this.engineModule.data.length > 0) {\n          /* eslint-disable-line */\n          if (pivot.dataType === 'pivot') {\n            this.hideWaitingPopup();\n            pivot.engineModule.data = pivot.dataSourceSettings.dataSource;\n          }\n\n          pivot.initEngine();\n        } else {\n          if (this.dataSourceSettings.mode === 'Server') {\n            this.getEngine('onRefresh');\n          } else {\n            this.hideWaitingPopup();\n          }\n        }\n      } else if (isBlazor() && pivot.dataType === 'pivot' && this.engineModule.data && this.engineModule.data.length > 0) {\n        this.initEngine();\n      } else {\n        this.hideWaitingPopup();\n      }\n    } else {\n      pivot.isStaticRefresh = false;\n      pivot.hideWaitingPopup();\n    }\n  };\n\n  PivotView.prototype.getValueCellInfo = function (aggregateObj) {\n    var args = aggregateObj;\n    this.trigger(events.aggregateCellInfo, args);\n    return args;\n  };\n  /**\n   * De-Register the internal events.\n   * @param {Object} args - args.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  PivotView.prototype.bindTriggerEvents = function (args) {\n    this.trigger(getObject('name', args), args);\n  };\n\n  PivotView.prototype.getData = function () {\n    if (isBlazor()) {\n      this.dataSourceSettings.dataSource.executeQuery(new Query().requiresCount()).then(this.executeQuery.bind(this));\n    } else {\n      if (this.dataSourceSettings.dataSource.defaultQuery) {\n        this.dataSourceSettings.dataSource.executeQuery(this.dataSourceSettings.dataSource.defaultQuery).then(this.executeQuery.bind(this));\n      } else {\n        this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n      }\n    }\n  };\n\n  PivotView.prototype.executeQuery = function (e) {\n    if (!this.element.querySelector('.e-spinner-pane')) {\n      this.showWaitingPopup();\n    }\n\n    var pivot = this;\n    /* eslint-disable-line */\n\n    pivot.engineModule.data = e.result;\n\n    if (!isNullOrUndefined(pivot.engineModule.data) && pivot.engineModule.data.length > 0) {\n      pivot.initEngine();\n    } else {\n      this.hideWaitingPopup();\n    }\n  };\n  /* eslint-disable-next-line */\n\n  /** @hidden */\n\n\n  PivotView.prototype.applyFormatting = function (pivotValues) {\n    if (pivotValues) {\n      var colIndex = [];\n\n      for (var len = pivotValues.length, i = 0; i < len; i++) {\n        if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n          colIndex.push(i);\n        }\n      }\n\n      for (var i = 0; i < pivotValues.length; i++) {\n        for (var j = 1; pivotValues[i] && j < pivotValues[i].length; j++) {\n          if (pivotValues[i][j].axis === 'value' && pivotValues[i][j].formattedText !== '') {\n            pivotValues[i][j].style = undefined;\n            pivotValues[i][j].cssClass = undefined;\n            var format_1 = this.dataSourceSettings.conditionalFormatSettings;\n\n            for (var k = 0; k < format_1.length; k++) {\n              if (format_1[k].applyGrandTotals === true || isNullOrUndefined(format_1[k].applyGrandTotals) ? true : pivotValues[i][j].rowHeaders !== '' && pivotValues[i][j].columnHeaders !== '') {\n                if (this.checkCondition(pivotValues[i][j].value, format_1[k].conditions, format_1[k].value1, format_1[k].value2)) {\n                  // let ilen: number =\n                  //     (this.dataSourceSettings.valueAxis === 'row' ? i : this.engineModule.headerContent.length - 1);\n                  // let jlen: number = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                  if ((!format_1[k].measure || pivotValues[i][j].actualText === format_1[k].measure) && (format_1[k].measure === undefined || format_1[k].measure !== '') && (format_1[k].label === undefined || format_1[k].label !== '') && (!format_1[k].label || pivotValues[i][0].valueSort.levelName.indexOf(format_1[k].label) > -1 || pivotValues[i][j].rowHeaders.indexOf(format_1[k].label) > -1 || pivotValues[i][j].columnHeaders.indexOf(format_1[k].label) > -1)) {\n                    if (format_1[k].style && format_1[k].style.backgroundColor) {\n                      format_1[k].style.backgroundColor = this.conditionalFormattingModule.isHex(format_1[k].style.backgroundColor.substr(1)) ? format_1[k].style.backgroundColor : this.conditionalFormattingModule.colourNameToHex(format_1[k].style.backgroundColor);\n                    }\n\n                    if (format_1[k].style && format_1[k].style.color) {\n                      format_1[k].style.color = this.conditionalFormattingModule.isHex(format_1[k].style.color.substr(1)) ? format_1[k].style.color : this.conditionalFormattingModule.colourNameToHex(format_1[k].style.color);\n                    }\n\n                    pivotValues[i][j].style = format_1[k].style;\n                    pivotValues[i][j].cssClass = 'format' + this.element.id + k;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      var format = this.dataSourceSettings.conditionalFormatSettings;\n\n      for (var k = 0; k < format.length; k++) {\n        var sheet = this.createStyleSheet.bind(this)();\n        var str = 'color: ' + format[k].style.color + '!important;background-color: ' + format[k].style.backgroundColor + '!important;font-size: ' + format[k].style.fontSize + '!important;font-family: ' + format[k].style.fontFamily + ' !important;';\n        sheet.insertRule('.format' + this.element.id + k + '{' + str + '}', 0);\n      }\n    }\n  };\n\n  PivotView.prototype.createStyleSheet = function () {\n    var style = document.createElement('style');\n    style.appendChild(document.createTextNode(''));\n    document.head.appendChild(style);\n    return style.sheet;\n  };\n\n  PivotView.prototype.applyHyperlinkSettings = function () {\n    if (this.pivotValues) {\n      var pivotValues = this.pivotValues;\n      var colIndex = [];\n\n      for (var len = pivotValues.length, i = 0; i < len; i++) {\n        if (!isNullOrUndefined(pivotValues[i]) && pivotValues[i][0] === undefined) {\n          colIndex.push(i);\n        }\n      }\n\n      if (this.hyperlinkSettings.conditionalSettings.length > 0) {\n        for (var i = 0; i < pivotValues.length; i++) {\n          for (var j = 1; pivotValues[i] && j < pivotValues[i].length; j++) {\n            if (pivotValues[i][j].axis === 'value') {\n              pivotValues[i][j].enableHyperlink = false;\n              var collection = this.hyperlinkSettings.conditionalSettings;\n\n              for (var k = 0; k < collection.length; k++) {\n                if (this.checkCondition(pivotValues[i][j].value, collection[k].conditions, collection[k].value1, collection[k].value2)) {\n                  var ilen = this.dataSourceSettings.valueAxis === 'row' ? i : this.dataType === 'pivot' ? this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1;\n                  var jlen = this.dataSourceSettings.valueAxis === 'row' ? 0 : j;\n\n                  if ((!collection[k].measure || this.dataSourceSettings.values.length === 1 || pivotValues[ilen][jlen].valueSort && pivotValues[ilen][jlen].actualText === collection[k].measure) && (!collection[k].label || pivotValues[colIndex[collection[k].label.split('.').length - 1]] && pivotValues[colIndex[collection[k].label.split('.').length - 1]][j] && pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].valueSort && pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].valueSort[collection[k].label] || pivotValues[i][0].valueSort.levelName.indexOf(collection[k].label) > -1)) {\n                    pivotValues[i][j].enableHyperlink = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (!isNullOrUndefined(this.hyperlinkSettings.headerText)) {\n        var headerDelimiter = this.dataSourceSettings.valueSortSettings.headerDelimiter ? this.dataSourceSettings.valueSortSettings.headerDelimiter : '.';\n\n        for (var i = 0; i < pivotValues.length; i++) {\n          for (var j = 1; pivotValues[i] && j < pivotValues[i].length; j++) {\n            if (pivotValues[i][j].axis === 'value') {\n              var label = this.hyperlinkSettings.headerText;\n\n              if (pivotValues[i][0].valueSort.levelName.indexOf(label) > -1) {\n                pivotValues[i][0].enableHyperlink = true;\n                pivotValues[i][j].enableHyperlink = true;\n              } else {\n                var isApplyHyperLink = false;\n\n                for (var k = 0; k < colIndex.length; k++) {\n                  label = headerDelimiter + this.hyperlinkSettings.headerText;\n\n                  if ((headerDelimiter + pivotValues[colIndex[k]][j].valueSort.levelName).indexOf(label) > -1) {\n                    pivotValues[colIndex[k]][j].enableHyperlink = true;\n                    isApplyHyperLink = true;\n                  }\n                }\n\n                pivotValues[i][j].enableHyperlink = isApplyHyperLink;\n              }\n            }\n          }\n        }\n      } else {\n        return;\n      }\n    }\n  };\n\n  PivotView.prototype.checkCondition = function (cellValue, conditions, conditionalValue1, conditionalValue2) {\n    switch (conditions) {\n      case 'LessThan':\n        return cellValue < conditionalValue1;\n\n      case 'LessThanOrEqualTo':\n        return cellValue <= conditionalValue1;\n\n      case 'GreaterThan':\n        return cellValue > conditionalValue1;\n\n      case 'GreaterThanOrEqualTo':\n        return cellValue >= conditionalValue1;\n\n      case 'Equals':\n        return cellValue === conditionalValue1;\n\n      case 'NotEquals':\n        return cellValue !== conditionalValue1;\n\n      case 'Between':\n        return conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2 || conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2;\n\n      case 'NotBetween':\n        return !(conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2 || conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2);\n\n      default:\n        return false;\n    }\n  };\n  /** @hidden */\n\n  /* eslint-disable  */\n\n\n  PivotView.prototype.updateGroupingReport = function (newGroupSettings, updateGroupType) {\n    if (!this.clonedDataSet && !this.clonedReport) {\n      var dataSet = this.engineModule.data;\n      this.clonedDataSet = PivotUtil.getClonedData(dataSet);\n\n      if (isBlazor()) {\n        this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n      } else {\n        var dataSourceSettings = JSON.parse(this.getPersistData()).dataSourceSettings;\n        dataSourceSettings.dataSource = [];\n        this.clonedReport = this.clonedReport ? this.clonedReport : dataSourceSettings;\n      }\n    }\n\n    var dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n    var data = PivotUtil.getClonedData(this.clonedDataSet);\n    var dataSource = this.dataSourceSettings;\n    var clonedReport = this.clonedReport.properties ? this.clonedReport.properties : this.clonedReport;\n    var axisFields = [dataSource.rows, dataSource.columns, dataSource.values, dataSource.filters];\n    var fieldSettings = [dataSource.filterSettings, dataSource.sortSettings, dataSource.formatSettings, dataSource.drilledMembers];\n    var clonedAxisFields = clonedReport.rows;\n    clonedAxisFields = clonedAxisFields.concat(clonedReport.columns, clonedReport.values, clonedReport.filters);\n\n    if (newGroupSettings.length === 0 || newGroupSettings.length > 0) {\n      this.engineModule.groupingFields = {};\n\n      if (!isBlazor()) {\n        this.setProperties({\n          dataSourceSettings: {\n            dataSource: data,\n            groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : []\n          }\n        }, true);\n      }\n\n      var isDateGroupUpdated = updateGroupType === 'Date';\n      var fields = [];\n\n      for (var i = 0, cnt = axisFields.length; i < cnt; i++) {\n        for (var j = 0, len = axisFields[i].length; j < len; j++) {\n          var fieldName = axisFields[i][j].name;\n\n          if (fields.indexOf(fieldName) === -1) {\n            fields.push(fieldName);\n          }\n\n          var index = fields.indexOf(fieldName);\n          var group = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n\n          if (!isNullOrUndefined(fieldName.match(dateGroup)) && isDateGroupUpdated || fieldName.indexOf('_custom_group') !== -1 && !PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), dataSource.groupSettings)) {\n            axisFields[i].splice(j, 1);\n            fields.splice(index, 1);\n            j--;\n            len--;\n          } else {\n            var fieldObj = PivotUtil.getFieldByName(fieldName, clonedAxisFields);\n\n            if (fieldObj) {\n              axisFields[i].splice(j, 1, fieldObj);\n            }\n          }\n        }\n      }\n\n      for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n        var fieldName = fields_2[_i];\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, clonedReport.filterSettings);\n        var sortObj = PivotUtil.getFieldByName(fieldName, clonedReport.sortSettings);\n        var formatObj = PivotUtil.getFieldByName(fieldName, clonedReport.formatSettings);\n        var drillObj = PivotUtil.getFieldByName(fieldName, clonedReport.drilledMembers);\n        var settingsObj = [filterObj, sortObj, formatObj, drillObj];\n\n        for (var i = 0, cnt = fieldSettings.length; i < cnt; i++) {\n          var isExists = false;\n\n          for (var j = 0, len = fieldSettings[i].length; j < len; j++) {\n            var name_1 = fieldSettings[i][j].name;\n\n            if (!isNullOrUndefined(name_1.match(dateGroup)) && isDateGroupUpdated || name_1.indexOf('_custom_group') !== -1 && !PivotUtil.getFieldByName(name_1.replace('_custom_group', ''), dataSource.groupSettings)) {\n              fieldSettings[i].splice(j, 1);\n              j--;\n              len--;\n            } else if (fieldName === fieldSettings[i][j].name) {\n              isExists = true;\n\n              if (settingsObj[i]) {\n                fieldSettings[i].splice(j, 1, settingsObj[i]);\n              } else {\n                fieldSettings[i].splice(j, 1);\n                j--;\n                len--;\n              }\n\n              break;\n            }\n          }\n\n          if (!isExists && i === 0 && filterObj) {\n            fieldSettings[i].push(filterObj);\n          }\n\n          if (!isExists && i === 1 && sortObj) {\n            fieldSettings[i].push(sortObj);\n          }\n\n          if (!isExists && i === 2 && formatObj) {\n            fieldSettings[i].push(formatObj);\n          }\n\n          if (!isExists && i === 3 && drillObj) {\n            fieldSettings[i].push(drillObj);\n          }\n        }\n      }\n      /* eslint-disable */\n\n\n      if (isBlazor()) {\n        this.engineModule.data = data;\n        this.allowServerDataBinding = false;\n        this.setProperties({\n          dataSourceSettings: {\n            rows: axisFields[0],\n            columns: axisFields[1],\n            values: axisFields[2],\n            filters: axisFields[3],\n            filterSettings: fieldSettings[0],\n            sortSettings: fieldSettings[1],\n            formatSettings: fieldSettings[2],\n            drilledMembers: fieldSettings[3],\n            groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : []\n          }\n        }, true);\n        this.allowServerDataBinding = true;\n      }\n    }\n  };\n\n  PivotView.prototype.removeButtonFocus = function (e) {\n    if (document.querySelectorAll('.e-btn-focused')) {\n      removeClass(document.querySelectorAll('.e-btn-focused'), 'e-btn-focused');\n    }\n  };\n  /* eslint-enable */\n\n  /* eslint-enable  */\n\n\n  PivotView.prototype.wireEvents = function () {\n    if (this.displayOption.view !== 'Chart') {\n      EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler, this);\n      EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n      EventHandler.add(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler, this);\n      EventHandler.add(this.element, 'mouseup', this.mouseUpHandler, this);\n      EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler, this);\n    }\n\n    EventHandler.add(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus, this);\n    window.addEventListener('resize', this.onWindowResize.bind(this), true);\n  };\n\n  PivotView.prototype.unwireEvents = function () {\n    if (this.displayOption.view !== 'Chart') {\n      EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler);\n      EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n\n      if (this.element.querySelector('.' + cls.GRID_HEADER)) {\n        EventHandler.remove(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler);\n      }\n\n      EventHandler.remove(this.element, 'mouseup', this.mouseUpHandler);\n      EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler);\n    }\n\n    EventHandler.remove(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus);\n    window.removeEventListener('resize', this.onWindowResize.bind(this), true);\n  };\n  /**\n   * To destroy the PivotView elements.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.destroy = function () {\n    this.removeInternalEvents();\n\n    if (this.engineModule) {\n      this.engineModule.fieldList = {};\n      this.engineModule.rMembers = null;\n      this.engineModule.cMembers = null;\n      this.engineModule.valueMatrix = null;\n      this.engineModule.indexMatrix = null;\n      this.engineModule = {};\n    }\n\n    if (this.olapEngineModule) {\n      this.olapEngineModule.fieldList = {};\n      this.olapEngineModule = {};\n    }\n\n    if (this.showGroupingBar && this.groupingBarModule) {\n      this.groupingBarModule.destroy();\n    }\n\n    if (this.allowGrouping && this.groupingModule) {\n      this.groupingModule.destroy();\n    }\n\n    if (this.showToolbar && this.toolbarModule) {\n      this.toolbarModule.destroy();\n    }\n\n    if (this.enableVirtualization && this.virtualscrollModule) {\n      this.virtualscrollModule.destroy();\n    }\n\n    if (this.allowConditionalFormatting && this.conditionalFormattingModule) {\n      this.conditionalFormattingModule.destroy();\n    }\n\n    if (this.allowNumberFormatting && this.numberFormattingModule) {\n      this.numberFormattingModule.destroy();\n    }\n\n    if (this.contextMenuModule) {\n      this.contextMenuModule.destroy();\n    }\n\n    if (this.keyboardModule) {\n      this.keyboardModule.destroy();\n    }\n\n    if (this.tooltip && !this.tooltip.isDestroyed) {\n      this.tooltip.destroy();\n    }\n\n    if (this.calculatedFieldModule) {\n      this.calculatedFieldModule.destroy();\n    }\n\n    if (this.chart && !this.chart.isDestroyed) {\n      this.chart.destroy();\n\n      if (this.chart.isDestroyed && select('#' + this.element.id + '_chart', this.element)) {\n        remove(select('#' + this.element.id + '_chart', this.element));\n      }\n    }\n\n    if (this.grid && !this.grid.isDestroyed) {\n      this.grid.destroy();\n\n      if (this.grid.isDestroyed && select('#' + this.element.id + '_grid', this.element)) {\n        remove(select('#' + this.element.id + '_grid', this.element));\n      }\n    }\n\n    if (this.commonModule) {\n      this.commonModule.destroy();\n    }\n\n    if (this.chartModule) {\n      this.chartModule.destroy();\n    }\n\n    if (this.pivotButtonModule && !this.pivotButtonModule.isDestroyed) {\n      this.pivotButtonModule.destroy();\n    }\n\n    if (this.pivotFieldListModule && !this.pivotFieldListModule.isDestroyed) {\n      this.pivotFieldListModule.destroy();\n    }\n\n    this.unwireEvents();\n\n    _super.prototype.destroy.call(this);\n\n    if (this.groupingBarModule) {\n      this.groupingBarModule = null;\n    }\n\n    if (this.groupingModule) {\n      this.groupingModule = null;\n    }\n\n    if (this.pivotFieldListModule) {\n      this.pivotFieldListModule = null;\n    }\n\n    if (this.calculatedFieldModule) {\n      this.calculatedFieldModule = null;\n    }\n\n    if (this.conditionalFormattingModule) {\n      this.conditionalFormattingModule = null;\n    }\n\n    if (this.numberFormattingModule) {\n      this.numberFormattingModule = null;\n    }\n\n    if (this.toolbarModule) {\n      this.toolbarModule = null;\n    }\n\n    if (this.virtualscrollModule) {\n      this.virtualscrollModule = null;\n    }\n\n    if (this.contextMenuModule) {\n      this.contextMenuModule = null;\n    }\n\n    if (this.keyboardModule) {\n      this.keyboardModule = null;\n    }\n\n    if (this.tooltip) {\n      this.tooltip = null;\n    }\n\n    if (this.chart) {\n      this.chart = null;\n    }\n\n    if (this.grid) {\n      this.grid = null;\n    }\n\n    if (this.commonModule) {\n      this.commonModule = null;\n    }\n\n    if (this.chartModule) {\n      this.chartModule = null;\n    }\n\n    if (this.pivotButtonModule) {\n      this.pivotButtonModule = null;\n    }\n\n    if (this.renderModule) {\n      this.renderModule = null;\n    }\n\n    if (this.axisFieldModule) {\n      this.axisFieldModule = null;\n    }\n\n    if (this.pdfExportModule) {\n      this.pdfExportModule = null;\n    }\n\n    if (this.excelExportModule) {\n      this.excelExportModule = null;\n    }\n\n    if (!(isBlazor() && this.isServerRendered)) {\n      this.element.innerHTML = '';\n    } else {\n      if (this.element.querySelector('.e-spinner-pane')) {\n        remove(this.element.querySelector('.e-spinner-pane'));\n      }\n\n      if (this.showFieldList && select('#' + this.element.id + '_PivotFieldList', document)) {\n        remove(select('#' + this.element.id + '_PivotFieldList', document));\n      }\n    }\n\n    removeClass([this.element], cls.ROOT);\n    removeClass([this.element], cls.RTL);\n    removeClass([this.element], cls.DEVICE);\n  };\n  /**\n   * Method to open the number formatting dialog to set the format dynamically.\n   * @returns {void}\n   */\n\n\n  PivotView.prototype.showNumberFormattingDialog = function () {\n    if (this.allowNumberFormatting) {\n      this.numberFormattingModule.showNumberFormattingDialog();\n    }\n  };\n\n  var PivotView_1;\n\n  __decorate([Property('USD')], PivotView.prototype, \"currencyCode\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"showFieldList\", void 0);\n\n  __decorate([Complex({}, GridSettings)], PivotView.prototype, \"gridSettings\", void 0);\n\n  __decorate([Complex({}, ChartSettings)], PivotView.prototype, \"chartSettings\", void 0);\n\n  __decorate([Complex({}, GroupingBarSettings)], PivotView.prototype, \"groupingBarSettings\", void 0);\n\n  __decorate([Complex({}, HyperlinkSettings)], PivotView.prototype, \"hyperlinkSettings\", void 0);\n\n  __decorate([Complex({}, DataSourceSettings)], PivotView.prototype, \"dataSourceSettings\", void 0);\n\n  __decorate([Complex({}, CellEditSettings)], PivotView.prototype, \"editSettings\", void 0);\n\n  __decorate([Complex({}, DisplayOption)], PivotView.prototype, \"displayOption\", void 0);\n\n  __decorate([Property()], PivotView.prototype, \"pivotValues\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"showGroupingBar\", void 0);\n\n  __decorate([Property(true)], PivotView.prototype, \"showTooltip\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"showToolbar\", void 0);\n\n  __decorate([Property([])], PivotView.prototype, \"toolbar\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"showValuesButton\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"allowCalculatedField\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"enableValueSorting\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"allowConditionalFormatting\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"allowNumberFormatting\", void 0);\n\n  __decorate([Property('auto')], PivotView.prototype, \"height\", void 0);\n\n  __decorate([Property('auto')], PivotView.prototype, \"width\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"allowExcelExport\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"enableVirtualization\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"allowDrillThrough\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"allowPdfExport\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"allowDeferLayoutUpdate\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"allowDataCompression\", void 0);\n\n  __decorate([Property(1000)], PivotView.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n\n  __decorate([Property(10000)], PivotView.prototype, \"maxRowsInDrillThrough\", void 0);\n\n  __decorate([Property(true)], PivotView.prototype, \"loadOnDemandInMemberEditor\", void 0);\n\n  __decorate([Property(true)], PivotView.prototype, \"enableHtmlSanitizer\", void 0);\n\n  __decorate([Property()], PivotView.prototype, \"cellTemplate\", void 0);\n\n  __decorate([Property()], PivotView.prototype, \"toolbarTemplate\", void 0);\n\n  __decorate([Property()], PivotView.prototype, \"tooltipTemplate\", void 0);\n\n  __decorate([Property()], PivotView.prototype, \"spinnerTemplate\", void 0);\n\n  __decorate([Property(false)], PivotView.prototype, \"allowGrouping\", void 0);\n\n  __decorate([Property(true)], PivotView.prototype, \"exportAllPages\", void 0);\n\n  __decorate([Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Median', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])], PivotView.prototype, \"aggregateTypes\", void 0);\n\n  __decorate([Property(['Column', 'Bar', 'Line', 'Area', 'Scatter', 'Polar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea', 'SplineArea', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto', 'Radar', 'Pie', 'Doughnut', 'Funnel', 'Pyramid'])], PivotView.prototype, \"chartTypes\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"queryCellInfo\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"headerCellInfo\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"pdfQueryCellInfo\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"excelHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"excelQueryCellInfo\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"columnDragStart\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"columnDrag\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"columnDrop\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"beforePdfExport\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"beforeExcelExport\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"beforeColumnsRender\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"selected\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"cellDeselected\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"rowSelected\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"rowDeselected\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"chartTooltipRender\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"chartLoaded\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"chartLoad\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"chartResized\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"chartAxisLabelRender\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"multiLevelLabelClick\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"chartPointClick\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"contextMenuClick\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"contextMenuOpen\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"onPdfCellRender\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"saveReport\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"fetchReport\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"loadReport\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"renameReport\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"removeReport\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"newReport\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"toolbarRender\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"toolbarClick\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"load\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"enginePopulating\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"enginePopulated\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"onFieldDropped\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"fieldDrop\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"fieldDragStart\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"created\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"beforeExport\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"conditionalFormatting\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"memberFiltering\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"cellClick\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"drillThrough\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"editCompleted\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"beginDrillThrough\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"hyperlinkCellClick\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"cellSelecting\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"drill\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"cellSelected\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"chartSeriesCreated\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"aggregateCellInfo\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"fieldListRefreshed\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"memberEditorOpen\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"calculatedFieldCreate\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"numberFormatting\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"aggregateMenuOpen\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"fieldRemove\", void 0);\n\n  __decorate([Event()], PivotView.prototype, \"beforeServiceInvoke\", void 0);\n\n  PivotView = PivotView_1 = __decorate([NotifyPropertyChanges], PivotView);\n  return PivotView;\n}(Component);\n\nexport { PivotView };","map":{"version":3,"sources":["/workspace/Commb-olap-poc/commb-olap-js/node_modules/@syncfusion/ej2-pivotview/src/pivotview/base/pivotview.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Property","Browser","Component","createElement","setStyleAttribute","isBlazor","EventHandler","Complex","extend","ChildProperty","Collection","isNullOrUndefined","remove","Internationalization","L10n","NotifyPropertyChanges","compile","formatUnit","removeClass","addClass","Event","setValue","closest","select","updateBlazorTemplate","resetBlazorTemplate","SanitizeHtmlHelper","PivotEngine","Tooltip","createSpinner","showSpinner","hideSpinner","events","cls","Render","Common","DataSourceSettings","GridSettings","Grid","Reorder","Resize","getObject","ExcelExport","PDFExport","KeyboardInteraction","PivotContextMenu","DataManager","Query","VirtualScroll","DrillThrough","PivotUtil","PivotChart","ChartSettings","OlapEngine","GroupingBarSettings","_super","apply","CellEditSettings","ConditionalSettings","HyperlinkSettings","DisplayOption","PivotView","options","element","_this_1","call","verticalScrollScale","horizontalScrollScale","scrollerBrowserLimit","lastSortInfo","lastFilterInfo","lastAggregationInfo","lastCalcFieldInfo","isScrolling","isInitial","shiftLockedPos","savedSelectedCellsPos","cellSelectionPos","isPopupClicked","isMouseDown","isMouseUp","fieldsType","remoteData","defaultItems","isCellBoxMultiSelection","gridHeaderCellInfo","gridCellCollection","rowRangeSelection","enable","startIndex","endIndex","isStaticRefresh","resizeInfo","scrollPosObject","vertical","horizontal","verticalSection","horizontalSection","top","left","scrollDirection","direction","position","pivotColumns","totColWidth","posCount","isModified","isInitialRendering","needsID","pivotRefresh","refresh","request","XMLHttpRequest","isServerWaitingPopup","pivotView","mergePersistPivotData","PivotView_1","requiredModules","modules","push","args","member","allowConditionalFormatting","allowNumberFormatting","allowCalculatedField","showToolbar","toolbar","toolbarTemplate","showFieldList","allowExcelExport","allowPdfExport","enableVirtualization","allowGrouping","preRender","dataSourceSettings","providerType","dataType","olapEngineModule","engineModule","isAdaptive","isDevice","isIE","info","name","isTouchMode","initProperties","renderToolTip","keyboardModule","contextMenuModule","globalize","locale","showGroupingBar","gridSettings","contextMenuItems","commonModule","defaultLocale","grandTotal","total","value","noValue","row","column","collapse","expand","rowAxisPrompt","columnAxisPrompt","valueAxisPrompt","filterAxisPrompt","filter","filtered","sort","filters","rows","columns","values","close","cancel","delete","CalculatedField","createCalculatedField","fieldName","error","invalidFormula","dropText","dropTextMobile","dropAction","alert","warning","ok","search","drag","allFields","formula","addToRow","addToColumn","addToValue","addToFilter","emptyData","fieldExist","confirmText","noMatches","format","edit","clear","sortAscending","sortDescending","sortNone","clearCalculatedField","editCalculatedField","formulaField","dragField","clearFilter","by","all","multipleItems","label","date","enterValue","chooseDate","Before","BeforeOrEqualTo","After","AfterOrEqualTo","labelTextContent","dateTextContent","valueTextContent","Equals","DoesNotEquals","BeginWith","DoesNotBeginWith","EndsWith","DoesNotEndsWith","Contains","DoesNotContains","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Between","NotBetween","And","Sum","Count","DistinctCount","Product","Avg","Median","Min","SampleVar","PopulationVar","RunningTotals","Max","Index","SampleStDev","PopulationStDev","PercentageOfRowTotal","PercentageOfParentTotal","PercentageOfParentColumnTotal","PercentageOfParentRowTotal","DifferenceFrom","PercentageOfDifferenceFrom","PercentageOfGrandTotal","PercentageOfColumnTotal","MoreOption","NotEquals","AllValues","conditionalFormating","condition","formatLabel","valueFieldSettings","baseField","baseItem","summarizeValuesBy","sourceName","sourceCaption","example","editorDataLimitMsg","details","manageRecords","Years","Quarters","Months","Days","Hours","Minutes","Seconds","save","new","load","saveAs","rename","deleteReport","export","subTotals","grandTotals","reportName","pdf","excel","csv","png","jpeg","svg","mdxQuery","showSubTotals","doNotShowSubTotals","showSubTotalsRowsOnly","showSubTotalsColumnsOnly","showGrandTotals","doNotShowGrandTotals","showGrandTotalsRowsOnly","showGrandTotalsColumnsOnly","fieldList","grid","toolbarFormatting","chart","reportMsg","reportList","removeConfirm","emptyReport","bar","pie","funnel","doughnut","pyramid","stackingcolumn","stackingarea","stackingbar","stepline","steparea","splinearea","spline","stackingcolumn100","stackingbar100","stackingarea100","bubble","pareto","radar","line","area","scatter","polar","of","emptyFormat","emptyInput","newReportConfirm","emptyReportName","qtr","null","undefined","groupOutOfRange","fieldDropErrorAction","aggregate","drillThrough","ascending","descending","number","currency","percentage","formatType","customText","symbolPosition","right","grouping","true","false","decimalPlaces","numberFormat","memberType","formatString","expressionField","customFormat","numberFormatString","selectedHierarchy","olapDropText","Percent","Currency","Custom","Measure","Dimension","Standard","blank","fieldTooltip","fieldTitle","QuarterYear","drillError","caption","copy","defaultReport","customFormatString","invalidFormat","group","unGroup","invalidSelection","groupName","captionName","selectedItems","groupFieldCaption","groupTitle","startAt","endAt","groupBy","selectGroup","multipleAxes","showLegend","exit","chartTypeSettings","ChartType","yes","no","numberFormatMenu","conditionalFormatingMenu","removeCalculatedField","replaceConfirmBefore","replaceConfirmAfter","invalidJSON","invalidCSV","stacked","single","multipleAxisMode","localeObj","getModuleName","renderContextMenu","isDragging","addInternalEvents","onBeforeTooltipOpen","classList","add","showTooltip","tooltipTemplate","tooltip","cssClass","showTipPointer","mouseTrail","enableRtl","beforeRender","setToolTip","bind","beforeOpen","isStringTemplate","appendTo","destroy","conmenuItems","groupItems","customItems","exportItems","aggItems","expItems","aggregateItems","_i","_a","item","getDefaultItems","indexOf","toString","toLowerCase","text","getConstant","aggregateGroup","buildDefaultItems","items","getFieldByID","id","exportGroupItems","fields","json","executeLocal","where","getAllSummaryType","menuItem","iconCss","PIVOTVIEW_GRID","ICON","PIVOTVIEW_EXPORT","GRID_PDF_EXPORT","GRID_EXCEL_EXPORT","GRID_CSV_EXPORT","PIVOTVIEW_EXPAND","PIVOTVIEW_COLLAPSE","ICON_ASC","ICON_DESC","PIVOTVIEW_GROUP","PIVOTVIEW_UN_GROUP","minHeight","allowServerDataBinding","setProperties","pivotValues","bulkChanges","queryCellInfo","headerCellInfo","resizing","resizeStop","pdfHeaderQueryCellInfo","pdfQueryCellInfo","excelHeaderQueryCellInfo","excelQueryCellInfo","columnDragStart","columnDrag","columnDrop","beforeColumnsRender","columnRender","selected","cellSelected","cellDeselected","rowSelected","rowDeselected","chartTooltipRender","chartSettings","tooltipRender","chartLoaded","loaded","chartLoad","chartResized","resized","chartAxisLabelRender","axisLabelRender","multiLevelLabelClick","chartPointClick","pointClick","contextMenuClick","contextMenuOpen","beforePdfExport","beforeExcelExport","rowHeight","enableMultiAxis","enableMultipleAxis","style","height","updatePageSettings","Inject","editSettings","allowEditing","allowSelection","selectionSettings","cellSelectionMode","mode","type","displayOption","view","chartModule","currentView","primary","isInit","colValues","rowValues","valueAxis","heightAsNumber","getHeightAsNumber","isNaN","offsetHeight","pageSettings","columnCurrentPage","rowCurrentPage","columnSize","Math","ceil","floor","getWidthAsNumber","columnWidth","rowSize","allowDataCompression","render","loadData","formatSettings","formatfield","maximumFractionDigits","minimumFractionDigits","match","minimumIntegerDigits","url","guid","generateUUID","initialLoad","renderEmptyGrid","showWaitingPopup","open","withCredentials","onreadystatechange","onReadyStateChange","setRequestHeader","send","onSuccess","readyState","DONE","engine","JSON","parse","responseText","currentAction","currentMembers","members","dateMembers","formattedMembers","formattedText","FormattedText","actualText","ActualText","memberName","dateMember","pivotButtonModule","updateFilterEvents","pivotFieldListModule","valueCaption","drillThroughValue","aggType","aggregateType","rawData","parsedObj","indexObject","len","Key","Value","drillThroughModule","triggerDialog","drillThroughElement","fList","formatFieldList","keys","rowCount","pivotCount","RowCount","columnCount","ColumnCount","rowStartPos","RowStartPosition","colStartPos","ColumnStartPosition","rowFirstLvl","RowFirstLevel","colFirstLvl","ColumnFirstLevel","rowPos","formatPivotValues","pivotValue","rCnt","axis","headerContent","frameContent","groupSettings","updateReport","valueSort","ValueSortSettings","valueSortSettings","headerText","HeaderText","headerDelimiter","HeaderDelimiter","sortOrder","SortOrder","columnIndex","ColumnIndex","exactSize","exactPage","pos","initEngine","calculatedFieldModule","isRequireUpdate","endDialog","getEngine","action","drillItem","sortItem","aggField","cField","filterItem","rawDataArgs","editArgs","customProperties","enableValueSorting","enableDrillThrough","allowDrillThrough","stringify","getLocalizedObject","params","getPersistData","internalProperties","aggregatedItem","calculatedItem","fetchRawDataArgs","hash","trigger","beforeServiceInvoke","observedArgs","dataSource","jsonObject","split","cellTemplateFn","templateParser","cellTemplate","tooltipTemplateFn","spinnerTemplate","template","loadArgs","getClonedDataSourceSettings","pivotview","updateDataSourceSettings","updateClass","notify","initSubComponent","initToolbar","renderComplete","on","generateData","dataReady","renderPivotGrid","contentReady","onContentReady","removeInternalEvents","off","keyEntity","persistData","addOnPersist","loadPersistData","pivotData","blazdataSource","data","window","localStorage","getItem","showConditionalFormattingDialog","conditionalFormattingModule","createCalculatedFieldDialog","withHeader","onPropertyChanged","newProp","oldProp","prop","updateGroupingReport","savedDataSourceSettings","clonedDataSet","clearTimeout","timeOutObj","setTimeout","refreshData","isButtonIconRefesh","groupingBarModule","axisFieldModule","cloneFieldSettings","treeViewModule","fieldTable","treeViewUpdate","layoutRefresh","lastGridSettings","groupingModule","renderModule","updateGridSettings","chartSeries","renderLayout","loadChart","uiUpdate","dataSet","getClonedData","updateDataSource","querySelector","groupingBarSettings","RefreshFieldsPanel","toolbarModule","refreshToolbar","createChartMenu","aggregateTypes","document","querySelectorAll","innerHTML","trim","getCellTemplate","appendHtml","node","innerHtml","tempElement","firstChild","appendChild","clearTemplate","body","getAttribute","PIVOTCHART_LTR","allowDeferLayoutUpdate","clonedDataSource","virtualscrollModule","hyperlinkSettings","isRowCellHyperlink","showRowHeaderHyperlink","showHyperlink","isColumnCellHyperlink","showColumnHeaderHyperlink","isValueCellHyperlink","showValueCellHyperlink","isSummaryCellHyperlink","showSummaryCellHyperlink","applyHyperlinkSettings","applyFormatting","GROUPING_BAR_CLASS","refreshUI","width","getGridWidthAsNumber","display","enableScrollOnMultiAxis","hideWaitingPopup","isRefreshGrid","pivot","isSorted","isFiltered","isAggChange","isCalcChange","enginePopulating","interopArguments","sfBlazor","sortInfo","order","sortArgs","copyWithoutCircularReferences","onSort","aggregateArgs","onAggregation","properties","calculatedFieldSettings","onCalcOperation","filterArgs","filterSettings","onFilter","interopAdaptor","invokeMethodAsync","then","updateBlazorData","enginePopulatedEventMethod","savedFieldList","savedFieldListData","fieldListData","isDrillThrough","updateCalcFields","renderEngine","clonedReport","customArgs","datasourceSettings","getValueCellInfo","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","exportToExcel","exportType","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","exportToPDF","chartExport","fileName","orientation","enableExport","exportModule","printChart","print","onDrill","chartDrillInfo","delimiter","drilledMembers","cell","isDrilled","parentElement","contains","ROWSHEADER","COLLAPSE","clonedDrillMembers_1","cloneDrillMemberSettings","currentCell","Number","levelName","join","fieldAvail","drillMembers","fCnt","field","memIndex","splice","pivot_1","drilledItem_1","drillArgs_1","drillInfo","drill","args_1","generateGridData","eventArgs","enginePopulated","onOlapDrill","clonedDrillMembers","tupInfo","tupRowInfo","ordinal","tupColumnInfo","uNameCollection","drillArgs","isAttributeHierarchy","isHierarchy","fieldPos","map","hierarchy","clonedMembers","uName","drillSets","getDrilledSets","hasAllMember","keys_1","drillSet","cnt","memberItem","replace","itemPos","drilledSets","clonedMembers_1","index","inArray","drilledMember","updateDrilledInfo","_b","keys_2","drillItemCollection","member_1","drilledMembers_1","_c","clonedMembers_2","fields_1","fieldListSpinnerElement","isEmptyGrid","dataBound","notEmpty","MOVABLECONTENT_DIV","VIRTUALTRACK_DIV","virtualDiv","className","MOVABLEHEADER_DIV","virtualHeaderDiv","movableTable","vHeight","clientHeight","vWidth","mCnt","FROZENCONTENT_DIV","mHdr","MOVABLESCROLL_DIV","children","ele","verOffset","scrollTop","TABLE","transform","horiOffset","scrollLeft","resizedValue","MOVABLECHILD_DIV","offsetWidth","clientWidth","hScrollPos","scrollWidth","mCntScrollPos","mCntVScrollPos","contentModule","setHeightToContent","hideScroll","minWidth","unwireEvents","wireEvents","isChartLoaded","gridCells","gridCells_1","templateObject","tCell","colIndex","rowIndex","pivotCell","rowHeaders","columnHeaders","isGrandTotal","isGrandSum","isTotal","isSum","rowSpan","columnSpan","colSpan","hasChild","valueSortInfo","enableHtmlSanitizer","sanitize","outerHTML","content","hasField","isCalculatedField","dataFields","getRowText","getColText","getTooltipTemplate","rowFields","getHeaderField","columnFields","valueField","PIVOTTOOLTIP","TOOLTIP_HEADER","TOOLTIP_CONTENT","j","level","rowText","reverse","limit","colText","RTL","DEVICE","mouseRclickHandler","e","which","lastCellClicked","mouseDownHandler","parent_1","parentAt","clearSelection","lastSelectedElement","mouseMoveHandler","preventDefault","SELECTED_BGCOLOR","CELL_ACTIVE_BGCOLOR","mouseUpHandler","tagName","mouseClickHandler","CellClicked","alwaysShowValueHeader","pivot_2","enableSorting","sortSettings","rMembers","headerCollection","cMembers","applyValueSorting","updateEngine","EXPAND","updateTotColWidth","framePivotColumns","gridcolumns","gridcolumns_1","customAttributes","setSavedWidth","allowReordering","allowResizing","autoFit","setGridColumns","gridcolumns_2","calcWidth","fillGridColumns","gridcolumns_3","triggerColumnRenderEvent","firstColWidth","resColWidth","parseInt","setCommonColumnsWidth","columns_1","parseFloat","getBoundingClientRect","onWindowResize","colLength","colWidth","resizeColWidth","calculateGridWidth","calculateGridHeight","allowAutoResizing","refreshColumns","setGridRowWidth","CHART_GROUPING_BAR_CLASS","ROW_SELECT","SPAN_CLICKED","colIndex_1","rowIndex_1","colSpan_1","selectArgs","isCellClick","cellSelecting","ROW_CELL_CLASS","applyColumnSelection","COLUMNSHEADER","rowDeselect","ctrlKey","shiftKey","selectedRowIndex","selectionModule","selectRow","cellClick","nativeEvent","getSelectedCellsPos","CELL_SELECTED_BGCOLOR","setSavedSelectedCells","query","slice","ele_1","applyRowSelection","parentLevel","rCount","_this","selectRowsByRange","colStart","colEnd","rowStart","isCtrl","showPopup","queryStringArray","isToggle","activeColumns","actColPos","cCnt","a","rowSelectedList","count","isTargetSelected","_d","_e","control","frameEmptyColumns","frameEmptyData","GRID_CLASS","bindGrid","getTable","scrollModule","setWidth","setHeight","pivotCommon","isArray","errorDialog","createErrorDialog","pivot_3","setPivotProperties","this$_1","pivot_4","pivVal","pivotFL","pivotFields","blazPivot","valContent","headContent","pvalues","pvalLen","blazPivotValues","valLen","valueContent","isEngineUpdated","isEmptyData","getData","aggregateObj","aggregateCellInfo","bindTriggerEvents","executeQuery","requiresCount","defaultQuery","result","format_1","conditionalFormatSettings","k","applyGrandTotals","checkCondition","conditions","value1","value2","measure","backgroundColor","isHex","substr","colourNameToHex","color","sheet","createStyleSheet","str","fontSize","fontFamily","insertRule","createTextNode","head","conditionalSettings","enableHyperlink","collection","ilen","jlen","isApplyHyperLink","cellValue","conditionalValue1","conditionalValue2","newGroupSettings","updateGroupType","dateGroup","axisFields","fieldSettings","clonedAxisFields","concat","groupingFields","isDateGroupUpdated","getFieldByName","fieldObj","fields_2","filterObj","getFilterItemByName","sortObj","formatObj","drillObj","settingsObj","isExists","name_1","removeButtonFocus","GRID_HEADER","addEventListener","removeEventListener","valueMatrix","indexMatrix","numberFormattingModule","isDestroyed","isServerRendered","ROOT","showNumberFormattingDialog"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Browser, Component, createElement, setStyleAttribute, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, Complex, extend, ChildProperty, Collection, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n, NotifyPropertyChanges, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { removeClass, addClass, Event, setValue, closest, select } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { PivotEngine } from '../../base/engine';\nimport { Tooltip, createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Render } from '../renderer/render';\nimport { Common } from '../../common/actions/common';\nimport { DataSourceSettings } from '../model/datasourcesettings';\nimport { GridSettings } from '../model/gridsettings';\nimport { Grid, Reorder, Resize, getObject } from '@syncfusion/ej2-grids';\nimport { ExcelExport } from '../actions/excel-export';\nimport { PDFExport } from '../actions/pdf-export';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { PivotContextMenu } from '../../common/popups/context-menu';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { VirtualScroll } from '../actions/virtualscroll';\nimport { DrillThrough } from '../actions/drill-through';\nimport { PivotUtil } from '../../base/util';\nimport { PivotChart } from '../../pivotchart/index';\nimport { ChartSettings } from '../model/chartsettings';\nimport { OlapEngine } from '../../base/olap/engine';\n/* eslint-disable */\n/**\n * Allows a set of options for customizing the grouping bar UI with a variety of settings such as UI visibility to a specific view port,\n * customizing the pivot button features such as filtering, sorting, changing aggregate types, removing any fields.\n * The options available to customize the grouping bar UI are:\n * * `showFilterIcon`: Allows you to show or hide the filter icon that used to be displayed on the pivot button of the grouping bar UI.\n * This filter icon is used to filter the members of a particular field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon that used to be displayed in the pivot button of the grouping bar UI.\n * This sort icon is used to order members of a particular fields either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon that used to be displayed in the pivot button of the grouping bar UI.\n * This remove icon is used to remove any field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon that used to be displayed in the pivot button of the grouping bar UI.\n * This value type icon helps to select the appropriate aggregation type to value fields at runtime.\n * * `displayMode`: Allow options to show the grouping bar UI to specific view port such as either pivot table or pivot chart or both table and chart.\n * For example, to show the grouping bar UI to pivot table on its own, set the property `displayMode` to **Table**.\n * * `allowDragAndDrop`: Allows you to restrict the pivot buttons that were used to drag on runtime in the grouping bar UI. This will prevent you from modifying the current report.\n */\nvar GroupingBarSettings = /** @class */ (function (_super) {\n    __extends(GroupingBarSettings, _super);\n    function GroupingBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property('Both')\n    ], GroupingBarSettings.prototype, \"displayMode\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupingBarSettings.prototype, \"showFieldsPanel\", void 0);\n    return GroupingBarSettings;\n}(ChildProperty));\nexport { GroupingBarSettings };\n/**\n * Allow options for performing CRUD operations, such as add, edit, delete, and update the raw items of any cell from the pivot table.\n * The raw items can be viewed in a data grid that used to be displayed as a dialog by double-clicking the appropriate value cell in the pivot table.\n * CRUD operations can be performed in this data grid either by double-clicking the cells or using toolbar options.\n * The options available are as follows:\n * * `allowAdding`: Allows you to add a new record to the data grid used to update the appropriate cells in the pivot table.\n * * `allowEditing`: Allows you to edit the existing record in the data grid that used to update the appropriate cells in the pivot table.\n * * `allowDeleting`: Allows you to delete the existing record from the data grid that used to  update the appropriate cells in the pivot table.\n * * `allowCommandColumns`: Allows an additional column appended in the data grid layout holds the command buttons to perform the CRUD operations to edit,\n * delete, and update the raw items to the data grid that used to update the appropriate cells in the pivot table.\n * * `mode`: Allow options for performing CRUD operations with different modes in the data grid that used to update the appropriate cells in the pivot table.\n * The available modes are normal, batch and dialog. **Normal** mode is enabled for CRUD operations in the data grid by default.\n * * `allowEditOnDblClick`: Allows you to restrict CRUD operations by double-clicking the appropriate value cell in the pivot table.\n * * `showConfirmDialog`: Allows you to show the confirmation dialog to save and discard CRUD operations performed in the data grid that used to update the appropriate cells in the pivot table.\n * * `showDeleteConfirmDialog`: Allows you to show the confirmation dialog to delete any records from the data grid.\n *\n * > This feature is applicable only for the relational data source.\n */\nvar CellEditSettings = /** @class */ (function (_super) {\n    __extends(CellEditSettings, _super);\n    function CellEditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowCommandColumns\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowInlineEditing\", void 0);\n    __decorate([\n        Property('Normal')\n    ], CellEditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    return CellEditSettings;\n}(ChildProperty));\nexport { CellEditSettings };\n/**\n * Allow options for setting the visibility of hyperlink based on specific condition. The options available here are as follows:\n * * `measure`: Allows you to specify the value field caption to get visibility of hyperlink option for specific measure.\n * * `condition`: Allows you to choose the operator type such as equals, greater than, less than, etc.\n * * `value1`: Allows you to set the start value.\n * * `value2`: Allows you to set the end value. This option will be used by default when the operator **Between** and **NotBetween** is chosen to apply.\n */\nvar ConditionalSettings = /** @class */ (function (_super) {\n    __extends(ConditionalSettings, _super);\n    function ConditionalSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property('NotEquals')\n    ], ConditionalSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value2\", void 0);\n    return ConditionalSettings;\n}(ChildProperty));\nexport { ConditionalSettings };\n/**\n * Allow a set of options to display a hyperlink to link data for individual cells that are shown in the pivot table.\n * These options allow you to enable a separate hyperlink for row headers, column headers, value cells, and summary cells in the `hyperlinkSettings` class.\n * The options available are:\n * * `showHyperlink`: Allows you to set the visibility of hyperlink in all cells.\n * * `showRowHeaderHyperlink`: Allows you to set the visibility of hyperlink in row headers.\n * * `showColumnHeaderHyperlink`: Allows you to set the visibility of hyperlink in column headers.\n * * `showValueCellHyperlink`: Allows you to set the visibility of hyperlink in value cells.\n * * `showSummaryCellHyperlink`: Allows you to set the visibility of hyperlink in summary cells.\n * * `headerText`: Allows you to set the visibility of hyperlink based on header text.\n * * `conditionalSettings`: Allows you to set the visibility of hyperlink based on specific condition.\n * * `cssClass`: Allows you to add CSS class name to the hyperlink options.\n *\n * > By default, the hyperlink options are disabled for all cells in the pivot table.\n */\nvar HyperlinkSettings = /** @class */ (function (_super) {\n    __extends(HyperlinkSettings, _super);\n    function HyperlinkSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showRowHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showColumnHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showValueCellHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showSummaryCellHyperlink\", void 0);\n    __decorate([\n        Collection([], ConditionalSettings)\n    ], HyperlinkSettings.prototype, \"conditionalSettings\", void 0);\n    __decorate([\n        Property()\n    ], HyperlinkSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('')\n    ], HyperlinkSettings.prototype, \"cssClass\", void 0);\n    return HyperlinkSettings;\n}(ChildProperty));\nexport { HyperlinkSettings };\n/**\n * Allow options to configure the view port as either pivot table or pivot chart or both table and chart. The options available are:\n * * `view`: Allows you to choose the view port as either pivot table or pivot chart or both table and chart.\n * * `primary`: Allows you to set the primary view to be either pivot table or pivot chart. To use this option, it requires the property `view` to be **Both**.\n */\nvar DisplayOption = /** @class */ (function (_super) {\n    __extends(DisplayOption, _super);\n    function DisplayOption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"view\", void 0);\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"primary\", void 0);\n    return DisplayOption;\n}(ChildProperty));\nexport { DisplayOption };\n/* eslint-enable */\n/**\n * Represents the PivotView component.\n * ```html\n * <div id=\"PivotView\"></div>\n * <script>\n *  var pivotviewObj = new PivotView({ enableGroupingBar: true });\n *  pivotviewObj.appendTo(\"#pivotview\");\n * </script>\n * ```\n */\nvar PivotView = /** @class */ (function (_super) {\n    __extends(PivotView, _super);\n    /* eslint-enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotViewModel} options - options.\n     * @param  {string|HTMLElement} element - element.\n     */\n    function PivotView(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this_1.verticalScrollScale = 1;\n        /** @hidden */\n        _this_1.horizontalScrollScale = 1;\n        /** @hidden */\n        _this_1.scrollerBrowserLimit = 8000000;\n        /** @hidden */\n        _this_1.lastSortInfo = {};\n        /** @hidden */\n        _this_1.lastFilterInfo = {};\n        /** @hidden */\n        _this_1.lastAggregationInfo = {};\n        /** @hidden */\n        _this_1.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this_1.isScrolling = false;\n        /** @hidden */\n        _this_1.isInitial = true;\n        _this_1.shiftLockedPos = [];\n        _this_1.savedSelectedCellsPos = [];\n        _this_1.cellSelectionPos = [];\n        _this_1.isPopupClicked = false;\n        _this_1.isMouseDown = false;\n        _this_1.isMouseUp = false;\n        _this_1.fieldsType = {};\n        _this_1.remoteData = [];\n        _this_1.defaultItems = {};\n        _this_1.isCellBoxMultiSelection = false;\n        /** @hidden */\n        _this_1.gridHeaderCellInfo = [];\n        /** @hidden */\n        _this_1.gridCellCollection = {};\n        /** @hidden */\n        _this_1.rowRangeSelection = { enable: false, startIndex: 0, endIndex: 0 };\n        /** @hidden */\n        _this_1.isStaticRefresh = false;\n        /** @hidden */\n        _this_1.resizeInfo = {};\n        /** @hidden */\n        _this_1.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        /** @hidden */\n        _this_1.pivotColumns = [];\n        /** @hidden */\n        _this_1.totColWidth = 0;\n        /** @hidden */\n        _this_1.posCount = 0;\n        /** @hidden */\n        _this_1.isModified = false;\n        /** @hidden */\n        _this_1.isInitialRendering = false;\n        _this_1.needsID = true;\n        _this_1.pivotRefresh = Component.prototype.refresh; /* eslint-disable-line */\n        _this_1.request = new XMLHttpRequest();\n        /** @hidden */\n        _this_1.isServerWaitingPopup = false;\n        _this_1.pivotView = _this_1;\n        setValue('mergePersistData', _this_1.mergePersistPivotData, _this_1);\n        return _this_1;\n    }\n    PivotView_1 = PivotView;\n    /**\n     * To provide the array of modules needed for control rendering\n     * @returns {ModuleDeclaration[]} - return.\n     * @hidden\n     */\n    PivotView.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({ args: [this], member: 'groupingBar' });\n        if (this.allowConditionalFormatting) {\n            modules.push({ args: [this], member: 'conditionalFormatting' });\n        }\n        if (this.allowNumberFormatting) {\n            modules.push({ args: [this], member: 'numberFormatting' });\n        }\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedField' });\n        }\n        if (this.showToolbar && (this.toolbar.length > 0 || this.toolbarTemplate)) {\n            modules.push({ args: [this], member: 'toolbar' });\n        }\n        if (this.showFieldList) {\n            modules.push({ args: [this], member: 'fieldList' });\n        }\n        if (this.allowExcelExport) {\n            modules.push({ args: [this], member: 'excelExport' });\n        }\n        if (this.allowPdfExport) {\n            modules.push({ args: [this], member: 'pdfExport' });\n        }\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualscroll' });\n        }\n        if (this.allowGrouping) {\n            modules.push({ args: [this], member: 'grouping' });\n        }\n        return modules;\n    };\n    /* eslint-disable-next-line */\n    /**\n     * For internal use only - Initializing internal properties;\n     * @private\n     */\n    PivotView.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.dataType = 'olap';\n            this.olapEngineModule = new OlapEngine();\n        }\n        else {\n            this.dataType = 'pivot';\n            this.engineModule = new PivotEngine();\n        }\n        this.isAdaptive = Browser.isDevice;\n        if (Browser.isIE || Browser.info.name === 'edge') {\n            this.scrollerBrowserLimit = 1500000;\n        }\n        else if (Browser.info.name === 'chrome') {\n            this.scrollerBrowserLimit = 15000000;\n        }\n        this.isTouchMode = closest(this.element, 'e-bigger') ? true : false;\n        this.initProperties();\n        this.renderToolTip();\n        this.keyboardModule = new KeyboardInteraction(this);\n        this.contextMenuModule = new PivotContextMenu(this);\n        this.globalize = new Internationalization(this.locale);\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.commonModule = new Common(this);\n        }\n        /* eslint-disable */\n        this.defaultLocale = {\n            grandTotal: 'Grand Total',\n            total: 'Total',\n            value: 'Value',\n            noValue: 'No value',\n            row: 'Row',\n            column: 'Column',\n            collapse: 'Collapse',\n            expand: 'Expand',\n            rowAxisPrompt: 'Drop row here',\n            columnAxisPrompt: 'Drop column here',\n            valueAxisPrompt: 'Drop value here',\n            filterAxisPrompt: 'Drop filter here',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            search: 'Search',\n            drag: 'Drag',\n            remove: 'Remove',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            addToRow: 'Add to Row',\n            addToColumn: 'Add to Column',\n            addToValue: 'Add to Value',\n            addToFilter: 'Add to Filter',\n            emptyData: 'No records to display',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Median: 'Median',\n            Min: 'Min',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            MoreOption: 'More...',\n            NotEquals: 'Not Equals',\n            AllValues: 'All Values',\n            conditionalFormating: 'Conditional Formatting',\n            apply: 'Apply',\n            condition: 'Add Condition',\n            formatLabel: 'Format',\n            valueFieldSettings: 'Value field settings',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            summarizeValuesBy: 'Summarize values by',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            details: 'Details',\n            manageRecords: 'Manage Records',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            save: 'Save a report',\n            new: 'Create a new report',\n            load: 'Load',\n            saveAs: 'Save as current report',\n            rename: 'Rename a current report',\n            deleteReport: 'Delete a current report',\n            export: 'Export',\n            subTotals: 'Sub totals',\n            grandTotals: 'Grand totals',\n            reportName: 'Report Name :',\n            pdf: 'PDF',\n            excel: 'Excel',\n            csv: 'CSV',\n            png: 'PNG',\n            jpeg: 'JPEG',\n            svg: 'SVG',\n            mdxQuery: 'MDX Query',\n            showSubTotals: 'Show sub totals',\n            doNotShowSubTotals: 'Do not show sub totals',\n            showSubTotalsRowsOnly: 'Show sub totals rows only',\n            showSubTotalsColumnsOnly: 'Show sub totals columns only',\n            showGrandTotals: 'Show grand totals',\n            doNotShowGrandTotals: 'Do not show grand totals',\n            showGrandTotalsRowsOnly: 'Show grand totals rows only',\n            showGrandTotalsColumnsOnly: 'Show grand totals columns only',\n            fieldList: 'Show fieldlist',\n            grid: 'Show table',\n            toolbarFormatting: 'Conditional formatting',\n            chart: 'Chart',\n            reportMsg: 'Please enter vaild report name!!!',\n            reportList: 'Report list',\n            removeConfirm: 'Are you sure you want to delete this report?',\n            emptyReport: 'No reports found!!',\n            bar: 'Bar',\n            pie: 'Pie',\n            funnel: 'Funnel',\n            doughnut: 'Doughnut',\n            pyramid: 'Pyramid',\n            stackingcolumn: 'Stacked Column',\n            stackingarea: 'Stacked Area',\n            stackingbar: 'Stacked Bar',\n            stepline: 'Step Line',\n            steparea: 'Step Area',\n            splinearea: 'Spline Area',\n            spline: 'Spline',\n            stackingcolumn100: '100% Stacked Column',\n            stackingbar100: '100% Stacked Bar',\n            stackingarea100: '100% Stacked Area',\n            bubble: 'Bubble',\n            pareto: 'Pareto',\n            radar: 'Radar',\n            line: 'Line',\n            area: 'Area',\n            scatter: 'Scatter',\n            polar: 'Polar',\n            of: 'of',\n            emptyFormat: 'No format found!!!',\n            emptyInput: 'Enter a value',\n            newReportConfirm: 'Do you want to save the changes to this report?',\n            emptyReportName: 'Enter a report name',\n            qtr: 'Qtr',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            aggregate: 'Aggregate',\n            drillThrough: 'Drill Through',\n            ascending: 'Ascending',\n            descending: 'Descending',\n            number: 'Number',\n            currency: 'Currency',\n            percentage: 'Percentage',\n            formatType: 'Format Type',\n            customText: 'Currency Symbol',\n            symbolPosition: 'Symbol Position',\n            left: 'Left',\n            right: 'Right',\n            grouping: 'Grouping',\n            true: 'True',\n            false: 'False',\n            decimalPlaces: 'Decimal Places',\n            numberFormat: 'Number Formatting',\n            memberType: 'Field Type',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            selectedHierarchy: 'Parent Hierarchy',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            Percent: 'Percent',\n            Currency: 'Currency',\n            Custom: 'Custom',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            drillError: 'Cannot show the raw items of calculated fields.',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            defaultReport: 'Sample Report',\n            customFormatString: 'Custom Format',\n            invalidFormat: 'Invalid Format.',\n            group: 'Group',\n            unGroup: 'Ungroup',\n            invalidSelection: 'Cannot group that selection.',\n            groupName: 'Enter the caption to display in header',\n            captionName: 'Enter the caption for group field',\n            selectedItems: 'Selected items',\n            groupFieldCaption: 'Field caption',\n            groupTitle: 'Group name',\n            startAt: 'Starting at',\n            endAt: 'Ending at',\n            groupBy: 'Interval by',\n            selectGroup: 'Select groups',\n            multipleAxes: 'Multiple Axis',\n            showLegend: 'Show Legend',\n            exit: 'Exit',\n            chartTypeSettings: 'Chart Type Settings',\n            ChartType: 'Chart Type',\n            yes: 'Yes',\n            no: 'No',\n            numberFormatMenu: 'Number Formatting...',\n            conditionalFormatingMenu: 'Conditional Formatting...',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            replaceConfirmBefore: 'A report named ',\n            replaceConfirmAfter: ' already exists. Do you want to replace it?',\n            invalidJSON: 'Invalid JSON data',\n            invalidCSV: 'Invalid CSV data',\n            stacked: 'Stacked',\n            single: 'Single',\n            multipleAxisMode: 'Multiple Axis Mode'\n        };\n        /* eslint-enable */\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.renderContextMenu();\n        this.isDragging = false;\n        this.addInternalEvents();\n        //setCurrencyCode(this.currencyCode);\n    };\n    PivotView.prototype.onBeforeTooltipOpen = function (args) {\n        args.element.classList.add('e-pivottooltipwrap');\n    };\n    PivotView.prototype.renderToolTip = function () {\n        if (this.showTooltip) {\n            if (this.tooltipTemplate) {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    cssClass: 'e-pivottooltiptemplate',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    locale: this.locale,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen\n                });\n            }\n            else {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    locale: this.locale,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen\n                });\n            }\n            this.tooltip.isStringTemplate = true;\n            this.tooltip.appendTo(this.element);\n        }\n        else if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.renderContextMenu = function () {\n        if (this.gridSettings.contextMenuItems || (this.allowGrouping && this.dataType === 'pivot')) {\n            var conmenuItems = [];\n            var groupItems = [];\n            var customItems = [];\n            var exportItems = [];\n            var aggItems = [];\n            var expItems = [];\n            var aggregateItems = [];\n            if (this.gridSettings.contextMenuItems) {\n                for (var _i = 0, _a = this.gridSettings.contextMenuItems; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (typeof item === 'string' && this.getDefaultItems().indexOf(item) !== -1) {\n                        if (item.toString().toLowerCase().indexOf('aggregate') !== -1 && this.dataType === 'pivot') {\n                            aggregateItems = [\n                                { text: this.localeObj.getConstant('Sum') }\n                            ];\n                            var aggregateGroup = this.buildDefaultItems('Aggregate');\n                            aggregateGroup.items = aggregateItems;\n                            aggItems.push(aggregateGroup);\n                        }\n                        else if (item.toString().toLowerCase().indexOf('export') !== -1) {\n                            exportItems.push(this.buildDefaultItems(item));\n                        }\n                        else {\n                            conmenuItems.push(this.buildDefaultItems(item));\n                        }\n                    }\n                    else if (typeof item !== 'string') {\n                        customItems.push(item);\n                    }\n                }\n            }\n            if (this.allowGrouping && this.dataType === 'pivot') {\n                if (!this.getFieldByID(this.element.id + '_custom_group', this.gridSettings.contextMenuItems)) {\n                    groupItems.push(this.buildDefaultItems('Group'));\n                }\n                if (!this.getFieldByID(this.element.id + '_custom_ungroup', this.gridSettings.contextMenuItems)) {\n                    groupItems.push(this.buildDefaultItems('Ungroup'));\n                }\n            }\n            if (exportItems.length > 0) {\n                var exportGroupItems = this.buildDefaultItems('export');\n                exportGroupItems.items = exportItems;\n                expItems.push(exportGroupItems);\n            }\n            this.gridSettings.contextMenuItems = [];\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, aggItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, conmenuItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, groupItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, expItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, customItems);\n        }\n    };\n    PivotView.prototype.getFieldByID = function (id, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('id', 'equal', id))[0];\n    };\n    /* eslint-disable-next-line */\n    /**\n     * @hidden\n     */\n    PivotView.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Median', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    PivotView.prototype.getDefaultItems = function () {\n        return ['Drillthrough', 'Expand',\n            'Collapse', 'Pdf Export', 'Excel Export', 'Csv Export', 'Sort Ascending', 'Sort Descending',\n            'Aggregate', 'CalculatedField'];\n    };\n    PivotView.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'Aggregate':\n                menuItem = {\n                    text: this.localeObj.getConstant('aggregate'), target: 'th.e-valuesheader,td.e-valuescontent,.e-stot.e-rowsheader',\n                    id: this.element.id + '_aggregate'\n                };\n                break;\n            case 'CalculatedField':\n                menuItem = {\n                    text: this.localeObj.getConstant('CalculatedField'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_CalculatedField'\n                };\n                break;\n            case 'Drillthrough':\n                menuItem = {\n                    text: this.localeObj.getConstant('drillThrough'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_drillthrough_menu', iconCss: cls.PIVOTVIEW_GRID + ' ' + cls.ICON\n                };\n                break;\n            case 'export':\n                menuItem = {\n                    text: this.localeObj.getConstant('export'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_exporting', iconCss: cls.PIVOTVIEW_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Pdf Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('pdf'), id: this.element.id + '_pdf',\n                    iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Excel Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('excel'), id: this.element.id + '_excel',\n                    iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Csv Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('csv'), id: this.element.id + '_csv',\n                    iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Expand':\n                menuItem = {\n                    text: this.localeObj.getConstant('expand'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_expand', iconCss: cls.PIVOTVIEW_EXPAND + ' ' + cls.ICON\n                };\n                break;\n            case 'Collapse':\n                menuItem = {\n                    text: this.localeObj.getConstant('collapse'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_collapse', iconCss: cls.PIVOTVIEW_COLLAPSE + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Ascending':\n                menuItem = {\n                    text: this.localeObj.getConstant('ascending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortasc', iconCss: cls.ICON_ASC + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Descending':\n                menuItem = {\n                    text: this.localeObj.getConstant('descending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortdesc', iconCss: cls.ICON_DESC + ' ' + cls.ICON\n                };\n                break;\n            case 'Group':\n                menuItem = {\n                    text: this.localeObj.getConstant('group'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_group', iconCss: cls.PIVOTVIEW_GROUP + ' ' + cls.ICON\n                };\n                break;\n            case 'Ungroup':\n                menuItem = {\n                    text: this.localeObj.getConstant('unGroup'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_ungroup', iconCss: cls.PIVOTVIEW_UN_GROUP + ' ' + cls.ICON\n                };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: menuItem.text, id: menuItem.id,\n            target: menuItem.target, iconCss: menuItem.iconCss\n        };\n        return this.defaultItems[item];\n    };\n    PivotView.prototype.initProperties = function () {\n        this.pivotRefresh = Component.prototype.refresh;\n        this.minHeight = isNullOrUndefined(this.minHeight) ? 300 : (this.minHeight < 10 ? 10 : this.minHeight);\n        this.isScrolling = false;\n        this.allowServerDataBinding = false;\n        this.isStaticRefresh = false;\n        this.setProperties({ pivotValues: [] }, true);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        this.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        this.queryCellInfo = this.gridSettings.queryCellInfo ? this.gridSettings.queryCellInfo.bind(this) : undefined;\n        this.headerCellInfo = this.gridSettings.headerCellInfo ? this.gridSettings.headerCellInfo.bind(this) : undefined;\n        this.resizing = this.gridSettings.resizing ? this.gridSettings.resizing.bind(this) : undefined;\n        this.resizeStop = this.gridSettings.resizeStop ? this.gridSettings.resizeStop.bind(this) : undefined;\n        this.pdfHeaderQueryCellInfo = this.gridSettings.pdfHeaderQueryCellInfo ?\n            this.gridSettings.pdfHeaderQueryCellInfo.bind(this) : undefined;\n        this.pdfQueryCellInfo = this.gridSettings.pdfQueryCellInfo ? this.gridSettings.pdfQueryCellInfo.bind(this) : undefined;\n        this.excelHeaderQueryCellInfo = this.gridSettings.excelHeaderQueryCellInfo ?\n            this.gridSettings.excelHeaderQueryCellInfo.bind(this) : undefined;\n        this.excelQueryCellInfo = this.gridSettings.excelQueryCellInfo ?\n            this.gridSettings.excelQueryCellInfo.bind(this) : undefined;\n        this.columnDragStart = this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined;\n        this.columnDrag = this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined;\n        this.columnDrop = this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined;\n        this.beforeColumnsRender = this.gridSettings.columnRender ? this.gridSettings.columnRender : undefined;\n        this.selected = this.gridSettings.cellSelected ? this.gridSettings.cellSelected : undefined;\n        this.cellDeselected = this.gridSettings.cellDeselected ? this.gridSettings.cellDeselected : undefined;\n        this.rowSelected = this.gridSettings.rowSelected ? this.gridSettings.rowSelected : undefined;\n        this.rowDeselected = this.gridSettings.rowDeselected ? this.gridSettings.rowDeselected : undefined;\n        this.chartTooltipRender = this.chartSettings.tooltipRender ? this.chartSettings.tooltipRender : undefined;\n        this.chartLoaded = this.chartSettings.loaded ? this.chartSettings.loaded : undefined;\n        this.chartLoad = this.chartSettings.load ? this.chartSettings.load : undefined;\n        this.chartResized = this.chartSettings.resized ? this.chartSettings.resized : undefined;\n        this.chartAxisLabelRender = this.chartSettings.axisLabelRender ? this.chartSettings.axisLabelRender : undefined;\n        this.multiLevelLabelClick = this.chartSettings.multiLevelLabelClick ? this.chartSettings.multiLevelLabelClick : undefined;\n        this.chartPointClick = this.chartSettings.pointClick ? this.chartSettings.pointClick : undefined;\n        this.contextMenuClick = this.gridSettings.contextMenuClick ? this.gridSettings.contextMenuClick : undefined;\n        this.contextMenuOpen = this.gridSettings.contextMenuOpen ? this.gridSettings.contextMenuOpen : undefined;\n        this.beforePdfExport = this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined;\n        this.beforeExcelExport = this.gridSettings.beforeExcelExport ? this.gridSettings.beforeExcelExport.bind(this) : undefined;\n        if (this.gridSettings.rowHeight === null) {\n            if (this.isTouchMode) {\n                this.setProperties({ gridSettings: { rowHeight: 36 } }, true);\n            }\n            else {\n                this.setProperties({ gridSettings: { rowHeight: this.isAdaptive ? 36 : 30 } }, true);\n            }\n        }\n        if (this.chartSettings && this.chartSettings.enableMultiAxis && !this.chartSettings.enableMultipleAxis) {\n            this.setProperties({ chartSettings: { enableMultipleAxis: true } }, true);\n        }\n        this.element.style.height = '100%';\n        if (this.enableVirtualization) {\n            this.updatePageSettings(true);\n            if (this.allowExcelExport) {\n                PivotView_1.Inject(ExcelExport);\n            }\n            if (this.allowPdfExport) {\n                PivotView_1.Inject(PDFExport);\n            }\n            if (this.editSettings.allowEditing) {\n                PivotView_1.Inject(DrillThrough);\n            }\n        }\n        this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n            this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n            this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n        if (this.allowGrouping && !this.isCellBoxMultiSelection) {\n            this.isCellBoxMultiSelection = true;\n            this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n        }\n        if (this.displayOption.view !== 'Table') {\n            this.chartModule = new PivotChart();\n        }\n        this.currentView = this.currentView ? this.currentView : (this.displayOption.view === 'Both' ?\n            this.displayOption.primary : this.displayOption.view);\n    };\n    /* eslint-disable-next-line */\n    /**\n     * @hidden\n     */\n    PivotView.prototype.updatePageSettings = function (isInit) {\n        if (this.enableVirtualization) {\n            var colValues = 1;\n            var rowValues = 1;\n            if (this.dataSourceSettings.values.length > 1 && this.dataType === 'pivot') {\n                if (this.dataSourceSettings.valueAxis === 'row') {\n                    rowValues = this.dataSourceSettings.values.length;\n                }\n                else {\n                    colValues = this.dataSourceSettings.values.length;\n                }\n            }\n            var heightAsNumber = this.getHeightAsNumber();\n            if (isNaN(heightAsNumber)) {\n                heightAsNumber = this.element.offsetHeight;\n            }\n            this.pageSettings = {\n                columnCurrentPage: isInit ? 1 : this.pageSettings.columnCurrentPage,\n                rowCurrentPage: isInit ? 1 : this.pageSettings.rowCurrentPage,\n                columnSize: Math.ceil((Math.floor((this.getWidthAsNumber()) /\n                    this.gridSettings.columnWidth) - 1) / colValues),\n                rowSize: Math.ceil(Math.floor((heightAsNumber) / this.gridSettings.rowHeight) / rowValues),\n                allowDataCompression: this.allowDataCompression\n            };\n        }\n    };\n    /* eslint-disable */\n    /**\n     * Initialize the control rendering\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.render = function () {\n        this.loadData();\n    };\n    PivotView.prototype.loadData = function () {\n        if (this.dataSourceSettings.formatSettings.length > 0) {\n            var formatfield = this.dataSourceSettings.formatSettings;\n            for (var i = 0; i < formatfield.length; i++) {\n                if ((!isNullOrUndefined(formatfield[i].maximumFractionDigits) || !isNullOrUndefined(formatfield[i].minimumFractionDigits)) && formatfield[i].format.match(/^(P|N|C|P[0-9]|C[0-9]|N[0-9])$/g) === null) {\n                    formatfield[i].maximumFractionDigits = undefined;\n                    formatfield[i].minimumIntegerDigits = undefined;\n                }\n            }\n        }\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.initialLoad();\n                if (this.displayOption.view !== 'Chart') {\n                    this.renderEmptyGrid();\n                }\n                this.showWaitingPopup();\n            }\n            else {\n                this.request.open(\"GET\", this.dataSourceSettings.url, true);\n                this.request.withCredentials = false;\n                this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n                this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n                this.request.send(null);\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /* eslint-enable */\n    PivotView.prototype.onSuccess = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            this.isServerWaitingPopup = true;\n            try {\n                /* eslint-disable */\n                var engine = JSON.parse(this.request.responseText);\n                if (this.currentAction === 'fetchFieldMembers') {\n                    var currentMembers = JSON.parse(engine.members);\n                    var dateMembers = [];\n                    var formattedMembers = {};\n                    var members = {};\n                    /* eslint-enable */\n                    for (var i = 0; i < currentMembers.length; i++) {\n                        dateMembers.push({ formattedText: currentMembers[i].FormattedText, actualText: currentMembers[i].ActualText });\n                        formattedMembers[currentMembers[i].FormattedText] = {};\n                        members[currentMembers[i].ActualText] = {};\n                    }\n                    this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                    this.engineModule.fieldList[engine.memberName].formattedMembers = formattedMembers;\n                    this.engineModule.fieldList[engine.memberName].members = members;\n                    if (this.showGroupingBar) {\n                        this.pivotButtonModule.updateFilterEvents();\n                    }\n                    else {\n                        this.pivotFieldListModule.pivotButtonModule.updateFilterEvents();\n                    }\n                }\n                else if (this.currentAction === 'fetchRawData') {\n                    var valueCaption = this.engineModule.fieldList[this.drillThroughValue.actualText.toString()] ?\n                        this.engineModule.fieldList[this.drillThroughValue.actualText.toString()].caption : this.drillThroughValue.actualText.toString(); /* eslint-disable-line */\n                    var aggType = this.engineModule.fieldList[this.drillThroughValue.actualText] ? this.engineModule.fieldList[this.drillThroughValue.actualText].aggregateType : '';\n                    var rawData = JSON.parse(engine.rawData);\n                    var parsedObj = JSON.parse(engine.indexObject); /* eslint-disable-line */\n                    var indexObject = {}; /* eslint-disable-line */\n                    for (var len = 0; len < parsedObj.length; len++) {\n                        indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                    }\n                    this.drillThroughValue.indexObject = indexObject;\n                    this.drillThroughModule.triggerDialog(valueCaption, aggType, rawData, this.drillThroughValue, this.drillThroughElement);\n                }\n                else {\n                    var fList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                    if (this.engineModule.fieldList) {\n                        var keys = Object.keys(this.engineModule.fieldList);\n                        for (var i = 0; i < keys.length; i++) {\n                            if (this.engineModule.fieldList[keys[i]] && fList[keys[i]]) {\n                                fList[keys[i]].dateMember = this.engineModule.fieldList[keys[i]].dateMember;\n                                fList[keys[i]].formattedMembers = this.engineModule.fieldList[keys[i]].formattedMembers;\n                                fList[keys[i]].members = this.engineModule.fieldList[keys[i]].members;\n                            }\n                        }\n                    }\n                    this.engineModule.fieldList = fList;\n                    this.engineModule.fields = JSON.parse(engine.fields);\n                    this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                    this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                    this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                    this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                    this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                    this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                    var rowPos = void 0;\n                    var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue)); /* eslint-disable-line */\n                    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                        if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                            rowPos = rCnt;\n                            break;\n                        }\n                    }\n                    this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                    this.engineModule.pageSettings = this.pageSettings;\n                    if (this.dataSourceSettings.groupSettings.length > 0) {\n                        PivotUtil.updateReport(this, JSON.parse(engine.dataSourceSettings));\n                    }\n                    var valueSort = JSON.parse(engine.dataSourceSettings).ValueSortSettings; /* eslint-disable-line */\n                    this.engineModule.valueSortSettings = {\n                        headerText: valueSort.HeaderText,\n                        headerDelimiter: valueSort.HeaderDelimiter,\n                        sortOrder: valueSort.SortOrder,\n                        columnIndex: valueSort.ColumnIndex\n                    };\n                    this.engineModule.pivotValues = pivotValues;\n                }\n            }\n            catch (error) {\n                this.engineModule.pivotValues = [];\n            }\n            if (this.currentAction === 'onScroll') {\n                if (this.scrollDirection === 'vertical') {\n                    var rowValues = this.dataSourceSettings.valueAxis === 'row' ? this.dataSourceSettings.values.length : 1;\n                    var exactSize = (this.pageSettings.rowSize * rowValues * this.gridSettings.rowHeight);\n                    var exactPage = Math.ceil(this.engineModule.rowStartPos / (this.pageSettings.rowSize * rowValues));\n                    var pos = exactSize * exactPage - (this.engineModule.rowFirstLvl * rowValues * this.gridSettings.rowHeight);\n                    this.scrollPosObject.verticalSection = pos;\n                }\n                else if (this.scrollDirection === 'horizondal') {\n                    var colValues = this.dataSourceSettings.valueAxis === 'column' ? this.dataSourceSettings.values.length : 1;\n                    var exactSize = (this.pageSettings.columnSize * colValues * this.gridSettings.columnWidth);\n                    var exactPage = Math.ceil(this.engineModule.colStartPos / (this.pageSettings.columnSize * colValues));\n                    var pos = exactSize * exactPage - (this.engineModule.colFirstLvl * colValues * this.gridSettings.columnWidth);\n                    this.scrollPosObject.horizontalSection = pos;\n                }\n            }\n            if (this.currentAction !== 'fetchFieldMembers' && this.currentAction !== 'fetchRawData') {\n                this.initEngine();\n                if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n                    this.calculatedFieldModule.endDialog();\n                    this.calculatedFieldModule.isRequireUpdate = false;\n                }\n                if (this.pivotFieldListModule && this.pivotFieldListModule.calculatedFieldModule && this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate) { /* eslint-disable-line */\n                    this.pivotFieldListModule.calculatedFieldModule.endDialog();\n                    this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate = false;\n                }\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n        var _this_1 = this;\n        this.currentAction = action;\n        this.isServerWaitingPopup = false;\n        var customProperties = {\n            pageSettings: this.pageSettings,\n            enableValueSorting: this.enableValueSorting,\n            enableDrillThrough: (this.allowDrillThrough || this.editSettings.allowEditing),\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this))\n        };\n        this.request.open('POST', this.dataSourceSettings.url, true);\n        var params = {\n            request: this.request,\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: {},\n            internalProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.guid\n        };\n        this.trigger(events.beforeServiceInvoke, params, function (observedArgs) {\n            _this_1.request = observedArgs.request;\n            params.internalProperties = observedArgs.internalProperties;\n            params.customProperties = observedArgs.customProperties;\n            params.dataSourceSettings = observedArgs.dataSourceSettings;\n            params.calculatedItem = observedArgs.calculatedItem;\n            params.drillItem = observedArgs.drillItem;\n            params.editArgs = observedArgs.editArgs;\n            params.fetchRawDataArgs = observedArgs.fetchRawDataArgs;\n            params.filterItem = observedArgs.filterItem;\n            params.hash = observedArgs.hash;\n            params.memberName = observedArgs.memberName;\n            params.sortItem = observedArgs.sortItem;\n        });\n        this.request.withCredentials = false;\n        this.request.onreadystatechange = this.onSuccess.bind(this);\n        this.request.setRequestHeader('Content-type', 'application/json');\n        this.request.send(JSON.stringify(params));\n    };\n    PivotView.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                // (dataSource as string[][]).push(jsonObject[0].split(',').map(function (e) { return e.replace(/ /g, '').replace(/^\\\"(.+)\\\"$/, \"$1\"); }));\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource && dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotView.prototype.initialLoad = function () {\n        var _this_1 = this;\n        this.cellTemplateFn = this.templateParser(this.cellTemplate);\n        this.tooltipTemplateFn = this.templateParser(this.tooltipTemplate);\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.element, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.element }, this.createElement);\n        }\n        var loadArgs = {\n            dataSourceSettings: isBlazor() ?\n                PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) :\n                this.dataSourceSettings,\n            pivotview: isBlazor() ? undefined : this,\n            fieldsType: {}\n        };\n        this.trigger(events.load, loadArgs, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this_1.dataSourceSettings.dataSource;\n                PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            }\n            else {\n                _this_1.dataSourceSettings = observedArgs.dataSourceSettings;\n            }\n            _this_1.fieldsType = observedArgs.fieldsType;\n            _this_1.updateClass();\n            _this_1.notify(events.initSubComponent, {});\n            if (_this_1.dataSourceSettings.mode !== 'Server') {\n                _this_1.notify(events.initialLoad, {});\n            }\n            if (_this_1.isAdaptive) {\n                _this_1.contextMenuModule.render();\n            }\n            _this_1.notify(events.initToolbar, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Register the internal events.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.addInternalEvents = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.renderPivotGrid, this);\n        this.on(events.contentReady, this.onContentReady, this);\n    };\n    /**\n     * De-Register the internal events.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.removeInternalEvents = function () {\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.renderPivotGrid);\n        this.off(events.contentReady, this.onContentReady);\n    };\n    /**\n     * Get the Pivot widget properties to be maintained in the persisted state.\n     * @returns {string} - string.\n     */\n    PivotView.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings', 'pivotValues', 'gridSettings', 'chartSettings', 'displayOption'];\n        /* eslint-disable */\n        var columnRender = this.gridSettings['columnRender'];\n        this.gridSettings['columnRender'] = undefined;\n        this.chartSettings['tooltipRender'] = undefined;\n        var persistData = this.addOnPersist(keyEntity);\n        this.gridSettings['columnRender'] = columnRender;\n        /* eslint-enable */\n        return persistData;\n    };\n    /**\n     * Loads pivot Layout\n     * @param {string} persistData - Specifies the persist data to be loaded to pivot.\n     * @returns {void}\n     */\n    PivotView.prototype.loadPersistData = function (persistData) {\n        var pivotData;\n        /* eslint-disable */\n        if (isBlazor()) {\n            pivotData = typeof persistData === \"string\" ? JSON.parse(persistData) : persistData;\n            pivotData.dataSourceSettings.dataSource = this.dataSourceSettings.dataSource;\n        }\n        else {\n            pivotData = JSON.parse(persistData);\n        }\n        this.allowServerDataBinding = false;\n        this.setProperties({\n            gridSettings: pivotData.gridSettings,\n            pivotValues: pivotData.pivotValues,\n            chartSettings: pivotData.chartSettings,\n            displayOption: pivotData.displayOption\n        }, true);\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        /* eslint-enable */\n        this.dataSourceSettings = pivotData.dataSourceSettings;\n    };\n    PivotView.prototype.mergePersistPivotData = function () {\n        var blazdataSource;\n        if (isBlazor()) {\n            blazdataSource = this.dataSourceSettings.dataSource;\n        }\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            this.setProperties(JSON.parse(data), true);\n        }\n        if (this.dataSourceSettings.dataSource instanceof Object && isBlazor()) {\n            this.setProperties({ dataSourceSettings: { dataSource: blazdataSource } }, true);\n        }\n    };\n    /**\n     * Method to open conditional formatting dialog.\n     * @returns {void}\n     */\n    PivotView.prototype.showConditionalFormattingDialog = function () {\n        if (this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.showConditionalFormattingDialog();\n        }\n    };\n    /**\n     * Method to open calculated field dialog.\n     * @returns {void}\n     */\n    PivotView.prototype.createCalculatedFieldDialog = function () {\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.createCalculatedFieldDialog();\n        }\n    };\n    /**\n     * It returns the Module name.\n     * @returns {string} - string.\n     * @hidden\n     */\n    PivotView.prototype.getModuleName = function () {\n        return 'pivotview';\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.copy = function (withHeader) {\n        this.grid.copy(withHeader);\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-pivotgrid.html#printmode-string).\n     * @returns {void}\n     * @hidden\n     */\n    // public print(): void {\n    //     this.grid.print();\n    // }\n    /* eslint-disable  */\n    /**\n     * Called internally if any of the property value changed.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'dataSourceSettings':\n                case 'hyperlinkSettings':\n                case 'allowDrillThrough':\n                case 'editSettings':\n                case 'allowDataCompression':\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && newProp.dataSourceSettings.groupSettings && this.dataType === 'pivot') {\n                        this.updateGroupingReport(newProp.dataSourceSettings.groupSettings, 'Date');\n                    }\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && Object.keys(newProp.dataSourceSettings)[0] === 'dataSource') {\n                        if (!isNullOrUndefined(this.savedDataSourceSettings) && this.dataSourceSettings.dataSource.length > 0) {\n                            PivotUtil.updateDataSourceSettings(this, this.savedDataSourceSettings);\n                            this.savedDataSourceSettings = undefined;\n                        }\n                        if ((newProp.dataSourceSettings.dataSource && newProp.dataSourceSettings.dataSource).length === 0) {\n                            this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                            this.setProperties({ dataSourceSettings: { rows: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { columns: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { filters: [] } }, true);\n                        }\n                        if (!this.isStaticRefresh) {\n                            this.pivotValues = [];\n                            this.engineModule.fieldList = null;\n                        }\n                        if (this.dataSourceSettings.groupSettings.length > 0) {\n                            this.clonedDataSet = newProp.dataSourceSettings.dataSource;\n                            this.updateGroupingReport(this.dataSourceSettings.groupSettings, 'Date');\n                        }\n                        this.showWaitingPopup();\n                        clearTimeout(this.timeOutObj);\n                        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n                    }\n                    else {\n                        if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.axisFieldModule.render();\n                            }\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                                this.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                this.pivotFieldListModule.axisFieldModule.render();\n                                if (this.pivotFieldListModule.treeViewModule.fieldTable && !this.isAdaptive) {\n                                    this.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        else {\n                            this.remoteData = [];\n                            if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '' &&\n                                ('type' in newProp.dataSourceSettings || 'url' in newProp.dataSourceSettings)) {\n                                this.engineModule.fieldList = null;\n                                this.loadData();\n                            }\n                            else {\n                                if (newProp.dataSourceSettings && 'dataSource' in newProp.dataSourceSettings) {\n                                    if (newProp.dataSourceSettings.dataSource && newProp.dataSourceSettings.dataSource.length === 0) {\n                                        this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                                        this.setProperties({ dataSourceSettings: { rows: [] } }, true);\n                                        this.setProperties({ dataSourceSettings: { columns: [] } }, true);\n                                        this.setProperties({ dataSourceSettings: { values: [] } }, true);\n                                        this.setProperties({ dataSourceSettings: { filters: [] } }, true);\n                                    }\n                                    if (!this.isStaticRefresh) {\n                                        this.engineModule.fieldList = null;\n                                        this.pivotValues = [];\n                                    }\n                                }\n                                this.notify(events.initialLoad, {});\n                            }\n                        }\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.layoutRefresh();\n                    break;\n                case 'pivotValues':\n                case 'displayOption':\n                    if (!this.showToolbar && newProp.displayOption && Object.keys(newProp.displayOption).length === 1 &&\n                        newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                        if (this.showGroupingBar || this.showFieldList) {\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                this.pivotFieldListModule.destroy();\n                            }\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.groupingBarModule.destroy();\n                            }\n                            this.notify(events.initSubComponent, this);\n                        }\n                        if (!this.grid && newProp.displayOption.view !== 'Chart') {\n                            this.renderEmptyGrid();\n                            if (newProp.displayOption.view === 'Table') {\n                                if (this.chartModule) {\n                                    this.chartModule.destroy();\n                                    this.chart = undefined;\n                                    this.chartModule = undefined;\n                                }\n                            }\n                        }\n                        else if (!this.chartModule && this.displayOption.view !== 'Table') {\n                            this.chartModule = new PivotChart();\n                        }\n                    }\n                    else if (this.showToolbar && !isNullOrUndefined(newProp.displayOption) && newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                    }\n                    var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n                    if (!isNullOrUndefined(engine.fieldList) || !isNullOrUndefined(engine.pivotValues)) {\n                        this.notify(events.dataReady, {});\n                    }\n                    break;\n                case 'gridSettings':\n                    this.lastGridSettings = newProp.gridSettings;\n                    this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n                        this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n                        this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n                    if (this.allowGrouping && this.groupingModule && !this.isCellBoxMultiSelection) {\n                        this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n                        this.isCellBoxMultiSelection = true;\n                    }\n                    this.renderModule.updateGridSettings();\n                    break;\n                case 'chartSettings':\n                    if (this.showGroupingBar &&\n                        this.groupingBarModule &&\n                        (Object.keys(newProp.chartSettings).indexOf('enableMultipleAxis') !== -1 ||\n                            (newProp.chartSettings.chartSeries && Object.keys(newProp.chartSettings.chartSeries).indexOf('type') !== -1))) {\n                        this.groupingBarModule.renderLayout();\n                    }\n                    if (isNullOrUndefined(this.chartModule) && this.displayOption.view !== 'Table') {\n                        this.chartModule = new PivotChart();\n                    }\n                    var engineModule = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n                    if (!isNullOrUndefined(this.chartModule) && !isNullOrUndefined(engineModule.pivotValues)) {\n                        this.chartModule.loadChart(this, this.chartSettings);\n                    }\n                    if (!isNullOrUndefined(engineModule.pivotValues) && !isNullOrUndefined(engineModule.fieldList)) {\n                        this.notify(events.uiUpdate, this);\n                    }\n                    break;\n                case 'locale':\n                case 'currencyCode':\n                case 'enableRtl':\n                    if (this.tooltip) {\n                        this.tooltip.destroy();\n                    }\n                    if (this.dataSourceSettings.groupSettings && this.dataSourceSettings.groupSettings.length > 0 && this.clonedDataSet && !isBlazor()) {\n                        var dataSet = PivotUtil.getClonedData(this.clonedDataSet);\n                        this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                    if (isBlazor()) {\n                        this.refresh();\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    this.updateClass();\n                    break;\n                case 'enableValueSorting':\n                    this.enableValueSorting = newProp.enableValueSorting;\n                    this.updateDataSource();\n                    break;\n                case 'showGroupingBar':\n                    if (this.element.querySelector('.e-grouping-bar')) {\n                        this.element.querySelector('.e-grouping-bar').remove();\n                    }\n                    if (isNullOrUndefined(newProp.showFieldList))\n                        this.renderPivotGrid();\n                    break;\n                case 'showFieldList':\n                    this.initialLoad();\n                    break;\n                case 'groupingBarSettings':\n                    if (newProp.groupingBarSettings && this.showGroupingBar && this.groupingBarModule &&\n                        Object.keys(newProp.groupingBarSettings).indexOf(\"showFieldsPanel\") > -1) {\n                        this.groupingBarModule.RefreshFieldsPanel();\n                        this.layoutRefresh();\n                    }\n                    else {\n                        this.axisFieldModule.render();\n                    }\n                    break;\n                case 'showTooltip':\n                    this.renderToolTip();\n                    break;\n                case 'toolbar':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.refreshToolbar();\n                    }\n                    break;\n                case 'chartTypes':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.createChartMenu();\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.showGroupingBar) {\n                        if (this.axisFieldModule) {\n                            this.axisFieldModule.render();\n                        }\n                    }\n                    if (this.showFieldList && this.pivotFieldListModule && this.pivotFieldListModule.axisFieldModule) {\n                        this.pivotFieldListModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotFieldListModule.axisFieldModule.render();\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * Method to parse the template string.\n     */\n    PivotView.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Method to get the cell template.\n     */\n    PivotView.prototype.getCellTemplate = function () {\n        return this.cellTemplateFn;\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.appendHtml = function (node, innerHtml) {\n        var tempElement = document.createElement('div');\n        tempElement.innerHTML = innerHtml;\n        if (!isNullOrUndefined(tempElement.firstChild)) {\n            node.appendChild(tempElement.firstChild);\n        }\n        return node;\n    };\n    /**\n     * Render the UI section of PivotView.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.renderPivotGrid = function () {\n        this.clearTemplate();\n        if (this.currentView === 'Table') {\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        if (this.chartModule) {\n            this.chartModule.engineModule = this.engineModule;\n            this.chartModule.loadChart(this, this.chartSettings);\n            if (this.enableRtl && this.chart && document.body.getAttribute('dir') !== 'rtl') {\n                addClass([this.chart.element], cls.PIVOTCHART_LTR);\n            }\n        }\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.notify(events.uiUpdate, this);\n            if (this.pivotFieldListModule && this.allowDeferLayoutUpdate) {\n                this.pivotFieldListModule.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            }\n        }\n        if (this.enableVirtualization) {\n            this.virtualscrollModule = new VirtualScroll(this);\n        }\n        if (this.allowDrillThrough || this.editSettings.allowEditing) {\n            this.drillThroughModule = new DrillThrough(this);\n        }\n        if (this.displayOption.view !== 'Chart') {\n            if (this.hyperlinkSettings) {\n                this.isRowCellHyperlink = (this.hyperlinkSettings.showRowHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isColumnCellHyperlink = (this.hyperlinkSettings.showColumnHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isValueCellHyperlink = (this.hyperlinkSettings.showValueCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isSummaryCellHyperlink = (this.hyperlinkSettings.showSummaryCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.applyHyperlinkSettings();\n            }\n            this.renderModule = new Render(this);\n            this.renderModule.render();\n        }\n        else if (this.grid) {\n            remove(this.grid.element);\n        }\n        if (this.allowConditionalFormatting) {\n            this.applyFormatting(this.pivotValues);\n        }\n        if (this.showToolbar) {\n            if (this.displayOption.view === 'Both' && this.chart && this.grid) {\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n                if (this.toolbarModule && this.toolbarModule.toolbar) {\n                    this.toolbarModule.toolbar.width = this.getGridWidthAsNumber() - 2;\n                }\n                this.chart.element.style.width = formatUnit(this.getGridWidthAsNumber());\n                this.chart.width = formatUnit(this.getGridWidthAsNumber());\n                if (this.currentView === 'Table') {\n                    this.grid.element.style.display = '';\n                    this.chart.element.style.display = 'none';\n                    if (this.chartSettings.enableMultipleAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                }\n                else {\n                    this.grid.element.style.display = 'none';\n                    this.chart.element.style.display = '';\n                    if (this.chartSettings.enableMultipleAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = '';\n                    }\n                }\n            }\n        }\n        if (this.toolbarModule) {\n            if (this.showFieldList && select('#' + this.element.id + '_PivotFieldList', this.element)) {\n                select('#' + this.element.id + '_PivotFieldList', this.element).style.display = 'none';\n            }\n            if (this.toolbar && this.toolbar.indexOf('FieldList') !== -1 &&\n                this.showToolbar && this.element.querySelector('.e-toggle-field-list')) {\n                this.element.querySelector('.e-toggle-field-list').style.display = 'none';\n            }\n            if (this.toolbarModule && this.toolbarModule.action !== 'New' && this.toolbarModule.action !== 'Load'\n                && this.toolbarModule.action !== 'Remove') {\n                this.isModified = true;\n            }\n            if (!this.isInitialRendering) {\n                this.isModified = false;\n                this.isInitialRendering = !this.isInitialRendering;\n            }\n            this.toolbarModule.action = '';\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.showWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            showSpinner(this.grid.element);\n        }\n        else {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.hideWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            hideSpinner(this.grid.element);\n        }\n        else {\n            hideSpinner(this.element);\n        }\n    };\n    /* eslint-disable  */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot View component.\n     * @function updateDataSource\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.updateDataSource = function (isRefreshGrid) {\n        var _this_1 = this;\n        this.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        pivot.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n            }\n            pivot.updatePageSettings(false);\n            if (pivot.dataType === 'pivot' && pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                var interopArguments = {};\n                if (isSorted) {\n                    pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var sortInfo = {\n                            name: pivot.lastSortInfo.name,\n                            order: pivot.lastSortInfo.order\n                        };\n                        var sortArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastSortInfo], pivot.lastSortInfo);\n                        interopArguments = { 'key': 'onSort', 'arg': sortArgs };\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onSort(pivot.lastSortInfo);\n                    }\n                    pivot.lastSortInfo = {};\n                }\n                if (isAggChange) {\n                    if (isBlazor()) {\n                        /* eslint-disable */\n                        var sfBlazor = 'sfBlazor';\n                        var aggregateArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastAggregationInfo], pivot.lastAggregationInfo);\n                        interopArguments = { 'key': 'onAggregation', 'arg': aggregateArgs };\n                        /* eslint-enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                    }\n                    pivot.lastAggregationInfo = {};\n                }\n                if (isCalcChange) {\n                    if (isBlazor()) {\n                        /* eslint-disable */\n                        var dataSourceSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                        interopArguments = {\n                            'key': 'onCalcOperation',\n                            'arg': {\n                                lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                values: dataSourceSettings.values,\n                                calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings\n                            }\n                        };\n                        /* eslint-enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                    }\n                    pivot.lastCalcFieldInfo = {};\n                }\n                if (isFiltered) {\n                    if (isBlazor()) {\n                        /* eslint-disable */\n                        var filterArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.lastFilterInfo], pivot.lastFilterInfo);\n                        var filterSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                        interopArguments = {\n                            'key': 'onFilter',\n                            'arg': { 'lastFilterInfo': filterArgs, 'filterSettings': filterSettings }\n                        };\n                        /* eslint-enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                    }\n                    else {\n                        pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastFilterInfo = {};\n                }\n                if (isBlazor()) {\n                    /* eslint-disable */\n                    pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', interopArguments['key'], interopArguments['arg']).then(function (data) {\n                        pivot.updateBlazorData(data, pivot);\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                            pivot.calculatedFieldModule.endDialog();\n                            pivot.calculatedFieldModule.isRequireUpdate = false;\n                        }\n                    });\n                    /* eslint-enable */\n                }\n                else {\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    if (pivot.dataSourceSettings.mode !== 'Server') {\n                        pivot.enginePopulatedEventMethod('updateDataSource');\n                    }\n                }\n            }\n            else {\n                if (pivot.dataType === 'olap') {\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.olapEngineModule.fieldList,\n                        savedFieldListData: pivot.olapEngineModule.fieldListData,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj\n                    };\n                    if (isCalcChange || isSorted) {\n                        pivot.olapEngineModule.savedFieldList = pivot.olapEngineModule.fieldList;\n                        pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n                        if (isCalcChange) {\n                            pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        else {\n                            pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n                            pivot.lastSortInfo = {};\n                        }\n                    }\n                    else {\n                        pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n                    }\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.olapEngineModule.pivotValues }, true);\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n                else {\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.engineModule.fieldList,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj,\n                        fieldsType: pivot.fieldsType,\n                        clonedReport: pivot.clonedReport\n                    };\n                    /* eslint-enable @typescript-eslint/indent */\n                    if (isBlazor() && pivot.enableVirtualization) {\n                        /* eslint-disable */\n                        var sfBlazor = 'sfBlazor';\n                        var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                        var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                        pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                            pivot.updateBlazorData(data, pivot);\n                            pivot.allowServerDataBinding = false;\n                            pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                            delete pivot.bulkChanges.pivotValues;\n                            pivot.allowServerDataBinding = true;\n                            pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        });\n                    }\n                    else if (pivot.dataSourceSettings.mode === 'Server') {\n                        if (isSorted)\n                            pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                        else if (isAggChange)\n                            pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                        else if (isCalcChange)\n                            pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                        else if (isFiltered)\n                            pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                        else\n                            pivot.getEngine('onDrop', null, null, null, null, null, null);\n                        /* eslint-enable */\n                        pivot.lastSortInfo = {};\n                        pivot.lastAggregationInfo = {};\n                        pivot.lastCalcFieldInfo = {};\n                        pivot.lastFilterInfo = {};\n                    }\n                    else {\n                        pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource');\n                    }\n                }\n            }\n        });\n        //});\n    };\n    /**\n     * Export Pivot widget data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {void}\n     */\n    PivotView.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization && this.dataSourceSettings.mode !== 'Server') {\n            this.excelExportModule.exportToExcel('Excel', excelExportProperties);\n        }\n        else {\n            this.exportType = 'Excel';\n            this.grid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export PivotGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {void}\n     */\n    PivotView.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization && this.dataSourceSettings.mode !== 'Server') {\n            this.excelExportModule.exportToExcel('CSV', excelExportProperties);\n        }\n        else {\n            this.exportType = 'CSV';\n            this.grid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export Pivot widget data to PDF document.\n     * @param  {PdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {void}\n     */\n    PivotView.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (this.enableVirtualization && this.dataSourceSettings.mode !== 'Server') {\n            this.pdfExportModule.exportToPDF(pdfExportProperties);\n        }\n        else {\n            this.grid.pdfExport(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n        }\n    };\n    /**\n     * Export method for the chart.\n     * @param {ExportType} type - Defines the export type.\n     * @param {string} fileName - Defines file name of export document.\n     * @param {PdfPageOrientation} orientation - Defines the page orientation on pdf export(0 for Portrait mode, 1 for Landscape mode).\n     * @param {number} width - Defines width of the export document.\n     * @param {number} height - Defines height of the export document.\n     * @returns {void}\n     */\n    PivotView.prototype.chartExport = function (type, fileName, orientation, width, height) {\n        if (this.chart && this.chart.enableExport) {\n            this.chart.exportModule.export(type, fileName, orientation, null, width, height);\n        }\n    };\n    /**\n     * Print method for the chart.\n     * @returns {void}\n     */\n    PivotView.prototype.printChart = function () {\n        if (this.chart) {\n            this.chart.print();\n        }\n    };\n    /** @hidden */\n    /* eslint-disable  */\n    PivotView.prototype.onDrill = function (target, chartDrillInfo) {\n        var _this_1 = this;\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = '';\n        var axis = '';\n        var action = '';\n        if (chartDrillInfo) {\n            fieldName = chartDrillInfo.fieldName;\n            axis = chartDrillInfo.cell.axis;\n            action = chartDrillInfo.isDrilled ? 'up' : 'down';\n        }\n        else {\n            fieldName = target.parentElement.getAttribute('fieldname');\n            axis = target.parentElement.classList.contains(cls.ROWSHEADER) ? 'row' : 'column';\n            action = target.classList.contains(cls.COLLAPSE) ? 'up' : 'down';\n        }\n        if (this.dataType === 'pivot') {\n            var clonedDrillMembers_1 = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n            var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n                this.engineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n            var memberName = currentCell.valueSort.levelName.\n                split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n            var fieldAvail = false;\n            if (this.dataSourceSettings.drilledMembers.length === 0) {\n                this.setProperties({ dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberName], delimiter: delimiter }] } }, true);\n            }\n            else {\n                var drillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n                for (var fCnt = 0; fCnt < drillMembers.length; fCnt++) {\n                    var field = drillMembers[fCnt];\n                    memberName = memberName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                    delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                    if (field.name === fieldName) {\n                        fieldAvail = true;\n                        var memIndex = field.items.indexOf(memberName);\n                        if (memIndex > -1) {\n                            field.items.splice(memIndex, 1);\n                        }\n                        else {\n                            field.items.push(memberName);\n                        }\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                this.setProperties({ dataSourceSettings: { drilledMembers: drillMembers } }, true);\n                if (!fieldAvail) {\n                    this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberName], delimiter: delimiter });\n                }\n            }\n            this.showWaitingPopup();\n            var pivot_1 = this;\n            //setTimeout(() => {\n            var drilledItem_1 = {\n                fieldName: fieldName, memberName: memberName, delimiter: delimiter,\n                axis: axis,\n                action: action,\n                currentCell: currentCell\n            };\n            var drillArgs_1 = {\n                drillInfo: drilledItem_1,\n                pivotview: isBlazor() ? undefined : pivot_1,\n                cancel: false\n            };\n            pivot_1.trigger(events.drill, drillArgs_1, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var args = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this_1.dataSourceSettings)\n                    };\n                    pivot_1.trigger(events.enginePopulating, args);\n                    pivot_1.setProperties({ dataSourceSettings: args.dataSourceSettings }, true);\n                    if (pivot_1.enableVirtualization) {\n                        if (isBlazor()) {\n                            /* eslint-disable */\n                            var sfBlazor = 'sfBlazor';\n                            var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                            var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem_1], drilledItem_1);\n                            var args_1 = window[sfBlazor].copyWithoutCircularReferences([drillArgs_1], drillArgs_1);\n                            pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                                pivot_1.updateBlazorData(data, pivot_1);\n                                pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                                pivot_1.allowServerDataBinding = false;\n                                pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                                delete pivot_1.bulkChanges.pivotValues;\n                                pivot_1.allowServerDataBinding = true;\n                                pivot_1.renderPivotGrid();\n                            });\n                            /* eslint-enable */\n                        }\n                        else if (_this_1.dataSourceSettings.mode === 'Server') {\n                            _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                        }\n                        else {\n                            pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                            pivot_1.engineModule.onDrill(drilledItem_1);\n                        }\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_1.engineModule.generateGridData(pivot_1.dataSourceSettings);\n                    }\n                    if (!(isBlazor() && pivot_1.enableVirtualization)) {\n                        pivot_1.allowServerDataBinding = false;\n                        pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                        delete pivot_1.bulkChanges.pivotValues;\n                        pivot_1.allowServerDataBinding = true;\n                        var eventArgs = {\n                            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(args.dataSourceSettings),\n                            pivotValues: _this_1.pivotValues\n                        };\n                        _this_1.trigger(events.enginePopulated, eventArgs);\n                        pivot_1.engineModule.pivotValues = eventArgs.pivotValues;\n                        pivot_1.renderPivotGrid();\n                    }\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers_1 } }, true);\n                }\n            });\n        }\n        else {\n            this.onOlapDrill(fieldName, axis, action, delimiter, target, chartDrillInfo);\n        }\n    };\n    /* eslint-disable */\n    PivotView.prototype.onOlapDrill = function (fieldName, axis, action, delimiter, target, chartDrillInfo) {\n        var _this_1 = this;\n        var pivot = this;\n        var clonedDrillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n            this.olapEngineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n        var tupInfo = axis === 'row' ? this.olapEngineModule.tupRowInfo[currentCell.ordinal] :\n            this.olapEngineModule.tupColumnInfo[currentCell.ordinal];\n        var drillInfo = {\n            axis: axis,\n            action: action,\n            fieldName: fieldName,\n            delimiter: '~~',\n            memberName: tupInfo.uNameCollection,\n            currentCell: currentCell\n        };\n        this.showWaitingPopup();\n        var drillArgs = {\n            drillInfo: drillInfo,\n            pivotview: isBlazor() ? undefined : pivot,\n            cancel: false\n        };\n        var isAttributeHierarchy = this.olapEngineModule.fieldList[drillInfo.fieldName] && this.olapEngineModule.fieldList[drillInfo.fieldName].isHierarchy;\n        var fieldPos = tupInfo.drillInfo.map(function (item) { return item.hierarchy; }).indexOf(currentCell.hierarchy.toString());\n        var clonedMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        if (drillInfo && drillInfo.action === 'down') {\n            var fields = tupInfo.drillInfo.map(function (item) { return item.uName; });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, (this.olapEngineModule.fieldList[currentCell.hierarchy] && !this.olapEngineModule.fieldList[currentCell.hierarchy].hasAllMember) ? currentCell.valueSort.levelName.split(this.dataSourceSettings.valueSortSettings.headerDelimiter).length - 1 : fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                var drillSet = drillSets[key];\n                for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n                    var drillMembers = clonedMembers[i];\n                    var memberItem = drillSet;\n                    if (drillMembers.delimiter) {\n                        memberItem = memberItem.replace(/~~/g, drillMembers.delimiter);\n                    }\n                    var items = [];\n                    for (var itemPos = 0; itemPos < drillMembers.items.length; itemPos++) {\n                        if (drillMembers.items[itemPos].indexOf(memberItem) !== 0) {\n                            items[items.length] = drillMembers.items[itemPos];\n                        }\n                    }\n                    drillMembers.items = items;\n                }\n            }\n            this.olapEngineModule.drilledSets[currentCell.actualText] = tupInfo.members[fieldPos];\n            drillInfo.memberName = member;\n            var drillItem = [];\n            for (var _a = 0, clonedMembers_1 = clonedMembers; _a < clonedMembers_1.length; _a++) {\n                var field = clonedMembers_1[_a];\n                if (field.name === drillInfo.fieldName) {\n                    drillItem.push(field);\n                }\n            }\n            if (drillItem.length > 0) {\n                if (drillItem[0].delimiter) {\n                    member = member.replace(/~~/g, drillItem[0].delimiter);\n                }\n                var index = PivotUtil.inArray(member, drillItem[0].items);\n                if (index === -1) {\n                    drillItem[0].items.push(member);\n                }\n                if (isAttributeHierarchy) {\n                    var i = 0;\n                    while (i < drillItem[0].items.length) {\n                        if (drillItem[0].items[i] === member) {\n                            drillItem[0].items.splice(i, 1);\n                        }\n                        else {\n                            ++i;\n                        }\n                    }\n                }\n            }\n            else if (!isAttributeHierarchy) {\n                var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                if (!clonedMembers) {\n                    clonedMembers = [drilledMember];\n                }\n                else {\n                    clonedMembers.push(drilledMember);\n                }\n            }\n            drillArgs.drillInfo.memberName = member;\n            this.setProperties({ dataSourceSettings: { drilledMembers: clonedMembers } }, true);\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var args = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this_1.dataSourceSettings)\n                    };\n                    _this_1.trigger(events.enginePopulating, args);\n                    _this_1.setProperties({ dataSourceSettings: args.dataSourceSettings }, true);\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    var eventArgs = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(args.dataSourceSettings),\n                        pivotValues: pivot.olapEngineModule.pivotValues\n                    };\n                    _this_1.trigger(events.enginePopulated, eventArgs);\n                    _this_1.olapEngineModule.pivotValues = eventArgs.pivotValues;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n        else {\n            delete this.olapEngineModule.drilledSets[currentCell.actualText];\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            var fields = tupInfo.drillInfo.map(function (item) { return item.uName; });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var drillSet = drillSets[key];\n                var drillItemCollection = [];\n                for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n                    var drillItem = clonedMembers[i];\n                    var member_1 = drillSet;\n                    if (drillItem.name === drillInfo.fieldName) {\n                        drillItemCollection.push(drillItem);\n                    }\n                    if (drillItem.delimiter) {\n                        member_1 = drillSet.replace(/~~/g, drillItem.delimiter);\n                    }\n                    if (!isAttributeHierarchy) {\n                        var items = [];\n                        for (var itemPos = 0; itemPos < drillItem.items.length; itemPos++) {\n                            if (drillItem.items[itemPos].indexOf(member_1) !== 0) {\n                                items[items.length] = drillItem.items[itemPos];\n                            }\n                        }\n                        drillItem.items = items;\n                    }\n                }\n                if (isAttributeHierarchy) {\n                    if (drillItemCollection.length > 0) {\n                        if (drillItemCollection[0].delimiter) {\n                            member = member.replace(/~~/g, drillItemCollection[0].delimiter);\n                        }\n                        var index = PivotUtil.inArray(member, drillItemCollection[0].items);\n                        if (index === -1) {\n                            drillItemCollection[0].items.push(member);\n                        }\n                    }\n                    else {\n                        var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                        if (!clonedMembers) {\n                            clonedMembers = [drilledMember];\n                        }\n                        else {\n                            clonedMembers.push(drilledMember);\n                        }\n                    }\n                }\n            }\n            var drilledMembers_1 = [];\n            for (var _c = 0, clonedMembers_2 = clonedMembers; _c < clonedMembers_2.length; _c++) {\n                var fields_1 = clonedMembers_2[_c];\n                if (fields_1.items.length > 0) {\n                    drilledMembers_1.push(fields_1);\n                }\n            }\n            this.setProperties({ dataSourceSettings: { drilledMembers: clonedMembers } }, true);\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var args = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this_1.dataSourceSettings)\n                    };\n                    _this_1.trigger(events.enginePopulating, args);\n                    _this_1.setProperties({ dataSourceSettings: args.dataSourceSettings }, true);\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: drilledMembers_1 } }, true);\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    var eventArgs = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(args.dataSourceSettings),\n                        pivotValues: pivot.olapEngineModule.pivotValues\n                    };\n                    _this_1.trigger(events.enginePopulated, eventArgs);\n                    _this_1.olapEngineModule.pivotValues = eventArgs.pivotValues;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n    };\n    /* eslint-enable */\n    PivotView.prototype.onContentReady = function () {\n        if (this.currentView !== 'Table') {\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        this.isPopupClicked = false;\n        if (this.showFieldList) {\n            hideSpinner(this.pivotFieldListModule.fieldListSpinnerElement);\n        }\n        else if (this.fieldListSpinnerElement) {\n            hideSpinner(this.fieldListSpinnerElement);\n        }\n        if (!this.isEmptyGrid) {\n            if ((this.dataSourceSettings.mode === 'Server' && this.isServerWaitingPopup) || this.dataSourceSettings.mode === 'Local') {\n                this.hideWaitingPopup();\n            }\n            this.trigger(events.dataBound);\n        }\n        else {\n            this.isEmptyGrid = false;\n            this.notEmpty = true;\n        }\n        if (this.grid) {\n            var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n            if (this.enableVirtualization && engine) {\n                if (this.element.querySelector('.' + cls.MOVABLECONTENT_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).appendChild(this.virtualDiv);\n                }\n                if (this.element.querySelector('.' + cls.MOVABLEHEADER_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).appendChild(this.virtualHeaderDiv);\n                }\n                else {\n                    this.virtualHeaderDiv =\n                        this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV);\n                }\n                var movableTable = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                var vHeight = (this.gridSettings.rowHeight * engine.rowCount + 0.1 - movableTable.clientHeight);\n                if (vHeight > this.scrollerBrowserLimit) {\n                    this.verticalScrollScale = vHeight / this.scrollerBrowserLimit;\n                    vHeight = this.scrollerBrowserLimit;\n                }\n                var vWidth = this.gridSettings.columnWidth * engine.columnCount;\n                if (vWidth > this.scrollerBrowserLimit) {\n                    this.horizontalScrollScale = vWidth / this.scrollerBrowserLimit;\n                    vWidth = this.scrollerBrowserLimit;\n                }\n                setStyleAttribute(this.virtualDiv, {\n                    height: (vHeight > 0.1 ? vHeight : 0.1) + 'px',\n                    width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                setStyleAttribute(this.virtualHeaderDiv, {\n                    height: 0, width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                var mCnt = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n                var fCnt = this.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n                var mHdr = this.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n                if (this.isAdaptive) {\n                    mCnt.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).children[0].style.minHeight = \"1px\";\n                    mCnt.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).style.minHeight = \"1px\";\n                }\n                var ele = this.isAdaptive ? mCnt : mCnt.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV);\n                var verOffset = (mCnt.parentElement.scrollTop > this.scrollerBrowserLimit) ?\n                    mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() :\n                    -(((mCnt.parentElement.scrollTop * this.verticalScrollScale) - this.scrollPosObject.verticalSection - mCnt.parentElement.scrollTop)) + 'px)';\n                var horiOffset = (ele.scrollLeft > this.scrollerBrowserLimit) ?\n                    (mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',') :\n                    'translate(' + -(((ele.scrollLeft * this.horizontalScrollScale) -\n                        this.scrollPosObject.horizontalSection - ele.scrollLeft)) + 'px,';\n                setStyleAttribute(fCnt.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + verOffset\n                });\n                setStyleAttribute(mCnt.querySelector('.e-table'), {\n                    transform: horiOffset + verOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: horiOffset + 0 + 'px)'\n                });\n                /* eslint-disable */\n                if (!isNullOrUndefined(this.resizedValue)) {\n                    this.element.querySelector('.e-frozenscrollbar').style.width = this.resizedValue + 'px';\n                }\n                this.grid.element.querySelector('.' + cls.MOVABLECHILD_DIV).style.width = (vWidth + (mCnt.parentElement.offsetWidth - mCnt.parentElement.clientWidth)) + 'px';\n                var colValues = this.dataType === 'pivot' ? (this.dataSourceSettings.valueAxis === 'column' ? this.dataSourceSettings.values.length : 1) : 1;\n                var exactSize = (this.pageSettings.columnSize * colValues * this.gridSettings.columnWidth);\n                var hScrollPos = (ele.scrollWidth - (ele.scrollLeft + ele.offsetWidth));\n                if (this.virtualscrollModule && exactSize > 0 && hScrollPos <= exactSize && ele.scrollLeft > 0) {\n                    this.virtualDiv.style.display = 'none';\n                    var mCntScrollPos = (mCnt.scrollWidth - (mCnt.scrollLeft + mCnt.offsetWidth));\n                    this.virtualDiv.style.display = '';\n                    var mCntVScrollPos = (mCnt.scrollWidth - (mCnt.scrollLeft + mCnt.offsetWidth));\n                    this.scrollPosObject.horizontalSection -= (hScrollPos <= 0 ? (mCntScrollPos > hScrollPos ? mCntScrollPos : -mCntVScrollPos) :\n                        (mCntVScrollPos === mCntScrollPos ? (mCntScrollPos - hScrollPos) :\n                            (mCntScrollPos < mCntVScrollPos && (hScrollPos === mCntVScrollPos || hScrollPos > mCntScrollPos) ?\n                                -(mCntVScrollPos - mCntScrollPos) : 0)));\n                    horiOffset = (ele.scrollLeft > this.scrollerBrowserLimit) ?\n                        (mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',') :\n                        'translate(' + -(((ele.scrollLeft * this.horizontalScrollScale) -\n                            this.scrollPosObject.horizontalSection - ele.scrollLeft)) + 'px,';\n                    setStyleAttribute(mCnt.querySelector('.e-table'), {\n                        transform: horiOffset + verOffset\n                    });\n                    setStyleAttribute(mHdr.querySelector('.e-table'), {\n                        transform: horiOffset + 0 + 'px)'\n                    });\n                }\n                if (this.grid.height !== 'auto') {\n                    this.grid.contentModule.setHeightToContent(this.virtualDiv.offsetHeight + movableTable.clientHeight);\n                }\n                else {\n                    this.grid.contentModule.setHeightToContent(this.element.querySelector('.' + cls.FROZENCONTENT_DIV + ' .' + cls.TABLE).offsetHeight);\n                }\n                /* eslint-enable */\n            }\n            if (this.currentView !== 'Chart') {\n                this.grid.hideScroll();\n            }\n            if (this.showGroupingBar) {\n                this.element.style.minWidth = '400px';\n                this.grid.element.style.minWidth = '400px';\n            }\n            else {\n                this.element.style.minWidth = '310px';\n                this.grid.element.style.minWidth = '310px';\n            }\n        }\n        this.unwireEvents();\n        this.wireEvents();\n        this.isChartLoaded = false;\n        if (this.cellTemplate && isBlazor()) {\n            var gridCells = Object.keys(this.gridCellCollection);\n            if (gridCells.length > 0) {\n                for (var _i = 0, gridCells_1 = gridCells; _i < gridCells_1.length; _i++) {\n                    var cell = gridCells_1[_i];\n                    var templateObject = {};\n                    var tCell = this.gridCellCollection[cell];\n                    var colIndex = Number(tCell.getAttribute('aria-colindex'));\n                    var rowIndex = Number(tCell.getAttribute('index'));\n                    var pivotCell = this.pivotValues[rowIndex][colIndex];\n                    templateObject.axis = pivotCell.axis;\n                    if (templateObject.axis === 'column' || templateObject.axis === 'row') {\n                        templateObject.fieldName = pivotCell.valueSort.axis;\n                        templateObject.formattedText = pivotCell.formattedText;\n                    }\n                    else {\n                        templateObject.fieldName = pivotCell.actualText;\n                        templateObject.formattedText = pivotCell.formattedText;\n                        templateObject.value = pivotCell.value;\n                    }\n                    templateObject.rowHeaders = pivotCell.rowHeaders;\n                    templateObject.columnHeaders = pivotCell.columnHeaders;\n                    templateObject.rowIndex = pivotCell.rowIndex;\n                    templateObject.columnIndex = pivotCell.colIndex;\n                    templateObject.isGrandTotal = pivotCell.isGrandSum;\n                    templateObject.isTotal = pivotCell.isSum;\n                    templateObject.rowSpan = pivotCell.rowSpan;\n                    templateObject.columnSpan = pivotCell.colSpan;\n                    templateObject.isDrilled = pivotCell.isDrilled;\n                    templateObject.hasChild = pivotCell.hasChild;\n                    templateObject.valueSortInfo = pivotCell.valueSort;\n                    /* eslint-disable-next-line */\n                    var element = this.getCellTemplate()(templateObject, this, 'cellTemplate', this.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.enableHtmlSanitizer) {\n                            this.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                updateBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate', this);\n            }\n        }\n    };\n    PivotView.prototype.setToolTip = function (args) {\n        var colIndex = Number(args.target.getAttribute('aria-colindex'));\n        var rowIndex = Number(args.target.getAttribute('index'));\n        var cell = (this.dataSourceSettings.values.length > 0 && this.pivotValues &&\n            this.pivotValues[rowIndex] && this.pivotValues[rowIndex][colIndex]) ?\n            this.pivotValues[rowIndex][colIndex] : undefined;\n        this.tooltip.content = '';\n        var aggregateType;\n        var caption;\n        var hasField = false;\n        if (cell && this.dataType === 'olap') {\n            if (this.olapEngineModule.fieldList[cell.actualText]) {\n                var field = this.olapEngineModule.fieldList[cell.actualText];\n                aggregateType = field.isCalculatedField ? field.type : field.aggregateType;\n                caption = (this.olapEngineModule.dataFields[cell.actualText] &&\n                    this.olapEngineModule.dataFields[cell.actualText].caption) ?\n                    this.olapEngineModule.dataFields[cell.actualText].caption : field.caption;\n                hasField = true;\n            }\n        }\n        else {\n            if (cell && this.engineModule.fieldList[cell.actualText]) {\n                var field = this.engineModule.fieldList[cell.actualText];\n                aggregateType = field.aggregateType;\n                caption = field.caption;\n                hasField = true;\n            }\n        }\n        if (cell && hasField) {\n            var rowHeaders = this.getRowText(rowIndex, 0);\n            var columnHeaders = this.getColText(0, colIndex, rowIndex);\n            var value = ((cell.formattedText === '0' || cell.formattedText === '') ? this.localeObj.getConstant('noValue') :\n                cell.formattedText);\n            if (this.tooltipTemplate && this.getTooltipTemplate() !== undefined) {\n                var rowFields = this.getHeaderField(rowIndex, colIndex, 'row');\n                var columnFields = this.getHeaderField(rowIndex, colIndex, 'column');\n                var templateObject = {\n                    rowHeaders: rowHeaders,\n                    columnHeaders: columnHeaders,\n                    aggregateType: aggregateType,\n                    valueField: caption,\n                    value: value,\n                    rowFields: rowFields,\n                    columnFields: columnFields\n                };\n                this.tooltip.content = this.getTooltipTemplate()(templateObject, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                this.tooltip.content = '<div class=' + cls.PIVOTTOOLTIP + '><p class=' + cls.TOOLTIP_HEADER + '>' +\n                    this.localeObj.getConstant('row') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' +\n                    rowHeaders + '</p></br><p class=' + cls.TOOLTIP_HEADER + '>' + this.localeObj.getConstant('column') +\n                    ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + columnHeaders + '</p></br>' +\n                    (cell.actualText !== '' ? ('<p class=' + cls.TOOLTIP_HEADER + '>' + (this.dataType === 'olap' ? '' :\n                        (this.localeObj.getConstant(aggregateType) + ' ' + this.localeObj.getConstant('of') + ' ')) +\n                        caption + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + value + '</p></div>') : '');\n            }\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.getTooltipTemplate = function () {\n        return this.tooltipTemplateFn;\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.getHeaderField = function (rowIndex, colIndex, axis) {\n        var fields = '';\n        var len;\n        var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n        var delimiter = engineModule.valueSortSettings.headerDelimiter;\n        if (axis === 'row') {\n            len = this.pivotValues[rowIndex][0].valueSort.levelName.toString().split(delimiter).length;\n            for (var i = 0; i < len && engineModule.rows.length > 0 && engineModule.rows[i]; i++) {\n                fields += (i ? ' - ' : '') + ((engineModule.rows[i].caption) ? engineModule.rows[i].caption : engineModule.rows[i].name);\n            }\n        }\n        else {\n            if (engineModule.columns.length > 0) {\n                var pos = engineModule.values.length === 0 ? 0 :\n                    Number(Object.keys(engineModule.headerContent)[Object.keys(engineModule.headerContent).length - 1]);\n                len = this.pivotValues[pos][colIndex].valueSort.levelName.toString().split(delimiter).length;\n                len = engineModule.values.length > 1 ? len - 1 : len;\n            }\n            for (var j = 0; j < len && engineModule.columns.length > 0 && engineModule.columns[j]; j++) {\n                fields += (j ? ' - ' : '') + ((engineModule.columns[j].caption) ? engineModule.columns[j].caption : engineModule.columns[j].name);\n            }\n            /* eslint-enable max-len */\n        }\n        return fields;\n    };\n    PivotView.prototype.getRowText = function (rowIndex, colIndex) {\n        var cell = this.pivotValues[rowIndex][colIndex];\n        var level = cell.level;\n        var rowText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (level > 0 || cell.index === undefined) {\n            rowIndex--;\n            cell = this.pivotValues[rowIndex][colIndex];\n            if (cell.index !== undefined) {\n                if (level > cell.level) {\n                    rowText = rowText + ' - ' + cell.formattedText;\n                    level = level - 1;\n                }\n            }\n        }\n        return rowText.split(' - ').reverse().join(' - ');\n    };\n    PivotView.prototype.getColText = function (rowIndex, colIndex, limit) {\n        var cell = this.pivotValues[0][colIndex];\n        var axis = cell.axis;\n        var colText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (axis !== 'value' && limit > rowIndex) {\n            rowIndex++;\n            if (this.pivotValues[rowIndex]) {\n                cell = this.pivotValues[rowIndex][colIndex];\n                axis = cell.axis;\n                if (cell.type !== 'sum' && cell.type !== 'grand sum' && axis !== 'value') {\n                    colText = colText + ' - ' + cell.formattedText;\n                }\n            }\n        }\n        return colText;\n    };\n    PivotView.prototype.updateClass = function () {\n        if (this.enableRtl) {\n            addClass([this.element], cls.RTL);\n        }\n        else {\n            removeClass([this.element], cls.RTL);\n        }\n        if (this.isAdaptive) {\n            addClass([this.element], cls.DEVICE);\n        }\n        else {\n            removeClass([this.element], cls.DEVICE);\n        }\n    };\n    PivotView.prototype.mouseRclickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        this.lastCellClicked = e.target;\n    };\n    PivotView.prototype.mouseDownHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = true;\n            this.isMouseUp = false;\n            var parent_1 = this.parentAt(e.target, 'TH');\n            this.clearSelection(parent_1, e, Number(parent_1.getAttribute('aria-colindex')), Number(parent_1.getAttribute('index')));\n            this.lastSelectedElement = undefined;\n        }\n    };\n    PivotView.prototype.mouseMoveHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            e.preventDefault();\n            if (this.isMouseDown && e.target) {\n                var ele = e.target;\n                var parentElement = this.parentAt(ele, 'TH');\n                if (this.lastSelectedElement && this.lastSelectedElement !== parentElement &&\n                    parentElement.classList.contains(cls.SELECTED_BGCOLOR)) {\n                    this.lastSelectedElement.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                    this.lastSelectedElement.classList.remove(cls.SELECTED_BGCOLOR);\n                    this.lastSelectedElement = parentElement;\n                }\n                else {\n                    this.lastSelectedElement = parentElement;\n                    parentElement.classList.add(cls.CELL_ACTIVE_BGCOLOR);\n                    parentElement.classList.add(cls.SELECTED_BGCOLOR);\n                }\n                this.renderModule.selected();\n            }\n        }\n    };\n    PivotView.prototype.mouseUpHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = false;\n            this.isMouseUp = true;\n        }\n    };\n    PivotView.prototype.parentAt = function (target, tagName) {\n        while (target.tagName !== tagName) {\n            if (target.parentElement) {\n                target = target.parentElement;\n            }\n            else {\n                break;\n            }\n        }\n        return target;\n    };\n    PivotView.prototype.mouseClickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-headercell') ||\n            target.classList.contains('e-headercelldiv') ||\n            target.classList.contains('e-rowsheader') ||\n            target.classList.contains('e-rowcell') ||\n            target.classList.contains('e-stackedheadercelldiv') ||\n            target.classList.contains('e-headertext') ||\n            target.classList.contains('e-ascending') ||\n            target.classList.contains('e-descending')) && this.enableValueSorting && this.dataType === 'pivot') {\n            var ele = null;\n            if (target.classList.contains('e-headercell') || target.classList.contains('e-rowsheader')\n                || target.classList.contains('e-rowcell')) {\n                ele = target;\n            }\n            else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-headercelldiv') ||\n                target.classList.contains('e-ascending') || target.classList.contains('e-descending')) {\n                ele = target.parentElement;\n            }\n            else if (target.classList.contains('e-headertext')) {\n                ele = target.parentElement.parentElement;\n            }\n            this.CellClicked(target, e);\n            if ((ele.parentElement.parentElement.parentElement.parentElement.classList.contains('e-movableheader')\n                && this.dataSourceSettings.valueAxis === 'column') || (ele.parentElement.classList.contains('e-row') &&\n                this.dataSourceSettings.valueAxis === 'row') && (ele.classList.contains('e-rowsheader') ||\n                ele.classList.contains('e-stot'))) {\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                if (this.dataSourceSettings.valueAxis === 'row' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    rowIndex = this.pivotValues[rowIndex][colIndex].type === 'value' ? rowIndex : (rowIndex + 1);\n                }\n                else if (this.dataSourceSettings.valueAxis === 'column' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    colIndex = (Number(ele.getAttribute('aria-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1);\n                    rowIndex = this.engineModule.headerContent.length - 1;\n                }\n                this.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            columnIndex: (Number(ele.getAttribute('aria-colindex')) +\n                                Number(ele.getAttribute('aria-colspan')) - 1),\n                            sortOrder: this.dataSourceSettings.valueSortSettings.sortOrder === 'Descending' ? 'Ascending' : 'Descending',\n                            headerText: this.pivotValues[rowIndex][colIndex].valueSort.levelName,\n                            headerDelimiter: this.dataSourceSettings.valueSortSettings.headerDelimiter ?\n                                this.dataSourceSettings.valueSortSettings.headerDelimiter : '.'\n                        }\n                    }\n                }, true);\n                this.showWaitingPopup();\n                var pivot_2 = this; /* eslint-disable-line */\n                pivot_2.engineModule.enableValueSorting = true;\n                if (pivot_2.enableVirtualization) {\n                    if (pivot_2.dataSourceSettings.enableSorting) {\n                        for (var _i = 0, _a = Object.keys(pivot_2.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            pivot_2.engineModule.fieldList[key].sort = 'Ascending';\n                        }\n                        pivot_2.setProperties({ dataSourceSettings: { sortSettings: [] } }, true);\n                    }\n                    if (isBlazor()) {\n                        /* eslint-disable */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'applyValueSorting', { 'valueSortSettings': pivot_2.dataSourceSettings.valueSortSettings.properties }).then(function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            pivot_2.allowServerDataBinding = false;\n                            pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                            delete pivot_2.bulkChanges.pivotValues;\n                            pivot_2.allowServerDataBinding = true;\n                            pivot_2.renderPivotGrid();\n                        });\n                        /* eslint-enable */\n                    }\n                    else if (pivot_2.dataSourceSettings.mode === 'Server') {\n                        pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_2.engineModule.rMembers = pivot_2.engineModule.headerCollection.rowHeaders;\n                        pivot_2.engineModule.cMembers = pivot_2.engineModule.headerCollection.columnHeaders;\n                        pivot_2.engineModule.applyValueSorting();\n                        pivot_2.engineModule.updateEngine();\n                    }\n                }\n                else if (pivot_2.dataSourceSettings.mode === 'Server') {\n                    pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n                }\n                else {\n                    pivot_2.engineModule.generateGridData(pivot_2.dataSourceSettings);\n                }\n                if (!(isBlazor() && pivot_2.enableVirtualization)) {\n                    pivot_2.allowServerDataBinding = false;\n                    pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    delete pivot_2.bulkChanges.pivotValues;\n                    pivot_2.allowServerDataBinding = true;\n                    pivot_2.renderPivotGrid();\n                }\n            }\n        }\n        else if (target.classList.contains(cls.COLLAPSE) || target.classList.contains(cls.EXPAND)) {\n            this.onDrill(target);\n        }\n        else {\n            this.CellClicked(target, e);\n            return;\n        }\n    };\n    PivotView.prototype.updateTotColWidth = function () {\n        this.totColWidth = 0;\n        for (var _i = 0, _a = this.pivotColumns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            this.totColWidth = this.totColWidth + column.width;\n        }\n    };\n    PivotView.prototype.framePivotColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_1 = gridcolumns; _i < gridcolumns_1.length; _i++) {\n            var column = gridcolumns_1[_i];\n            if (column.columns && column.columns.length > 0) {\n                this.framePivotColumns(column.columns);\n            }\n            else {\n                /* eslint-disable */\n                var levelName = column.field === '0.formattedText' ? '' :\n                    (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                var width = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                    levelName, Number(column.width === 'auto' ? column.minWidth : column.width));\n                this.pivotColumns.push({\n                    allowReordering: column.allowReordering,\n                    allowResizing: column.allowResizing,\n                    headerText: levelName,\n                    width: width,\n                    autoFit: column.autoFit\n                });\n                this.totColWidth = this.totColWidth + Number(width);\n                /* eslint-enable */\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.setGridColumns = function (gridcolumns) {\n        if (!isNullOrUndefined(this.totColWidth) && this.totColWidth > 0) {\n            for (var _i = 0, gridcolumns_2 = gridcolumns; _i < gridcolumns_2.length; _i++) {\n                var column = gridcolumns_2[_i];\n                if (column.columns && column.columns.length > 0) {\n                    this.setGridColumns(column.columns);\n                }\n                else {\n                    /* eslint-disable */\n                    var levelName = column.field === '0.formattedText' ? '' :\n                        (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                    column.allowReordering = this.pivotColumns[this.posCount].allowReordering;\n                    column.allowResizing = this.pivotColumns[this.posCount].allowResizing;\n                    column.autoFit = this.pivotColumns[this.posCount].autoFit;\n                    var calcWidth = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                        levelName, Number(this.pivotColumns[this.posCount].width));\n                    if (column.width !== 'auto') {\n                        column.width = calcWidth;\n                    }\n                    else {\n                        column.minWidth = calcWidth;\n                    }\n                    this.posCount++;\n                    if (column.allowReordering) {\n                        this.gridSettings.allowReordering = true;\n                    }\n                    if (column.allowResizing) {\n                        this.gridSettings.allowResizing = true;\n                    }\n                }\n            }\n            if (this.gridSettings.allowReordering) {\n                Grid.Inject(Reorder);\n            }\n            if (this.gridSettings.allowResizing) {\n                Grid.Inject(Resize);\n            }\n            /* eslint-enable */\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.fillGridColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_3 = gridcolumns; _i < gridcolumns_3.length; _i++) {\n            var column = gridcolumns_3[_i];\n            column.allowReordering = this.gridSettings.allowReordering;\n            column.allowResizing = this.gridSettings.allowResizing;\n            this.posCount++;\n            if (column.columns && column.columns.length > 0) {\n                this.fillGridColumns(column.columns);\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.triggerColumnRenderEvent = function (gridcolumns) {\n        this.pivotColumns = [];\n        this.totColWidth = 0;\n        this.framePivotColumns(gridcolumns);\n        var firstColWidth = this.pivotColumns[0].width;\n        var eventArgs = {\n            columns: this.pivotColumns,\n            dataSourceSettings: this.dataSourceSettings\n        };\n        this.trigger(events.beforeColumnsRender, eventArgs);\n        if (this.enableVirtualization && eventArgs.columns.length > 0 && eventArgs.columns[0].width !== gridcolumns[0].width) {\n            this.element.querySelector('.e-frozenscrollbar').style.width = Number(eventArgs.columns[0].width.toString().split('px')[0]) + 'px';\n        }\n        this.updateTotColWidth();\n        if (firstColWidth !== this.pivotColumns[0].width) {\n            this.firstColWidth = this.pivotColumns[0].width;\n            this.renderModule.resColWidth = parseInt(this.firstColWidth.toString()); /* eslint-disable-line */\n        }\n        this.posCount = 0;\n        this.setGridColumns(gridcolumns);\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.setCommonColumnsWidth = function (columns, width) {\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.field !== '0.formattedText') {\n                if (column.columns) {\n                    this.setCommonColumnsWidth(column.columns, width);\n                }\n                else {\n                    if (column.width !== 'auto') {\n                        column.width = width;\n                    }\n                    else {\n                        column.minWidth = width;\n                    }\n                }\n            }\n            else {\n                column.width = !this.firstColWidth ? column.width : this.firstColWidth;\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.getHeightAsNumber = function () {\n        var height;\n        if (isNaN(this.height)) {\n            if (this.height.toString().indexOf('%') > -1) {\n                height = (parseFloat(this.height.toString()) / 100) * this.element.offsetHeight;\n            }\n            else if (this.height.toString().indexOf('px') > -1) {\n                height = Number(this.height.toString().split('px')[0]);\n            }\n        }\n        else {\n            height = Number(this.height);\n        }\n        if (height < this.minHeight) {\n            height = this.minHeight;\n        }\n        return height;\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.getWidthAsNumber = function () {\n        var width;\n        if (isNaN(this.width)) {\n            if (this.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.width.toString()) / 100) * this.element.offsetWidth;\n            }\n            else if (this.width.toString().indexOf('px') > -1) {\n                width = Number(this.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = this.element.offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.width);\n        }\n        if (width < 400) {\n            width = 400;\n        }\n        return width;\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.getGridWidthAsNumber = function () {\n        var width;\n        var offsetWidth = this.element.offsetWidth ? this.element.offsetWidth :\n            this.element.getBoundingClientRect().width;\n        if (isNaN(this.grid.width)) {\n            if (this.grid.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.grid.width.toString()) / 100) * offsetWidth;\n            }\n            else if (this.grid.width.toString().indexOf('px') > -1) {\n                width = Number(this.grid.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.grid.width);\n        }\n        return width;\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.onWindowResize = function () {\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.layoutRefresh.bind(this), 500);\n    };\n    /**\n     * Refreshes the Pivot Table for blazor layoutRefresh is called for other base refresh is called.\n     * @returns {void}\n     */\n    PivotView.prototype.refresh = function () {\n        if (isBlazor()) {\n            this.layoutRefresh();\n        }\n        else {\n            this.pivotRefresh();\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.layoutRefresh = function () {\n        if (this.element && this.element.classList.contains('e-pivotview') &&\n            (this.dataType === 'olap' ? (this.olapEngineModule && this.olapEngineModule.pivotValues) :\n                this.engineModule && this.engineModule.pivotValues)) {\n            if (this.grid) {\n                var colLength = (this.dataType === 'olap' && this.olapEngineModule.pivotValues.length > 0) ?\n                    this.olapEngineModule.pivotValues[0].length : (this.dataSourceSettings.values.length > 0 &&\n                    this.engineModule.pivotValues.length > 0 ? this.engineModule.pivotValues[0].length : 2);\n                var colWidth = this.renderModule.resizeColWidth(colLength);\n                this.grid.width = this.renderModule.calculateGridWidth();\n                this.renderModule.calculateGridHeight(true);\n                if (this.gridSettings.allowAutoResizing) {\n                    this.setCommonColumnsWidth(this.grid.columns, colWidth);\n                }\n                this.pivotColumns = [];\n                this.totColWidth = 0;\n                this.framePivotColumns(this.grid.columns);\n                this.posCount = 0;\n                if (!this.showGroupingBar) {\n                    this.setGridColumns(this.grid.columns);\n                }\n                if (this.currentView === 'Table') {\n                    if (this.cellTemplate && isBlazor()) {\n                        resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n                    }\n                }\n                this.grid.refreshColumns();\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.setGridRowWidth();\n                }\n            }\n            if (this.showToolbar && this.toolbarModule && this.toolbarModule.toolbar) {\n                this.toolbarModule.toolbar.width = this.grid ? (this.getGridWidthAsNumber() - 2) : (this.getWidthAsNumber() - 2);\n            }\n            if (this.chart && ((this.showToolbar && this.currentView === 'Chart') || !this.showToolbar)) {\n                this.chart.width = (this.showToolbar && this.grid) ? this.getGridWidthAsNumber().toString() :\n                    (this.displayOption.view === 'Both' && this.grid) ? this.getGridWidthAsNumber().toString() : this.getWidthAsNumber().toString();\n                if (this.displayOption.view === 'Chart' && this.showGroupingBar && this.groupingBarModule &&\n                    this.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n            }\n        }\n    };\n    PivotView.prototype.CellClicked = function (target, e) {\n        var _this_1 = this;\n        var ele = null;\n        if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        else if (target.classList.contains(cls.ROW_SELECT)) {\n            if (target.classList.contains(cls.SPAN_CLICKED)) {\n                this.isPopupClicked = false;\n            }\n            else {\n                this.isPopupClicked = true;\n            }\n        }\n        /* eslint-disable */\n        if (ele && !isNullOrUndefined(this.pivotValues) && this.pivotValues.length > 0) {\n            var colIndex_1 = Number(ele.getAttribute('aria-colindex'));\n            var rowIndex_1 = Number(ele.getAttribute('index'));\n            var colSpan_1 = Number(ele.getAttribute('aria-colspan'));\n            // let selectArgs: PivotCellSelectedEventArgs = { isCellClick: true, currentCell: target };\n            var selectArgs = {\n                cancel: false,\n                isCellClick: true,\n                currentCell: ele,\n                data: this.pivotValues[rowIndex_1][colIndex_1]\n            };\n            this.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                if (_this_1.gridSettings.allowSelection) {\n                    if (_this_1.gridSettings.selectionSettings.mode === 'Both' ? !ele.classList.contains(cls.ROW_CELL_CLASS) :\n                        _this_1.gridSettings.selectionSettings.mode !== 'Row') {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                        if (!observedArgs.cancel) {\n                            _this_1.applyColumnSelection(e, ele, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    }\n                    else {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !ele.classList.contains(cls.COLUMNSHEADER)) {\n                        _this_1.rowDeselect(ele, e, rowIndex_1, _this_1.gridSettings.selectionSettings.mode, observedArgs);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !observedArgs.cancel) {\n                        if (_this_1.gridSettings.selectionSettings.type === \"Multiple\" ? (!e.ctrlKey && !e.shiftKey) : true && _this_1.selectedRowIndex !== rowIndex_1) {\n                            _this_1.selectedRowIndex = rowIndex_1;\n                            _this_1.grid.selectionModule.selectRow(rowIndex_1 - _this_1.renderModule.rowStartPos);\n                        }\n                        else {\n                            _this_1.selectedRowIndex = undefined;\n                        }\n                    }\n                }\n                if (_this_1.cellClick && observedArgs.isCellClick) {\n                    _this_1.trigger(events.cellClick, {\n                        currentCell: ele,\n                        data: _this_1.pivotValues[rowIndex_1][colIndex_1],\n                        nativeEvent: e\n                    });\n                }\n                _this_1.getSelectedCellsPos();\n            });\n        }\n    };\n    PivotView.prototype.rowDeselect = function (ele, e, rowIndex, mode, observedArgs) {\n        if (!e.shiftKey && !e.ctrlKey && this.gridSettings.selectionSettings.mode !== 'Both' || this.gridSettings.selectionSettings.type === 'Single') {\n            if (!ele.classList.contains(cls.CELL_SELECTED_BGCOLOR) && !ele.classList.contains(cls.SELECTED_BGCOLOR) && !ele.classList.contains(cls.CELL_ACTIVE_BGCOLOR)) {\n                if (!observedArgs.cancel) {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n            else {\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                if (!observedArgs.cancel) {\n                    if ((mode === 'Cell')) {\n                        addClass([ele], [cls.CELL_SELECTED_BGCOLOR]);\n                    }\n                    else if (mode === 'Row' || this.gridSettings.selectionSettings.type === 'Single') {\n                        var query = '[index=\"' + rowIndex + '\"]';\n                        addClass(this.element.querySelectorAll(query), [cls.SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n                        if (mode !== 'Row') {\n                            ele.classList.add(cls.CELL_SELECTED_BGCOLOR);\n                        }\n                    }\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n        }\n        else if (((e.shiftKey || e.ctrlKey) || this.gridSettings.selectionSettings.mode == 'Both') && (observedArgs.cancel)) {\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n            this.setSavedSelectedCells();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.clearSelection = function (ele, e, colIndex, rowIndex) {\n        if ((!e.shiftKey && !e.ctrlKey) || this.gridSettings.selectionSettings.type === 'Single') {\n            if (this.gridSettings.selectionSettings.mode === 'Cell') {\n                if (ele.classList.contains(cls.COLUMNSHEADER)) {\n                    removeClass(this.element.querySelectorAll(('.' + cls.ROW_CELL_CLASS + '.') + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n                else {\n                    removeClass(this.element.querySelectorAll(('.' + cls.COLUMNSHEADER + '.') + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                }\n            }\n            else if (this.gridSettings.selectionSettings.mode === 'Both') {\n                if (ele.classList.contains(cls.ROW_CELL_CLASS)) {\n                    for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR + ', .' + cls.CELL_SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n                        var ele_1 = _a[_i];\n                        // if (Number((ele as HTMLElement).getAttribute('index')) !== rowIndex) {\n                        removeClass([ele_1], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR]);\n                        // }\n                    }\n                }\n                else {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyRowSelection = function (colIndex, rowIndex, e) {\n        var pivotValue = this.engineModule.pivotValues[rowIndex][colIndex];\n        if (!e.ctrlKey && !e.shiftKey && pivotValue && this.selectedRowIndex !== rowIndex) {\n            this.selectedRowIndex = rowIndex;\n            var parentLevel = pivotValue.level;\n            var rCount = rowIndex;\n            do {\n                rCount++;\n                pivotValue = this.engineModule.pivotValues[rCount][colIndex];\n            } while (pivotValue && parentLevel < pivotValue.level);\n            var _this = this;\n            if (this.isAdaptive) {\n                this.rowRangeSelection = {\n                    enable: true,\n                    startIndex: rowIndex - _this.renderModule.rowStartPos,\n                    endIndex: rCount - (1 + _this.renderModule.rowStartPos)\n                };\n            }\n            else {\n                _this.grid.selectionModule.selectRowsByRange(rowIndex -\n                    _this.renderModule.rowStartPos, rCount - (1 + _this.renderModule.rowStartPos));\n            }\n        }\n        else {\n            this.selectedRowIndex = undefined;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyColumnSelection = function (e, target, colStart, colEnd, rowStart) {\n        if (!target.classList.contains(cls.ROWSHEADER) &&\n            (this.gridSettings.selectionSettings.mode === 'Cell' ? target.classList.contains(cls.COLUMNSHEADER) : true)) {\n            var isCtrl = e.ctrlKey;\n            if (this.isAdaptive && this.gridSettings.selectionSettings.type === 'Multiple') {\n                this.grid.selectionModule.showPopup(e);\n                if (this.isPopupClicked) {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.add(cls.SPAN_CLICKED);\n                    isCtrl = true;\n                }\n                else {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.remove(cls.SPAN_CLICKED);\n                    isCtrl = false;\n                }\n            }\n            var queryStringArray = [];\n            var type = this.gridSettings.selectionSettings.type;\n            var isToggle = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n            var activeColumns = [];\n            var actColPos = {};\n            for (var cCnt = colStart; cCnt <= colEnd; cCnt++) {\n                activeColumns.push(cCnt.toString());\n            }\n            if (!isCtrl || type === 'Single') {\n                for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR)); _i < _a.length; _i++) {\n                    var ele = _a[_i];\n                    removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                    if (activeColumns.indexOf(ele.getAttribute('aria-colindex')) === -1) {\n                        isToggle = false;\n                    }\n                    var colIndex = Number(ele.getAttribute('aria-colindex'));\n                    actColPos[colIndex] = colIndex;\n                }\n                activeColumns = Object.keys(actColPos).length > 0 ? Object.keys(actColPos).sort(function (a, b) {\n                    return a - b;\n                }) : activeColumns;\n            }\n            else {\n                isToggle = false;\n            }\n            if (type === 'Multiple' && e.shiftKey) {\n                this.shiftLockedPos = this.shiftLockedPos.length === 0 ? activeColumns : this.shiftLockedPos;\n                if (Number(this.shiftLockedPos[0]) <= colStart) {\n                    colStart = Number(this.shiftLockedPos[0]);\n                }\n                else {\n                    colEnd = colEnd < Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) ?\n                        Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) : colEnd;\n                }\n            }\n            else {\n                this.shiftLockedPos = [];\n            }\n            var rowSelectedList = [];\n            if (e.ctrlKey && this.gridSettings.selectionSettings.mode === 'Both' && type === 'Multiple' && !target.classList.contains(cls.ROWSHEADER)) {\n                for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.ROWSHEADER + '.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n                    var ele = _c[_b];\n                    rowSelectedList.push(ele.getAttribute('index'));\n                }\n            }\n            var count = colStart;\n            while (count <= colEnd) {\n                queryStringArray.push('[aria-colindex=\"' + count + '\"]' + (this.gridSettings.selectionSettings.mode === 'Cell' ?\n                    '[index=\"' + rowStart + '\"]' : \"\") + '');\n                count++;\n            }\n            if (!isToggle) {\n                rowStart = target.classList.contains('e-headercell') ? rowStart : (this.renderModule.rowStartPos - 1);\n                var isTargetSelected = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n                for (var _d = 0, _e = [].slice.call(this.element.querySelectorAll(queryStringArray.toString())); _d < _e.length; _d++) {\n                    var ele = _e[_d];\n                    if (Number(ele.getAttribute('index')) >= rowStart) {\n                        if (isTargetSelected && isCtrl && (rowSelectedList.indexOf(ele.getAttribute('index')) === -1)) {\n                            removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                        else {\n                            addClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                    }\n                }\n            }\n            this.renderModule.selected();\n        }\n    };\n    PivotView.prototype.getSelectedCellsPos = function () {\n        var control = this;\n        control.savedSelectedCellsPos = [];\n        control.cellSelectionPos = [];\n        for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n            var ele = _a[_i];\n            control.savedSelectedCellsPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n        for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n            var ele = _c[_b];\n            control.cellSelectionPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n    };\n    PivotView.prototype.setSavedSelectedCells = function () {\n        var control = this;\n        for (var _i = 0, _a = [].slice.call(this.savedSelectedCellsPos); _i < _a.length; _i++) {\n            var item = _a[_i];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n        }\n        for (var _b = 0, _c = [].slice.call(this.cellSelectionPos); _b < _c.length; _b++) {\n            var item = _c[_b];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_SELECTED_BGCOLOR]);\n        }\n    };\n    /* eslint-enable */\n    PivotView.prototype.renderEmptyGrid = function () {\n        var _this_1 = this;\n        this.isEmptyGrid = true;\n        this.notEmpty = false;\n        this.isInitial = true;\n        this.renderModule = new Render(this);\n        if (this.grid && this.grid.element && this.element.querySelector('.e-grid')) {\n            this.notEmpty = true;\n            this.grid.setProperties({\n                columns: this.renderModule.frameEmptyColumns(),\n                dataSource: this.renderModule.frameEmptyData()\n            }, true);\n            this.grid.notify('datasource-modified', {});\n            this.grid.refreshColumns();\n        }\n        else {\n            if (this.element.querySelector('.' + cls.GRID_CLASS)) {\n                remove(this.element.querySelector('.' + cls.GRID_CLASS));\n            }\n            this.renderModule.bindGrid(this, true);\n            this.grid.showSpinner = function () { }; /* eslint-disable-line */\n            this.grid.hideSpinner = function () { }; /* eslint-disable-line */\n            var element = createElement('div', { id: this.element.id + '_grid' });\n            this.element.appendChild(element);\n            this.grid.isStringTemplate = true;\n            this.grid.appendTo(element);\n            this.grid.on('refresh-frozen-height', function () {\n                if (!_this_1.enableVirtualization) {\n                    _this_1.grid.contentModule.setHeightToContent(_this_1.grid.contentModule.getTable().offsetHeight); /* eslint-disable-line */\n                }\n            });\n            this.grid.off('data-ready', this.grid.dataReady); /* eslint-disable-line */\n            this.grid.on('data-ready', function () {\n                _this_1.grid.scrollModule.setWidth();\n                _this_1.grid.scrollModule.setHeight();\n            });\n        }\n    };\n    /* eslint-disable */\n    PivotView.prototype.initEngine = function () {\n        var _this_1 = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        this.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            _this_1.updatePageSettings(false);\n            var customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: _this_1.pageSettings,\n                enableValueSorting: _this_1.enableValueSorting,\n                isDrillThrough: (_this_1.allowDrillThrough || _this_1.editSettings.allowEditing),\n                localeObj: _this_1.localeObj,\n                fieldsType: _this_1.fieldsType,\n                clonedReport: _this_1.clonedReport\n            };\n            if (_this_1.dataType === 'pivot') {\n                if (_this_1.dataSourceSettings.groupSettings && _this_1.dataSourceSettings.groupSettings.length > 0) {\n                    var dataSet = _this_1.engineModule.data;\n                    _this_1.clonedDataSet = (_this_1.clonedDataSet ? _this_1.clonedDataSet : PivotUtil.getClonedData(dataSet));\n                    if (isBlazor()) {\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                    }\n                    else {\n                        var dataSourceSettings = JSON.parse(_this_1.getPersistData()).dataSourceSettings;\n                        dataSourceSettings.dataSource = [];\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : dataSourceSettings;\n                    }\n                }\n                if (isBlazor() && _this_1.enableVirtualization) {\n                    var pivot_3 = _this_1;\n                    var sfBlazor = 'sfBlazor';\n                    var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                    var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_3.dataSourceSettings], pivot_3.dataSourceSettings);\n                    pivot_3.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                        if (data === 0) {\n                            _this_1.pivotCommon.errorDialog.createErrorDialog(_this_1.localeObj.getConstant('error'), (pivot_3.dataSourceSettings.type === 'CSV' ?\n                                _this_1.localeObj.getConstant('invalidCSV') : _this_1.localeObj.getConstant('invalidJSON')));\n                            return;\n                        }\n                        else {\n                            pivot_3.updateBlazorData(data, pivot_3);\n                            PivotUtil.setPivotProperties(pivot_3, { pivotValues: pivot_3.engineModule.pivotValues });\n                            pivot_3.enginePopulatedEventMethod('initEngine', pivot_3);\n                        }\n                    });\n                }\n                else {\n                    if (_this_1.dataSourceSettings.mode !== 'Server') {\n                        _this_1.engineModule.renderEngine(_this_1.dataSourceSettings, customProperties, _this_1.getValueCellInfo.bind(_this_1));\n                    }\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.engineModule.pivotValues }, true);\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.enginePopulatedEventMethod('initEngine');\n                }\n            }\n            else if (_this_1.dataSourceSettings.providerType === 'SSAS' && _this_1.dataType === 'olap') {\n                customProperties.savedFieldList = _this_1.olapEngineModule.fieldList;\n                customProperties.savedFieldListData = _this_1.olapEngineModule.fieldListData;\n                _this_1.olapEngineModule.renderEngine(_this_1.dataSourceSettings, customProperties);\n                _this_1.allowServerDataBinding = false;\n                _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                delete _this_1.bulkChanges.pivotValues;\n                _this_1.allowServerDataBinding = true;\n                _this_1.enginePopulatedEventMethod('initEngine');\n            }\n        });\n    };\n    PivotView.prototype.enginePopulatedEventMethod = function (action, control) {\n        var _this_1 = this;\n        if (action === 'initEngine') {\n            var this$_1 = control ? control : this;\n            this.trigger(events.enginePopulated, { pivotValues: this.pivotValues }, function (observedArgs) {\n                if (this$_1.dataType === 'olap') {\n                    this$_1.olapEngineModule.pivotValues = isBlazor() ? _this_1.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.olapEngineModule.pivotValues;\n                }\n                else {\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this_1.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.engineModule.pivotValues;\n                }\n                this$_1.notify(events.dataReady, {});\n                this$_1.notEmpty = true;\n            });\n        }\n        else {\n            var pivot_4 = control ? control : this;\n            var eventArgs = {\n                dataSourceSettings: pivot_4.dataSourceSettings,\n                pivotValues: isBlazor() ? pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule.pivotValues :\n                    pivot_4.engineModule.pivotValues : pivot_4.pivotValues\n            };\n            pivot_4.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                var dataSource = pivot_4.dataSourceSettings.dataSource;\n                if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                    observedArgs.dataSourceSettings.dataSource = dataSource;\n                }\n                pivot_4.dataSourceSettings = observedArgs.dataSourceSettings;\n                if (pivot_4.dataType === 'olap') {\n                    pivot_4.olapEngineModule.pivotValues = isBlazor() ? pivot_4.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.olapEngineModule.pivotValues }, true);\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                else {\n                    pivot_4.engineModule.pivotValues = isBlazor() ? pivot_4.engineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.engineModule.pivotValues }, true);\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                pivot_4.pivotCommon.engineModule = pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule : pivot_4.engineModule;\n                pivot_4.pivotCommon.dataSourceSettings = pivot_4.dataSourceSettings;\n                pivot_4.renderPivotGrid();\n            });\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.updateBlazorData = function (data, control) {\n        control.allowServerDataBinding = false;\n        var pivVal;\n        var pivotFL;\n        var pivotFields;\n        var valueSort;\n        var blazPivot = control;\n        var valContent = [];\n        var headContent = [];\n        pivotFL = JSON.parse(data[\"fieldList\"]);\n        pivVal = JSON.parse(data[\"pivotValue\"]);\n        pivotFields = JSON.parse(data[\"fields\"]);\n        valueSort = JSON.parse(data[\"valueSortSettings\"]);\n        var len = pivVal.length;\n        var pvalues = JSON.parse(pivVal[0]);\n        var pvalLen = pvalues.length;\n        var blazPivotValues = new Array(len);\n        for (i = 0; i < len; i++) {\n            blazPivotValues[i] = new Array(pvalLen);\n        }\n        for (var i = 0; i < len; i++) {\n            if (pivVal[i] != null) {\n                var values = JSON.parse(pivVal[i]);\n                var valLen = values.length;\n                for (var j = 0; j < valLen; j++) {\n                    blazPivotValues[i][j] = values[j];\n                }\n            }\n            else {\n                blazPivotValues[i] = undefined;\n                //headContent[i] = undefined;\n            }\n        }\n        var pivotValues = blazPivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        blazPivot.pivotValues = blazPivotValues;\n        valContent = PivotUtil.frameContent(blazPivotValues, 'value', rowPos, blazPivot);\n        headContent = PivotUtil.frameContent(blazPivotValues, 'header', rowPos, blazPivot);\n        this.engineModule.pivotValues = blazPivotValues;\n        this.engineModule.fieldList = pivotFL;\n        this.engineModule.fields = pivotFields;\n        this.engineModule.valueSortSettings = valueSort;\n        this.engineModule.valueContent = valContent;\n        this.engineModule.headerContent = headContent;\n        this.engineModule.isEngineUpdated = JSON.parse(data[\"isEngineUpdated\"]);\n        this.engineModule.isEmptyData = JSON.parse(data[\"isEmptyData\"]);\n        this.engineModule.rowCount = JSON.parse(data[\"rowCount\"]);\n        this.engineModule.columnCount = JSON.parse(data[\"columnCount\"]);\n        this.engineModule.rowStartPos = JSON.parse(data[\"rowStartPos\"]);\n        this.engineModule.colStartPos = JSON.parse(data[\"colStartPos\"]);\n        this.engineModule.rowFirstLvl = JSON.parse(data[\"rowFirstLvl\"]);\n        this.engineModule.colFirstLvl = JSON.parse(data[\"colFirstLvl\"]);\n        control.allowServerDataBinding = true;\n    };\n    /* eslint-enable */\n    PivotView.prototype.generateData = function () {\n        if (!this.isStaticRefresh) {\n            if (this.displayOption.view !== 'Chart') {\n                this.renderEmptyGrid();\n                this.showWaitingPopup();\n            }\n            else if (this.displayOption.view === 'Chart') {\n                this.showWaitingPopup();\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.refreshData = function () {\n        var pivot = this; /* eslint-disable-line */\n        if (!pivot.isStaticRefresh) {\n            if (isBlazor()) {\n                if (pivot.dataType === 'olap') {\n                    if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({\n                            dataSourceSettings: {\n                                dataSource: undefined\n                            }\n                        }, true);\n                        pivot.allowServerDataBinding = true;\n                    }\n                }\n            }\n            if (pivot.dataSourceSettings && (pivot.dataSourceSettings.dataSource || pivot.dataSourceSettings.url)) {\n                if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                    if (isBlazor() && pivot.enableVirtualization) {\n                        if (!pivot.element.querySelector('.e-spinner-pane')) {\n                            this.showWaitingPopup();\n                        }\n                        pivot.initEngine();\n                    }\n                    else {\n                        if (pivot.dataType === 'pivot' && pivot.remoteData.length > 0) {\n                            if (!this.element.querySelector('.e-spinner-pane')) {\n                                this.showWaitingPopup();\n                            }\n                            this.engineModule.data = pivot.remoteData;\n                            this.initEngine();\n                        }\n                        else {\n                            setTimeout(pivot.getData.bind(pivot), 100);\n                        }\n                    }\n                }\n                else if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                    (pivot.dataSourceSettings.dataSource && pivot.dataSourceSettings.dataSource.length > 0 || this.engineModule.data.length > 0)) { /* eslint-disable-line */\n                    if (pivot.dataType === 'pivot') {\n                        this.hideWaitingPopup();\n                        pivot.engineModule.data = pivot.dataSourceSettings.dataSource;\n                    }\n                    pivot.initEngine();\n                }\n                else {\n                    if (this.dataSourceSettings.mode === 'Server') {\n                        this.getEngine('onRefresh');\n                    }\n                    else {\n                        this.hideWaitingPopup();\n                    }\n                }\n            }\n            else if (isBlazor() && pivot.dataType === 'pivot' &&\n                this.engineModule.data && this.engineModule.data.length > 0) {\n                this.initEngine();\n            }\n            else {\n                this.hideWaitingPopup();\n            }\n        }\n        else {\n            pivot.isStaticRefresh = false;\n            pivot.hideWaitingPopup();\n        }\n    };\n    PivotView.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    /**\n     * De-Register the internal events.\n     * @param {Object} args - args.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.bindTriggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    PivotView.prototype.getData = function () {\n        if (isBlazor()) {\n            this.dataSourceSettings.dataSource.\n                executeQuery(new Query().requiresCount()).then(this.executeQuery.bind(this));\n        }\n        else {\n            if (this.dataSourceSettings.dataSource.defaultQuery) {\n                this.dataSourceSettings.dataSource.executeQuery(this.dataSourceSettings.dataSource.defaultQuery).then(this.executeQuery.bind(this));\n            }\n            else {\n                this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n            }\n        }\n    };\n    PivotView.prototype.executeQuery = function (e) {\n        if (!this.element.querySelector('.e-spinner-pane')) {\n            this.showWaitingPopup();\n        }\n        var pivot = this; /* eslint-disable-line */\n        pivot.engineModule.data = e.result;\n        if (!isNullOrUndefined(pivot.engineModule.data) && pivot.engineModule.data.length > 0) {\n            pivot.initEngine();\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n    };\n    /* eslint-disable-next-line */\n    /** @hidden */\n    PivotView.prototype.applyFormatting = function (pivotValues) {\n        if (pivotValues) {\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            for (var i = 0; i < pivotValues.length; i++) {\n                for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                    if (pivotValues[i][j].axis === 'value' && pivotValues[i][j].formattedText !== '') {\n                        pivotValues[i][j].style = undefined;\n                        pivotValues[i][j].cssClass = undefined;\n                        var format_1 = this.dataSourceSettings.conditionalFormatSettings;\n                        for (var k = 0; k < format_1.length; k++) {\n                            if ((format_1[k].applyGrandTotals === true || isNullOrUndefined(format_1[k].applyGrandTotals)) ? true :\n                                pivotValues[i][j].rowHeaders !== '' &&\n                                    pivotValues[i][j].columnHeaders !== '') {\n                                if (this.checkCondition(pivotValues[i][j].value, format_1[k].conditions, format_1[k].value1, format_1[k].value2)) {\n                                    // let ilen: number =\n                                    //     (this.dataSourceSettings.valueAxis === 'row' ? i : this.engineModule.headerContent.length - 1);\n                                    // let jlen: number = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!format_1[k].measure || pivotValues[i][j].actualText === format_1[k].measure) &&\n                                        (format_1[k].measure === undefined || format_1[k].measure !== '') && (format_1[k].label === undefined ||\n                                        format_1[k].label !== '') && ((!format_1[k].label ||\n                                        (pivotValues[i][0].valueSort.levelName\n                                            .indexOf(format_1[k].label)) > -1) || (pivotValues[i][j]\n                                        .rowHeaders.indexOf(format_1[k].label) > -1) ||\n                                        (pivotValues[i][j].columnHeaders\n                                            .indexOf(format_1[k].label) > -1))) {\n                                        if (format_1[k].style && format_1[k].style.backgroundColor) {\n                                            format_1[k].style.backgroundColor = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.backgroundColor.substr(1)) ? format_1[k].style.backgroundColor :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.backgroundColor);\n                                        }\n                                        if (format_1[k].style && format_1[k].style.color) {\n                                            format_1[k].style.color = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.color.substr(1)) ? format_1[k].style.color :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.color);\n                                        }\n                                        pivotValues[i][j].style = format_1[k].style;\n                                        pivotValues[i][j].cssClass = 'format' + this.element.id + k;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var format = this.dataSourceSettings.conditionalFormatSettings;\n            for (var k = 0; k < format.length; k++) {\n                var sheet = (this.createStyleSheet.bind(this))();\n                var str = 'color: ' + format[k].style.color + '!important;background-color: ' + format[k].style.backgroundColor +\n                    '!important;font-size: ' + format[k].style.fontSize + '!important;font-family: ' + format[k].style.fontFamily +\n                    ' !important;';\n                sheet.insertRule('.format' + this.element.id + k + '{' + str + '}', 0);\n            }\n        }\n    };\n    PivotView.prototype.createStyleSheet = function () {\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n        return style.sheet;\n    };\n    PivotView.prototype.applyHyperlinkSettings = function () {\n        if (this.pivotValues) {\n            var pivotValues = this.pivotValues;\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (!isNullOrUndefined(pivotValues[i]) && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            if (this.hyperlinkSettings.conditionalSettings.length > 0) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            pivotValues[i][j].enableHyperlink = false;\n                            var collection = this.hyperlinkSettings.conditionalSettings;\n                            for (var k = 0; k < collection.length; k++) {\n                                if (this.checkCondition(pivotValues[i][j].value, collection[k].conditions, collection[k].value1, collection[k].value2)) {\n                                    var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                        i : (this.dataType === 'pivot' ?\n                                        this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                                    var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!collection[k].measure || this.dataSourceSettings.values.length === 1 ||\n                                        (pivotValues[ilen][jlen].valueSort &&\n                                            (pivotValues[ilen][jlen].actualText === collection[k].measure))) &&\n                                        (!collection[k].label || ((pivotValues[colIndex[collection[k].label.split('.').length - 1]] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].valueSort &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].\n                                                valueSort[collection[k].label]) || (pivotValues[i][0].\n                                            valueSort.levelName.indexOf(collection[k].label) > -1)))) {\n                                        pivotValues[i][j].enableHyperlink = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(this.hyperlinkSettings.headerText)) {\n                var headerDelimiter = this.dataSourceSettings.valueSortSettings.headerDelimiter ? this.dataSourceSettings.valueSortSettings.headerDelimiter : '.';\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            var label = this.hyperlinkSettings.headerText;\n                            if (pivotValues[i][0].valueSort.levelName.indexOf(label) > -1) {\n                                pivotValues[i][0].enableHyperlink = true;\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                            else {\n                                var isApplyHyperLink = false;\n                                for (var k = 0; k < colIndex.length; k++) {\n                                    label = headerDelimiter + this.hyperlinkSettings.headerText;\n                                    if ((headerDelimiter + pivotValues[colIndex[k]][j].valueSort.levelName).indexOf(label) > -1) {\n                                        pivotValues[colIndex[k]][j].enableHyperlink = true;\n                                        isApplyHyperLink = true;\n                                    }\n                                }\n                                pivotValues[i][j].enableHyperlink = isApplyHyperLink;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                return;\n            }\n        }\n    };\n    PivotView.prototype.checkCondition = function (cellValue, conditions, conditionalValue1, conditionalValue2) {\n        switch (conditions) {\n            case 'LessThan':\n                return cellValue < conditionalValue1;\n            case 'LessThanOrEqualTo':\n                return cellValue <= conditionalValue1;\n            case 'GreaterThan':\n                return cellValue > conditionalValue1;\n            case 'GreaterThanOrEqualTo':\n                return cellValue >= conditionalValue1;\n            case 'Equals':\n                return cellValue === conditionalValue1;\n            case 'NotEquals':\n                return cellValue !== conditionalValue1;\n            case 'Between':\n                return (conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2);\n            case 'NotBetween':\n                return !((conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2));\n            default:\n                return false;\n        }\n    };\n    /** @hidden */\n    /* eslint-disable  */\n    PivotView.prototype.updateGroupingReport = function (newGroupSettings, updateGroupType) {\n        if (!this.clonedDataSet && !this.clonedReport) {\n            var dataSet = this.engineModule.data;\n            this.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            if (isBlazor()) {\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n            }\n            else {\n                var dataSourceSettings = JSON.parse(this.getPersistData()).dataSourceSettings;\n                dataSourceSettings.dataSource = [];\n                this.clonedReport = this.clonedReport ? this.clonedReport : dataSourceSettings;\n            }\n        }\n        var dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        var data = PivotUtil.getClonedData(this.clonedDataSet);\n        var dataSource = this.dataSourceSettings;\n        var clonedReport = this.clonedReport.properties ?\n            this.clonedReport.properties : this.clonedReport;\n        var axisFields = [dataSource.rows, dataSource.columns, dataSource.values, dataSource.filters];\n        var fieldSettings = [dataSource.filterSettings, dataSource.sortSettings, dataSource.formatSettings, dataSource.drilledMembers];\n        var clonedAxisFields = clonedReport.rows;\n        clonedAxisFields = clonedAxisFields.concat(clonedReport.columns, clonedReport.values, clonedReport.filters);\n        if (newGroupSettings.length === 0 || newGroupSettings.length > 0) {\n            this.engineModule.groupingFields = {};\n            if (!isBlazor()) {\n                this.setProperties({ dataSourceSettings: { dataSource: data, groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : [] } }, true);\n            }\n            var isDateGroupUpdated = updateGroupType === 'Date';\n            var fields = [];\n            for (var i = 0, cnt = axisFields.length; i < cnt; i++) {\n                for (var j = 0, len = axisFields[i].length; j < len; j++) {\n                    var fieldName = axisFields[i][j].name;\n                    if (fields.indexOf(fieldName) === -1) {\n                        fields.push(fieldName);\n                    }\n                    var index = fields.indexOf(fieldName);\n                    var group = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n                    if ((!isNullOrUndefined(fieldName.match(dateGroup)) &&\n                        isDateGroupUpdated) || (fieldName.indexOf('_custom_group') !== -1 &&\n                        !PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), dataSource.groupSettings))) {\n                        axisFields[i].splice(j, 1);\n                        fields.splice(index, 1);\n                        j--;\n                        len--;\n                    }\n                    else {\n                        var fieldObj = PivotUtil.getFieldByName(fieldName, clonedAxisFields);\n                        if (fieldObj) {\n                            axisFields[i].splice(j, 1, fieldObj);\n                        }\n                    }\n                }\n            }\n            for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n                var fieldName = fields_2[_i];\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, clonedReport.filterSettings);\n                var sortObj = PivotUtil.getFieldByName(fieldName, clonedReport.sortSettings);\n                var formatObj = PivotUtil.getFieldByName(fieldName, clonedReport.formatSettings);\n                var drillObj = PivotUtil.getFieldByName(fieldName, clonedReport.drilledMembers);\n                var settingsObj = [filterObj, sortObj, formatObj, drillObj];\n                for (var i = 0, cnt = fieldSettings.length; i < cnt; i++) {\n                    var isExists = false;\n                    for (var j = 0, len = fieldSettings[i].length; j < len; j++) {\n                        var name_1 = fieldSettings[i][j].name;\n                        if ((!isNullOrUndefined(name_1.match(dateGroup)) && isDateGroupUpdated) || (name_1.indexOf('_custom_group') !== -1 &&\n                            !PivotUtil.getFieldByName(name_1.replace('_custom_group', ''), dataSource.groupSettings))) {\n                            fieldSettings[i].splice(j, 1);\n                            j--;\n                            len--;\n                        }\n                        else if (fieldName === fieldSettings[i][j].name) {\n                            isExists = true;\n                            if (settingsObj[i]) {\n                                fieldSettings[i].splice(j, 1, settingsObj[i]);\n                            }\n                            else {\n                                fieldSettings[i].splice(j, 1);\n                                j--;\n                                len--;\n                            }\n                            break;\n                        }\n                    }\n                    if (!isExists && i === 0 && filterObj) {\n                        fieldSettings[i].push(filterObj);\n                    }\n                    if (!isExists && i === 1 && sortObj) {\n                        fieldSettings[i].push(sortObj);\n                    }\n                    if (!isExists && i === 2 && formatObj) {\n                        fieldSettings[i].push(formatObj);\n                    }\n                    if (!isExists && i === 3 && drillObj) {\n                        fieldSettings[i].push(drillObj);\n                    }\n                }\n            }\n            /* eslint-disable */\n            if (isBlazor()) {\n                this.engineModule.data = data;\n                this.allowServerDataBinding = false;\n                this.setProperties({\n                    dataSourceSettings: {\n                        rows: axisFields[0], columns: axisFields[1], values: axisFields[2], filters: axisFields[3],\n                        filterSettings: fieldSettings[0], sortSettings: fieldSettings[1], formatSettings: fieldSettings[2],\n                        drilledMembers: fieldSettings[3], groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : []\n                    }\n                }, true);\n                this.allowServerDataBinding = true;\n            }\n        }\n    };\n    PivotView.prototype.removeButtonFocus = function (e) {\n        if (document.querySelectorAll('.e-btn-focused')) {\n            removeClass(document.querySelectorAll('.e-btn-focused'), 'e-btn-focused');\n        }\n    };\n    /* eslint-enable */\n    /* eslint-enable  */\n    PivotView.prototype.wireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler, this);\n            EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n            EventHandler.add(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler, this);\n            EventHandler.add(this.element, 'mouseup', this.mouseUpHandler, this);\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler, this);\n        }\n        EventHandler.add(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus, this);\n        window.addEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    PivotView.prototype.unwireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler);\n            EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n            if (this.element.querySelector('.' + cls.GRID_HEADER)) {\n                EventHandler.remove(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler);\n            }\n            EventHandler.remove(this.element, 'mouseup', this.mouseUpHandler);\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler);\n        }\n        EventHandler.remove(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus);\n        window.removeEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    /**\n     * To destroy the PivotView elements.\n     * @returns {void}\n     */\n    PivotView.prototype.destroy = function () {\n        this.removeInternalEvents();\n        if (this.engineModule) {\n            this.engineModule.fieldList = {};\n            this.engineModule.rMembers = null;\n            this.engineModule.cMembers = null;\n            this.engineModule.valueMatrix = null;\n            this.engineModule.indexMatrix = null;\n            this.engineModule = {};\n        }\n        if (this.olapEngineModule) {\n            this.olapEngineModule.fieldList = {};\n            this.olapEngineModule = {};\n        }\n        if (this.showGroupingBar && this.groupingBarModule) {\n            this.groupingBarModule.destroy();\n        }\n        if (this.allowGrouping && this.groupingModule) {\n            this.groupingModule.destroy();\n        }\n        if (this.showToolbar && this.toolbarModule) {\n            this.toolbarModule.destroy();\n        }\n        if (this.enableVirtualization && this.virtualscrollModule) {\n            this.virtualscrollModule.destroy();\n        }\n        if (this.allowConditionalFormatting && this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.destroy();\n        }\n        if (this.allowNumberFormatting && this.numberFormattingModule) {\n            this.numberFormattingModule.destroy();\n        }\n        if (this.contextMenuModule) {\n            this.contextMenuModule.destroy();\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        if (this.tooltip && !this.tooltip.isDestroyed) {\n            this.tooltip.destroy();\n        }\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.destroy();\n        }\n        if (this.chart && !this.chart.isDestroyed) {\n            this.chart.destroy();\n            if (this.chart.isDestroyed && select('#' + this.element.id + '_chart', this.element)) {\n                remove(select('#' + this.element.id + '_chart', this.element));\n            }\n        }\n        if (this.grid && !this.grid.isDestroyed) {\n            this.grid.destroy();\n            if (this.grid.isDestroyed && select('#' + this.element.id + '_grid', this.element)) {\n                remove(select('#' + this.element.id + '_grid', this.element));\n            }\n        }\n        if (this.commonModule) {\n            this.commonModule.destroy();\n        }\n        if (this.chartModule) {\n            this.chartModule.destroy();\n        }\n        if (this.pivotButtonModule && !this.pivotButtonModule.isDestroyed) {\n            this.pivotButtonModule.destroy();\n        }\n        if (this.pivotFieldListModule && !this.pivotFieldListModule.isDestroyed) {\n            this.pivotFieldListModule.destroy();\n        }\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.groupingBarModule) {\n            this.groupingBarModule = null;\n        }\n        if (this.groupingModule) {\n            this.groupingModule = null;\n        }\n        if (this.pivotFieldListModule) {\n            this.pivotFieldListModule = null;\n        }\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule = null;\n        }\n        if (this.conditionalFormattingModule) {\n            this.conditionalFormattingModule = null;\n        }\n        if (this.numberFormattingModule) {\n            this.numberFormattingModule = null;\n        }\n        if (this.toolbarModule) {\n            this.toolbarModule = null;\n        }\n        if (this.virtualscrollModule) {\n            this.virtualscrollModule = null;\n        }\n        if (this.contextMenuModule) {\n            this.contextMenuModule = null;\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule = null;\n        }\n        if (this.tooltip) {\n            this.tooltip = null;\n        }\n        if (this.chart) {\n            this.chart = null;\n        }\n        if (this.grid) {\n            this.grid = null;\n        }\n        if (this.commonModule) {\n            this.commonModule = null;\n        }\n        if (this.chartModule) {\n            this.chartModule = null;\n        }\n        if (this.pivotButtonModule) {\n            this.pivotButtonModule = null;\n        }\n        if (this.renderModule) {\n            this.renderModule = null;\n        }\n        if (this.axisFieldModule) {\n            this.axisFieldModule = null;\n        }\n        if (this.pdfExportModule) {\n            this.pdfExportModule = null;\n        }\n        if (this.excelExportModule) {\n            this.excelExportModule = null;\n        }\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.element.innerHTML = '';\n        }\n        else {\n            if (this.element.querySelector('.e-spinner-pane')) {\n                remove(this.element.querySelector('.e-spinner-pane'));\n            }\n            if (this.showFieldList && select('#' + this.element.id + '_PivotFieldList', document)) {\n                remove(select('#' + this.element.id + '_PivotFieldList', document));\n            }\n        }\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n    };\n    /**\n     * Method to open the number formatting dialog to set the format dynamically.\n     * @returns {void}\n     */\n    PivotView.prototype.showNumberFormattingDialog = function () {\n        if (this.allowNumberFormatting) {\n            this.numberFormattingModule.showNumberFormattingDialog();\n        }\n    };\n    var PivotView_1;\n    __decorate([\n        Property('USD')\n    ], PivotView.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showFieldList\", void 0);\n    __decorate([\n        Complex({}, GridSettings)\n    ], PivotView.prototype, \"gridSettings\", void 0);\n    __decorate([\n        Complex({}, ChartSettings)\n    ], PivotView.prototype, \"chartSettings\", void 0);\n    __decorate([\n        Complex({}, GroupingBarSettings)\n    ], PivotView.prototype, \"groupingBarSettings\", void 0);\n    __decorate([\n        Complex({}, HyperlinkSettings)\n    ], PivotView.prototype, \"hyperlinkSettings\", void 0);\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotView.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Complex({}, CellEditSettings)\n    ], PivotView.prototype, \"editSettings\", void 0);\n    __decorate([\n        Complex({}, DisplayOption)\n    ], PivotView.prototype, \"displayOption\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"pivotValues\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showGroupingBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showToolbar\", void 0);\n    __decorate([\n        Property([])\n    ], PivotView.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableValueSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowConditionalFormatting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowNumberFormatting\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDrillThrough\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDataCompression\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotView.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(10000)\n    ], PivotView.prototype, \"maxRowsInDrillThrough\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"exportAllPages\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Median', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotView.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Property(['Column', 'Bar', 'Line', 'Area', 'Scatter', 'Polar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea', 'SplineArea', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto', 'Radar', 'Pie', 'Doughnut', 'Funnel', 'Pyramid'])\n    ], PivotView.prototype, \"chartTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeColumnsRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartTooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoaded\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoad\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartResized\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartAxisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"multiLevelLabelClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartPointClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onPdfCellRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"saveReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fetchReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"loadReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"renameReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"removeReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"newReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"conditionalFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"editCompleted\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beginDrillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"hyperlinkCellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drill\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartSeriesCreated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldListRefreshed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"numberFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldRemove\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeServiceInvoke\", void 0);\n    PivotView = PivotView_1 = __decorate([\n        NotifyPropertyChanges\n    ], PivotView);\n    return PivotView;\n}(Component));\nexport { PivotView };\n"]},"metadata":{},"sourceType":"module"}