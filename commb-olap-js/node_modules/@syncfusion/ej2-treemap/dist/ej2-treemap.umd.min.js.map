{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/model/print.js","../src/treemap/model/image-export.js","../src/treemap/model/pdf-export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n *\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n *\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id.\n * @returns {Size} - Returns the size.\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n *\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * Trim the title text\n *\n * @param {number} maxWidth - Specifies the maximum width\n * @param {string} text - Specifies the text\n * @param {FontModel} font - Specifies the font\n * @returns {string} - Returns the string\n * @private\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    var y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrenderer, renderOptions, text) {\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n *\n * @param {TextOption} options - Specifies the text option\n * @param {FontModel} font - Specifies the font model\n * @param {string} color - Specifies the color\n * @param {HTMLElement | Element} parent - Specifes the html element\n * @param {boolean} isMinus - Specifies the boolean value\n * @returns {Element} - Returns the element\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var spacing = 5;\n        var drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        var data = processData[path] || 'undefined';\n        if (source[i] === data) {\n            name += data + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function findChildren(data) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n *\n * @param {string} template - Specifies the template\n * @returns {Function} - Returns the template function\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n * @param {HTMLCollection} element - Specifies the element\n * @param {string} labelId - Specifies the label id\n * @param {Object} data - Specifies the data\n * @returns {HTMLElement} - Returns the element\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n *\n * @param {number} maxWidth - Specifies the maximum width\n * @param {number} maxHeight - Specifies the maximum height\n * @param {string} text - Specifies the text\n * @param {FontModel} font - Specifies the font\n * @returns {string} - Returns the hideText\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function maintainSelection(treemap, element, className) {\n    var elementId = treemap.levelSelection;\n    if (elementId) {\n        for (var index = 0; index < elementId.length; index++) {\n            if (element.getAttribute('id') === elementId[index]) {\n                if (element.childElementCount > 0) {\n                    element.children[0].setAttribute('class', className);\n                    applyOptions(element.childNodes[0], {\n                        border: treemap.selectionSettings.border, fill: treemap.selectionSettings.fill,\n                        opacity: treemap.selectionSettings.opacity\n                    });\n                }\n            }\n            else {\n                element.setAttribute('class', '');\n            }\n        }\n    }\n}\nexport function legendMaintain(treemap, legendGroup) {\n    var elementId = treemap.legendId;\n    if (elementId) {\n        for (var i = 0; i < elementId.length; i++) {\n            for (var j = 0; j < legendGroup.childElementCount; j++) {\n                if (legendGroup.childNodes[j]['id'] === elementId[i]) {\n                    legendGroup.childNodes[j].setAttribute('fill', treemap.selectionSettings.fill);\n                    legendGroup.childNodes[j].setAttribute('stroke', treemap.selectionSettings.border.color);\n                    legendGroup.childNodes[j].setAttribute('stroke-width', (treemap.selectionSettings.border.width).toString());\n                    legendGroup.childNodes[j].setAttribute('opacity', treemap.selectionSettings.opacity);\n                }\n            }\n        }\n    }\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = isNullOrUndefined(elements[j].childNodes[0]) ? elements[j] :\n            elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    if (!isNullOrUndefined(options['fill'])) {\n        element.setAttribute('fill', options['fill']);\n    }\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/**\n * @private\n */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/**\n * @param {ColorValue} value - Specfies the color value\n * @returns {string} - Returns the string\n * @private\n */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/**\n * @param {number} value - Specifes the value\n * @returns {string} - Returns the string\n * @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * @param {string} hex - Specifies the hex value\n * @returns {ColorValue} - Returns the color value\n * @private\n */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/**\n * @param {string} color - Specifies the color\n * @returns {string} - Returns the string\n * @private\n */\nexport function colorNameToHex(color) {\n    color = color === 'transparent' ? 'white' : color;\n    var element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {string} shape - Specifies the shape\n * @param {Size} size - Specifies the size\n * @param {string} url - Specifies the url\n * @param {PathOption} options - Specifies the options\n * @param {string} label - Specifies the label\n * @returns {Element} - Returns the element\n * @private\n */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {Size} size - Specifies the size\n * @param {string} shape - Specifies the shape\n * @param {PathOption} options - Specifies the path option\n * @param {string} url - Specifies the string\n * @returns {IShapes} - Returns the shapes\n * @private\n */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            // eslint-disable-next-line no-case-declarations\n            var eq = 72;\n            // eslint-disable-next-line no-case-declarations\n            var xValue = void 0;\n            // eslint-disable-next-line no-case-declarations\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncollection, index, number, legendElement, shapeElement, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrenderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the file name\n * @param {ExportType} type - Specifies the type\n * @param {string} url - Specifies the url\n * @param {boolean} isDownload - Specifies the boolean value\n * @returns {void}\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\nexport function removeElement(id) {\n    var element = document.getElementById(id);\n    return element ? remove(element) : null;\n}\n","/**\n * Maps Themes doc\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Theme;\n(function (Theme) {\n    /**\n     * @private\n     */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * To get the theme style based on treemap theme.\n *\n * @param {TreeMapTheme} theme Specifies the theme of the treemap control.\n * @returns {IThemeStyle} Returns the theme.\n * @private\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#374151',\n                subTitleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#374151',\n                legendTextColor: '#374151',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#D1D5DB',\n                subTitleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#D1D5DB',\n                legendTextColor: '#D1D5DB',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Triggers when the treemap is on load.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Triggers after treemap rendered.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Trigger before call the print method.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Trigger before each treemap item rendered.\n *\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Trigger after click on treemap item.\n *\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Trigger after drill start event completed.\n *\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Trigger after select the treemap item.\n *\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Trigger after hover on the treemap item.\n *\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var click = 'click';\n/**\n * Trigger after double click on the treemap item.\n *\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Trigger after right click on the treemap item.\n *\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Trigger before each treemap item.\n *\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Trigger before legend items.\n *\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Trigger after resize the treemap.\n *\n * @private\n */\nexport var resize = 'resize';\n/**\n * Define the font family in treemap component.\n *\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\n/**\n * Sets and gets the options for customizing the color and width of the border in treemap component.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the margin for the treemap component.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the style of the text contents in the treemap component.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options for customizing the common title of the treemap component.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * Sets and gets the options for customizing the subtitle of the treemap component.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * Sets and gets the options for customizing the title of the treemap component.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\n/**\n * Sets and gets the options to customize the color-mapping in treemap component.\n */\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Sets and gets the options for customizing the legend of the treemap component.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Sets and gets the settings for drill to visualize the treemap rendered in the initial state.\n */\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\n/**\n * Sets and gets the options for customizing the leaf item of the treemap component.\n */\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\n/**\n * Sets and gets the options for customizing the tooltip of the treemap component.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the options for customizing the selection of the leaf items in treemap component.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Sets and gets the options for customizing the highlighting of the treemap item,\n * when the mouse hover is performed in it.\n */\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Sets and gets the options for customizing the levels of the treemap component.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\nimport { LevelsData } from './../treemap';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var data;\n        var totalRect;\n        if (LevelsData.levelsData && LevelsData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(LevelsData.levelsData[0], [])[0] : LevelsData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var x = this.treemap.drilledItems[count]['data'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var y = {};\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(y || LevelsData.levelsData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(data || LevelsData.levelsData[0]);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var treemap = this.treemap;\n        var newData = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var groupIndex = 0;\n        var isLeafItem = false;\n        var item;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        var index;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var nextDatum = data[0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight\n            };\n            return convertToRect(container);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItem = {};\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItemGroupname = {};\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName || 'undefined';\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap, text: renderText,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            if (this_1.treemap.isBlazor) {\n                var treemap = eventArgs.treemap, RenderItems = eventArgs.RenderItems, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"RenderItems\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        if (eventArgs.text !== renderText) {\n                            eventArgs.text = textFormatter(eventArgs.text, item['data'], _this.treemap) || levelName;\n                        }\n                        _this.renderItemText(eventArgs.text.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        _this.treemap.renderReactTemplates();\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    maintainSelection(_this.treemap, itemGroup, 'treeMapSelection');\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        var textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        var textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(LevelsData.defaultLevelsData)) {\n            if (LevelsData.defaultLevelsData.length > 0) {\n                LevelsData.levelsData = LevelsData.defaultLevelsData;\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentData = findChildren(LevelsData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     *\n     * @param {string} color - Specifies the color\n     * @returns {string} - Returns the color\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateFn = getTemplateFunction(template);\n        var templateElement = templateFn(item['data'], this.treemap, template, this.treemap.element.id + baseTemplateId, false);\n        var labelEle = convertElement(templateElement, templateId, item['data']);\n        var templateSize = measureElement(labelEle, secondaryEle);\n        var templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\n/**\n * Print module handles the print functionality for treemap.\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     *\n     * @param {string[] | string | Element} elements - Specifies the element\n     * @returns {Element} - Returns the element\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {TreeMap} treemap - Specifies the treemap instance\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    return Print;\n}());\nexport { Print };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * ImageExport module handles the export to image functionality for treemap.\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the file or not.\n     * @returns {Promise} - Returns the promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'height': _this.control.availableSize.height.toString(),\n                    'width': _this.control.availableSize.width.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {TreeMap} treemap - Specifies the instance of the treemap.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (treemap) {\n        // Destroy method performed here\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * PdfExport module handles the export to pdf functionality for treemap.\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName - Specifies the name of the document.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specifies whether to download the document or not.\n     * @returns {Promise} - Returns the string.\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = _this.control.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                var backgroundColor = backgroundElement.getAttribute('fill');\n                if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'TailwindDark')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n                }\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {TreeMap} treemap - Specifies the treemap instance.\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (treemap) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/dot-notation */\n/* eslint-disable brace-style */\n/* eslint-disable max-len */\n/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren, removeElement } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape, textFormatter } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\nimport { Print } from './model/print';\nimport { ImageExport } from './model/image-export';\nimport { PdfExport } from './model/pdf-export';\n/**\n * Represents the treemap component.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**\n         * resize the treemap\n         */\n        _this.isResize = false;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        /** @private */\n        _this.levelSelection = [];\n        /** @private */\n        _this.legendId = [];\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.isBlazor = isBlazor();\n        this.trigger(load, { treemap: this.isBlazor ? null : this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        this.renderElements();\n    };\n    TreeMap.prototype.renderElements = function () {\n        LevelsData.levelsData = null;\n        LevelsData.defaultLevelsData = null;\n        LevelsData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(LevelsData.levelsData)) {\n            LevelsData.defaultLevelsData = LevelsData.levelsData;\n        }\n        this.processDataManager();\n    };\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var dataManager = dataModule.executeQuery(queryModule);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, this.isBlazor ? { isResized: this.isResize } : { treemap: this, isResized: this.isResize });\n        this.isResize = false;\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        this.clearTemplate();\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            LevelsData.levelsData = [];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var data_1 = {};\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                LevelsData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    LevelsData.hierarchyData = [];\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    LevelsData.hierarchyData = extend([], this.dataSource, LevelsData.hierarchyData, true);\n                    for (var i = 0; i < LevelsData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(LevelsData.hierarchyData[i], i);\n                    }\n                    LevelsData.levelsData = LevelsData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (LevelsData.levelsData.length > 1) {\n                        this.reOrderLevelData(LevelsData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(LevelsData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childData;\n        var levelData = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var newData = {};\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData = {};\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === LevelsData.hierarchyData.length - 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < LevelsData.hierarchyData.length; k++) {\n                childData = findChildren(LevelsData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    LevelsData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param id - Specifies the element to print the treemap.\n     */\n    TreeMap.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param type - Specifies the index of the axis.\n     * @param fileName - Specifies file name for exporting the rendered treemap.\n     * @param orientation - Specifies the orientation of the pdf document.\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    TreeMap.prototype.processFlatJsonData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var level = {};\n            level['level'] = i;\n            level[groupPath] = [];\n            LevelsData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var currentData = {};\n                var childName = '';\n                if (!isNullOrUndefined(groupPath)) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        LevelsData.levelsData[LevelsData.levelsData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method orders the treemap level data.\n     *\n     * @param start - Specifies the start value of the treemap level.\n     */\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData = LevelsData.levelsData[start][currentPath];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var previousData = LevelsData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (this.IsChildHierarchy(currentName.split('#'), previousData[j]['levelOrderName'].split('#'))) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(LevelsData.levelsData[LevelsData.levelsData.length - 1][currentPath], 'Child');\n        LevelsData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.IsChildHierarchy = function (current, previous) {\n        var isChild = false;\n        for (var i = 0; i < previous.length; i++) {\n            if (current.length < i || previous[i] !== current[i]) {\n                return false;\n            }\n            else {\n                isChild = true;\n            }\n        }\n        return isChild;\n    };\n    /**\n     * This method finds the weight value of the treemap level.\n     *\n     * @param processData - Specifies the treemap data.\n     * @param type - Specifies the type of the data.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var totalWeight;\n        var childData = [];\n        var levelName;\n        var start = 0;\n        var split;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var groupName;\n        var groupObj = {};\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * This method handles the window resize event on treemap.\n     *\n     * @param e - Specifies the pointer event.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        this.isResize = true;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.isBlazor) {\n            var treemap = args.treemap, blazorEventArgs = __rest(args, [\"treemap\"]);\n            args = blazorEventArgs;\n        }\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args, function (observedArgs) {\n                    _this.render();\n                });\n            }, 500);\n        }\n    };\n    /**\n     * This method handles the click event on the treemap.\n     *\n     * @param e - Specifies the mouse click event in the treemap.\n     */\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var labelText = targetEle.innerHTML;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name'],\n                text: labelText, contentItemTemplate: labelText\n            };\n            if (this.isBlazor) {\n                var data = {\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    options: eventArgs.item['options'],\n                    rect: eventArgs.item['rect']\n                };\n                eventArgs.item = this.layout.renderItems[itemIndex]['data'];\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemClick, eventArgs, function (observedArgs) {\n                if (observedArgs.text !== labelText || observedArgs.contentItemTemplate !== labelText) {\n                    if (isNullOrUndefined(_this.leafItemSettings.labelTemplate)) {\n                        observedArgs.text = textFormatter(observedArgs.text, observedArgs['item']['data'], observedArgs.treemap);\n                        targetEle.innerHTML = observedArgs.text;\n                    }\n                    else {\n                        var itemSelect = targetId.split('_RectPath')[0];\n                        var itemTemplate = void 0;\n                        if (targetId.indexOf('_LabelTemplate') > -1) {\n                            itemTemplate = targetEle;\n                        }\n                        else {\n                            itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                        }\n                        if (!isNullOrUndefined(itemTemplate)) {\n                            if (_this.isBlazor) {\n                                var templateElement = createElement('div');\n                                templateElement.innerHTML = observedArgs.contentItemTemplate;\n                                var currentTemplateElement = templateElement.children[0].firstElementChild;\n                                itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0])\n                                    - (currentTemplateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0])\n                                    - (currentTemplateElement['style']['height'].split('px')[0] / 2) + 'px';\n                            }\n                            itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                        }\n                    }\n                }\n            });\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    /**\n     * This method handles the double click event in the treemap.\n     *\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    /**\n     * This method handles the right click event in the treemap.\n     *\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /**\n     * This method handles the mouse down event in the treemap.\n     *\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    /**\n     * This method handles the mouse move event in the treemap.\n     *\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            if (this.isBlazor) {\n                var data = {\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    rect: eventArgs.item['rect'],\n                    options: eventArgs.item['options']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    /**\n     * This method calculates the selected treemap levels.\n     *\n     * @param labelText - Specifies the label text.\n     * @param item - Specifies the treemap item.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    /**\n     * This method calculates the previous level of child items in treemap.\n     *\n     * @param labelText - Specifies the label text in treemap\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param directLevel - Specifies the current level.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    /**\n     * This method compares the selected labels with the drill down items.\n     *\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param i - Specifies the treemap item.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var drillLevelChild;\n        var newDrillItem = {};\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /**\n     * This method handles mouse end event in treemap.\n     *\n     * @param e - Specifies the pointer event of mouse.\n     */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var index;\n        var newDrillItem = {};\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this.isBlazor ? null : this,\n                    element: targetEle, groupIndex: this.enableBreadcrumb &&\n                        this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null, item: this.isBlazor ? null : newDrillItem\n                };\n                if (this.isBlazor) {\n                    var treemap = startEvent.treemap, blazorEventArgs = __rest(startEvent, [\"treemap\"]);\n                    startEvent = blazorEventArgs;\n                }\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.isBlazor ? null : this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    /**\n     * This method handles mouse leave event in treemap.\n     *\n     * @param e - Specifies the pointer event of mouse.\n     */\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * This method is used to select or remove the selection of treemap item based on the provided selection settings.\n     */\n    TreeMap.prototype.selectItem = function (levelOrder, isSelected) {\n        if (isNullOrUndefined(isSelected)) {\n            isSelected = true;\n        }\n        var levelOrderName = '';\n        for (var i = 0; i < levelOrder.length; i++) {\n            if (i !== levelOrder.length - 1) {\n                levelOrderName += levelOrder[i] + '#';\n            }\n            else {\n                levelOrderName += levelOrder[i];\n            }\n        }\n        if (this.treeMapSelectionModule && this.selectionSettings.enable) {\n            this.treeMapSelectionModule.selectTreemapItem(levelOrderName, isSelected);\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the modules\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeMapModel} newProp - Specifies the new property\n     * @param {TreeMapModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'levels':\n                case 'drillDownView':\n                case 'renderDirection':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                case 'dataSource':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.renderElements();\n        }\n    };\n    /**\n     * Gets component name.\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * This method is used to dispose the treemap component.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        this.drilledItems = [];\n        this.levelSelection = [];\n        this.legendId = [];\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    TreeMap.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable @typescript-eslint/dot-notation */\n/* eslint-disable max-len */\nimport { LevelsData } from '../treemap';\nimport { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea, legendMaintain } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        if (this.treemap.isBlazor) {\n            var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n            eventArgs = blazorEventArgs;\n        }\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            // eslint-disable-next-line no-underscore-dangle\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                // eslint-disable-next-line no-underscore-dangle\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(LevelsData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(LevelsData.levelsData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.totalPages[0]['Collection'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var legendLength_1 = this.legendCollections.length;\n                var rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                var rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var isAddData;\n        var fill;\n        var rangeValue;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    var gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n        legendMaintain(this.treemap, this.legendGroup);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: this_1.treemap.isBlazor ? null : treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                if (this_1.treemap.isBlazor) {\n                    var treemap_1 = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                    eventArgs = blazorEventArgs;\n                }\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentData = void 0;\n            var legendRect = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        var pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        // eslint-disable-next-line prefer-const\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {TreeMap} treemap - Specifies treemap instance\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            var y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Browser, isNullOrUndefined, createElement } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* eslint-disable max-len */\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? this.treemap.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: null, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                var index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     *\n     * @param {TreeMap} treeMap - Specifies the instance of the treemap.\n     * @returns {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function TreeMapSelection(treeMap) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeSelectionCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        treemap.levelSelection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var items = [];\n        var targetId = targetEle.id;\n        var labelText = targetEle.innerHTML;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.treemap.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        treemap.levelSelection.push(element.id);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements,\n                        text: labelText, contentItemTemplate: labelText };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, text: labelText, contentItemTemplate: labelText };\n                    if (treemap.isBlazor) {\n                        var treemap_1 = eventArgs.treemap, items_1 = eventArgs.items, elements = eventArgs.elements, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"items\", \"elements\"]);\n                        eventBlazorArgs = blazorEventArgs;\n                    }\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs, function (observedArgs) {\n                        if (observedArgs.contentItemTemplate !== labelText) {\n                            var itemSelect = targetId.split('_RectPath')[0];\n                            var itemTemplate = void 0;\n                            if (targetId.indexOf('_LabelTemplate') > -1) {\n                                itemTemplate = targetEle;\n                            }\n                            else {\n                                itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                            }\n                            if (!isNullOrUndefined(itemTemplate)) {\n                                if (treemap.isBlazor) {\n                                    var templateCreated = createElement('div');\n                                    templateCreated.innerHTML = observedArgs.contentItemTemplate;\n                                    var templateElement = templateCreated.children[0].firstElementChild;\n                                    itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0]) - (templateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                    itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0]) - (templateElement['style']['height'].split('px')[0] / 2) + 'px';\n                                }\n                                itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                            }\n                        }\n                    });\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeSelectionCollection = [];\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                this.treemap.legendId = [];\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                var index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * @param {string} levelOrder - Specifies the level order of treemap item\n     * @param {boolean} enable - Specifies the boolean value\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.selectTreemapItem = function (levelOrder, enable) {\n        if (enable) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = void 0;\n            for (var s = 0; s < this.treemap.layout.renderItems.length; s++) {\n                if (levelOrder === this.treemap.layout.renderItems[s]['levelOrderName']) {\n                    item = this.treemap.layout.renderItems[s];\n                    break;\n                }\n            }\n            var selection = this.treemap.selectionSettings;\n            var selectionElements = [];\n            var element = void 0;\n            var index = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var items = [];\n            this.treemap.levelSelection = [];\n            var layoutID = this.treemap.element.id + '_TreeMap_' + this.treemap.layoutType + '_Layout';\n            var treeMapElement = document.getElementById(layoutID);\n            var orders = findHightLightItems(item, [], selection.mode, this.treemap);\n            for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                element = treeMapElement.childNodes[i];\n                item = this.treemap.layout.renderItems[element.id.split('_')[6]];\n                if (orders.indexOf(item['levelOrderName']) > -1) {\n                    selectionElements.push(element);\n                    this.treemap.levelSelection.push(element.id);\n                    items.push(item);\n                }\n            }\n            if (this.treemap.legendSettings.visible) {\n                for (var m = 0; m < items.length; m++) {\n                    this.shapeSelect = false;\n                    var length_5 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    index = getLegendIndex(length_5, items[m], this.treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.treemap.legendId.push(this.shapeSelectId);\n                        this.shapeSelectionCollection.push({\n                            legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n            }\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            var selectionElement = document.getElementById(this.treemap.levelSelection[0]);\n            this.treemap.selectionId = selectionElement.childNodes[0]['id'];\n            var highLightElements = document.getElementsByClassName('treeMapHighLight');\n            for (var k = 0; k < selectionElements.length; k++) {\n                element = selectionElements[k];\n                if (highLightElements.length > 0) {\n                    for (var j = 0; j < highLightElements.length; j++) {\n                        if (highLightElements[j].id === element.id) {\n                            highLightElements[j].classList.remove('treeMapHighLight');\n                        }\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                }\n                else {\n                    selection.fill = selection.fill === 'null' ?\n                        this.treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                        : selection.fill;\n                    applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                    element.classList.add('treeMapSelection');\n                }\n            }\n        }\n        else {\n            removeShape(this.shapeSelectionCollection, 'selection');\n            this.shapeElement = undefined;\n            this.treemap.levelSelection = [];\n            this.shapeSelect = true;\n            this.shapeSelectId = '';\n            this.treemap.legendId = [];\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            this.treemap.selectionId = '';\n        }\n    };\n    /**\n     * To bind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                if (this.treemap.isBlazor) {\n                    var tooltipArgs_1 = {\n                        cancel: false,\n                        location: tootipArgs.options['location'],\n                        text: tootipArgs.options['text'],\n                        textStyle: tootipArgs.options['textStyle'],\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        name: tooltipRendering\n                    };\n                    this.treemap.trigger(tooltipRendering, tooltipArgs_1, function (args) {\n                        _this.addTooltip(null, markerFill, tooltipEle, tooltipArgs_1);\n                    });\n                }\n                else {\n                    this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                        _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                    });\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                fill: this.treemap.tooltipSettings.fill ? this.treemap.tooltipSettings.fill : this.treemap.themeStyle.tooltipFillColor,\n                blazorTemplate: { name: 'TooltipTemplate', parent: this.treemap.tooltipSettings }\n            });\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} returns string\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @param {TreeMap} treeMap - Specifies the instance of the treemap\n     * @returns {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","isExist","name","leaf","leafItemSettings","data","levels","groupPath","labelPath","weightValuePath","findChildren","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","measureElementId","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","maintainSelection","className","elementId","levelSelection","index","getAttribute","childElementCount","setAttribute","applyOptions","childNodes","border","selectionSettings","legendMaintain","legendGroup","legendId","removeClassNames","elements","classList","remove","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","triggerDownload","fileName","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","removeElement","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","click","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","__rest","s","t","getOwnPropertySymbols","LayoutPanel","processLayoutPanel","totalRect","LevelsData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","isLeafItem","_loop_1","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","isBlazor","blazorEventArgs","trigger","observedArgs","path","drawPath","renderItemText","renderTemplate","renderReactTemplates","tabIndex","updateBlazorTemplate","svgObject","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","textLocation","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateId","baseTemplateId","labelEle","templateLocation","textValue","Theme","mapsTitleFont","Print","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","getModuleName","destroy","ImageExport","export","allowDownload","Promise","resolve","reject","availableSize","Browser","userAgent","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image_1","Image","context_1","getContext","onload","drawImage","revokeObjectURL","toDataURL","src","PdfExport","orientation","PdfPageOrientation","Landscape","exportElement","backgroundElement","image","context","PdfDocument","imageString","pageSettings","pages","add","graphics","PdfBitmap","save","TreeMap","isResize","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","renderElements","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","isResized","renderComplete","firstChild","hasChildNodes","resetBlazorTemplate","clearTemplate","containerWidth","containerHeight","secondaryElement","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","IsChildHierarchy","current","isChild","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetEle","targetId","labelText","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","contentItemTemplate","itemSelect","itemTemplate","templateElement","currentTemplateElement","firstElementChild","doubleTapTimer1","end","Date","getMilliseconds","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","moveArgs","moveBlazorArgs","cursor","isDrilled","itemArea","calculateSelectedTextLevels","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","layoutID","templateID","drillMouseMove","drillLength","which","layerElementId","textContent","widthIncrement","heightIncrement","drilledLegendItems","drillElementId","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","selectItem","levelOrder","isSelected","treeMapSelectionModule","enable","selectTreemapItem","requiredModules","modules","tooltipSettings","member","highlightSettings","onPropertyChanged","newProp","oldProp","removeSvg","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","itemTextStyle_1","legendLength_1","rectWidth_1","rectHeight_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","q","stop1Color","colorStop","stop2Color","gradient","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","eventBlazorArgs","treeMapElement","orders","highlight","highLightElements","selectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","templateCreated","length_4","targetEle_1","m","length_5","selectionElement","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","tooltipArgs_1","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","blazorTemplate","appendTo","tooltipElementId"],"mappings":"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"}