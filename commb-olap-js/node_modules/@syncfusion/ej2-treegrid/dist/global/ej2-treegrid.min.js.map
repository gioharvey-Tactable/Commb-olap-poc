{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length == 0) {\n                this.filteredList = filterResult;\n            }\n            else {\n                if (this.filteredList != filterResult) {\n                    this.filteredList = filterResult;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length) {\n                this.filteredList = [];\n            }\n        }\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            (this.filteredList.length > 0)) ? this.filteredList :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = [\"Children\", \"childRecords\", \"taskData\", \"uniqueID\", \"parentItem\", \"parentUniqueID\", \"index\"];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]] && excludeKeys.indexOf(keys[i]) === -1) {\n                        var isDate = old[keys[i]] instanceof Date && current[keys[i]] instanceof Date;\n                        if (!isDate || (old[keys[i]].getTime() !== current[keys[i]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @blazorType void\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[cellIndex];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[cIndex];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary == true; }).length) {\n                _this.grid.refresh();\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index === 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[i][prop])) {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, index);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            stackedHeader = true;\n        }\n        if (!stackedHeader) {\n            this.setProperties({ columns: this.columnModel }, true);\n        }\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        if (this.grid.getFrozenColumns() > 0) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                var pindex = this.flatData[record[i].parentItem.index].index;\n                if (this.flatData[pindex].expanded === false) {\n                    record.push(this.flatData[pindex]);\n                    this.flatData[pindex].expanded = true;\n                }\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = findChildrenRecords(records[i]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord.parentItem;\n                            draggedRecord.level = 0;\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                            draggedRecord.parentItem = droppedRecord.parentItem;\n                            draggedRecord.parentUniqueID = droppedRecord.parentUniqueID;\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                                draggedRecord.parentItem = droppedRecord.parentItem;\n                                draggedRecord.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                    }\n                    this.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[i_1]))) ?\n                                columns[i_1] : getObject('field', (columns[i_1]));\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[columnIndex])) ?\n                    columns[columnIndex] : getObject('field', columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray, isCountRequired } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function () {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        var uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('aria-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[i]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[i]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                if (isCountRequired(this.parent)) {\n                    data = getValue('result', data);\n                }\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                            .indexOf(currentViewRecords[0][primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action == 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary == true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    this.addRowIndex = args.index;\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[args.index];\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop] && !isNullOrUndefined(this.parent.getRowByIndex(0))) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[i]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (column, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': column.visible,\n            'isDataCell': !isNullOrUndefined(column.field || column.template),\n            'isTemplate': !isNullOrUndefined(column.template),\n            'rowID': rowId,\n            'column': column,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': column.commands,\n            'isForeignKey': column.isForeignColumn && column.isForeignColumn(),\n            'foreignKeyData': column.isForeignColumn && column.isForeignColumn() && getValue(column.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] != -1 && index != this[selectedRowIndex]) {\n                index = this[selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var isLastBlock = (this[selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] != -1 &&\n                nextSetResIndex != this[selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        var containerRect = 'containerRect';\n        _super.prototype[containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n            return;\n        }*/\n            /*if(delta > 45 || delta < -45){\n          this.isWheeling = true;\n        }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if (!isNullOrUndefined(this.expandCollapseRec) && this.parent.enableCollapseAll) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = visualData[0].index;\n                }\n                else {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","checkBoxRecord","checkAll","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","updateTreeCell","notify","checkboxElement","parseInt","summaryData","field","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","renderComplete","destroyTemplateFn","clearTemplate","afterGridRender","clipboardModule","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","triggerEvents","bindGridEvents","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","actionBegin","actionComplete","updateTreeGridModel","ag","showChildSummary","refresh","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","closeEdit","treeGridElement","hasTreeGridChild","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","selectionModule","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","refreshScrollOffset","collapsingArgs","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","getRecordDetails","pindex","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","this_1","t","res","pageingDetails","propname","skip","size","pageSize","take","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","parentRowIndex","getRowElementByUID","totalCount","selectedRecords","mRows","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","gridTop","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","setTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","serviceLocator","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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0E,IACI20B,aAAYzzB,IACbuY,EAASne,UAAW,uBAAoB,IAC3C0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,sBAAmB,IAC1C0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,oBAAiB,IACxC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,yBAAsB,IAC7C0E,IACI20B,aAAYld,IACbgC,EAASne,UAAW,mBAAgB,IACvC0E,IACI20B,aAAYC,oBACbnb,EAASne,UAAW,sBAAmB,IAC1C0E,IACIc,cACD2Y,EAASne,UAAW,oBAAiB,IACxC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,qBAAkB,IACzC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,wBAAqB,IAC5C0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,mBAAgB,IACvC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,wBAAqB,IAC5C0E,IACI20B,aAAYpb,KACbE,EAASne,UAAW,mBAAgB,IACvC0E,IACIiB,gBAAemY,KAChBK,EAASne,UAAW,iBAAc,IACrC0E,IACI20B,aAAYtb,KACbI,EAASne,UAAW,mBAAgB,IACvC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,qBAAkB,IACzC0E,IACIc,cACD2Y,EAASne,UAAW,qBAAkB,IACzC0E,IACI20B,aAAY3zB,IACbyY,EAASne,UAAW,qBAAkB,IACzC0E,IACI20B,aAAYvoB,IACbqN,EAASne,UAAW,qBAAkB,IACzC0E,IACIc,cACD2Y,EAASne,UAAW,cAAW,IAClC0E,IACIc,cACD2Y,EAASne,UAAW,sBAAmB,IAC1C0E,IACIc,WAAS,YACV2Y,EAASne,UAAW,gBAAa,IACpC0E,IACIc,cACD2Y,EAASne,UAAW,uBAAoB,IAC3C0E,IACIc,cACD2Y,EAASne,UAAW,sBAAmB,IAC1C0E,IACIc,cACD2Y,EAASne,UAAW,kBAAe,IACtC0E,IACIc,WAAS,WACV2Y,EAASne,UAAW,wBAAqB,IAC5C0E,IACIc,WAAS,OACV2Y,EAASne,UAAW,gBAAa,IACpC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,mBAAgB,IACvC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,oBAAiB,IACxC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,kBAAe,IACtC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,qBAAkB,IACzC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,0BAAuB,IAC9C0E,IACIc,WAAS,SACV2Y,EAASne,UAAW,aAAU,IACjC0E,IACIc,WAAS,SACV2Y,EAASne,UAAW,YAAS,IAChC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,2BAAwB,IAC/C0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,8BAA2B,IAClD0E,IACI20B,aAAYnb,KACbC,EAASne,UAAW,6BAA0B,IACjD0E,IACIc,WAAS,QACV2Y,EAASne,UAAW,sBAAmB,IAC1C0E,IACI60B,WACDpb,EAASne,UAAW,cAAW,IAClC0E,IACI60B,WACDpb,EAASne,UAAW,WAAQ,IAC/B0E,IACI60B,WACDpb,EAASne,UAAW,gBAAa,IACpC0E,IACI60B,WACDpb,EAASne,UAAW,eAAY,IACnC0E,IACI60B,WACDpb,EAASne,UAAW,iBAAc,IACrC0E,IACI60B,WACDpb,EAASne,UAAW,gBAAa,IACpC0E,IACI60B,WACDpb,EAASne,UAAW,eAAY,IACnC0E,IACI60B,WACDpb,EAASne,UAAW,gBAAa,IACpC0E,IACI60B,WACDpb,EAASne,UAAW,kBAAe,IACtC0E,IACI60B,WACDpb,EAASne,UAAW,qBAAkB,IACzC0E,IACI60B,WACDpb,EAASne,UAAW,gBAAa,IACpC0E,IACI60B,WACDpb,EAASne,UAAW,eAAY,IACnC0E,IACI60B,WACDpb,EAASne,UAAW,kBAAe,IACtC0E,IACI60B,WACDpb,EAASne,UAAW,kBAAe,IACtC0E,IACI60B,WACDpb,EAASne,UAAW,qBAAkB,IACzC0E,IACI60B,WACDpb,EAASne,UAAW,wBAAqB,IAC5C0E,IACI60B,WACDpb,EAASne,UAAW,sBAAmB,IAC1C0E,IACI60B,WACDpb,EAASne,UAAW,eAAY,IACnC0E,IACI60B,WACDpb,EAASne,UAAW,oBAAiB,IACxC0E,IACI60B,WACDpb,EAASne,UAAW,gBAAa,IACpC0E,IACI60B,WACDpb,EAASne,UAAW,wBAAqB,IAC5C0E,IACI60B,WACDpb,EAASne,UAAW,sBAAmB,IAC1C0E,IACI60B,WACDpb,EAASne,UAAW,wBAAqB,IAC5C0E,IACI60B,WACDpb,EAASne,UAAW,mBAAgB,IACvC0E,IACI60B,WACDpb,EAASne,UAAW,sBAAmB,IAC1C0E,IACI60B,WACDpb,EAASne,UAAW,oBAAiB,IACxC0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,qBAAkB,IACzC0E,IACI60B,WACDpb,EAASne,UAAW,mBAAgB,IACvC0E,IACI60B,WACDpb,EAASne,UAAW,kBAAe,IACtC0E,IACI60B,WACDpb,EAASne,UAAW,qBAAkB,IACzC0E,IACI60B,WACDpb,EAASne,UAAW,oBAAiB,IACxC0E,IACI60B,WACDpb,EAASne,UAAW,qBAAkB,IACzC0E,IACI60B,WACDpb,EAASne,UAAW,oBAAiB,IACxC0E,IACI60B,WACDpb,EAASne,UAAW,qBAAkB,IACzC0E,IACI60B,WACDpb,EAASne,UAAW,sBAAmB,IAC1C0E,IACI60B,WACDpb,EAASne,UAAW,mBAAgB,IACvC0E,IACI60B,WACDpb,EAASne,UAAW,sBAAmB,IAC1C0E,IACI60B,WACDpb,EAASne,UAAW,qBAAkB,IACzC0E,IACI60B,WACDpb,EAASne,UAAW,kBAAe,IACtC0E,IACI60B,WACDpb,EAASne,UAAW,eAAY,IACnC0E,IACI60B,WACDpb,EAASne,UAAW,iBAAc,IACrC0E,IACI60B,WACDpb,EAASne,UAAW,sBAAmB,IAC1C0E,IACI60B,WACDpb,EAASne,UAAW,iBAAc,IACrC0E,IACI60B,WACDpb,EAASne,UAAW,iBAAc,IACrC0E,IACI60B,WACDpb,EAASne,UAAW,qBAAkB,IACzC0E,IACI60B,WACDpb,EAASne,UAAW,oBAAiB,IACxC0E,IACI60B,WACDpb,EAASne,UAAW,kBAAe,IACtC0E,IACI60B,WACDpb,EAASne,UAAW,mBAAgB,IACvC0E,IACI60B,WACDpb,EAASne,UAAW,sBAAmB,IAC1C0E,IACI60B,WACDpb,EAASne,UAAW,sBAAmB,IAC1C0E,IACI60B,WACDpb,EAASne,UAAW,uBAAoB,IAC3C0E,IACI60B,WACDpb,EAASne,UAAW,iBAAc,IACrC0E,IACI60B,WACDpb,EAASne,UAAW,kBAAe,IACtC0E,IACI60B,WACDpb,EAASne,UAAW,cAAW,IAClC0E,IACI60B,WACDpb,EAASne,UAAW,mBAAgB,IACvC0E,IACI60B,WACDpb,EAASne,UAAW,yBAAsB,IAC7C0E,IACI60B,WACDpb,EAASne,UAAW,cAAW,IAClC0E,IACIc,YAAU,IACX2Y,EAASne,UAAW,uBAAoB,IAC3C0E,IACI20B,aAAYtoB,IACboN,EAASne,UAAW,wBAAqB,IAC5C0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,uBAAoB,IAC3C0E,IACIc,YAAS,IACV2Y,EAASne,UAAW,qBAAkB,IACzC0E,IACI60B,WACDpb,EAASne,UAAW,uBAAoB,IAC3C0E,IACI60B,WACDpb,EAASne,UAAW,6BAA0B,IACjD0E,IACI60B,WACDpb,EAASne,UAAW,yBAAsB,IAC7C0E,IACI60B,WACDpb,EAASne,UAAW,+BAA4B,IACnD0E,IACI60B,WACDpb,EAASne,UAAW,wBAAqB,IAC5C0E,IACI60B,WACDpb,EAASne,UAAW,0BAAuB,IAC9C0E,IACI60B,WACDpb,EAASne,UAAW,sBAAmB,IAC1C0E,IACI60B,WACDpb,EAASne,UAAW,wBAAqB,IAC5Cme,EAAWY,EAAara,IACpB80B,yBACDrb,IAELsb,aC71GEC,GAAyB,WAMzB,QAASA,GAAQv/B,GACb8L,OAAKC,OAAOyzB,WACZn2B,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAgDT,MAxCA8uB,GAAQ15B,UAAUoG,cAAgB,WAC9B,MAAO,WAMXszB,EAAQ15B,UAAU4K,iBAAmB,WACjCpH,KAAKrJ,OAAO0Q,GAAG,iBAAkBrH,KAAKo2B,cAAep2B,OAEzDk2B,EAAQ15B,UAAUkL,oBAAsB,WAChC1H,KAAKrJ,OAAOgR,aAGhB3H,KAAKrJ,OAAOiR,IAAI,iBAAkB5H,KAAKo2B,gBAQ3CF,EAAQ15B,UAAUsK,QAAU,WACxB9G,KAAK0H,uBAETwuB,EAAQ15B,UAAU45B,cAAgB,WAK9B,IAAK,GAFDC,GADA5mB,EAAazP,KAAKrJ,OAAkB,YAAEqJ,KAAKrJ,OAAOyI,iBAElDk3B,EAAct2B,KAAKrJ,OAAOiJ,aACrB22B,EAAI,EAAGA,EAAID,EAAY9+B,OAAQ++B,IAGpC,GAFsB/9B,YAAU,QAASiX,KACjBjX,YAAU,QAAS89B,EAAYC,IACZ,CACvCF,EAAYE,CACZ,OAGRv2B,KAAKrJ,OAAO0jB,eAAgBjb,gBAAiBi3B,IAAa,IAEvDH,KCzDPM,GAAwB,WAMxB,QAASA,GAAO7/B,GACZ8L,OAAKC,OAAO+zB,UACZz2B,KAAKrJ,OAASA,EAgClB,MAxBA6/B,GAAOh6B,UAAUshB,eAAiB,SAAU4Y,GACxC12B,KAAKrJ,OAAOiB,KAAKkmB,eAAe4Y,IAQpCF,EAAOh6B,UAAUoG,cAAgB,WAC7B,MAAO,UAQX4zB,EAAOh6B,UAAUsK,QAAU,WACnB9G,KAAKrJ,OAAOgR,aAGhB3H,KAAKrJ,OAAOiB,KAAKomB,aAAalX,WAE3B0vB,KClCPG,GAAuB,WAMvB,QAASA,GAAMhgC,GAEXqJ,KAAK42B,SAAU,EAEf52B,KAAK62B,oBAAqB,EAE1B72B,KAAK82B,eAAgB,EACrBr0B,OAAKC,OAAOq0B,SACZ/2B,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBA6lCT,MA3lCAuvB,GAAMn6B,UAAUw6B,0BAA4B,SAAU9mB,GAWlD,OATIlQ,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,QAC3CqJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAGvCsE,KAAKrJ,OAAOiB,KAAKhB,YAEVwG,OAAO,SAAUC,GAC7C,MAAOA,GAAEpE,WAAaiX,KAQ9BymB,EAAMn6B,UAAU4K,iBAAmB,WAC/BpH,KAAKrJ,OAAO0Q,GhB4EI,cgB5EkBrH,KAAKi3B,WAAYj3B,MACnDA,KAAKrJ,OAAO0Q,GhB6EI,cgB7EkBrH,KAAKk3B,WAAYl3B,MACnDA,KAAKrJ,OAAO0Q,GhBsEC,WgBtEkBrH,KAAKm3B,UAAWn3B,MAC/CA,KAAKrJ,OAAO0Q,GhBuEI,cgBvEkBrH,KAAKo3B,YAAap3B,OAUxD22B,EAAMn6B,UAAUi5B,YAAc,SAAUC,EAAaC,EAAStI,GAC1D,GAAIgK,GAAOr3B,KAAKrJ,MAChB,IAAI++B,EAAY,KAAOC,IAA8D,KAAlD,QAAS,QAAS,SAASn3B,QAAQ6uB,GAAtE,CACqB,UAAbA,IACArtB,KAAKs3B,aAAe,cAEP,UAAbjK,IACArtB,KAAKs3B,aAAe,iBAEP,UAAbjK,IACArtB,KAAKs3B,aAAe,gBAGxB,KAAK,GADD74B,MACKnH,EAAI,EAAGA,EAAIo+B,EAAYl+B,OAAQF,IACpCmH,EAAKnH,GAAK0I,KAAKrJ,OAAO8G,wBAAwBi4B,EAAYp+B,GAE9D,IACIyL,IACAtE,KAAMA,EACN84B,UAAW5B,EAUf,IARKv+B,EAAgB4I,KAAKrJ,SACtBqJ,KAAKw3B,SAASz0B,GAND,GASbs0B,EAAKpgB,cACLogB,EAAKl6B,SAAW6C,KAAKy3B,aAAaJ,EAAKl6B,WAE3C6C,KAAKrJ,OAAOiB,KAAKqyB,UACbjqB,KAAKrJ,OAAO2I,qBAA6C,kBAAtBU,KAAKs3B,aAAkC,CAC1E,GAAIn9B,GAAQ6F,KAAKrJ,OAAOyI,gBAAkB,EACtCT,EAAMqB,KAAKrJ,OAAOkI,UAAU62B,EAAY,IACxCgC,EAAW30B,EAAKtE,KAAK,GACrBk5B,KACA3yB,IACJ2yB,GAAYl/B,KAAKi/B,GACjB1yB,EAAKvM,KAAKkG,EACV,IACIzB,GAAalE,EAAcgH,KAAKrJ,OAAQoM,EAAKtE,KAAK,GAAiB,gBACnEm5B,EAAY53B,KAAKrJ,OAAOkI,UAAU82B,EACtCgC,GAAYl/B,KAAKyE,GACjB8H,EAAKvM,KAAKm/B,EACV,KAAStgC,EAAI,EAAGA,EAAIqgC,EAAYngC,OAAQF,IACpC0I,KAAKrJ,OAAO4I,aAAaC,YACrBf,KAAMk5B,EAAYrgC,GAAImI,KAAMuF,EAAK1N,GAAGoI,MAAMvF,GAC1CwF,OAAQK,KAAKrJ,OAAOiB,KAAKgI,aAAaI,KAAKrJ,OAAOyI,iBAClDS,YAAa,sBASjC82B,EAAMn6B,UAAUi7B,aAAe,SAAUnhB,GAUrC,IAAK,GAAIhf,GAAI,EAAGA,EAAIgf,EAAY9e,OAAQF,KAT1B,SAAUA,GAEpB,GADAgf,EAAYhf,GAAG6C,MAAQ7C,GAClBK,oBAAkB2e,EAAYhf,GAAGyB,YAAa,CAC/C,GAAI8+B,GAAgBvhB,EAAYlZ,OAAO,SAAUqB,GAC7C,MAAOA,GAAKxF,WAAaqd,EAAYhf,GAAGgH,iBACzC,EACHgY,GAAYhf,GAAGyB,WAAWoB,MAAQ09B,EAAc19B,QAI5C7C,EAEZ,OAAOgf,IAEXqgB,EAAMn6B,UAAU26B,UAAY,SAAU95B,GAGlC,IAAK,GAFDy6B,GACAC,EAAc16B,EAAElF,QACXb,EAAI+F,EAAElF,QAAQX,OAAS,EAAGF,GAAK,EAAGA,IAEvC,IADAwgC,EAAgBC,EAAYzgC,IACVgH,eAAgB,CAC9B,GAAI3F,GAASo/B,EAAY36B,OAAO,SAAUqB,GACtC,MAAOA,GAAKxF,WAAa6+B,EAAcx5B,gBAE3C,IAAI3F,EAAOnB,OAAQ,CACf,GAAI2C,GAAQxB,EAAO,GAAGY,aAAaiF,QAAQs5B,GACvCh/B,EAAeH,EAAO,IACX,IAAXwB,IACIxC,oBAAkBqI,KAAKrJ,OAAOkG,aAC9B/D,EAAaS,aAAauD,OAAO3C,EAAO,GACnCrB,EAAaS,aAAa/B,SAC3BsB,EAAaQ,iBAAkB,EAC/BR,EAAaiW,yBAA0B,IAG/C/O,KAAK62B,oBAAqB,IAK1C,GAAIl/B,oBAAkBqI,KAAKrJ,OAAOC,cAAgBoJ,KAAKrJ,OAAOC,WAAWY,OAAQ,CAK7E,IAAK,GAHDwgC,GADAX,EAAOr3B,KAAKrJ,OAEZshC,EAAgB56B,EAAElF,QAEbb,EADQ+F,EAAElF,QAAQX,OACD,EAAGF,GAAK,EAAGA,IAAK,CACtC0gC,EAAkBC,EAAc3gC,IAC3BA,GAAK0gC,EAAgB1+B,kBACtB0+B,EAAgB39B,SAAS2F,KAAKrJ,OAAOiG,iBAAmB,KAU5D,IAPKjF,oBAAkB0/B,EAAKz6B,mBACxBy6B,EAAKt6B,aAAe,MAEnBpF,oBAAkBqgC,EAAgB39B,WAAc1C,oBAAkB0/B,EAAKt6B,eACvEzE,OAAOkE,UAAUC,eAAeC,KAAKs7B,EAAgB39B,SAAUg9B,EAAKt6B,gBACrEi7B,EAAgB39B,SAASg9B,EAAKt6B,kBAE9BzE,OAAOkE,UAAUC,eAAeC,KAAKs7B,EAAiBX,EAAKt6B,eAC1Di7B,EAAgBX,EAAKt6B,cAAevF,SAAWwI,KAAK62B,qBACpDl/B,oBAAkB0/B,EAAKz6B,iBAExB,IAAK,GADDmK,GAAaixB,EAAgBX,EAAKt6B,cAC7B/C,EAAI,EAAGA,EAAI+M,EAAUvP,OAAQwC,KACW,IAAzCi+B,EAAcz5B,QAAQuI,EAAU/M,MAChCi+B,EAAcn7B,OAAO9C,EAAG,EAAG+M,EAAU/M,IACrC+M,EAAU/M,GAAGK,SAAWgC,YAAW0K,EAAU/M,IAC7C1C,GAAK,EAIbgB,QAAOkE,UAAUC,eAAeC,KAAKs7B,EAAiBX,EAAKz6B,kBAA6D,MAAzCo7B,EAAgBX,EAAKz6B,mBAChGoD,KAAK62B,qBACTmB,EAAgB39B,SAASg9B,EAAKz6B,iBAAmB,WAC1Co7B,GAAgBj/B,iBAChBi/B,GAAgB15B,gBAEvB3G,oBAAkB0/B,EAAKzgC,cACvBygC,EAAKzgC,eAETygC,EAAKzgC,WAAWkG,OA7BG,EA6BkB,EAAGk7B,EAAgB39B,UAE5Dg9B,EAAKhd,eAAgBzjB,WAAYygC,EAAKzgC,aAAc,OAEnD,CACD,IAASU,EAAI,EAAGA,EAAIygC,EAAYvgC,OAAQF,IACpCgb,WAAS,sBAAwBylB,EAAYzgC,GAAG2B,SAAU8+B,EAAYzgC,GAAI0I,KAAKrJ,OAEnF,IAAIoM,IAAStE,KAAMpB,EAAElF,QAASo/B,UAAWl6B,EAAEs4B,QACvC31B,MAAKrJ,OAAOC,qBAAsBC,gBAClCmJ,KAAKqW,aAAerW,KAAKrJ,OAAOC,WAAWA,WAAW8E,KACtDsE,KAAKvE,SAAWuE,KAAKrJ,OAAOC,WAAWA,WAAW8E,OAGlDsE,KAAKqW,aAAerW,KAAKrJ,OAAOiB,KAAKhB,WACrCoJ,KAAKvE,SAAWuE,KAAKrJ,OAAOC,YAE5Be,oBAAkBqI,KAAKs3B,gBACvBt3B,KAAKs3B,aAAe,gBACpBv0B,EAAKw0B,UAAYv3B,KAAKrJ,OAAO8G,wBAAwBjG,OAAS,EAAIwI,KAAKrJ,OAAO8G,wBAAwBjG,OAAS,EAC3GuL,EAAKw0B,UACTx0B,EAAKtE,KAAOsE,EAAKtE,KAAKN,IAAI,SAAU7G,GAChC,MAAIA,GAAEgC,iBAAmB3B,oBAAkBL,EAAEyB,aACzCzB,EAAE8C,MAAQ,EACH9C,UAGAA,GAAEyB,iBACFzB,GAAEgH,eACThH,EAAE8C,MAAQ,EACH9C,MAInB0I,KAAKw3B,SAASz0B,KAGtB4zB,EAAMn6B,UAAU46B,YAAc,SAAU/5B,GACpC,IAAK,GAAI/F,GAAI,EAAGA,EAAI+F,EAAElF,QAAQX,OAAQF,IAClC0I,KAAK83B,cAAgBz6B,EAAElF,QAAQb,IAC3B0I,KAAK83B,cAAcx+B,iBAAmB0G,KAAK83B,cAAc/+B,aAE8B,IADvFiH,KAAKrJ,OAAOiB,KAAKhB,WACb4H,QAAQwB,KAAKg3B,0BAA0Bh3B,KAAK83B,cAAcx5B,gBAAgB,KACjD,IAA7B0B,KAAK83B,cAAc19B,QACnB4F,KAAKk4B,iBAIjBvB,EAAMn6B,UAAU27B,sBAAwB,WACpC,GAGIC,GACAC,EAJAP,EAAgB93B,KAAK83B,cACrBQ,EAAgBt4B,KAAKs4B,cACrBC,EAAQv4B,KAAKrJ,MAUjB,MANIyhC,EADAp4B,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,QAC/C4hC,EAAM3hC,WAAWA,WAAW8E,KAG5B68B,EAAM3hC,aAGHe,oBAAkB2gC,IAAmBA,EAAcv/B,YAAgBpB,oBAAkB2gC,EAAcj+B,WAiBtH,IAAK2F,KAAKrJ,OAAOiG,kBAAqBjF,oBAAkB2gC,IAAkBA,EAAcv/B,aAC/D,eAAtBiH,KAAKs3B,cAAuD,kBAAtBt3B,KAAKs3B,cAG3C,IAAK,GADD/9B,GADSyG,KAAKg3B,0BAA0BsB,EAAch6B,gBAAgB,GAChD/E,aACjBjC,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrCghC,EAAcv/B,WAAWsB,SAAS2F,KAAKrJ,OAAOoG,cAAczF,GAAKiC,EAAajC,GAAG+C,aAtByC,CAClI,IAAS/C,EAAI,EAAGA,EAAIgB,OAAOC,KAAK6/B,GAAgB5gC,OAAQF,IAChD8gC,EAAe9gC,GAAG0I,KAAKrJ,OAAOoG,gBAAkBu7B,EAAcj+B,SAAS2F,KAAKrJ,OAAOoG,gBACnFs7B,EAAM/gC,EAGY,gBAAtB0I,KAAKs3B,aACAt3B,KAAKrJ,OAAOkG,WACbu7B,EAAet7B,OAAOu7B,EAAK,EAAGP,EAAcz9B,UAGrB,kBAAtB2F,KAAKs3B,eACLt3B,KAAKrJ,OAAOkG,WACbu7B,EAAet7B,OAAOu7B,EAAM,EAAG,EAAGP,EAAcz9B,WAaxD2F,KAAKrJ,OAAOiG,kBACRk7B,EAAc/+B,WACY,eAAtBiH,KAAKs3B,cAAuD,kBAAtBt3B,KAAKs3B,cAC3CQ,EAAc93B,KAAKrJ,OAAOiG,iBAAmB07B,EAAct4B,KAAKrJ,OAAOiG,iBACvEk7B,EAAcz9B,SAAS2F,KAAKrJ,OAAOiG,iBAAmB07B,EAAct4B,KAAKrJ,OAAOiG,mBAGhFk7B,EAAc93B,KAAKrJ,OAAOiG,iBAAmB07B,EAAct4B,KAAKrJ,OAAOkG,WACvEi7B,EAAcz9B,SAAS2F,KAAKrJ,OAAOiG,iBAAmB07B,EAAct4B,KAAKrJ,OAAOkG,aAIpFi7B,EAAcz9B,SAAS2F,KAAKrJ,OAAOiG,iBAAmB,KACtDk7B,EAAc93B,KAAKrJ,OAAOiG,iBAAmB,QAIzD+5B,EAAMn6B,UAAUg8B,qBAAuB,SAAUvoB,GAC7C,GAAIwoB,GAAkC,kBAAtBz4B,KAAKs3B,YACjBt3B,MAAKrJ,OAAOsZ,QAAQgE,uBAAuB,qBAAqBzc,OAAS,GAAKyY,IACxD,IAArBA,EAAQrJ,UAAkB6xB,IAC3Bz4B,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,qBAAqB,GAAGiO,UAG3EyU,EAAMn6B,UAAUk8B,oBAAsB,SAAUzoB,GAC5C,GAAI0oB,GAAa1oB,IAAYA,EAAQ3K,UAAUC,SAAS,eAAiB0K,EAAQ3K,UAAUC,SAAS,mBAC7F0K,EAAQ3K,UAAUC,SAAS,gBAC9BqzB,EAAiB3oB,IAAY0oB,GAC7B34B,KAAKrJ,OAAOiI,cAAcoB,KAAKrJ,OAAO8G,wBAAwBjG,OAAS,GAAG4R,aAAa,cACnF6G,EAAQ7G,aAAa,YACzBqvB,EAAYG,GAAwC,eAAtB54B,KAAKs3B,YACnCt3B,MAAKrJ,OAAOsZ,QAAQgE,uBAAuB,oBAAoBzc,OAAS,GAAKyY,IAAY2oB,GAAkBH,IAC3Gz4B,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,oBAAoB,GAAGiO,UAG1EyU,EAAMn6B,UAAUq8B,WAAa,SAAUl6B,EAAKxE,EAAO4I,GAC/C,GAAI+1B,GAAS/1B,EAAK3B,OAAS6G,UAAQlF,EAAK3B,OAAQ,MAAQ,IACxDpB,MAAKs3B,iBAAe3d,EACpB,IAAIof,GAAoB,CACxB/4B,MAAKw4B,qBAAqBM,GAC1B94B,KAAK04B,oBAAoBI,EACzB,KAAK,GAAIxhC,GAAI,EAAGA,EAAIyL,EAAKiC,KAAKxN,OAAQF,KAC7BK,oBAAkBmhC,IAAWA,EAAO1vB,aAAa,cAAgBrG,EAAKiC,KAAK1N,GAAG8R,aAAa,cACxFrB,eAAahF,EAAK3B,OAAQ,mBAC9BpB,KAAKs3B,aAAe,UACpBt3B,KAAKg5B,eAIb,IAAI3B,GAAOr3B,KAAKrJ,OACZsiC,EAAS,EAETC,EAAa7B,EAAKlW,SAAWkW,EAAKlW,QAAQ3pB,OAC1C2hC,SAASC,eAAe/B,EAAKpnB,QAAQC,GAAK,6BAA6BmpB,aAAe,EAEtFC,EAAiBt5B,KAAKu5B,UAAUlC,EAAKpnB,SAErCupB,EAAgBnC,EAAKluB,mBAAmBkwB,aAAeC,EAAeG,IAAMP,EAC5EtH,EAAYyF,EAAKvH,aAAa4B,kBAAkBE,SAC/Cj6B,qBAAkBmhC,KACnBC,EAAoBD,EAAOY,UAAY9H,EAI3C,IAEI+H,KAHJV,EAASF,EAAoBS,EAZd,GAaU76B,EAAI,GAAG06B,aACHJ,GACH,EACtBW,EAAgBX,EAASU,EACzBE,EAAmBD,EAAgBD,EACnCG,EAAmBD,EAAmBF,EAEtCI,EADavhC,YAAU,sBAAuBuK,GAC5Bi3B,MAClBC,EAAeF,GAAQH,EACvBM,EAAsBH,EAAOH,GAAiBG,GAAQF,EACtDM,EAAsBJ,EAAOF,GAAoBE,GAAQD,CAC7D,IAAIG,GAAgBC,GAAsBC,EAAoB,CAU1D,GATIF,GAAsC,YAAtBj6B,KAAKs3B,eACrBt3B,KAAKo6B,oBACLp6B,KAAKs3B,aAAe,aACpBt3B,KAAKq6B,0BACLr6B,KAAKs6B,kBAAkBxB,GACvB94B,KAAKu6B,kBACLv6B,KAAK04B,oBAAoBI,GACzB94B,KAAKw6B,kBAAkBz3B,EAAK3B,SAE5B84B,GAA4C,YAAtBl6B,KAAKs3B,aAA4B,CACvDt3B,KAAKq6B,yBACL,IAAI5xB,MACAwH,EAAUhI,UAAQlF,EAAK3B,OAAQ,OACnCqH,KAAgBjD,MAAM9I,KAAKuT,EAAQxK,iBAAiB,oDACrCjO,OAAS,GACpBwI,KAAKy6B,iBAAiBhyB,GAAY,EAAM,iBAE5CzI,KAAK06B,iBAAiB5B,GACtB94B,KAAKs6B,kBAAkBxB,GACvB94B,KAAKs3B,aAAe,gBAEpB6C,GAA4C,YAAtBn6B,KAAKs3B,eAC3Bt3B,KAAKu6B,kBACLv6B,KAAKq6B,0BACLr6B,KAAKo6B,oBACLp6B,KAAKs3B,aAAe,gBACpBt3B,KAAK06B,iBAAiB5B,GACtB94B,KAAKw4B,qBAAqBM,GAC1B94B,KAAKw6B,kBAAkBz3B,EAAK3B,SAGpC,MAAOpB,MAAKs3B,cAEhBX,EAAMn6B,UAAU49B,kBAAoB,WAChC,GAAIO,OACJA,KAAgBn1B,MAAM9I,KAAKsD,KAAKrJ,OAAOsZ,QAAQxK,iBAAiB,oBACjDjO,OAAS,GACpBwI,KAAKy6B,iBAAiBE,GAAY,EAAO,kBAGjDhE,EAAMn6B,UAAU89B,kBAAoB,SAAUM,GAC1C,GAAIC,GAAO76B,KAAKrJ,OAAOsZ,QACnBonB,EAAOr3B,KAAKrJ,MAChB,IAAIikC,GAAoC,IAAvBA,EAAUh0B,WAAmBg0B,EAAUt1B,UAAUC,SAAS,cAAe,CACtF,GAAIu1B,GAAM96B,KAAKrJ,OAAO4S,cAAc,OAASC,UAAW,sBACpDuxB,EAAgB/6B,KAAKrJ,OAAOwS,mBAC5B6xB,EAAgB,CAChB3D,GAAKlW,UACL6Z,EAAgB3D,EAAKtJ,cAAckN,aAAa5B,aAEpD,IAAI6B,IAAgBvjC,oBAAkBqI,KAAKrJ,OAAOgsB,gBAAgBC,SAC9DsY,KACAJ,EAAIrgC,MAAMg/B,IAAMz5B,KAAKrJ,OAAOiB,KAAKqY,QAAQgE,uBAAuB,gBAAgB,GAAGolB,aAC7E2B,EAAgB,MAE1BF,EAAIrgC,MAAM2P,MAAQ8wB,EAAeL,EAAKM,YAAc,KAChDN,EAAKM,YAAcn7B,KAAKo7B,iBAAmB,KAC1CL,EAAct1B,iBAAiB,sBAAsBjO,QACtDujC,EAAcnwB,YAAYkwB,KAItCnE,EAAMn6B,UAAUk+B,iBAAmB,SAAUW,GACzC,GAAI1C,GAAa0C,IAAcA,EAAU/1B,UAAUC,SAAS,eACxD81B,EAAU/1B,UAAUC,SAAS,mBAAqB81B,EAAU/1B,UAAUC,SAAS,eACnF,IAAI81B,IAAc1C,GAAc34B,KAAKrJ,OAAOiI,cAAcoB,KAAKrJ,OAAO8G,wBAAwBjG,OAAS,GAAG4R,aAAa,cACnHiyB,EAAUjyB,aAAa,YAAa,CACpC,GAAIkyB,GAAet7B,KAAKrJ,OAAO4S,cAAc,OAASC,UAAW,qBAC7D+xB,EAAiBv7B,KAAKrJ,OAAOm5B,YACjCwL,GAAa7gC,MAAM2P,MAAQpK,KAAKrJ,OAAOsZ,QAAQkrB,YAAcn7B,KAAKo7B,iBAAmB,KAChFG,EAAe91B,iBAAiB,qBAAqBjO,SACtD+jC,EAAej2B,UAAUsE,IAAI,uBAC7B2xB,EAAe3wB,YAAY0wB,GAC3BA,EAAa7gC,MAAM+gC,OAASx7B,KAAKo7B,iBAAmB,QAIhEzE,EAAMn6B,UAAU4+B,eAAiB,WAC7B,GAAIK,GAAaz7B,KAAKrJ,OAAOm5B,aAAa4B,iBAC1C,OAAO+J,GAAWC,YAAcD,EAAWN,YAAcQ,SAAOC,oBAAsB,GAE1FjF,EAAMn6B,UAAUw8B,aAAe,WAC3B,GAAI6C,GAAW1C,SAASllB,uBAAuB,qBAAqB,EAEpE,KADgB4nB,EAASp2B,iBAAiB,gBAAgBjO,SACvCwI,KAAKrJ,OAAOgsB,gBAAgBC,SAAU,CACrD,GAAIkZ,GAAM3C,SAAS5vB,cAAc,MACjCjE,aAAUw2B,GAAM,wBAChBx2B,YAAUw2B,GAAM,UAAW,kBAC3B,IAAIC,GAAWF,EAAS7zB,cAAc,eAClCg0B,EAAUH,EAAS7zB,cAAc,cAAc0C,SAC/CqxB,KACAC,EAAUD,EAASrxB,UACnBqxB,EAASE,WAAWC,YAAYH,IAEpCF,EAAS7zB,cAAc,cAAc0C,UAAY,EACjD,IAAIyxB,GAAchD,SAAS5vB,cAAc,OACzC4yB,GAAY3yB,UAAY,aACxB2yB,EAAY1hC,MAAM2hC,YAAc,OAChCD,EAAYzxB,UAAYsxB,EACxBH,EAAS7zB,cAAc,cAAc4C,YAAYkxB,GACjDD,EAAS7zB,cAAc,cAAc4C,YAAYuxB,KAGzDxF,EAAMn6B,UAAU+9B,gBAAkB,WAC9B,GAAI8B,GAAYlD,SAASnxB,cAAc,eACnCq0B,IACAA,EAAUna,UAGlByU,EAAMn6B,UAAUg+B,kBAAoB,SAAUp5B,GAC1C,GAAIqH,MACAwH,EAAUhI,UAAQ7G,EAAQ,OAC9BqH,EAAawH,KAAazK,MAAM9I,KAAKuT,EAAQxK,iBAAiB,uDAC/CjO,SACe,eAAtBwI,KAAKs3B,eACLt3B,KAAKy6B,iBAAiBhyB,GAAY,EAAM,aACpCzI,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,wBAAwBzc,OAAS,GAC5EwI,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,wBAAwB,GAAGiO,UAGpD,kBAAtBliB,KAAKs3B,cACLt3B,KAAKy6B,iBAAiBhyB,GAAY,EAAM,kBAIpDkuB,EAAMn6B,UAAU69B,wBAA0B,WACtC,GAAIiC,OACJA,KAAY92B,MAAM9I,KAAKsD,KAAKrJ,OAAOsZ,QAAQxK,iBAAiB,+BACjDjO,SACPwI,KAAKy6B,iBAAiB6B,GAAQ,EAAO,gBACrCt8B,KAAKy6B,iBAAiB6B,GAAQ,EAAO,eAG7C3F,EAAMn6B,UAAUi+B,iBAAmB,SAAU/6B,EAAOkK,EAAKJ,GACrD,IAAK,GAAIlS,GAAI,EAAGe,EAAMqH,EAAMlI,OAAQF,EAAIe,EAAKf,IACrCsS,EACAlK,EAAMpI,GAAGgO,UAAUsE,IAAIJ,GAGvB9J,EAAMpI,GAAGgO,UAAU4c,OAAO1Y,IAItCmtB,EAAMn6B,UAAU+8B,UAAY,SAAUtpB,GAClC,GAAIssB,GAAMtsB,EAAQusB,wBACdC,EAAOtD,SAASsD,KAChBC,EAAUvD,SAASwD,gBACnB/K,EAAYl3B,OAAOkiC,aAAeF,EAAQ9K,WAAa6K,EAAK7K,UAC5DiL,EAAaniC,OAAOoiC,aAAeJ,EAAQG,YAAcJ,EAAKI,WAC9DE,EAAYL,EAAQK,WAAaN,EAAKM,WAAa,EACnDC,EAAaN,EAAQM,YAAcP,EAAKO,YAAc,EACtDvD,EAAM8C,EAAI9C,IAAM7H,EAAYmL,EAC5BE,EAAOV,EAAIU,KAAOJ,EAAaG,CACnC,QAASvD,IAAKjmB,KAAK0pB,MAAMzD,GAAMwD,KAAMzpB,KAAK0pB,MAAMD,KAEpDtG,EAAMn6B,UAAUy6B,WAAa,SAAUl0B,GACnC,GAAIs0B,GAAOr3B,KAAKrJ,OACZwmC,EAAen9B,KAAKrJ,OAAOsZ,QAAQjI,cAAc,qBACrDm1B,GAAa1iC,MAAM2iC,OAAS,EAC5B,IAAItE,GAAS/1B,EAAK3B,OAAS6G,UAAQlF,EAAK3B,OAAQ,MAAQ,KACpDi8B,EAASvE,EAASA,EAAOlyB,UAAY,EACrCmxB,KACAO,EAAgBjB,EAAK55B,wBAAwB4/B,EA0BjD,IAzBAr9B,KAAKu6B,kBACLv6B,KAAK42B,SAAU,EACV7zB,EAAKtE,KAAK,GAIXs5B,EAAch1B,EAAKtE,KAHnBs5B,EAAYt/B,KAAKsK,EAAKtE,OAKV,IAAZ4+B,EACAr9B,KAAKs9B,mBAAmBvF,EAAaO,IAGrCt4B,KAAK42B,SAAU,EACf52B,KAAKg5B,iBAEJ3B,EAAK1U,gBAAgBC,UAAY5iB,KAAK42B,SACvCS,EAAKzB,qBAAqBiD,WAAW91B,EAAKiC,KAAMq4B,EAAQt6B,GAExDs0B,EAAK1U,gBAAgBC,WACjB2a,EAAcx1B,eAAahF,EAAK3B,OAAQ,gBACzBm8B,EAAYrtB,KAAOlQ,KAAKrJ,OAAOgsB,gBAAgBC,UAC7C2a,EAAYC,cAAc,GAChC5H,qBAAqBiD,WAAW91B,EAAKiC,KAAMq4B,EAAQt6B,GAGlEA,EAAK3B,QAAU6G,UAAQlF,EAAK3B,OAAQ,IAAMi2B,EAAK1U,gBAAgBC,UAAW,CAC1E,GAAI2a,GAAcx1B,eAAahF,EAAK3B,OAAQ,aACvCm8B,KACDJ,EAAa1iC,MAAM2iC,OAAS,aAIxCzG,EAAMn6B,UAAU06B,WAAa,SAAUn0B,GACnC,GAAIs0B,GAAOr3B,KAAKrJ,MA6ChB,IA3CK0gC,EAAK1U,gBAAgBC,UAuBlB7f,EAAK3B,QAAU6G,UAAQlF,EAAK3B,OAAQ,IAAMi2B,EAAK1U,gBAAgBC,WAAa7a,eAAahF,EAAK3B,OAAQ,eACtG2G,eAAahF,EAAK3B,OAAQ,cAAc8O,KAAOmnB,EAAK1U,gBAAgBC,YACpEtQ,WAAS,eAAgBtS,KAAKs3B,aAAcv0B,GAC5Cs0B,EAAKlxB,QhBldA,UgBkdwBpD,IACxBA,EAAKmD,QAAUmxB,EAAK1U,gBAAgBC,WACrC5iB,KAAKy9B,aAAa16B,GACds0B,EAAKpgB,cACLogB,EAAKl6B,SAAW6C,KAAKy3B,aAAaJ,EAAKl6B,aA7B/C4K,eAAahF,EAAK3B,OAAQ,eACtBpB,KAAKrJ,OAAOsZ,QAAQjI,cAAc,kBAClChI,KAAKs3B,aAAe,WAExBhlB,WAAS,eAAgBtS,KAAKs3B,aAAcv0B,GAC5CA,EAAKw0B,UAAYx0B,EAAKw0B,YAAcx0B,EAAK26B,UAAY19B,KAAK29B,aAAa56B,EAAK3B,OAAO6d,eAAiBlc,EAAKw0B,UACzGF,EAAKlxB,QhB/bA,UgB+bwBpD,GACxBA,EAAKmD,SACD9O,EAAgB4I,KAAKrJ,SACtBqJ,KAAKw3B,SAASz0B,GAEds0B,EAAKpgB,cACLogB,EAAKl6B,SAAW6C,KAAKy3B,aAAaJ,EAAKl6B,WAE3Ck6B,EAAKz/B,KAAKqyB,UACLtyB,oBAAkB0/B,EAAKluB,mBAAmBnB,cAAc,wBACzDqvB,EAAKluB,mBAAmBnB,cAAc,sBAAsBka,WAkB5EliB,KAAKq6B,0BACLr6B,KAAKo6B,oBACAziC,oBAAkBqI,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,qBAAqB,IAG7Etc,oBAAkBqI,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,oBAAoB,KACvFjU,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,oBAAoB,GAAGiO,SAHlEliB,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,qBAAqB,GAAGiO,SAKnEliB,KAAKrJ,OAAO2I,sBAAwBU,KAAKrJ,OAAOkX,cAAgBlW,oBAAkBoL,EAAKtE,KAAK,GAAa,YAAI,CAC7G,GAAItE,GAAQ6F,KAAKrJ,OAAOyI,eACxBjF,IAAgB,CAChB,IAAIk5B,GAAkBrzB,KAAKrJ,OAAO6E,0BAA0B,GACxDoL,EAAW5G,KAAKrJ,OAAOiB,KAAKkH,wBAAwBiE,EAAKtE,KAAK,GAAG40B,IACjE10B,EAAMqB,KAAKrJ,OAAOkI,UAAU+H,GAC5BnI,EAAOsE,EAAKtE,KAAK,EACrB,IAA0B,kBAAtBuB,KAAKs3B,aAAkC,CACvC,GAAI3+B,MACAqM,IACJrM,GAAOF,KAAKgG,GACZuG,EAAKvM,KAAKkG,EAEVF,GAAOzF,EAAcgH,KAAKrJ,OAAQoM,EAAKtE,KAAK,GAAiB,gBAC7DmI,EAAW5G,KAAKrJ,OAAOiB,KAAKkH,wBAAwBL,EAAK40B,GACzD,IAAIuE,GAAY53B,KAAKrJ,OAAOkI,UAAU+H,EACtCjO,GAAOF,KAAKgG,GACZuG,EAAKvM,KAAKm/B,EACV,KAAK,GAAItgC,GAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B0I,KAAKrJ,OAAO4I,aAAaC,YACrBf,KAAM9F,EAAOrB,GAAImI,KAAMuF,EAAK1N,GAAGoI,MAAMvF,GACrCwF,OAAQK,KAAKrJ,OAAOiB,KAAKgI,aAAaI,KAAKrJ,OAAOyI,iBAClDS,YAAa,kBAGrB,IAAImU,GAAY4jB,EAAU3jB,uBAAuB,sBAAsB,EAClEtc,qBAAkBqc,KACnB1J,eAAa0J,GAAY,sBACzB5G,YAAU4G,GAAY,yBAI1BhU,MAAKrJ,OAAO4I,aAAaC,YACrBf,KAAMA,EAAMgB,KAAMd,EAAIe,MAAMvF,GAC5BwF,OAAQK,KAAKrJ,OAAOiB,KAAKgI,aAAaI,KAAKrJ,OAAOyI,iBAClDS,YAAa,qBAK7B82B,EAAMn6B,UAAUihC,aAAe,SAAU16B,GACrC,GAII66B,GAJAvG,EAAOr3B,KAAKrJ,OACZikC,EAAY3yB,UAAQlF,EAAK3B,OAAQ,MACjCy8B,EAAcC,MAAM99B,KAAK29B,aAAa/C,IAAc,EAAI56B,KAAK29B,aAAa/C,GAC1E2C,EAAcx1B,eAAahF,EAAK3B,OAAQ,aAE5C,IAAIm8B,GAAeA,EAAYrtB,KAAOlQ,KAAKrJ,OAAOgsB,gBAAgBC,WAAalsB,EAAasJ,KAAKrJ,UACzFS,EAAgB4I,KAAKrJ,QAAS,CAClCinC,EAAaL,EAAYC,cAAc,EAGvC,KAAK,GAFDrlC,GAAUk/B,EAAK1xB,qBACfgrB,KACKr5B,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChCq5B,EAAQr5B,GAAKa,EAAQb,GAAG6C,KAE5B,IAAIsE,GAAOm/B,EAAWhnC,UACtB,IAA6B,MAAzBoJ,KAAKrJ,OAAOkG,YAAsBlF,oBAAkBqI,KAAKs3B,eAAuC,kBAAtBt3B,KAAKs3B,cAA0D,YAAtBt3B,KAAKs3B,gBAAiC74B,EAAY,OAAE,CAEvK,IAAK,GADDs/B,MACKzmC,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC,GAAIa,EAAQb,GAAGgC,gBAAiB,CAC5BykC,EAAWtlC,KAAKN,EAAQb,GAExB,KAAK,GADD0G,GAAQ3E,EAAoBlB,EAAQb,IAC/B08B,EAAM,EAAGA,EAAMh2B,EAAMxG,OAAQw8B,IAClC+J,EAAWtlC,KAAKuF,EAAMg2B,IAI9B+J,EAAWvmC,SACXW,EAAU4lC,GAGlB1G,EAAKloB,OhBniBO,egBmiBqBwhB,QAASA,EAASx4B,QAASA,IAC5DylC,EAAWzuB,OhBtiBF,YgBsiB2BwmB,QAASkI,EAAa1lC,QAASA,GACnE,IAAI6lC,GAAqBJ,EAAWhI,qBAAqBvf,YACzD,KAAK1e,oBAAkBqmC,GACnB,IAAS1mC,EAAI,EAAGA,EAAI0mC,EAAmBxmC,OAAQF,IAE3C,GADA0mC,EAAmB1mC,GAAG6C,MAAQ7C,GACzBK,oBAAkBqmC,EAAmB1mC,GAAGyB,YAAa,CACtD,GAAIklC,GAAc5/B,WAAS,sBAAwB2/B,EAAmB1mC,GAAGgH,eAAiB,SAAUs/B,EACpGI,GAAmB1mC,GAAGyB,WAAWoB,MAAQ8jC,EAIrD5G,EAAKz/B,KAAKqyB,UACV2T,EAAWhmC,KAAKqyB,UACZ2T,EAAWhmC,KAAKhB,WAAWY,OAAS,IACpComC,EAAWhmC,KAAKqyB,UACXtyB,oBAAkBimC,EAAWz0B,mBAAmBnB,cAAc,wBAC/D41B,EAAWz0B,mBAAmBnB,cAAc,sBAAsBka,SAEjEvqB,oBAAkBimC,EAAW9N,aAAa9nB,cAAc,uBACzD41B,EAAW9N,aAAa9nB,cAAc,qBAAqBka,UAInE9qB,EAAgB4I,KAAKrJ,UACrBinC,EAAaL,EAAYC,cAAc,GACvCnG,EAAKz/B,KAAKqyB,UACV2T,EAAWhmC,KAAKqyB,YAGxB0M,EAAMn6B,UAAUmhC,aAAe,SAAU/C,GACrC,MAAOA,GAAYvrB,SAASurB,EAAUxxB,aAAa,iBAAkB,IAAM,GAE/EutB,EAAMn6B,UAAUxD,cAAgB,SAAUL,GACtC,GAAII,GAAaJ,EAAOI,UACxB,IAA0B,kBAAtBiH,KAAKs3B,aAAkC,CACvC,GAAI4G,GAAiBl+B,KAAKrJ,OAAOgP,qBAAqB,EACtD3F,MAAKs4B,cAAgBt/B,EAAcgH,KAAKrJ,OAAQunC,EAAenlC,WAAWE,UAEpD,kBAAtB+G,KAAKs3B,eACOt3B,KAAKrJ,OAAOgP,qBAAqB,GAAGvL,QAClCrB,EAAWqB,MACrB4F,KAAKs4B,cAAgBt/B,EAAcgH,KAAKrJ,OAAQoC,EAAWE,UAG3D+G,KAAKhH,cAAcD,KAI/B49B,EAAMn6B,UAAUg7B,SAAW,SAAUz0B,EAAMo7B,GACvC,GAA0B,YAAtBn+B,KAAKs3B,eAA+B5gC,EAAasJ,KAAKrJ,QAAS,CAC/D,GAAI0gC,GAAOr3B,KAAKrJ,OACZmhC,MAAgB,GAChBQ,MAAgB,EACpB,IAAI3gC,oBAAkBoL,EAAKw0B,WAAY,CACnC,GAAI3wB,GAAWywB,EAAKlyB,wBAAwB,GAAK,EAC7CxM,EAAS0+B,EAAK55B,wBAAwBmJ,EAC1C5G,MAAKhH,cAAcL,OAGnBoK,GAAKw0B,UAAYx0B,EAAKw0B,YAAcx0B,EAAK26B,UAAY19B,KAAK29B,aAAa56B,EAAK3B,OAAO6d,eAAiBlc,EAAKw0B,UACzGv3B,KAAKs4B,cAAgBjB,EAAK55B,wBAAwBsF,EAAKw0B,UAE3D,IAAIQ,KACJO,GAAgBt4B,KAAKs4B,cAChBv1B,EAAKtE,KAAK,GAIXs5B,EAAch1B,EAAKtE,KAHnBs5B,EAAYt/B,KAAKsK,EAAKtE,KAK1B,IAAI6M,GAAQ,EACR4vB,EAAel7B,KAAKrJ,OAAOgsB,gBAAgBC,QAC/C5iB,MAAKo+B,eAAiBlD,EACjBA,EAIDl7B,KAAK82B,cAAgBoE,GAAgBl7B,KAAK62B,mBAH1C72B,KAAKs9B,mBAAmBvF,EAAaO,EAKzC,IAAI+F,GAAatG,EAAYvgC,MACxBG,qBAAkBqI,KAAKrJ,OAAOkG,YAC/Bk7B,EAAYuG,SAEhB,KAAK,GAAIhnC,GAAI,EAAGA,EAAI+mC,EAAY/mC,IAAK,CAGjC,GAFAwgC,EAAgBC,EAAYzgC,GAC5B0I,KAAK83B,cAAgBA,EACK,YAAtB93B,KAAKs3B,aAA4B,CAIjC,GAHKD,EAAK1U,gBAAgBC,WAAYub,GAClCn+B,KAAKk4B,gBAELl4B,KAAK83B,gBAAkB93B,KAAKs4B,cAAe,CAC3C,GAAIiG,GAAev+B,KAAK29B,aAAa56B,EAAK3B,OAAOo9B,aAAavf,cAC1D6e,OAAMS,KACNA,EAAev+B,KAAK29B,aAAa56B,EAAK3B,OAAO6d,gBAEjDlc,EAAKw0B,UAAYgH,EACjBjG,EAAgBt4B,KAAKs4B,cAAgBt4B,KAAKrJ,OAAO8G,wBAAwBsF,EAAKw0B,WAElF,GAAIkH,GAAez+B,KAAKqW,aAAa7X,QAAQ85B,EAE7C,IADAt4B,KAAK0+B,UAAUD,GACW,kBAAtBz+B,KAAKs3B,aAAkC,CAqBvC,GApBKgB,EAAch/B,iBAOfgS,EAAQtL,KAAK2+B,cAAcrG,EAAe,GACtCt4B,KAAKrJ,OAAOiG,iBACZoD,KAAKvE,SAASqB,OAAO2hC,EAAenzB,EAAQ,EAAG,EAAGtL,KAAK83B,cAAcz9B,UAEzE2F,KAAKqW,aAAavZ,OAAO2hC,EAAenzB,EAAQ,EAAG,EAAGtL,KAAK83B,iBAVvD93B,KAAKrJ,OAAOiG,iBACZoD,KAAKvE,SAASqB,OAAO2hC,EAAe,EAAG,EAAGz+B,KAAK83B,cAAcz9B,UAEjE2F,KAAKqW,aAAavZ,OAAO2hC,EAAe,EAAG,EAAGz+B,KAAK83B,gBASnDngC,oBAAkB2gC,EAAcv/B,oBACzB++B,GAAc/+B,WACrB++B,EAAc19B,MAAQ,EAClB4F,KAAKrJ,OAAOiG,kBACZk7B,EAAc93B,KAAKrJ,OAAOiG,iBAAmB,OAGjD07B,EAAcv/B,WAAY,CAC1B,GACIQ,GADMyG,KAAKg3B,0BAA0BsB,EAAch6B,gBAChC,GAAG/E,aACtBqlC,EAAqBrlC,EAAaiF,QAAQ85B,GAAiB,CAC/D/+B,GAAauD,OAAO8hC,EAAoB,EAAG9G,GAC3CA,EAAc/+B,WAAau/B,EAAcv/B,WACzC++B,EAAcx5B,eAAiBg6B,EAAch6B,eACzC0B,KAAKrJ,OAAOiG,kBACZk7B,EAAc93B,KAAKrJ,OAAOiG,iBAAmB07B,EAAct4B,KAAKrJ,OAAOiG,iBACvEk7B,EAAc/+B,WAAau/B,EAAcv/B,WACzC++B,EAAc19B,MAAQk+B,EAAcl+B,OAG5C,GAAI09B,EAAcx+B,gBAAiB,CAE/B0G,KAAK6+B,uBAAuB/G,EADhB,GAEZ93B,KAAK8+B,kBAAkBhH,EAAe2G,EAAenzB,EAAQ,IAGrEtL,KAAK++B,WAAWN,GAEpB,GAAI9mC,oBAAkBmgC,EAAc/+B,YAAa,CAC7C,GAAIqd,GAAgBihB,EAAKn6B,WACrB8hC,EAAiB5oB,EAAc5X,QAAQwB,KAAKs4B,cACtB,mBAAtBt4B,KAAKs3B,aACLlhB,EAActZ,OAAOkiC,EAAiB,EAAG,EAAGlH,GAEjB,eAAtB93B,KAAKs3B,cACVlhB,EAActZ,OAAOkiC,EAAgB,EAAGlH,GAGhDT,EAAKzB,qBAAqBuC,2BAItCxB,EAAMn6B,UAAUuiC,WAAa,SAAU/yB,GACnC,GAAIqrB,GAAOr3B,KAAKrJ,OACZ4C,EAAeF,EAAoB2G,KAAKs4B,eACxC2G,EAAsBtnC,oBAAkB4B,IAChB,IAAxBA,EAAa/B,OAAgBwU,EAAc,EAC3CzS,EAAa/B,OAASwU,EAAc,CACd,mBAAtBhM,KAAKs3B,eACDD,EAAKz6B,iBACLoD,KAAKvE,SAASqB,OAAOmiC,EAAoB,EAAGj/B,KAAK83B,cAAcz9B,UAC/D2F,KAAKqW,aAAavZ,OAAOmiC,EAAoB,EAAGj/B,KAAK83B,gBAGrD93B,KAAKqW,aAAavZ,OAAOmiC,EAAoB,EAAGj/B,KAAK83B,eAEzD93B,KAAKk/B,cACDl/B,KAAK83B,cAAcx+B,iBACnB0G,KAAK8+B,kBAAkB9+B,KAAK83B,cAAemH,KAIvDtI,EAAMn6B,UAAUkiC,UAAY,SAAUD,GAClC,GAAIpH,GAAOr3B,KAAKrJ,MAChB,IAA0B,eAAtBqJ,KAAKs3B,aAA+B,CAQpC,GAPID,EAAKz6B,iBACLoD,KAAKvE,SAASqB,OAAO2hC,EAAc,EAAGz+B,KAAK83B,cAAcz9B,UAE7D2F,KAAK83B,cAAc/+B,WAAaiH,KAAKqW,aAAaooB,GAAc1lC,WAChEiH,KAAK83B,cAAcx5B,eAAiB0B,KAAKqW,aAAaooB,GAAcngC,eACpE0B,KAAK83B,cAAc19B,MAAQ4F,KAAKqW,aAAaooB,GAAcrkC,MAC3D4F,KAAKqW,aAAavZ,OAAO2hC,EAAc,EAAGz+B,KAAK83B,eAC3C93B,KAAK83B,cAAcx+B,gBAAiB,CAEpC0G,KAAK8+B,kBAAkB9+B,KAAK83B,cAAe2G,GAC3Cz+B,KAAK6+B,uBAAuB7+B,KAAK83B,cAFrB,GAIhB,GAAI93B,KAAKs4B,cAAcv/B,WAAY,CAC/B,GACIQ,GADMyG,KAAKg3B,0BAA0Bh3B,KAAKs4B,cAAch6B,gBACrC,GAAG/E,aACtBqlC,EAAqBrlC,EAAaiF,QAAQwB,KAAKs4B,cACnD/+B,GAAauD,OAAO8hC,EAAoB,EAAG5+B,KAAK83B,kBAI5DnB,EAAMn6B,UAAU0iC,YAAc,WAC1B,GAAI7H,GAAOr3B,KAAKrJ,OACZmhC,EAAgB93B,KAAK83B,cACrBQ,EAAgBt4B,KAAKs4B,cACrB6G,EAAY9H,EAAKt6B,YAWrB,IAVKu7B,EAAch/B,kBACfg/B,EAAch/B,iBAAkB,EAChCg/B,EAAcvpB,yBAA0B,GACpCpX,oBAAkB2gC,EAAc/+B,eAAuD,IAAtC++B,EAAc/+B,aAAa/B,UAC5E8gC,EAAc/+B,iBACT89B,EAAKz6B,iBAAmBjF,oBAAkB2gC,EAAcj+B,SAAS8kC,MAClE7G,EAAcj+B,SAAS8kC,SAIT,kBAAtBn/B,KAAKs3B,aAAkC,CACvC,GAAIv+B,GAAasD,YAAWi8B,EAQ5B,UAPOv/B,GAAWQ,aAClBu+B,EAAc/+B,WAAaA,EAC3B++B,EAAcx5B,eAAiBg6B,EAAcr/B,SAC7Cq/B,EAAc/+B,aAAauD,OAAOw7B,EAAc/+B,aAAa/B,OAAQ,EAAGsgC,GACnEngC,oBAAkBmgC,IAAmBT,EAAKz6B,iBAAoBjF,oBAAkB2gC,EAAcj+B,SAAS8kC,KACxG7G,EAAcj+B,SAASg9B,EAAKt6B,cAAcD,OAAOw7B,EAAc/+B,aAAa/B,OAAQ,EAAGsgC,EAAcz9B,UAEpGy9B,EAAcx+B,gBAGd,CAEDw+B,EAAc19B,MAAQk+B,EAAcl+B,MAAQ,EAC5C4F,KAAK6+B,uBAAuB/G,EAFhB,OAHZA,GAAc19B,MAAQk+B,EAAcl+B,MAAQ,CAOhDk+B,GAAcl/B,UAAW,IAGjCu9B,EAAMn6B,UAAU07B,cAAgB,WACxBl4B,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,SAChEqJ,KAAKqW,aAAerW,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAC3DsE,KAAKvE,SAAWuE,KAAKrJ,OAAOC,WAAWA,WAAW8E,OAGlDsE,KAAKqW,aAAerW,KAAKrJ,OAAOiB,KAAKhB,WACrCoJ,KAAKvE,SAAWuE,KAAKrJ,OAAOC,WAEhC,IAAIwoC,GAAapmC,EAAcgH,KAAKrJ,OAAQqJ,KAAK83B,cAAc7+B,WAC1DtB,oBAAkBynC,EAAW7lC,eAAiB6lC,EAAW7lC,aAAa/B,SACvE4nC,EAAW9lC,iBAAkB,GAEjC0G,KAAKq/B,cAAcD,IAEvBzI,EAAMn6B,UAAUsiC,kBAAoB,SAAUnmC,EAAQ2S,GAClD,GAAIQ,GACAurB,EAAOr3B,KAAKrJ,OACZa,EAAS,CACb,KAAKmB,EAAOW,gBACR,MAAO,EAEX9B,GAASmB,EAAOY,aAAa/B,MAC7B,KAAK,GAAIF,GAAI,EAAGA,EAAIE,EAAQF,IACxBwU,EAAgBnT,EAAOY,aAAajC,GACpCgU,IACA+rB,EAAKl6B,SAASL,OAAOwO,EAAO,EAAGQ,GAC/BwG,WAAS,sBAAwBxG,EAAc7S,SAAU6S,EAAe9L,KAAKrJ,QACzE0gC,EAAKz6B,iBACLoD,KAAKvE,SAASqB,OAAOwO,EAAO,EAAGQ,EAAczR,UAE7CyR,EAAcxS,kBACdgS,EAAQtL,KAAK8+B,kBAAkBhzB,EAAeR,GAGtD,OAAOA,IAEXqrB,EAAMn6B,UAAUqiC,uBAAyB,SAAUlmC,EAAQyB,GACvD,GACI0R,GADAtU,EAAS,CAGb,IADA4C,KACKzB,EAAOW,gBACR,MAAO,EAEX9B,GAASmB,EAAOY,aAAa/B,MAC7B,KAAK,GAAIF,GAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7BwU,EAAgBnT,EAAOY,aAAajC,EACpC,IAAI4F,OAAa,EACbvE,GAAOI,aACPmE,EAAalE,EAAcgH,KAAKrJ,OAAQgC,EAAOI,WAAWE,WAE1DtB,oBAAkBuF,KAAgBvF,oBAAkBgB,EAAOI,cAC3DmE,EAAavE,EAAOI,YAExB+S,EAAc1R,MAAQzB,EAAOI,WAAamE,EAAW9C,MAAQA,EAAQzB,EAAOyB,MAAQ,EAChF0R,EAAcxS,kBACdc,IACAA,EAAQ4F,KAAK6+B,uBAAuB/yB,EAAe1R,IAG3D,MAAOA,IAEXu8B,EAAMn6B,UAAU6iC,cAAgB,SAAU1mC,GACtC,GACI/B,GADAygC,EAAOr3B,KAAKrJ,MAGZC,GADAoJ,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,QACnDqJ,KAAKrJ,OAAOC,WAAWA,WAAW8E,KAGlCsE,KAAKrJ,OAAOC,UAE7B,IAAIwoC,GAAazmC,EACbsC,GAAmBtD,oBAAkB0/B,EAAKz6B,iBAC1C0iC,EAAiBt/B,KAAKg3B,0BAA0BoI,EAAW9gC,gBAAgB,EAC/E,IAAI8gC,EAAY,CACZ,GAAIA,EAAWrmC,WAAY,CACvB,GAAIQ,GAAe+lC,EAAiBA,EAAe/lC,gBAC/CgmC,EAAa,CACbhmC,IAAgBA,EAAa/B,OAAS,IACtC+nC,EAAahmC,EAAaiF,QAAQ4gC,GAClCE,EAAe/lC,aAAauD,OAAOyiC,EAAY,GAC1Cv/B,KAAKrJ,OAAOiG,iBACb9B,GAAaZ,MAAOklC,EAAY7jC,OAAQ,UAAYyE,KAAKrJ,OAAQsE,EAAiBmkC,EAAWjlC,MAAOilC,EAAWjlC,QAI3H,GAAIk9B,EAAKz6B,gBAAiB,CAClBwiC,EAAW9lC,iBAAmB8lC,EAAW7lC,aAAa/B,OAAS,GAC/DwI,KAAKw/B,gBAAgBJ,EAKzB,KAAK,GAHD/G,OAAM,GACNoH,MAAM,GACNppB,EAAezf,EACVU,EAAI,EAAGA,EAAI+e,EAAa7e,OAAQF,IACjC+e,EAAa/e,GAAG0I,KAAKrJ,OAAOkG,aAAeuiC,EAAW/kC,SAAS2F,KAAKrJ,OAAOkG,aAC3Ew7B,EAAM/gC,EAGd,KAASA,EAAI,EAAGA,EAAI0I,KAAKqW,aAAa7e,OAAQF,IACtC0I,KAAKqW,aAAa/e,GAAG0I,KAAKrJ,OAAOkG,aAAeuiC,EAAW/kC,SAAS2F,KAAKrJ,OAAOkG,aAChF4iC,EAAMnoC,IAGD,IAAT+gC,GAAe1gC,oBAAkB0gC,IACjCzhC,EAAWkG,OAAOu7B,EAAK,IAEd,IAAToH,GAAe9nC,oBAAkB8nC,IACjCz/B,KAAKqW,aAAavZ,OAAO2iC,EAAK,GAGtC,GAAIzzB,GAAchM,KAAKqW,aAAa7X,QAAQ4gC,EAC5C,KAAK/H,EAAKz6B,gBAAiB,CACvB,GAAI8iC,GAAc1/B,KAAKrJ,OAAOuG,WAAWsB,QAAQ4gC,IAC5B,IAAjBM,IACArI,EAAKn6B,WAAWJ,OAAO4iC,EAAa,GACpC9oC,EAAWkG,OAAO4iC,EAAa,IAGvC,IAAqB,IAAjB1zB,IAAuBqrB,EAAKz6B,gBAE5B,IAAK,GADDy2B,GAAkBgE,EAAK77B,0BAA0B,GAC5CxB,EAAI,EAAGA,EAAIgG,KAAKqW,aAAa7e,OAAQwC,IACtCgG,KAAKqW,aAAarc,GAAGq5B,KAAqB+L,EAAW/L,KACrDrnB,EAAchS,EAI1B,KAAKq9B,EAAKz6B,gBAAiB,CACvB,GAAI+iC,GAAqB3/B,KAAK2+B,cAAcS,EAAY,EACxDp/B,MAAKqW,aAAavZ,OAAOkP,EAAa2zB,EAAqB,GAE3DP,EAAWrmC,YAAcumC,GAAkBA,EAAe/lC,eAAiB+lC,EAAe/lC,aAAa/B,SACvG8nC,EAAelmC,UAAW,EAC1BkmC,EAAehmC,iBAAkB,EACjCgmC,EAAevwB,yBAA0B,KAIrD4nB,EAAMn6B,UAAUgjC,gBAAkB,SAAU7mC,GACxC,GAAImT,GACAusB,EACAoH,EACA7oC,CAEAA,GADAoJ,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,QACnDqJ,KAAKrJ,OAAOC,WAAWA,WAAW8E,KAGlCsE,KAAKrJ,OAAOC,UAE7B,KAAK,GAAIU,GAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAAK,CACjDwU,EAAgBnT,EAAOY,aAAajC,IAC/BK,oBAAkBmU,EAAcvS,eAAiBuS,EAAcvS,aAAa/B,SAC7EsU,EAAcxS,iBAAkB,EAEpC,IAAI+c,OAAe,EAEfA,GADArW,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,QACjDqJ,KAAKrJ,OAAOC,WAAWA,WAAW8E,KAGlCsE,KAAKrJ,OAAOC,UAE/B,KAAK,GAAIgpC,GAAM,EAAGA,EAAMvpB,EAAa7e,OAAQooC,IACrCvpB,EAAaupB,GAAK5/B,KAAKrJ,OAAOkG,aAAeiP,EAAczR,SAAS2F,KAAKrJ,OAAOkG,aAChFw7B,EAAMuH,EAGd,KAAK,GAAIC,GAAM,EAAGA,EAAM7/B,KAAKqW,aAAa7e,OAAQqoC,IAC9C,GAAI7/B,KAAKqW,aAAawpB,GAAK7/B,KAAKrJ,OAAOkG,aAAeiP,EAAczR,SAAS2F,KAAKrJ,OAAOkG,WAAY,CACjG4iC,EAAMI,CACN,QAGK,IAATxH,GAAe1gC,oBAAkB0gC,IACjCzhC,EAAWkG,OAAOu7B,EAAK,IAEd,IAAToH,GAAe9nC,oBAAkB8nC,IACjCz/B,KAAKqW,aAAavZ,OAAO2iC,EAAK,GAE9B3zB,EAAcxS,iBACd0G,KAAKw/B,gBAAgB1zB,KAIjC6qB,EAAMn6B,UAAUmiC,cAAgB,SAAUhmC,EAAQ2S,GAC9C,GAAIQ,EACJ,KAAKnT,EAAOW,gBACR,MAAO,EAEX,KAAK,GAAIhC,GAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAE5CgU,KADAQ,EAAgBnT,EAAOY,aAAajC,IAElBgC,kBACdgS,EAAQtL,KAAK2+B,cAAc7yB,EAAeR,GAGlD,OAAOA,IAEXqrB,EAAMn6B,UAAU8gC,mBAAqB,SAAUwC,EAAgBh0B,GAC3D,GAAIvH,GAAQvE,IACZ8/B,GAAe1iC,OAAO,SAAUC,GAC5B,GAAIA,EAAE/D,kBAAoB3B,oBAAkB0F,EAAE9D,cAAe,CAEzD,IAAe,IADH8D,EAAE9D,aAAaiF,QAAQsN,GAQ/B,MAHAvH,GAAM+yB,aAAe,UACrB/yB,EAAMy0B,oBACNz0B,EAAMqyB,SAAU,EALhBryB,GAAM+4B,mBAAmBjgC,EAAE9D,aAAcuS,OAWzD6qB,EAAMn6B,UAAUsK,QAAU,WACtB9G,KAAK0H,uBAMTivB,EAAMn6B,UAAUkL,oBAAsB,WAC9B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IhB5+BI,cgB4+BmB5H,KAAKi3B,YACxCj3B,KAAKrJ,OAAOiR,IhB3+BI,cgB2+BmB5H,KAAKk3B,YACxCl3B,KAAKrJ,OAAOiR,IhBl/BC,WgBk/BmB5H,KAAKm3B,WACrCn3B,KAAKrJ,OAAOiR,IhBj/BI,cgBi/BmB5H,KAAKo3B,eAW5CT,EAAMn6B,UAAUoG,cAAgB,WAC5B,MAAO,kBAEJ+zB,KCxnCPl2B,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEnE,eAAea,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnE,UAAkB,OAANoE,EAAatI,OAAO2I,OAAOL,IAAMG,EAAGvE,UAAYoE,EAAEpE,UAAW,GAAIuE,QAGnFG,GAA0C,SAAUC,EAAYC,EAAQtJ,EAAKuJ,GAC7E,GAA2HV,GAAvHW,EAAIC,UAAU/J,OAAQgK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO/I,OAAOmJ,yBAAyBL,EAAQtJ,GAAOuJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQtJ,EAAKuJ,OACpH,KAAK,GAAI/J,GAAI6J,EAAW3J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIQ,EAAW7J,MAAIkK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQtJ,EAAK0J,GAAKb,EAAES,EAAQtJ,KAAS0J,EAChJ,OAAOF,GAAI,GAAKE,GAAKlJ,OAAOsJ,eAAeR,EAAQtJ,EAAK0J,GAAIA,GAM5Ds0B,GAAiC,SAAUh0B,GAE3C,QAASg0B,KACL,MAAkB,QAAXh0B,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAK/D,MAPAS,IAAUq1B,EAAiBh0B,GAI3BZ,IACIc,cACD8zB,EAAgBt5B,UAAW,eAAY,IACnCs5B,GACT7zB,iBChCExB,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEnE,eAAea,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnE,UAAkB,OAANoE,EAAatI,OAAO2I,OAAOL,IAAMG,EAAGvE,UAAYoE,EAAEpE,UAAW,GAAIuE,QAanFg/B,GAA8C,SAAUj+B,GAExD,QAASi+B,GAA6BppC,GAClC,GAAI4N,GAAQzC,EAAOpF,KAAKsD,KAAMrJ,IAAWqJ,IAEzC,OADAuE,GAAM6C,mBACC7C,EAkDX,MAtDA9D,IAAUs/B,EAA8Bj+B,GAMxCi+B,EAA6BvjC,UAAU4K,iBAAmB,WACtDpH,KAAKrJ,OAAO0Q,GlBoEM,gBkBpEkBrH,KAAKggC,SAAUhgC,OAEvD+/B,EAA6BvjC,UAAUwjC,SAAW,SAAUj9B,GACxD/C,KAAKigC,WAAal9B,EAAKtE,MAE3BshC,EAA6BvjC,UAAU0jC,aAAe,SAAUzhC,EAAMkX,GAClE,GAAK3V,KAAKrJ,OAAOC,qBAAsBC,oBAAyD8iB,KAA1C3Z,KAAKrJ,OAAOC,WAAWA,WAAWupC,MAChFngC,KAAKrJ,OAAOC,WAAWA,WAAW0pB,SAAqD,KAA1CtgB,KAAKrJ,OAAOC,WAAWA,WAAWupC,KAAe/oC,EAAgB4I,KAAKrJ,QACvH,MAAOmL,GAAOtF,UAAU0jC,aAAaxjC,KAAKsD,KAAMvB,EAAMkX,EAGjDhe,qBAAkBge,EAAW9V,cAAsD,gBAAtC8V,EAAW9V,YAAYiF,aACrE6Q,EAAW9V,YAAc,UAG7B,KAAK,GADDmF,GAAOlD,EAAOtF,UAAU0jC,aAAaxjC,KAAKsD,KAAMvB,EAAMkX,GACjDnU,EAAI,EAAGA,EAAIwD,EAAKxN,OAAQgK,IAC7BwD,EAAKxD,GAAGrH,MAAS6F,gBAAiBxB,QAAQwG,EAAKxD,GAAG/C,KAEtD,OAAOuG,IAGf+6B,EAA6BvjC,UAAU4jC,mBAAqB,SAAU7kC,GAClE,GAAI8kC,IAAS,SAAU,UAAW,UAAW,YAAa,YAAa,UACnE,OAAQ,UAAUve,KAAK,SAAU5nB,GAAS,MAAOqB,KAAWrB,GAChE,IAAK8F,KAAKrJ,OAAOC,qBAAsBC,oBAAyD8iB,KAA1C3Z,KAAKrJ,OAAOC,WAAWA,WAAWupC,MAChFngC,KAAKrJ,OAAOC,WAAWA,WAAW0pB,SAAqD,KAA1CtgB,KAAKrJ,OAAOC,WAAWA,WAAWupC,KAAe/oC,EAAgB4I,KAAKrJ,QAAS,CAChI,GACIsf,GAAcjW,KAAU,MAAEiW,WAC1BoqB,IACArgC,KAAKsgC,SACLtgC,KAAKvB,QACLuB,KAAKugC,WAEW,kBAAXhlC,GAA8ByE,KAAKsgC,MAAMrqB,IAC9CjW,KAAKsgC,MAAMrqB,GAAaze,OAAUwI,KAAKrJ,qBAAsB6pC,sBACtDxgC,MAAKsgC,MAAMrqB,QAIlBoqB,GAAoB,kBAAX9kC,KACTyE,KAAKsgC,SACLtgC,KAAKvB,QACLuB,KAAKugC,UAGb,OAAOF,IAEJN,GACTU,4BCvEEC,GAAwB,WAMxB,QAASA,GAAO/pC,GACZ8L,OAAKC,OAAOi+B,UACZ3gC,KAAKrJ,OAASA,EACdqJ,KAAK4gC,mBAAoB,EACzB5gC,KAAKoL,kBACLpL,KAAK6gC,oBACL7gC,KAAK8gC,sBACL9gC,KAAKoH,mBAiNT,MAzMAs5B,GAAOlkC,UAAUoG,cAAgB,WAC7B,MAAO,UAQX89B,EAAOlkC,UAAUsK,QAAU,WACvB9G,KAAK0H,uBAMTg5B,EAAOlkC,UAAU4K,iBAAmB,WAChCpH,KAAKrJ,OAAO0Q,GAAG,mBAAoBrH,KAAK+gC,sBAAuB/gC,MAC/DA,KAAKrJ,OAAO0Q,GAAG,eAAgBrH,KAAKghC,iBAAkBhhC,OAM1D0gC,EAAOlkC,UAAUkL,oBAAsB,WAC/B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,mBAAoB5H,KAAK+gC,uBACzC/gC,KAAKrJ,OAAOiR,IAAI,eAAgB5H,KAAKghC,oBAUzCN,EAAOlkC,UAAUukC,sBAAwB,SAAUE,GAC/C3uB,WAAS,8BAAgCtS,KAAKrJ,QAC9CqJ,KAAK6gC,iBAAmBI,EAAYxiC,KACpCuB,KAAK8gC,sBACL9gC,KAAKoL,kBACLpL,KAAK4gC,mBAAoB,CACzB,KAAK,GAAIrK,GAAI,EAAGA,EAAIv2B,KAAK6gC,iBAAiBrpC,OAAQ++B,IAAK,CACnD,GAAI1qB,GAAM7L,KAAK6gC,iBAAiBtK,EAChCv2B,MAAKkhC,gBAAgBr1B,EACrB,IAAI9T,GAAwD,KAAxCiI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAAakI,KAAKrJ,OAAOsB,eAAeF,cACtFiI,KAAKrJ,OAAOkB,eAAeE,aACT,WAAlBA,GAA+C,SAAlBA,GACqB,IAAnDiI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,MACzFkI,KAAK4gC,mBAAoB,EAE7B,IAAIO,GAAU3oC,YAAU,eAAgBqT,IACnClU,oBAAkBwpC,IAAYA,EAAQ3pC,QACvC8a,WAAS,0BAA2BtS,KAAKohC,iBAAiBv1B,GAAMA,EAEpE,IAAIw1B,GAAW7oC,YAAU,aAAcqT,EACvC,KAAKlU,oBAAkB0pC,GAAW,CAC9B,GAAIC,GAAYtoC,EAAcgH,KAAKrJ,OAAQkV,EAAI9S,WAAWE,UAAU,EAGpEqZ,YAAS,2BAA2B,EAAMgvB,GACtCA,GAAaA,EAAUvoC,YACvBiH,KAAKuhC,2BAA2BD,IAIxCthC,KAAK6gC,iBAAiBrpC,OAAS,GAAKwI,KAAK4gC,mBACzC5gC,KAAKwhC,oBAETxhC,KAAKrJ,OAAOwY,OAAO,gBAAkBiB,OAAQpQ,KAAKoL,kBAEtDs1B,EAAOlkC,UAAU+kC,2BAA6B,SAAU5oC,GACpD,GAAI2oC,GAAYtoC,EAAcgH,KAAKrJ,OAAQgC,EAAOI,WAAWE,UAAU,GACnEwoC,EAAgBpjC,WAAS,2BAA4B2B,KAAKrJ,OAC1D2qC,IAAahpC,OAAOkE,UAAUC,eAAeC,KAAK+kC,EAAeH,EAAUroC,WAC3EqZ,WAAS,2BAA2B,EAAMgvB,GAE1CA,GAAaA,EAAUvoC,YACvBiH,KAAKuhC,2BAA2BD,IAGxCZ,EAAOlkC,UAAU0kC,gBAAkB,SAAUvoC,GACzC,GAAIhC,GAASqC,EAAcgH,KAAKrJ,OAAQgC,EAAO2F,eAI/C,IAAsB,UAFsC,KAAxC0B,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAAakI,KAAKrJ,OAAOsB,eAAeF,cACtFiI,KAAKrJ,OAAOkB,eAAeE,gBACmD,IAAnDiI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1B,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IA4B9BH,oBAAkBhB,KAGK,WAFsC,KAAxCqJ,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAClDkI,KAAKrJ,OAAOsB,eAAeF,cAAgBiI,KAAKrJ,OAAOkB,eAAeE,gBACa,IAAnDiI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC7B,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAMnCkI,KAAKkhC,gBAAgBvqC,IAL0B,IAA3CqJ,KAAK6gC,iBAAiBriC,QAAQ7H,IAC9BqJ,KAAKkhC,gBAAgBvqC,KAOY,IAAzCqJ,KAAKoL,eAAe5M,QAAQ7F,KAC5BqH,KAAKoL,eAAe3S,KAAKE,GACzB2Z,WAAS,4BAA8B3Z,EAAOM,SAAUN,EAAQqH,KAAKrJ,aA1CzE,IAAIgB,oBAAkBhB,IAClB,IAA+C,IAA3CqJ,KAAK6gC,iBAAiBriC,QAAQ7F,GAM9B,aAL6C,IAAzCqH,KAAKoL,eAAe5M,QAAQ7F,KAC5BqH,KAAKoL,eAAe3S,KAAKE,GACzB2Z,WAAS,4BAA8B3Z,EAAOM,SAAUN,EAAQqH,KAAKrJ,QACrEgC,EAAOoW,yBAA0B,QAMzC/O,MAAKkhC,gBAAgBvqC,IAC0B,IAA3CqJ,KAAK6gC,iBAAiBriC,QAAQ7H,KAA2D,IAAzCqJ,KAAKoL,eAAe5M,QAAQ7H,IAC/B,IAAzCqJ,KAAKoL,eAAe5M,QAAQ7F,KAC5BqH,KAAKoL,eAAe3S,KAAKE,GACzB2Z,WAAS,4BAA8B3Z,EAAOM,SAAUN,EAAQqH,KAAKrJ,UAI5B,IAAzCqJ,KAAKoL,eAAe5M,QAAQ7F,KAA6D,IAA3CqH,KAAK6gC,iBAAiBriC,QAAQ7F,KAC5EqH,KAAKoL,eAAe3S,KAAKE,GACzB2Z,WAAS,4BAA8B3Z,EAAOM,SAAUN,EAAQqH,KAAKrJ,UAyBzF+pC,EAAOlkC,UAAU4kC,iBAAmB,SAAUjpC,GAG1C,IAAK,GAFDupC,GAAWlpC,YAAU,eAAgBL,GACrCwpC,GAAU,EACLr2B,EAAQ,EAAGA,EAAQo2B,EAASlqC,OAAQ8T,IAAS,CAClD,GAAI61B,GAAUO,EAASp2B,GAAO/R,aAC1BxB,EAAwD,KAAxCiI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAChDkI,KAAKrJ,OAAOsB,eAAeF,cAAgBiI,KAAKrJ,OAAOkB,eAAeE,aAC1E,MAAwB,UAAlBA,GAA+C,SAAlBA,GAAiF,IAAnDiI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1D,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,KAAc,CACjD,GAAI2pC,GAAgBpjC,WAAS,2BAA4B2B,KAAKrJ,OACzD2B,QAAOkE,UAAUC,eAAeC,KAAK+kC,EAAeC,EAASp2B,GAAOrS,YACrE+G,KAAKoL,eAAe3S,KAAKipC,EAASp2B,IAClCgH,WAAS,4BAA8BovB,EAASp2B,GAAOrS,SAAUyoC,EAASp2B,GAAQtL,KAAKrJ,QACvFgrC,GAAU,GAGlB,GAAuB,SAAlB5pC,IACsD,IAAnDiI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,OACpC,IAApDkI,KAAK6gC,iBAAiBriC,QAAQkjC,EAASp2B,IAAgB,CACvDq2B,GAAU,CACV,QAGHhqC,oBAAkBwpC,IAAYA,EAAQ3pC,SACvCmqC,EAAU3hC,KAAKohC,iBAAiBM,EAASp2B,KAEtB,UAAlBvT,GAA+C,SAAlBA,IAA6B2pC,EAASlqC,SACpEmqC,GAAU,GAGlB,MAAOA,IAEXjB,EAAOlkC,UAAUglC,kBAAoB,WAGjC,IAAK,GAFD7oC,GAASqH,KAAKoL,eACd/S,EAAM2H,KAAKoL,eAAe5T,OACrB8J,EAAI,EAAGA,EAAIjJ,EAAKiJ,IAAK,CAC1B,GAAIsgC,GAAW5oC,EAAcgH,KAAKrJ,OAAQgC,EAAO2I,GAAGhD,eAEpD,KAD2C,IAA9B3F,EAAO6F,QAAQojC,GAChB,CACR,GAAIC,GAAW7oC,EAAcgH,KAAKrJ,OAAQgC,EAAO2I,GAAGhD,gBAAgB,EACpE3F,GAAO2I,GAAG+M,YAAcwzB,EAASxzB,YAAc,MAG/C1V,GAAO2I,GAAG+M,YAAc,EACxBrO,KAAK8gC,mBAAmBroC,KAAKE,EAAO2I,MAIhDo/B,EAAOlkC,UAAUwkC,iBAAmB,SAAUviC,GAC1C,GAGIqN,GAHAR,EAAQ,EACRnO,EAAWsB,EAAKtB,SAChB9E,EAAM8E,EAAS3F,MAEnB,KAAK8T,EAAOA,EAAQjT,EAAKiT,IAAS,CAE9B,GAAIw2B,IADJh2B,EAAgB3O,EAASmO,IACE+C,aACvByzB,GAAqB,IAAXA,GAAiBnqC,oBAAkBmU,EAAciD,2BAC3DjD,EAAciD,wBAA0B,KACxCjD,EAAcuC,YAAc,MAGpCrO,KAAKoL,kBACLpL,KAAKrJ,OAAOwY,OAAO,iBAAmBiB,OAAQjT,EAAUmO,MAAOnO,EAAS3F,UAErEkpC,KC5NPqB,GAA6B,WAM7B,QAASA,GAAYprC,GACjBqJ,KAAKgiC,yBAA0B,EAC/Bv/B,OAAKC,OAAOu/B,eACZjiC,KAAKrJ,OAASA,EACdqJ,KAAK6Q,eACL7Q,KAAKoH,mBAiLT,MAzKA26B,GAAYvlC,UAAUoG,cAAgB,WAClC,MAAO,eAMXm/B,EAAYvlC,UAAU4K,iBAAmB,WACrCpH,KAAKrJ,OAAO0Q,GAAG,gBAAiBrH,KAAKkiC,uBAAwBliC,MAC7DA,KAAKrJ,OAAO0Q,GAAG,gBAAiBrH,KAAKmlB,mBAAoBnlB,MACzDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,sBAAuBrH,KAAKmiC,mBAAoBniC,MACpEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,iBAAkBrH,KAAKoiC,eAAgBpiC,OAQ/D+hC,EAAYvlC,UAAUsK,QAAU,WAC5B9G,KAAK0H,uBAMTq6B,EAAYvlC,UAAUkL,oBAAsB,WACpC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,gBAAiB5H,KAAKkiC,wBACtCliC,KAAKrJ,OAAOiR,IAAI,gBAAiB5H,KAAKmlB,oBACtCnlB,KAAKrJ,OAAOiB,KAAKgQ,IAAI,sBAAuB5H,KAAKmiC,oBACjDniC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,iBAAkB5H,KAAKoiC,kBAEhDL,EAAYvlC,UAAU0lC,uBAAyB,SAAUhO,GACrDl0B,KAAK6Q,YAAcqjB,GAEvB6N,EAAYvlC,UAAUyf,IAAM,SAAUL,EAEtCC,EAAkBC,EAAUC,EAAQsmB,GAChC,GAAI99B,GAAQvE,KACRpJ,EAAaoJ,KAAKrJ,OAAOC,WACzBqjB,EAAW3hB,QAMf,OALAga,YAAS,QAAS+vB,EAAOpoB,GACzB3H,WAAS,UAAU,EAAO2H,GACrBtiB,oBAAkBikB,KACnB5b,KAAKgiC,wBAA0BpmB,EAAsBomB,yBAElD,GAAIM,SAAQ,SAAUta,GACzB,GAAItuB,IAAK6K,EAAMg+B,WAAe3rC,YAAsBC,eAC9C0N,EAAM5N,OAAOC,WADgD,GAAIC,eAAYD,GAE/Eya,EAAQ,GAAIC,QAMhB,IALK/M,EAAMg+B,YACPlxB,EAAQ9M,EAAMkQ,cAAcpD,GAC5BiB,WAAS,QAASjB,EAAO4I,IAE7B1V,EAAM5N,OAAOwP,QpBzDM,oBoByD2B9J,SAAO4d,EAAU2B,IAC3DpjB,YAAU,SAAUyhB,GACpB,MAAO,KAEXvgB,GAAGsY,aAAaX,GAAOY,KAAK,SAAU5U,GAClC,GAAImlC,GAAa,IAKjB,OAJK7qC,qBAAkBikB,IAA2BjkB,oBAAkBikB,EAAsBhlB,cACtF4rC,EAAa5mB,EAAsBhlB,YAEvCglB,EAAwBrX,EAAMk+B,2BAA2B7mB,EAAuBhlB,EAAYyG,GACrFkH,EAAM5N,OAAOiB,KAAKokB,kBAAkBC,IAAI1X,EAAM5N,OAAOiB,KAAMgkB,EAAuBC,EAAkBC,EAAUumB,EAAOtmB,GAAQ9J,KAAK,SAAUywB,GAC7H,MAAdF,EACA5mB,EAAsBhlB,WAAa4rC,QAG5B5mB,GAAsBhlB,WAEjCoxB,EAAQ0a,UAKxBX,EAAYvlC,UAAUiY,cAAgB,SAAUpD,EAAO4I,GAQnD,OAPKtiB,oBAAkBsiB,IAAqC,gBAAxBA,EAASvD,YACtC1W,KAAKrJ,OAAOkX,cACfoM,EAASvD,WAAa,WACtBrF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM1R,KAAKrJ,OAAOiG,gBAAiB,QAAS,MAClDyU,EAAQ7Y,YAAU,mCAAoCwH,KAAKrJ,QAAQ0a,IAEhEA,GAEX0wB,EAAYvlC,UAAUimC,2BAA6B,SAAUxoB,EAAU0oB,EAAOC,GAE1E,GAAI7/B,GAAOzK,QAkBX,IAjBAga,WAAS,QAAStS,KAAKrJ,OAAOiB,KAAK4c,gBAAgBC,eAAc,GAAO1R,GACxEuP,WAAS,YAAY,EAAMvP,GACtBpL,oBAAkBsiB,IAActiB,oBAAkBsiB,EAASvD,aAC5DpE,WAAS,aAAc2H,EAASvD,WAAY3T,GAE3C/C,KAAKuiC,YACNviC,KAAKrJ,OAAOuG,cACZ8C,KAAKrJ,OAAO4rB,WAAWnR,kBAAkB5Y,YAAU,SAAUoqC,IAC7DtwB,WAAS,aAActS,KAAKrJ,OAAOwG,SAAU4F,IAEjD/C,KAAKrJ,OAAOwY,OAAO,gBAAiBpM,GAEpCA,EAAO/C,KAAK6Q,YACZ8xB,EAAQhrC,oBAAkBoL,EAAKqN,QAAUpQ,KAAKrJ,OAAOwG,SAASqI,MAAM,GAAKzC,EAAKqN,OACzEpQ,KAAKuiC,YACNviC,KAAKrJ,OAAOwG,aAEZ8c,GAAYA,EAASrjB,YAAcoJ,KAAKuiC,UAAW,CACnD,GAAIM,GAAY7iC,KAAKrJ,OAAOwG,SACxB2lC,EAAU7oB,EAASrjB,qBAAsBC,eAAcojB,EAASrjB,WAAWA,WAAW8E,KAAOue,EAASrjB,UAC1GoJ,MAAKrJ,OAAO4rB,WAAWnR,kBAAkB0xB,GACzCH,EAAQ3iC,KAAKrJ,OAAOwG,SACpB6C,KAAKrJ,OAAOwG,SAAW0lC,EAI3B,MAFA5oB,GAAWtiB,oBAAkBsiB,GAAY3hB,SAAW2hB,EACpDA,EAASrjB,WAAa,GAAIC,gBAAc6E,KAAMinC,IACvC1oB,GASX8nB,EAAYvlC,UAAU2oB,mBAAqB,SAAUpiB,GACjD,GAAI/C,KAAKrJ,OAAOiB,KAAK8W,oBAAoB3L,EAAKpD,OAAOsJ,OAASjJ,KAAKrJ,OAAOyI,gBAAiB,CACvF,GAAI3E,MACAgE,EAAOsE,EAAKtE,KAEZ2P,EADczW,oBAAkB8G,EAAK4P,aACjB5P,EAAKrE,MAAQqE,EAAK4P,WAC1C5T,GAAMsoC,OAAS30B,EACfrL,EAAKtI,MAAQA,EAEjBuF,KAAKrJ,OAAOwY,OAAO,gBAAiBpM,GACpC/C,KAAKrJ,OAAOwP,QAAQ,qBAAsBpD,IAE9Cg/B,EAAYvlC,UAAU2lC,mBAAqB,SAAUa,GACjD,GAAsB,UAAlBA,EAAShgC,KAAkB,CAC3B,GAAIigC,GAAcD,EAASE,OAAOzkC,KAC9B0kC,EAAqBnjC,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,MACjE,IAAIyrC,EAAYlqC,YAAcC,EAAcgH,KAAKrJ,OAAQssC,EAAYlqC,WAAWE,SAAUmqC,QAAQD,IAAsB,CACpH,GAAIE,GAAYL,EAASM,UAAU9rC,OAC/B+rC,EAAWN,EAAY7oC,MACvBopC,GAAiB,EACjBC,GAAgB,EAChBC,EAAQhrC,EAAgBsH,KAAKrJ,OAAQssC,EAAajjC,KAAKrJ,OAAOuG,aAC9D8C,KAAKgiC,yBAA6B0B,GAAU1jC,KAAKrJ,OAAOsgB,cACxDusB,GAAiB,EACjBC,GAAgBR,EAAY7pC,UAEhC4pC,EAASM,UAAUD,EAAY,GAAGM,UAAaC,aAAcL,EAAUM,YAAaJ,EAChFlpC,SAAUipC,MAK1BzB,EAAYvlC,UAAU4lC,eAAiB,SAAUtmB,GAC7C,IAAK,GAAIxkB,GAAI,EAAGA,EAAIwkB,EAASgoB,WAAWtsC,OAAQF,IACxCwkB,EAASgoB,WAAWxsC,GAAG0N,OACvB8W,EAASgoB,WAAWxsC,GAAGysC,WAAcC,mBAAmB,KAIpEjC,EAAYvlC,UAAU+lC,QAAU,WAC5B,OAAQ7rC,EAAasJ,KAAKrJ,SAAW8C,EAAUuG,KAAKrJ,SAEjDorC,KC5LPkC,GAA2B,WAM3B,QAASA,GAAUttC,GACf8L,OAAKC,OAAOwhC,aACZlkC,KAAKrJ,OAASA,EACdqJ,KAAK6Q,eACL7Q,KAAKoH,mBA+IT,MAvIA68B,GAAUznC,UAAUoG,cAAgB,WAChC,MAAO,aAMXqhC,EAAUznC,UAAU4K,iBAAmB,WACnCpH,KAAKrJ,OAAO0Q,GAAG,cAAerH,KAAKolB,iBAAkBplB,MACrDA,KAAKrJ,OAAO0Q,GAAG,gBAAiBrH,KAAKmkC,qBAAsBnkC,OAM/DikC,EAAUznC,UAAUkL,oBAAsB,WAClC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,cAAe5H,KAAKolB,kBACpCplB,KAAKrJ,OAAOiR,IAAI,gBAAiB5H,KAAKmkC,wBAQ1CF,EAAUznC,UAAUsK,QAAU,WAC1B9G,KAAK0H,uBAETu8B,EAAUznC,UAAU2nC,qBAAuB,SAAUjQ,GACjDl0B,KAAK6Q,YAAcqjB,GAEvB+P,EAAUznC,UAAUyf,IAAM,SAAUG,EAAqBP,EAAkBQ,EAAQN,GAC/E,GAAIxX,GAAQvE,KACR2iC,EAAQ3iC,KAAKrJ,OAAOC,WACpBwjB,EAAO9hB,SACPiqC,GAAW7rC,EAAasJ,KAAKrJ,SAAW8C,EAAUuG,KAAKrJ,OAE3D,OADA2b,YAAS,UAAU,EAAO8H,GACnB,GAAIkoB,SAAQ,SAAUta,GACzB,GAAItuB,IAAK6oC,GAAaI,YAAiB9rC,eACjC0N,EAAM5N,OAAOC,WADmC,GAAIC,eAAY8rC,GAElEtxB,EAAQ,GAAIC,QAMhB,IALKixB,IACDlxB,EAAQ9M,EAAMkQ,cAAcpD,GAC5BiB,WAAS,QAASjB,EAAO+I,IAE7B7V,EAAM5N,OAAOwP,QrB7CI,kBqB6C2B9J,SAAO+d,EAAMgC,IACrD5jB,YAAU,SAAU4hB,GACpB,MAAO,KAEX1gB,GAAGsY,aAAaX,GAAOY,KAAK,SAAU5U,GAClC,GAAI+mC,GAAc,IAKlB,OAJKzsC,qBAAkBykB,IAAyBzkB,oBAAkBykB,EAAoBxlB,cAClFwtC,EAAchoB,EAAoBxlB,YAEtCwlB,EAAsB7X,EAAM8/B,wBAAwBjoB,EAAqBumB,EAAOtlC,GACzEkH,EAAM5N,OAAOiB,KAAK0kB,gBAAgBL,IAAI1X,EAAM5N,OAAOiB,KAAMwkB,EAAqBP,EAAkBQ,EAAQN,GAAQ9J,KAAK,SAAUknB,GAC/G,MAAfiL,EACAhoB,EAAoBxlB,WAAawtC,QAG1BhoB,GAAoBxlB,WAE/BoxB,EAAQmR,UAKxB8K,EAAUznC,UAAUiY,cAAgB,SAAUpD,EAAO+I,GAQjD,OAPKziB,oBAAkByiB,IAA6B,gBAApBA,EAAK1D,YAC9B1W,KAAKrJ,OAAOkX,cACfuM,EAAK1D,WAAa,WAClBrF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM1R,KAAKrJ,OAAOiG,gBAAiB,QAAS,MAClDyU,EAAQ7Y,YAAU,mCAAoCwH,KAAKrJ,QAAQ0a,IAEhEA,GAEX4yB,EAAUznC,UAAU6nC,wBAA0B,SAAUjqB,EAAMuoB,EAAOC,GACjE,GAAI7/B,MAEAw/B,GAAW7rC,EAAasJ,KAAKrJ,SAAW8C,EAAUuG,KAAKrJ,OAsB3D,IArBA2b,WAAS,QAAStS,KAAKrJ,OAAOiB,KAAK4c,gBAAgBC,eAAc,GAAO1R,GACxEuP,WAAS,YAAY,EAAMvP,GAC3BuP,WAAS,eAAe,EAAMvP,GACzBpL,oBAAkByiB,IAAUziB,oBAAkByiB,EAAK4nB,0BACpD1vB,WAAS,0BAA2B8H,EAAK4nB,wBAAyBj/B,GAEjEpL,oBAAkByiB,IAAUziB,oBAAkByiB,EAAK1D,aACpDpE,WAAS,aAAc8H,EAAK1D,WAAY3T,GAEvCw/B,IACDviC,KAAKrJ,OAAOuG,cACZ8C,KAAKrJ,OAAO4rB,WAAWnR,kBAAkB/S,WAAS,SAAUukC,IAC5DtwB,WAAS,aAActS,KAAKrJ,OAAOwG,SAAU4F,IAEjD/C,KAAKrJ,OAAOwY,OAAO,gBAAiBpM,GAEpCA,EAAO/C,KAAK6Q,YACZ8xB,EAAQhrC,oBAAkBoL,EAAKqN,QAAUpQ,KAAKrJ,OAAOwG,SAASqI,MAAM,GAAKzC,EAAKqN,OACzEmyB,IACDviC,KAAKrJ,OAAOwG,aAEZid,GAAQA,EAAKxjB,YAAc2rC,EAAS,CACpC,GAAI+B,GAAYtkC,KAAKrJ,OAAOwG,SACxB2lC,EAAU1oB,EAAKxjB,qBAAsBC,eAAcujB,EAAKxjB,WAAWA,WAAW8E,KAAO0e,EAAKxjB,UAC9FoJ,MAAKrJ,OAAO4rB,WAAWnR,kBAAkB0xB,GACzCH,EAAQ3iC,KAAKrJ,OAAOwG,SACpB6C,KAAKrJ,OAAOwG,SAAWmnC,EAI3B,MAFAlqB,GAAOziB,oBAAkByiB,MAAaA,EACtCA,EAAKxjB,WAAa,GAAIC,gBAAc6E,KAAMinC,IACnCvoB,GASX6pB,EAAUznC,UAAU4oB,iBAAmB,SAAUriB,GAC7C,GAAI/C,KAAKrJ,OAAOiB,KAAK8W,oBAAoB3L,EAAKpD,OAAOsJ,OAASjJ,KAAKrJ,OAAOyI,gBAAiB,CACvF,GAAI3E,MACAgE,EAAOjG,YAAU,OAAQuK,GAEzBqL,EADczW,oBAAkB8G,EAAK4P,aACjB5P,EAAKrE,MAAQqE,EAAK4P,WAC1C5T,GAAM8pC,gBAAwB,EAANn2B,EACxBrL,EAAKtI,MAAQA,EAEjBuF,KAAKrJ,OAAOwY,OAAO,gBAAiBpM,GACpC/C,KAAKrJ,OAAOwP,QAAQ,mBAAoBpD,IAErCkhC,KCxJPO,GAAsB,WACtB,QAASA,GAAK7tC,GACV8L,OAAKC,OAAO+hC,QACZzkC,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAoLT,MA9KAo9B,GAAKhoC,UAAU4K,iBAAmB,WAC9BpH,KAAKrJ,OAAO0Q,GtBuBkB,2BsBvBkBrH,KAAK0kC,0BAA2B1kC,MAChFA,KAAKrJ,OAAO0Q,GtBwBO,gBsBxBkBrH,KAAK2kC,WAAY3kC,OAM1DwkC,EAAKhoC,UAAUkL,oBAAsB,WAC7B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,ItBYkB,2BsBZmB5H,KAAK0kC,2BACtD1kC,KAAKrJ,OAAOiR,ItBaO,gBsBbmB5H,KAAK2kC,cAQ/CH,EAAKhoC,UAAUoG,cAAgB,WAC3B,MAAO,SAOX4hC,EAAKhoC,UAAUytB,QAAU,WACrBjqB,KAAKrJ,OAAOiB,KAAK+2B,YAAY1E,WAQjCua,EAAKhoC,UAAUsK,QAAU,WACrB9G,KAAK0H,uBAQT88B,EAAKhoC,UAAUiyB,SAAW,SAAUC,GAChC1uB,KAAKrJ,OAAOiB,KAAK+2B,YAAYF,SAASC,IAQ1C8V,EAAKhoC,UAAUoyB,sBAAwB,SAAUtrB,GAC7CtD,KAAKrJ,OAAOiB,KAAK+2B,YAAYC,sBAAsBtrB,IAWvDkhC,EAAKhoC,UAAUkoC,0BAA4B,SAAU/wB,GAEjD,GADAA,EAAWhb,OAAOS,SAAiC,aAAtBua,EAAWpY,OACpCyE,KAAKrJ,OAAO2I,oBAAqB,CACjC,GAAIslC,GAAoB5kC,KAAKrJ,OAAO6E,0BAA0B,GAC1D7C,EAASqH,KAAKrJ,OAAOwG,SAASC,OAAO,SAAUC,GAC/C,MAAOA,GAAEunC,KAAuBjxB,EAAWhb,OAAOisC,IAElDjsC,GAAOnB,SACPmB,EAAO,GAAGS,SAAWua,EAAWhb,OAAOS,UAG/C,GAAIyrC,IACAz0B,OAAQpQ,KAAKrJ,OAAOwG,SACpBwB,IAAKgV,EAAWhV,IAChBpD,OAAQoY,EAAWpY,OACnB5C,OAAQgb,EAAWhb,OACnB2S,MAAOtL,KAAKrJ,OAAOwG,SAAS3F,OAGhC,IADA6G,WAAS,oBAAqB2B,KAAKrJ,QAAQ6b,mBAAmBqyB,GAC1D7kC,KAAKrJ,OAAO2I,oBAAqB,CACjC,GAEI0U,OAAY,EACI,cAAhB6wB,EAAU,QACV7wB,EAAY6wB,EAAO,IAAE5wB,uBAAuB,oBAAoB,GAC3Dtc,oBAAkBqc,KACnB1J,eAAa0J,GAAY,oBACzB5G,YAAU4G,GAAY,wBAGL,WAAhB6wB,EAAU,SACf7wB,EAAY6wB,EAAO,IAAE5wB,uBAAuB,sBAAsB,GAC7Dtc,oBAAkBqc,KACnB1J,eAAa0J,GAAY,sBACzB5G,YAAU4G,GAAY,wBAKtCwwB,EAAKhoC,UAAUsoC,SAAW,SAAUC,EAAc5sB,EAAM/H,GAapD,IAAK,GAZD40B,GAAartC,oBAAkByY,MAAeA,EAW9C60B,EAASjlC,KACJklC,EAAI,EAAGA,EAAI/sB,EAAK3gB,OAAQ0tC,KAXnB,SAAUA,GACpBF,EAAWvsC,KAAK0f,EAAK+sB,GACrB,IAAIC,KACAhtB,GAAK+sB,GAAG5rC,kBACR6rC,EAAMJ,EAAa3nC,OAAO,SAAUC,GAChC,MAAO8a,GAAK+sB,GAAGjsC,WAAaoE,EAAEiB,iBAElC0mC,EAAaC,EAAOH,SAASC,EAAcI,EAAKH,KAK5CE,EAEZ,OAAOF,IAEXR,EAAKhoC,UAAUmoC,WAAa,SAAUS,GAClC,GAAI7gC,GAAQvE,KACRtG,EAAK,GAAI7C,eAAYuuC,EAAeh1B,OACxC,IAA8C,SAA1CpQ,KAAKrJ,OAAOmX,aAAaC,aAAyB,CAClD,GAAIoK,MACAktB,EAAYrlC,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,IACf,UAA7CwI,KAAKrJ,OAAOsB,eAAeF,eAA0E,SAA7CiI,KAAKrJ,OAAOsB,eAAeF,eACpF,cAAgB,QAChBsZ,GAAQ,GAAIC,UAAQI,MAAM2zB,EAAU,QAAS,EACjDltB,GAAOze,EAAGoZ,aAAazB,GACvB+zB,EAAe95B,MAAQ6M,EAAK3gB,MAGxB8tC,IAFAC,EAAOvlC,KAAKrJ,OAAOiB,KAAKkW,aAAa03B,YACrCtqB,EAAUlb,KAAKrJ,OAAOiB,KAAKkW,aAAamI,aACf,EAC7B5E,GAAQA,EAAMi0B,KAAKA,GAAMG,KAAKF,GAC9BptB,EAAOze,EAAGoZ,aAAazB,EACvB,IAAI2zB,GAAahlC,KAAK8kC,SAASM,EAAeh1B,OAAQ+H,EACtDitB,GAAeh1B,OAAS40B,MAEvB,CACD,GAAIU,GAAO,GAAI7uC,eAAYuuC,EAAeh1B,QACtChX,EAAW,GAAIyI,aAAU,WAAY,WAAY,MAAM8jC,GAAG,WAAY,eAAYhsB,IAClFisB,EAAYF,EAAK5yB,cAAa,GAAIxB,UAAQI,MAAMtY,IAChD6mC,MAAa,EAMbA,IALAvoC,EAAuBsI,KAAKrJ,SAAaqJ,KAAKrJ,OAAOkB,eAAeC,MAAQkI,KAAKrJ,OAAOiB,KAAKC,eAAeC,KAC3GkI,KAAKrJ,OAAOsB,eAAeV,QAAQC,SAAWwI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAI1EouC,EAAUxoC,OAAO,SAAUC,GACpC,MAAO3E,GAAgB6L,EAAM5N,OAAQ0G,EAAGuoC,KAJ/BA,EAOjBR,EAAe95B,MAAQ20B,EAAWzoC,MAClC,IAAI6Z,GAAQ,GAAIC,SACZi0B,EAAOvlC,KAAKrJ,OAAOiB,KAAKkW,aAAa03B,SACrCtqB,EAAUlb,KAAKrJ,OAAOiB,KAAKkW,aAAamI,WACxCgqB,GAAWzoC,OAAU0jB,EAAUqqB,IAE/BrqB,GADAA,EAAW1H,KAAKqyB,MAAM5F,EAAWzoC,OAAS+tC,IAAWtF,EAAWzoC,OAAS+tC,EAAQ,EAAI,KACvD,EAC9BvlC,KAAKrJ,OAAOiB,KAAKyiB,eAAgBvM,cAAgBmI,YAAaiF,KAAa,GAE/E,IAAIoqB,GAAOC,GAAQrqB,EAAU,EAC7B7J,GAAQA,EAAMi0B,KAAKA,GAAMG,KAAKF,GAC9BG,EAAK9uC,WAAW8E,KAAOukC,EACvBmF,EAAeh1B,OAASs1B,EAAK5yB,aAAazB,GAE9CrR,KAAKrJ,OAAOwY,OAAO,eAAgBi2B,IAEhCZ,KC3LPsB,GAAyB,WACzB,QAASA,GAAQnvC,GACb8L,OAAKC,OAAOqjC,WACZ/lC,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAkIT,MA1HA0+B,GAAQtpC,UAAUoG,cAAgB,WAC9B,MAAO,WAMXkjC,EAAQtpC,UAAU4K,iBAAmB,WACjCpH,KAAKrJ,OAAO0Q,GvBPK,cuBOkBrH,KAAKgmC,eAAgBhmC,MACxDA,KAAKrJ,OAAO0Q,GvBFM,euBEkBrH,KAAKimC,oBAAqBjmC,OAMlE8lC,EAAQtpC,UAAUkL,oBAAsB,WAChC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IvBlBK,cuBkBmB5H,KAAKgmC,gBACzChmC,KAAKrJ,OAAOiR,IvBbM,euBamB5H,KAAKimC,uBAE9CH,EAAQtpC,UAAUwpC,eAAiB,SAAUjjC,GACzC,GAAIs0B,GAAOr3B,KAAKrJ,MACU,KAAtBoM,EAAKpE,IAAIiI,UAAkBywB,EAAK1xB,qBAAqBnO,OAAS,EAC9DwI,KAAKguB,aAAaqJ,EAAKpnB,QAAQC,GAAK,sBAAuBmnB,EAAKpnB,QAAQC,GAAK,yBAAyB,GAGjGvY,oBAAkB0/B,EAAK55B,wBAAwBsF,EAAKpE,IAAIiI,cACpDjP,oBAAkB0/B,EAAK55B,wBAAwBsF,EAAKpE,IAAIiI,YACxDywB,EAAK55B,wBAAwBsF,EAAKpE,IAAIiI,UAAUxM,MAC7Ci9B,EAAK55B,wBAAwBsF,EAAKpE,IAAIiI,SAAW,GAAGxM,MACxD4F,KAAKguB,aAAaqJ,EAAKpnB,QAAQC,GAAK,wBAAwB,GAG5DlQ,KAAKguB,aAAaqJ,EAAKpnB,QAAQC,GAAK,wBAAwB,GAE5DmnB,EAAK55B,wBAAwBsF,EAAKpE,IAAIiI,UAAUxM,QAChDi9B,EAAK55B,wBAAwBsF,EAAKpE,IAAIiI,SAAW,GAAGxM,OACpD4F,KAAKguB,aAAaqJ,EAAKpnB,QAAQC,GAAK,wBAAwB,GAEF,IAA1DmnB,EAAK55B,wBAAwBsF,EAAKpE,IAAIiI,UAAUxM,OAChD4F,KAAKguB,aAAaqJ,EAAKpnB,QAAQC,GAAK,yBAAyB,GAEH,IAA1DmnB,EAAK55B,wBAAwBsF,EAAKpE,IAAIiI,UAAUxM,OAChD4F,KAAKguB,aAAaqJ,EAAKpnB,QAAQC,GAAK,yBAAyB,IAI/C,IAAtBnN,EAAKpE,IAAIiI,UAAmBjP,oBAAkBoL,EAAKtE,KAAK1F,aACxDiH,KAAKguB,aAAaqJ,EAAKpnB,QAAQC,GAAK,yBAAyB,IAGrE41B,EAAQtpC,UAAUypC,oBAAsB,SAAUljC,GAC9C,GAAIs0B,GAAOr3B,KAAKrJ,MAYhB,IAXsC,SAAlCqJ,KAAKrJ,OAAOmF,aAAaC,MAA0D,UAAvCiE,KAAKrJ,OAAOiB,KAAKkE,aAAaC,MAC1EgH,EAAKE,KAAKiN,KAAOlQ,KAAKrJ,OAAOiB,KAAKqY,QAAQC,GAAK,YAC/CnN,EAAKmD,QAAS,EACdlG,KAAKrJ,OAAOiB,KAAKoE,WAAWsxB,YAE5BvqB,EAAKE,KAAKiN,KAAOlQ,KAAKrJ,OAAOiB,KAAKqY,QAAQC,GAAK,cAC/ClQ,KAAKrJ,OAAOmoB,YAEZ/b,EAAKE,KAAKiN,KAAOlQ,KAAKrJ,OAAOiB,KAAKqY,QAAQC,GAAK,gBAC/ClQ,KAAKrJ,OAAOooB,cAEZhc,EAAKE,KAAKiN,KAAOmnB,EAAKz/B,KAAKqY,QAAQC,GAAK,WAAamnB,EAAK1xB,qBAAqBnO,OAAQ,CACvF,GAAImB,GAAS0+B,EAAK55B,wBAAwB45B,EAAKlyB,wBAAwB,GAAK,GACxEoyB,MAAY,EAChB,IAAI5+B,EAAOyB,MAAQi9B,EAAK1xB,qBAAqB,GAAGvL,MAC5C,IAAS9C,EAAI,EAAGA,EAAI+/B,EAAK55B,wBAAwBjG,OAAQF,IACjD+/B,EAAK55B,wBAAwBnG,GAAG+C,WAAa1B,EAAOI,WAAWsB,WAC/Dk9B,EAAYjgC,OAKpBigC,GAAYF,EAAKlyB,wBAAwB,GAAK,CAElDkyB,GAAK5B,aAAa4B,EAAKlyB,wBAAwB,IAAKoyB,EAAW,SAEnE,GAAIx0B,EAAKE,KAAKiN,KAAOmnB,EAAKz/B,KAAKqY,QAAQC,GAAK,YAAcmnB,EAAK1xB,qBAAqBnO,OAAQ,CAIxF,IAAK,GAHD2C,GAAQk9B,EAAKlyB,wBAAwB,GACrCoyB,MAAY,GACZx+B,EAAas+B,EAAK1xB,qBAAqB,GAAG5M,WACrCzB,EAAI,EAAGA,EAAI+/B,EAAK55B,wBAAwBjG,OAAQF,IACjD+/B,EAAK55B,wBAAwBnG,GAAG+C,WAAatB,EAAWsB,WACxDk9B,EAAYjgC,EAGpB+/B,GAAK5B,aAAat7B,GAAQo9B,EAAW,WAS7CuO,EAAQtpC,UAAUy+B,WAAa,WAC3B,MAAOj7B,MAAKrJ,OAAOiB,KAAKm2B,cAAckN,cAU1C6K,EAAQtpC,UAAUwxB,YAAc,SAAU/a,EAAO6a,GAC7C9tB,KAAKrJ,OAAOiB,KAAKm2B,cAAcC,YAAY/a,EAAO6a,IAQtDgY,EAAQtpC,UAAUsK,QAAU,WACxB9G,KAAK0H,uBAEFo+B,KCrIPI,GAA2B,WAM3B,QAASA,GAAUvvC,GACf8L,OAAKC,OAAOyjC,aACZnmC,KAAKrJ,OAASA,EACdqJ,KAAKomC,oBACLpmC,KAAKoV,gBAoOT,MA5NA8wB,GAAU1pC,UAAUoG,cAAgB,WAChC,MAAO,WAEXsjC,EAAU1pC,UAAUkL,oBAAsB,WAClC1H,KAAKrJ,OAAOgR,aAapBu+B,EAAU1pC,UAAU+Y,sBAAwB,SAAUH,EAAcoC,EAAc6uB,GAC9ErmC,KAAKoV,aAAeA,CAIpB,KAAK,GAHDtc,GAEAoE,KACKI,EAAI,EAAGjF,EAFOC,OAAOC,KAAKif,GAAchgB,OAET8F,EAAIjF,EAAKiF,IAC5B9E,YAAU,eAAgBgf,EAAala,KAEpDJ,EAAWzE,KAAK+e,EAAala,GAGrC,IAII2hC,GAJA7oB,EAAgBle,EAAkBgF,GAClCopC,EAAcppC,EAAWsI,QACzB+gC,EAAgBjuC,OAAOC,KAAKyH,KAAKrJ,OAAOse,YAAYzd,OACpDgvC,EAAaluC,OAAOC,KAAK6d,GAAe5e,OAExCD,EAAUyI,KAAKrJ,OAAOiJ,YAC1B,IAAII,KAAKrJ,OAAOse,WAAW7X,OAAO,SAAU+wB,GAAK,MAAOA,GAAEnE,mBAAqBxyB,QAC3E,IAAK,GAAIF,GAAI,EAAGe,EAAMmuC,EAAYlvC,EAAIe,EAAKf,IAGvC,GAFAwB,EAAesd,EAAc9e,GAC7B2nC,EAAqBj/B,KAAKymC,sBAAsB3tC,EAAcwtC,GACtC,CAwCpB,IAAK,GADDrB,GAASjlC,KACJ0mC,EAAkB,EAAGC,EAAQJ,EAAeG,GAAmBC,EAAOD,KAvCjE,SAAUA,EAAiBC,GACrC,GAAI1jC,OAAO,EACXA,KACA,KAAK,GAAI+wB,GAAM,EAAGA,EAAMz8B,EAAQC,OAAQw8B,IAGpC/wB,EAFatL,oBAAkBa,YAAU,QAASjB,EAAQy8B,KACtDz8B,EAAQy8B,GAAOx7B,YAAU,QAAUjB,EAAQy8B,KACjC,IAGlB,IADA/wB,EAAOgiC,EAAO2B,kBAAkB3jC,EAAMgiC,EAAOtuC,OAAOse,WAAWyxB,EAAkB,KAC7EzB,EAAOtuC,OAAOse,WAAWyxB,EAAkB,GAAG1c,iBA0B9C,MAAO,UAzBP,IAAI6c,EACJP,GAAYnoC,IAAI,SAAUd,EAAG/F,GACzB,GAAI+F,EAAEpE,WAAaH,EAAaG,SAE5B,YADA4tC,EAAQvvC,IAIhB,IAAIwvC,GAAeD,EAAQ5H,EAAqByH,EAC5CK,EAAgB1qC,YAAWvD,SACxBiuC,GAAcxtC,mBACdwtC,GAAc9B,EAAOtuC,OAAOoG,cACnCuV,WAAS,aAAcy0B,EAAe9jC,EACtC,IAAI7I,GAAQ5B,YAAU,QAASuuC,EAI/B,IAHAz0B,WAAS,QAASlY,EAAQ,EAAG6I,GAC7BqP,WAAS,gBAAgB,EAAMrP,GAC/BqP,WAAS,iBAAkBy0B,EAAc9tC,SAAUgK,GAC/CojC,EAAQ,CACR,GAAI9sC,GAAef,YAAU,eAAgBM,EACzCS,GAAa/B,QACb+B,EAAad,KAAKwK,GAG1BqjC,EAAYxpC,OAAOgqC,EAAc,EAAG7jC,IAQhCyjC,EAEZ1mC,MAAKomC,yBAIZ,CAED,IAAK,GADDnzB,MACKlK,EAAc,EAAGgqB,EAAWx7B,EAAQC,OAAQuR,EAAcgqB,EAAUhqB,IAGzEkK,EAFatb,oBAAkBa,YAAU,QAASjB,EAAQwR,KACtDxR,EAAQwR,GAAevQ,YAAU,QAASjB,EAAQwR,KACtC,IAEpB,KAAK,GAAI29B,GAAkB,EAAGM,EAAWT,EAAeG,GAAmBM,EAAUN,IACjF1mC,KAAK4mC,kBAAkB3zB,EAAOjT,KAAKrJ,OAAOse,WAAWyxB,EAAkB,IAG/E,MAAOJ,IAEXJ,EAAU1pC,UAAUiqC,sBAAwB,SAAUvpC,EAAYC,GAG9D,IAAK,GADDxE,GACKrB,EAAI,EAAGe,EAFGC,OAAOC,KAAK4E,GAAU3F,OAELF,EAAIe,EAAKf,IAIzC,GAHAqB,EAASwE,EAAS7F,GAGd4F,KAFWvF,oBAAkBgB,EAAOI,YAAc,KAClDoE,EAASC,OAAO,SAAUC,GAAK,MAAOA,GAAEpE,WAAaN,EAAOI,WAAWE,WAAa,IAC3D,CAGzB,GAFA+G,KAAKomC,iBAAiB3tC,KAAKE,IACZH,YAAU,kBAAmBG,GAKxC,QAHAqH,MAAKymC,sBAAsB9tC,EAAQwE,GAO/C,MAAO6C,MAAKomC,iBAAiB5uC,QAEjC0uC,EAAU1pC,UAAUoqC,kBAAoB,SAAUK,EAAUC,GAExD,IAAK,GAAI5vC,GAAI,EAAGe,EADUC,OAAOC,KAAK2uC,EAAQ3vC,SAASC,OACZF,EAAIe,EAAKf,IAIhD,IAAK,GAHD6vC,GAAgBxvC,oBAAkBuvC,EAAQ3vC,QAAQD,GAAG8D,YAAc8rC,EAAQ3vC,QAAQD,GAAGiY,MACtF23B,EAAQ3vC,QAAQD,GAAG8D,WAEdqwB,EAAK,EAAG2b,EADN9uC,OAAOC,KAAK0uC,GACSxb,EAAK2b,EAAO5vC,OAAQi0B,IAAM,CACtD,GAAI3zB,GAAMsvC,EAAO3b,EACjB,IAAI3zB,IAAQqvC,EACR,GAAInnC,KAAKomC,iBAAiB5uC,OACtByvC,EAASnvC,GAAOkI,KAAKqnC,iBAAiBH,EAAQ3vC,QAAQD,GAAI0I,KAAKomC,sBAE9D,IAAIpmC,KAAKrJ,OAAOsgB,YAAa,CAC9B,GAAIxY,GAAOuB,KAAKrJ,OAAOC,qBAAsBC,eAAcmJ,KAAKrJ,OAAOC,WAAWA,WAAW8E,KACvFsE,KAAKrJ,OAAOwG,QAClB8pC,GAASnvC,GAAOkI,KAAKqnC,iBAAiBH,EAAQ3vC,QAAQD,GAAImH,IAQ1E,MAAOwoC,IAEXf,EAAU1pC,UAAU6qC,iBAAmB,SAAUC,EAAeh4B,GAC5D,GAAIuC,GAAM,GAAIP,SACVi2B,KACA7tB,KACA1W,EAAQrL,oBAAkB2vC,EAAc/3B,WACiBoK,GAAzD3Z,KAAKrJ,OAAOihB,iBAAiB0vB,EAAc/3B,OAAOvM,IACtDskC,GAAcntB,qBAAsBjB,OAAQlZ,KAAKwnC,kBAAkBF,EAAcpuB,OAAQlW,KACzFskC,EAActuB,aAAahZ,KAAKrJ,OAAOiB,KAAKylB,OAC5C,IAAIjE,GAAWkuB,EAAc9tB,gBAAkB,WAAe,MAAO,UAAUnU,GAAK,MAAOA,MAC3FiiC,GAAc7tB,YAAYC,EAC1B,IAAI+tB,GAAUH,EAAcptB,YAAY,EACxCrI,GAAIE,QAAU/R,KAAKoV,aACnBvD,EAAI61B,eACJ,IAEIC,GAFAC,EAAU,GAAI/wC,eAAYyY,GAAawD,aAAajB,GACpD/O,EAAQwkC,EAActkC,IAE1BF,IAASwkC,EAActkC,KACvB,KAAK,GAAI1L,GAAI,EAAGA,EAAIwL,EAAMtL,OAAQF,IAAK,CACnCqwC,EAAa7kC,EAAMxL,EACnB,IAAIQ,GAAMwvC,EAAc/3B,MAAQ,MAAQzM,EAAMxL,GAAGuwC,cAC7CC,EAAmB,WAAbhlC,EAAMxL,GAAkBkB,YAAU,aAAcovC,GACtDG,qBAAmBjlC,EAAMxL,GAAIswC,EAASN,EAAetnC,KAAKrJ,QAC1DqxC,EAAOV,EAAclsC,WACrB6sC,EAAuB,WAAbnlC,EAAMxL,GAAkBwwC,EAAIhwC,GAAOgwC,CACjDP,GAAOS,GAAQT,EAAOS,OACtBT,EAAOS,GAAMlwC,GAAOmwC,EACpBV,EAAOS,GAAMllC,EAAMxL,IAAOK,oBAAkBmwC,GAA2B,IAApB1uB,EAAS6uB,GAEhEvuB,EAAOR,OAASouB,EAAc9tB,cAC9B,IAAIrL,GAAc5E,gBAAc,MAC5BC,UAAW,aAEf,IAAIxJ,KAAKrJ,OAAOwZ,QAAS,CAErBs3B,EAAQ9yB,GAAG4yB,EAAOD,EAAclsC,YAAa4E,KAAKrJ,OAAQ8wC,EAAQxtB,SAAU,GAAI,KAAM,KAAM9L,GAC5FnO,KAAKrJ,OAA2B,2BAGhCmZ,kBAAe3B,EAAas5B,EAAQ9yB,GAAG4yB,EAAOD,EAAclsC,YAAa4E,KAAKrJ,OAAQ8wC,EAAQxtB,UAElG,IAAI/f,GAAQqtC,EAAOD,EAAclsC,YAAYusC,EAE7C,QAA8C,IAA1Cx5B,EAAYzD,UAAUlM,QAAQtE,GACfiU,EAAYzD,UAAYxQ,EAIhCiU,EAAYzD,WAG3Bw7B,EAAU1pC,UAAUgrC,kBAAoB,SAAUU,EAAellC,GAC7D,GAAIrL,oBAAkBqL,IAAkC,gBAAlBklC,GAClC,MAAOA,EAEX,IAAIpuC,EACJ,QAAQkJ,GACJ,IAAK,SACDlJ,GAAQof,OAAQgvB,EAChB,MACJ,KAAK,WACDpuC,GAAQkJ,KAAM,WAAYmW,SAAU+uB,EACpC,MACJ,KAAK,OACDpuC,GAAQkJ,KAAMA,EAAMmW,SAAU+uB,GAGtC,MAAOpuC,IAQXosC,EAAU1pC,UAAUsK,QAAU,WAC1B9G,KAAK0H,uBAEFw+B,KC9OPiC,GAAsB,WACtB,QAASA,GAAKvwC,GACV6K,OAAKC,OAAO0lC,QACZpoC,KAAKrJ,OAASiB,EACdoI,KAAKwQ,WACLxQ,KAAKqoC,kBACLroC,KAAK0Q,aAAe,EACpB1Q,KAAK/E,iBAAmBtD,oBAAkBqI,KAAKrJ,OAAOiG,iBACtDoD,KAAKoH,mBAgGT,MAxFA+gC,GAAK3rC,UAAUoG,cAAgB,WAC3B,MAAO,QAKXulC,EAAK3rC,UAAU4K,iBAAmB,WAC9BpH,KAAKrJ,OAAO0Q,GAAG,cAAerH,KAAKsoC,YAAatoC,MAChDA,KAAKrJ,OAAO0Q,GAAG,aAAcrH,KAAKuoC,qBAAsBvoC,OAM5DmoC,EAAK3rC,UAAUkL,oBAAsB,WAC7B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,cAAe5H,KAAKsoC,aACpCtoC,KAAKrJ,OAAOiR,IAAI,aAAc5H,KAAKuoC,wBAEvCJ,EAAK3rC,UAAU+rC,qBAAuB,SAAUC,GAC5C,GAAI/pC,GAAO+pC,EAAW7sC,aAClB+b,EAAS8wB,EAAW9wB,MACxB1X,MAAKyoC,YAAYhqC,EAAMiZ,GACvB1X,KAAK0Q,aAAe,EACpB83B,EAAW7sC,aAAeqE,KAAKqoC,eAC/BroC,KAAKqoC,mBAETF,EAAK3rC,UAAUisC,YAAc,SAAUhqC,EAAMiZ,GACzC,IAAK,GAAI/W,GAAI,EAAGA,EAAIlC,EAAKjH,OAAQmJ,IAW7B,GAVIX,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,GAA6C,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IACjFH,oBAAkBqB,EAAcgH,KAAKrJ,OAAQ8H,EAAKkC,GAAG1H,UAAU,MAChE+G,KAAK0Q,cACL1Q,KAAKqoC,eAAeroC,KAAK0Q,aAAejS,EAAKkC,KAIjDX,KAAK0Q,cACL1Q,KAAKqoC,eAAeroC,KAAK0Q,aAAejS,EAAKkC,IAE7ClC,EAAKkC,GAAGrH,gBAAiB,CACzB,GAAIovC,GAAa,GAAI7xC,eAAY4H,EAAKkC,GAAGpH,cAAcuZ,aAAa4E,EACpE1X,MAAKyoC,YAAYC,EAAWhxB,KAYxCywB,EAAK3rC,UAAUihB,WAAa,SAAUriB,EAAY4c,EAAWuF,GACzDvd,KAAKrJ,OAAOiB,KAAK6lB,WAAWriB,EAAY4c,EAAWuF,IAEvD4qB,EAAK3rC,UAAUmhB,iBAAmB,SAAUpO,GACxCvP,KAAKrJ,OAAOiB,KAAK+lB,iBAAiBpO,IAQtC44B,EAAK3rC,UAAU8rC,YAAc,WACzBtoC,KAAKrJ,OAAO0jB,eAAgB9b,aAAcslB,sBAAoB7jB,KAAKrJ,OAAOiB,KAAK2G,gBAAiB,IAOpG4pC,EAAK3rC,UAAUkhB,aAAe,WAC1B1d,KAAKrJ,OAAOiB,KAAK8lB,eACjB1d,KAAKsoC,eAQTH,EAAK3rC,UAAUsK,QAAU,WACrB9G,KAAK0H,uBAEFygC,KC3GPQ,GAA4B,WAM5B,QAASA,GAAWhyC,GAChB8L,OAAKC,OAAOkmC,cACZ5oC,KAAKrJ,OAASA,EAiBlB,MAfAgyC,GAAWnsC,UAAUqsC,cAAgB,WACjC,MAAO7oC,MAAKrJ,OAAOiB,KAAKkxC,iBAAiBD,iBAE7CF,EAAWnsC,UAAUsK,QAAU,aAS/B6hC,EAAWnsC,UAAUoG,cAAgB,WACjC,MAAO,cAEJ+lC,KCxBPI,GAA6B,WAC7B,QAASA,GAAYpyC,GACjB8L,OAAKC,OAAOsmC,eACZhpC,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAsET,MAhEA2hC,GAAYvsC,UAAU4K,iBAAmB,WACrCpH,KAAKrJ,OAAO0Q,GAAG,kBAAmBrH,KAAKoqB,gBAAiBpqB,MACxDA,KAAKrJ,OAAO0Q,GAAG,mBAAoBrH,KAAKmqB,iBAAkBnqB,OAM9D+oC,EAAYvsC,UAAUkL,oBAAsB,WACpC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,kBAAmB5H,KAAKoqB,iBACxCpqB,KAAKrJ,OAAOiR,IAAI,mBAAoB5H,KAAKmqB,oBAE7C4e,EAAYvsC,UAAU4tB,gBAAkB,SAAUrnB,GAC9C,GAAIkmC,GAASziC,SAAO,IAAMxG,KAAKrJ,OAAOsZ,QAAQC,GAAK,4BAA6BnN,EAAKkN,SACjFi5B,EAAa1iC,SAAO,IAAMxG,KAAKrJ,OAAOsZ,QAAQC,GAAK,0BAA2BnN,EAAKkN,QACnFg5B,MACkD,IAA9CjpC,KAAKrJ,OAAOiB,KAAKkE,aAAa4lB,YAC9BunB,EAAOxuC,MAAMG,QAAU,OAGvBquC,EAAOxuC,MAAMG,QAAU,SAGQ,SAAlCoF,KAAKrJ,OAAOmF,aAAaC,MAAqD,UAAlCiE,KAAKrJ,OAAOmF,aAAaC,MACjEpE,oBAAkBuxC,IAAkBA,EAAW5jC,UAAUC,SAAS,iBACvE2jC,EAAWzuC,MAAMG,QAAU,SAGnCmuC,EAAYvsC,UAAU2tB,iBAAmB,SAAUpnB,GAC1B,UAAjBA,EAAKE,KAAKiN,IAAmC,UAAjBnN,EAAKE,KAAKiN,IAAmC,UAAjBnN,EAAKE,KAAKiN,KAClElQ,KAAKrJ,OAAOwY,OAAO,0BAA2BpM,GAC9C/C,KAAKrJ,OAAO0jB,eAAgBve,cAAgBQ,eAAgByG,EAAKE,KAAKiN,MAAQ,GAC9ElQ,KAAKrJ,OAAOy2B,cASpB2b,EAAYvsC,UAAUoG,cAAgB,WAClC,MAAO,eAQXmmC,EAAYvsC,UAAUsK,QAAU,WAC5B9G,KAAK0H,uBAOTqhC,EAAYvsC,UAAUioB,eAAiB,WACnC,MAAOzkB,MAAKrJ,OAAOiB,KAAKgxB,kBAAkBnE,kBAEvCskB,KCtEPI,GAA2B,WAC3B,QAASA,GAAUxyC,GACfqJ,KAAKopC,gBAAkB,EACvBppC,KAAKsQ,aAAe,eACpBtQ,KAAK+a,eAAiB,iBACtB/a,KAAKqpC,qBACLrpC,KAAKspC,uBACLtpC,KAAKupC,qBACLvpC,KAAKrJ,OAASA,EACdqJ,KAAK/E,iBAAmBtD,oBAAkBhB,EAAOiG,iBACjDoD,KAAKwpC,gBACLxpC,KAAKxC,sBACLwC,KAAKypC,OAAQ,EACbzpC,KAAKoH,mBAuiBT,MAriBA+hC,GAAU3sC,UAAU4K,iBAAmB,WACnCpH,KAAKrJ,OAAO0Q,G5B4CG,Y4B5CkBrH,KAAK+oB,UAAW/oB,MACjDA,KAAKrJ,OAAO0Q,G5BmDE,W4BnDkBrH,KAAKkpB,SAAUlpB,MAC/CA,KAAKrJ,OAAO0Q,G5BsDQ,iB4BtDkBrH,KAAKopB,eAAgBppB,MAC3DA,KAAKrJ,OAAO0Q,G5ByDG,Y4BzDkBrH,KAAK0pC,UAAW1pC,MACjDA,KAAKrJ,OAAO0Q,G5BkDW,oB4BlDkBrH,KAAKspB,kBAAmBtpB,MACjEA,KAAKrJ,OAAO0Q,G5BqDS,kB4BrDkBrH,KAAKmpB,gBAAiBnpB,MAC7DA,KAAKrJ,OAAO0Q,GAAG,kBAAmBrH,KAAK2pC,gBAAiB3pC,MACxDA,KAAKrJ,OAAO0Q,GAAG,oBAAqBrH,KAAK4pC,kBAAmB5pC,MAC5DA,KAAKrJ,OAAOiB,KAAKyP,GAAG,yBAA0BrH,KAAK6pC,qBAAsB7pC,MACzEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,kBAAmBrH,KAAK8pC,cAAe9pC,OAM/DmpC,EAAU3sC,UAAUkL,oBAAsB,WAClC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,I5ByBG,Y4BzBmB5H,KAAK+oB,WACvC/oB,KAAKrJ,OAAOiR,I5BgCE,W4BhCmB5H,KAAKkpB,UACtClpB,KAAKrJ,OAAOiR,I5BuCG,Y4BvCmB5H,KAAK0pC,WACvC1pC,KAAKrJ,OAAOiR,I5BkCQ,iB4BlCmB5H,KAAKopB,gBAC5CppB,KAAKrJ,OAAOiR,I5B+BW,oB4B/BmB5H,KAAKspB,mBAC/CtpB,KAAKrJ,OAAOiR,I5BkCS,kB4BlCmB5H,KAAKmpB,iBAC7CnpB,KAAKrJ,OAAOiR,IAAI,kBAAmB5H,KAAK2pC,iBACxC3pC,KAAKrJ,OAAOiR,IAAI,oBAAqB5H,KAAK4pC,mBAC1C5pC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,yBAA0B5H,KAAK6pC,sBACpD7pC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,kBAAmB5H,KAAK8pC,iBAQjDX,EAAU3sC,UAAUsK,QAAU,WAC1B9G,KAAK0H,uBAMTyhC,EAAU3sC,UAAUutC,gBAAkB,WAClC,MAAO/pC,MAAKwpC,cAMhBL,EAAU3sC,UAAUwtC,eAAiB,WACjC,MAAOhqC,MAAK9E,aAMhBiuC,EAAU3sC,UAAUytC,iBAAmB,WACnC,MAAOjqC,MAAK7E,eAMhBguC,EAAU3sC,UAAU0tC,mBAAqB,WACrC,MAAOlqC,MAAKopC,iBAEhBD,EAAU3sC,UAAUmtC,gBAAkB,WAClC,GAGIxvC,GAHAsE,EAAQuB,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eAC/CmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,WAC/D43B,EAAaxuB,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,EAE5D,KAAK7D,oBAAkBqI,KAAKqpC,oBAAsBrpC,KAAKqpC,kBAAkB7xC,OACrE,IAAK,GAAIF,GAAI,EAAGA,EAAI0I,KAAKqpC,kBAAkB7xC,OAAQF,IAC/C6C,EAAQsE,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAEmxB,KAAgBhwB,QAAQwB,KAAKqpC,kBAAkB/xC,GAAGk3B,IAC3F/vB,EAAK3B,OAAO3C,EAAO,EAG3B6F,MAAKqpC,kBAAoBrpC,KAAKwpC,aAAexpC,KAAKupC,kBAAoBvpC,KAAKspC,oBAAsBtpC,KAAKxC,uBAE1G2rC,EAAU3sC,UAAUusB,UAAY,SAAUhmB,GACtC,GAAIonC,GAAkBpnC,EAAKtD,KAAK2f,UAC5BgrB,EAAapqC,KAAKrJ,OAAO8X,eAAiBzO,KAAKrJ,OAAOsI,kBAS1D,IARImrC,GAAcrnC,EAAKsnC,aAAalwC,MAAQiwC,IACxCD,GAAoCC,GAEpCD,IAAoBnqC,KAAKrJ,OAAOyI,iBAChCY,KAAKrJ,OAAO4I,aAAaC,YAAaf,KAAMsE,EAAK4F,QAASlJ,KAAMsD,EAAKtD,KACjEE,OAAQK,KAAKrJ,OAAOiB,KAAK0yC,iBAAiBvnC,EAAKtD,KAAK2f,aAGxDpf,KAAKypC,OAA2C,UAAlCzpC,KAAKrJ,OAAOmF,aAAaC,MAAgE,WAA5CiE,KAAKrJ,OAAOmF,aAAaQ,eAA6B,CACjH,GAAImC,GAAQuB,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eAC/CmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,WAC/D2zC,MAAQ,GAERC,EAAexqC,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,GAC1DivC,MAAmB,GACnBC,MAAa,GAGb5xC,EAAekH,KAAK7E,eAAiB,EAAI6E,KAAKwpC,aAAaxpC,KAAK9E,aAAuB,WAAI,KAC3F2B,MAAY,GACZyB,MAAiB,GACjB1B,MAAkB,GAClB+tC,EAA6D,QAA5C3qC,KAAKrJ,OAAOmF,aAAaQ,iBAAoD,IAAxB0D,KAAK7E,cAAuB,EACtD,UAA5C6E,KAAKrJ,OAAOmF,aAAaQ,eAA6B0D,KAAK9E,YACrD8E,KAAK9E,YAAc,CAE7B,IADAyvC,EAAiB3qC,KAAK4qC,wBAAwBD,GAC1C3qC,KAAK6qC,iBAAkB,CAcvB,GAbI7qC,KAAKwpC,aAAahyC,SAClBqF,EAAYmD,KAAKwpC,aAAaxpC,KAAK9E,aAAa8E,KAAKrJ,OAAOkG,WAC5DD,EAAkBoD,KAAKwpC,aAAaxpC,KAAK9E,aAAa8E,KAAKrJ,OAAOiG,iBAC9DoD,KAAKwpC,aAAaxpC,KAAK9E,aAAuB,aAC9CoD,EAAiB0B,KAAKwpC,aAAaxpC,KAAK9E,aAAuB,WAAU,WAGjF8E,KAAKqpC,kBAAoBzvC,EAAYoG,KAAKqpC,mBAC1CrpC,KAAKupC,kBAAoB3vC,EAAYoG,KAAKupC,mBAC1CvpC,KAAKupC,kBAAkB9wC,KAAKuH,KAAKwpC,aAAaxpC,KAAK9E,cACnDqvC,EAAQvqC,KAAKrJ,OAAOiB,KAAKmd,gBAAgB41B,GAAgBG,QACzDP,EAAMtxC,SAAWsa,SAAOvT,KAAKrJ,OAAOsZ,QAAQC,GAAK,UACjDoC,WAAS,sBAAwBi4B,EAAMtxC,SAAUsxC,EAAOvqC,KAAKrJ,SACxD2B,OAAOkE,UAAUC,eAAeC,KAAK6tC,EAAO,SAAU,CAEvD,GADAvqC,KAAK+qC,YAAqC,IAAxB/qC,KAAK7E,cAAuB,EAAI6E,KAAK+qC,WACP,UAA5C/qC,KAAKrJ,OAAOmF,aAAaQ,gBAEzB,GADAiuC,EAAMS,cAAgBlyC,EAClBkH,KAAK7E,eAAiB,EAAG,CACzBovC,EAAMxxC,WAAasD,YAAW2D,KAAKwpC,aAAaxpC,KAAK9E,cACrDqvC,EAAMjsC,eAAiBisC,EAAMxxC,WAAWE,eACjCsxC,GAAMxxC,WAAWQ,mBACjBgxC,GAAMxxC,WAAWiH,KAAKrJ,OAAOoG,cACpCwtC,EAAMnwC,MAAQmwC,EAAMxxC,WAAWqB,MAAQ,EACvCmwC,EAAMpwC,MAAQ6F,KAAK+qC,UACnB,IAAIE,GAAmB5xC,EAAoB2G,KAAKwpC,aAAaxpC,KAAK9E,cAAc1D,OAC5EmB,EAASU,EAAoB2G,KAAKwpC,aAAaxpC,KAAK9E,cAAc+vC,EAAmB,EACzFtyC,GAAShB,oBAAkBgB,GAAUqH,KAAKwpC,aAAaxpC,KAAK9E,aAAevC,EAC3E8xC,EAAmBhsC,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAEmtC,KAAkBhsC,QAAQ7F,EAAO6xC,IACjFxqC,KAAK/E,kBACLsvC,EAAMvqC,KAAKrJ,OAAOiG,iBAAmBC,GAEzCG,EAAgBwtC,EAAcD,EAAMxxC,WAAY,MAAOiH,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBsvC,QAG7F,KAAiD,UAA5CvqC,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,kBAClF3E,oBAAkBqI,KAAKwpC,aAAaxpC,KAAK9E,cAAe,CAS5D,GARAqvC,EAAMnwC,MAAQ4F,KAAKwpC,aAAaxpC,KAAK9E,aAAkB,MACnDqvC,EAAMnwC,OAAS4F,KAAK7E,eAAiB,IACrCovC,EAAMxxC,WAAaD,EACnByxC,EAAMjsC,eAAiBA,QAChBisC,GAAMxxC,WAAWQ,mBACjBgxC,GAAMxxC,WAAWiH,KAAKrJ,OAAOoG,eAExCwtC,EAAMpwC,MAAoD,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,eAA6B0D,KAAK+qC,WAAa/qC,KAAK+qC,WAAa,EACxD,UAA5C/qC,KAAKrJ,OAAOmF,aAAaQ,gBAA8B0D,KAAK7E,eAAiB,EAAG,CAChF,GAAI8vC,GAAmB5xC,EAAoB2G,KAAKwpC,aAAaxpC,KAAK9E,cAAc1D,OAC5EmB,EAASU,EAAoB2G,KAAKwpC,aAAaxpC,KAAK9E,cAAc+vC,EAAmB,EACzFtyC,GAAShB,oBAAkBgB,GAAUqH,KAAKwpC,aAAaxpC,KAAK9E,aAAevC,EAC3E8xC,EAAmBhsC,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAEmtC,KAAkBhsC,QAAQ7F,EAAO6xC,IAEzF,GAAgD,UAA5CxqC,KAAKrJ,OAAOmF,aAAaQ,gBAA8B0D,KAAK7E,eAAiB,EAAG,CAC5ExC,EAASqH,KAAKwpC,aAAaxpC,KAAK9E,YACpCuvC,GAAmBhsC,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAEmtC,KAAkBhsC,QAAQ7F,EAAO6xC,IAErFxqC,KAAK/E,kBACLsvC,EAAMvqC,KAAKrJ,OAAOiG,iBAAmBA,GAG7C2tC,EAAMpwC,OAAyB,IAAjBowC,EAAMpwC,MAAe,EAAIowC,EAAMpwC,MAC7CowC,EAAMjxC,iBAAkB,EACxBixC,EAAMhxC,gBACNyG,KAAKwpC,aAAa1sC,OAAOytC,EAAMpwC,MAAO,EAAGowC,GACzCvqC,KAAKxC,mBAAmBV,OAAOytC,EAAMpwC,MAAO,EAAGowC,GAE3CG,EADAD,GAIaF,EAAMpwC,MAEyB,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,iBACzBouC,EAA6B,IAAhBH,EAAMpwC,MAAcuwC,EAAaA,EAAa,GAE/DjsC,EAAK3B,OAAO4tC,EAAY,EAAGH,GAC3BvqC,KAAKqpC,kBAAkB5wC,KAAK8xC,GAEhCvqC,KAAKrJ,OAAOiB,KAAKmd,gBAAgB41B,GAAgBlsC,KAAO8rC,EACxDvqC,KAAK6qC,kBAAmB,GAExB7qC,KAAKrJ,OAAO8X,eAAiBzO,KAAKrJ,OAAOsI,oBACoB,QAA1De,KAAKrJ,OAAOiB,KAAKmd,gBAAgB41B,GAAgBzqC,OACpDM,QAAMR,KAAKxC,mBAAmBmtC,GAAiB3qC,KAAKrJ,OAAOiB,KAAKmd,gBAAgB41B,GAAgBG,WAI5G3B,EAAU3sC,UAAU4sB,eAAiB,SAAU/rB,GAE3C,GAAsC,SAAlC2C,KAAKrJ,OAAOmF,aAAaC,MAAmBiE,KAAKrJ,OAAOqF,WAAuB,aAG/E,MAFAqB,GAAE6I,QAAS,OACXlG,KAAKrJ,OAAOqF,WAAuB,cAAI,EAG3CgE,MAAK7E,cAAgB6E,KAAKrJ,OAAOiB,KAAK4sB,iBACtCxkB,KAAK9E,YAAc8E,KAAKrJ,OAAOiB,KAAK4sB,kBAAoB,EAAIxkB,KAAKrJ,OAAOiB,KAAK4sB,iBAAmB,EAChGxkB,KAAK3E,aAAe2E,KAAKrJ,OAAOgP,qBAAqB,IAEzDwjC,EAAU3sC,UAAU0sB,SAAW,SAAU7rB,GACrC,GAAgD,WAA5C2C,KAAKrJ,OAAOmF,aAAaQ,eAA6B,CACtD0D,KAAKypC,OAAQ,EACbzpC,KAAK6qC,kBAAmB,CACxB,IAAI5M,GAAc,CAMlB,IALKj+B,KAAKwpC,aAAahyC,SACnBwI,KAAKqpC,qBACLrpC,KAAKwpC,aAAe5vC,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,yBACjDuC,KAAKxC,mBAAqB5D,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,0BAEX,QAA5CuC,KAAKrJ,OAAOmF,aAAaQ,eAA0B,CACnD,GAAInE,GAAU6H,KAAKrJ,OAAOiB,KAAK6F,uBACO,WAAlCuC,KAAKrJ,OAAOmF,aAAaC,OAAqBiE,KAAKrJ,OAAOsF,kBAAkB+D,KAAKsQ,cAAc9Y,OAAS,GACrGwI,KAAKrJ,OAAOsF,kBAAkB+D,KAAK+a,gBAAgBvjB,UACtDW,EAAU6H,KAAKwpC,cAEnBxpC,KAAKkrC,iBAAiB/yC,GACtB6H,KAAKrJ,OAAOwY,O5BxLN,e4ByLNnP,KAAKopC,gBAAkB,EAE3BppC,KAAKmrC,gBAEL,IAAIC,GAAc/sC,WAAS,cAAe2B,KAAKrJ,OAAOiB,MAClDyzC,EAAQrrC,KAAKrJ,OAAOmd,iBACpB9T,MAAKrJ,OAAOsF,kBAAkB+D,KAAK+a,gBAAgBvjB,QAAsD,UAA5CwI,KAAKrJ,OAAOmF,aAAaQ,gBACtF2hC,EAAc5gC,EAAEsB,IAAIiI,SACpBwkC,EAAYtb,aAAawb,OAAOA,OAAStrC,KAAKsrC,QAG9CrN,EAAcoN,EAAMp3B,uBAAuB,cAAc,GAAGrN,SAKhEwkC,EAAYtb,aAAawb,OAAOpwB,SAAW+iB,EAAamN,EAAYtb,aAAawb,OAAOpwB,QAAQ,MAGxGiuB,EAAU3sC,UAAU8sB,kBAAoB,WAC/BtpB,KAAKwpC,aAAahyC,SACnBwI,KAAKwpC,aAAe5vC,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,yBACjDuC,KAAKxC,mBAAqB5D,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,yBAE3D,IAAI2tC,GAAc/sC,WAAS,cAAe2B,KAAKrJ,OAAOiB,KACtDoI,MAAKsrC,OAASF,EAAYtb,aAAawb,OAAOA,MAC9C,IAAI3sC,MACAxG,KACAozC,EAAavrC,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,GACxDiD,EAAOuB,KAAKrJ,OAAOiB,KAAK+N,qBAAqB3F,KAAKrJ,OAAOiB,KAAK+N,qBAAqBnO,OAAS,GAC5Fg0C,EAASnyC,EAAoBoF,GAC7BwK,EAAMjJ,KAAKrJ,OAAOs+B,kBAAkB,GAAG7rB,aAAa,YACpDqiC,EAAiBp8B,SAASrP,KAAKrJ,OAAOiB,KAAK8zC,mBAAmBziC,GAAKG,aAAa,iBAAkB,GACtG,IAAIoiC,EAAOh0C,OAGP,IAAK,GAFDm0C,GAAaF,EAAiBD,EAAOh0C,OAEhCF,EADam0C,EAAiB,EACTn0C,GAAKq0C,EAAYr0C,IAC3CqH,EAAIlG,KAAKuH,KAAKrJ,OAAOiB,KAAKq4B,cAAc34B,KACpC0I,KAAKrJ,OAAOqI,YAAcgB,KAAKrJ,OAAO8X,eAAiBzO,KAAKrJ,OAAOsI,qBACnEN,EAAIlG,KAAKuH,KAAKrJ,OAAOiB,KAAK07B,iBAAiBh8B,GAIvD,KAAKK,oBAAkB8G,EAAK1F,YAAa,CACrC,GAAIA,GAAaC,EAAcgH,KAAKrJ,OAAQ8H,EAAK1F,WAAWE,SAC5D,KAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,GAAIimC,GAAaxmC,EAAWQ,aAAaiF,QAAQC,EACjD1F,GAAWQ,aAAauD,OAAOyiC,EAAY,GAE/Cv/B,KAAKspC,oBAAsB1vC,EAAYoG,KAAKspC,qBAC5CtpC,KAAKspC,oBAAoB7wC,KAAKgG,GAElC+sC,EAAO/yC,KAAKgG,GACZtG,EAAUqzC,CACV,KAASl0C,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAAK,CACrC,GAAIozC,GAAa1qC,KAAKwpC,aAAarrC,IAAI,SAAUd,GAAK,MAAOA,GAAEkuC,KAAgB/sC,QAAQrG,EAAQb,GAAGi0C,KAC9E,IAAhBb,GACA1qC,KAAKwpC,aAAa1sC,OAAO4tC,EAAY,GAG7C,IAASpzC,EAAI,EAAGA,EAAIqH,EAAInH,OAAQF,IACvBK,oBAAkBgH,EAAIrH,KACvB0I,KAAKrJ,OAAOiB,KAAK44B,gBAAgBob,gBAAgBnzC,KAAKkG,EAAIrH,KAItE6xC,EAAU3sC,UAAU2uC,eAAiB,WAEjC,IAAK,GADDnmC,GAAOhF,KAAKrJ,OAAOiB,KAAKq4B,cACnB34B,EAAI,EAAGA,EAAI0N,EAAKxN,OAAQF,IAC7B0N,EAAK1N,GAAG2S,aAAa,gBAAiB3S,EAAEwN,WAE5C,IAAI9E,KAAKrJ,OAAOqI,YAAcgB,KAAKrJ,OAAOsI,oBAAsBe,KAAKrJ,OAAO8X,cAExE,IAAK,GADDo9B,GAAQ7rC,KAAKrJ,OAAOiB,KAAKwU,qBACpB9U,EAAI,EAAGA,EAAIu0C,EAAMr0C,OAAQF,IAC9Bu0C,EAAMv0C,GAAG2S,aAAa,gBAAiB3S,EAAEwN,aAIrDqkC,EAAU3sC,UAAU0uC,iBAAmB,SAAU/yC,GAI7C,IAAK,GAHDq2B,GAAaxuB,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,GAExDzC,EAAyD,UAA5CiH,KAAKrJ,OAAOmF,aAAaQ,eAA6B,gBAAkB,aAChFhF,EAAI,EAAGA,EAAI0I,KAAKrJ,OAAOsF,kBAA8B,aAAEzE,OAAQF,IAC/DK,oBAAkBqI,KAAKrJ,OAAOsF,kBAA8B,aAAE3E,GAAGyB,KAC9DiH,KAAKrJ,OAAOsF,kBAA8B,aAAE3E,GAAGyB,GAAYy1B,KAAgBr2B,EAAQ6H,KAAK9E,aAAaszB,KACrGxuB,KAAKopC,gBAAkBppC,KAAKopC,gBAAkB,IAK9DD,EAAU3sC,UAAU2sB,gBAAkB,SAAU9rB,GAC5C,GAEIyd,GAAiBzd,EAAE/B,aAA0B,cACjD,IAAI+B,EAAE/B,aAA0B,eAAE9D,OAE9B,IAASF,EAAI,EAAGA,EAAIwjB,EAAetjB,OAAQF,IACvCwD,GAAaZ,MAAO4gB,EAAexjB,GAAIiE,OAAQ,QAAUyE,KAAKrJ,OAAQqJ,KAAK/E,gBAAiB+E,KAAK9E,YAAa8E,KAAK7E,kBAFtG,GAKrB,IAAIkC,EAAE/B,aAA0B,eAAE9D,OAG9B,IAAK,GADDmB,GADiB0E,EAAE/B,aAA0B,eAExChE,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAAK,CACpC0I,KAAK8rC,eAAenzC,EAAOrB,GAAG2B,SAE9B,KAAK,GADDuyC,GAASnyC,EAAoBV,EAAOrB,IAC/BgK,EAAI,EAAGA,EAAIkqC,EAAOh0C,OAAQ8J,IAC/BtB,KAAK8rC,eAAeN,EAAOlqC,GAAGrI,SAElCoE,GAAE/B,aAA0B,eAAI+B,EAAE/B,aAA0B,eAAE9B,OAAOgyC,GAG7ExrC,KAAKypC,OAAQ,GAEjBN,EAAU3sC,UAAUsvC,eAAiB,SAAU5xC,SAEpC8F,MAAKrJ,OAAe,yBAAEuD,SAEtB8F,MAAKrJ,OAAS,mBAAEuD,IAE3BivC,EAAU3sC,UAAUotC,kBAAoB,WACpC,GACIzvC,GAGAqD,EAAqBwC,KAAKrJ,OAAOiB,KAAK6F,wBAEtCgB,EAAQuB,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eAC/CmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,WAC/D43B,EAAaxuB,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,EAC5D,KAAK7D,oBAAkBqI,KAAKrJ,OAAoB,eAAI,CAChD,GAAIgI,GAAMqB,KAAKrJ,OAAoB,cAAEsR,QAAQ,KAC7CjI,MAAKrJ,OAAOs6B,YAAYtyB,GACxBqB,KAAKrJ,OAAoB,cAAI,KAEjC,IAAKgB,oBAAkBqI,KAAKqpC,mBACxB,IAAS/xC,EAAI,EAAGA,EAAI0I,KAAKqpC,kBAAkB7xC,OAAQF,IAG/C,GAFA6C,EAAQsE,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAEmxB,KAAgBhwB,QAAQwB,KAAKqpC,kBAAkB/xC,GAAGk3B,IAC3F/vB,EAAK3B,OAAO3C,EAAO,GAC6B,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,iBACzBnC,EAAQqD,EAAmBW,IAAI,SAAUd,GAAK,MAAOA,GAAEmxB,KAClDhwB,QAAQwB,KAAKqpC,kBAAkB/xC,GAAa,WAAI0I,KAAKqpC,kBAAkB/xC,GAAa,WAAEk3B,GACrFxuB,KAAKqpC,kBAAkB/xC,GAAGk3B,KAC3B72B,oBAAkB6F,EAAmBrD,KAEtC,IAAK,GADD4V,GAAWvS,EAAmBrD,GAAmB,aAC5CH,EAAI,EAAG+V,GAAY/V,EAAI+V,EAASvY,OAAQwC,IACzC+V,EAAS/V,GAAGw0B,KAAgBxuB,KAAKqpC,kBAAkB/xC,GAAGk3B,IACtDhxB,EAAmBrD,GAAmB,aAAE2C,OAAO9C,EAAG,EAO1E,KAAKrC,oBAAkBqI,KAAKspC,qBACxB,IAAK,GAAIhyC,GAAI,EAAGA,EAAI0I,KAAKspC,oBAAoB9xC,OAAQF,IACjD,IAAKK,oBAAkBqI,KAAKspC,oBAAoBhyC,GAAa,YAAI,CAC7D6C,EAAQqD,EAAmBW,IAAI,SAAUd,GAAK,MAAOA,GAAEmxB,KAClDhwB,QAAQwB,KAAKspC,oBAAoBhyC,GAAa,WAAEk3B,GACrD,IAAIud,GAA4D,IAA5C/rC,KAAKspC,oBAAoBhyC,GAAa,MAAU0I,KAAKspC,oBAAoBhyC,GAAa,MACtG0I,KAAKspC,oBAAoBhyC,GAAa,MAAI,CACzCK,qBAAkB6F,EAAmBrD,KACtCqD,EAAmBrD,GAAmB,aAAE2C,OAAOivC,EAAe,EAAG/rC,KAAKspC,oBAAoBhyC,IAK1G0I,KAAKqpC,kBAAoBrpC,KAAKwpC,aAAexpC,KAAKupC,kBAAoBvpC,KAAKxC,sBAC3EwC,KAAKwpC,aAAe5vC,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,yBACjDuC,KAAK+qC,WAAa,EAClB/qC,KAAKxC,mBAAqB5D,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,yBACvDuC,KAAKspC,uBACLtpC,KAAKrJ,OAAOiB,KAAK2H,aAAa0qB,WAElCkf,EAAU3sC,UAAUktC,UAAY,SAAU3mC,GACtC,GAAsC,UAAlC/C,KAAKrJ,OAAOmF,aAAaC,KAAkB,CAC3C,GAAIzE,OAAI,GACJgE,EAAehD,OAAOmE,eAAeC,KAAKqG,EAAM,kBAAoBA,EAAKipC,eAAiBhsC,KAAKrJ,OAAOsF,kBAKtGwC,EAAQuB,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eAC/CmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,WAC/D4G,EAAqBwC,KAAKrJ,OAAOiB,KAAK6F,wBACtCwuC,EAAejsC,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,GAE1D0wC,EAAa5wC,EAAyB,aAEtCH,MAAgB,GAChBD,MAAc,GAEdG,MAAe,EAKnB,IAHI6wC,EAAW10C,OAAS,GAAiD,WAA5CwI,KAAKrJ,OAAOmF,aAAaQ,gBAClD4vC,EAAW5N,UAEiC,WAA5Ct+B,KAAKrJ,OAAOmF,aAAaQ,iBAAgChE,OAAOmE,eAAeC,KAAKqG,EAAM,kBAK1F,GAJI3L,EAAgB4I,KAAKrJ,UACrB8H,EAAOJ,WAAS,SAAUI,IAE9BA,EAAK3B,OAAO2B,EAAKjH,OAAS00C,EAAW10C,OAAQ00C,EAAW10C,QACnDwI,KAAKrJ,OAAOkX,aAAepP,EAAKjH,SAAWgG,EAAmBhG,OAK9D,CACD,GAAI20C,GAAevyC,EAAY6E,EAC/B,IAAI0tC,EAAa30C,OAAQ,CACrB,GAAI26B,GAAaga,EAAahuC,IAAI,SAAUd,GAAK,MAAOA,GAAE4uC,KACrDztC,QAAQhB,EAAmB,GAAGyuC,IAC/BG,EAAWja,EAAanyB,KAAKrJ,OAAOiB,KAAKkW,aAAa03B,QAC1DhoC,GAAqB2uC,EAAarvC,OAAOq1B,EAAYia,QAVrD5uC,GAAmBhG,OAAS00C,EAAW10C,QACvCgG,EAAmBV,OAAOU,EAAmBhG,OAAS00C,EAAW10C,OAAQ00C,EAAW10C,OAgBhG,KAHsC,IAAlCwI,KAAKupC,kBAAkB/xC,QACvBwI,KAAKupC,kBAAkB9wC,KAAKuH,KAAKrJ,OAAOwG,SAAS4F,EAAK5I,QAErD7C,EAAI,EAAGA,EAAI40C,EAAW10C,OAAQF,IAAK,CACpC,GAAI+C,GAAWgC,YAAW6vC,EAAW50C,GAgCrC,UA/BO+C,GAAStB,iBACTsB,GAASpB,eACToB,GAASF,YACTE,GAASD,YACTC,GAASf,sBACTe,GAASd,mBACTc,GAASiE,eACX3G,oBAAkB0C,EAAS2wC,sBACrB3wC,GAAS2wC,cAEpBkB,EAAW50C,GAAG+C,SAAWA,EACzBgB,EAAe2E,KAAKupC,kBAAkBjyC,GAClCK,oBAAkB0D,KAClBA,EAAe2E,KAAKupC,kBAAkBjyC,EAAI,IAE1C0I,KAAK/E,kBACAtD,oBAAkBu0C,EAAW50C,GAAGyB,aACjCiE,EAAgBivC,EAAcC,EAAW50C,GAAGyB,WAAY,MAAOiH,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBixC,EAAW50C,KAGhHK,oBAAkB0D,KACnBH,EAAcG,EAAalB,OAEiB,QAA5C6F,KAAKrJ,OAAOmF,aAAaQ,gBAAwE,WAA5C0D,KAAKrJ,OAAOmF,aAAaQ,gBAC1E3E,oBAAkBu0C,EAAW50C,GAAGyB,cAAuC,IAAxBiH,KAAK7E,gBACpDA,GAAiB,EACjBE,EAAe,MAGvBP,GAAaZ,MAAOgyC,EAAW50C,GAAIiE,OAAQ,OAASyE,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBC,EAAaC,MA5DvF,GA4DkHE,GAC/HF,EAAgB,KACgC,UAA5C6E,KAAKrJ,OAAOmF,aAAaQ,iBAA+B3E,oBAAkBu0C,EAAW50C,GAAa,YAIlG,IAAK,GAHD+0C,GAAa7uC,EAAmBW,IAAI,SAAUd,GAAK,MAAOA,GAAE4uC,KAC3DztC,QAAQ0tC,EAAW50C,GAAa,WAAE20C,IACnCl8B,EAAWvS,EAAmB6uC,GAAwB,aACjDryC,EAAI,EAAGA,EAAI+V,EAASvY,OAAQwC,IAC7B+V,EAAS/V,GAAGiyC,KAAkBC,EAAW50C,GAAG20C,IAC5CzuC,EAAmB6uC,GAAwB,aAAEvvC,OAAO9C,EAAG,GAKvE,GAAIsB,EAA2B,eAAE9D,OAC7B,IAAKF,EAAI,EAAGA,EAAIgE,EAA2B,eAAE9D,OAAQF,IACjDwD,GAAaZ,MAAOoB,EAA2B,eAAEhE,GAAIiE,OAAQ,UAAYyE,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBC,EAAaC,MA3EhH,GA2E2IE,EAG5J2E,MAAKrJ,OAAOuG,aACZ,KAAK,GAAI82B,GAAM,EAAGA,EAAMv1B,EAAKjH,OAAQw8B,IACjCv1B,EAAKu1B,GAAU,MAAIA,EACnB1hB,WAAS,sBAAwB7T,EAAKu1B,GAAa,SAAI,SAAUA,EAAKh0B,KAAKrJ,QACtE8H,EAAKu1B,GAAU,OAChBh0B,KAAKrJ,OAAOuG,WAAWzE,KAAKgG,EAAKu1B,IAI7Ch0B,KAAKupC,kBAAoBvpC,KAAKqpC,kBAAoBrpC,KAAKwpC,aAAexpC,KAAKspC,oBAAsBtpC,KAAKxC,uBAE1G2rC,EAAU3sC,UAAUouC,wBAA0B,SAAUzwC,GACpD,GAAI6K,GAAOhF,KAAKrJ,OAAOiB,KAAKq4B,aAyB5B,QAxBiD,UAA5CjwB,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,iBAC9E0D,KAAK7E,eAAiB,KACpBxD,oBAAkBqI,KAAKwpC,aAAaxpC,KAAK9E,eAAiB8E,KAAKwpC,aAAaxpC,KAAK9E,aAAa9B,WAC3F4G,KAAKrJ,OAAOsF,kBAAkB+D,KAAKsQ,cAAc9Y,OAAS,GACvDwI,KAAKrJ,OAAOsF,kBAAkB+D,KAAK+a,gBAAgBvjB,QACtD2C,GAASd,EAAoB2G,KAAKwpC,aAAaxpC,KAAK9E,cAAc1D,OAClB,UAA5CwI,KAAKrJ,OAAOmF,aAAaQ,iBAEzBnC,GADsB6F,KAAKkqC,uBAK/B/vC,GAASd,EAAoB2G,KAAKwpC,aAAaxpC,KAAK9E,cAAc1D,QAGtE2C,GAAS6K,EAAKxN,SACd2C,EAAQ6K,EAAKxN,OAAS,GAE1BwI,KAAKkrC,iBAAiBlrC,KAAKrJ,OAAOiB,KAAK6F,yBACnCuC,KAAKopC,kBACLjvC,GAAS6F,KAAKopC,iBAElBppC,KAAKopC,gBAAkB,GAEpBjvC,GAEXgvC,EAAU3sC,UAAUqtC,qBAAuB,SAAUxsC,GACjDA,EAAE0F,KAAKmD,QAAS,CAChB,IAAI4kC,GAAU9qC,KAAKrJ,OAAOiB,KAAKqE,kBAC3BqU,IAEAhY,QAAOC,KAAKuyC,GAAStzC,SACrB8Y,EAAew6B,EAAQx6B,aAE3B,KAAK,GAAIhZ,GAAI,EAAGA,EAAIgZ,EAAa9Y,OAAQF,IACrC+F,EAAE2H,KAAKlI,OAAOwT,EAAahZ,GAAQ,MAAG,IAG9C6xC,EAAU3sC,UAAUstC,cAAgB,SAAU/mC,GAG1CA,EAAU,MAAI/C,KAAKrJ,OAAOs+B,kBAAkB,GAAW,UAEpDkU,KCnjBPmD,GAAsB,WAMtB,QAASA,GAAK31C,GACVqJ,KAAKsQ,aAAe,eACpBtQ,KAAK+a,eAAiB,iBACtB/a,KAAKusC,iBAAmB,KACxBvsC,KAAKwsC,oBAAqB,EAC1B/pC,OAAKC,OAAO+pC,QACZzsC,KAAKrJ,OAASA,EACdqJ,KAAK/E,iBAAmBtD,oBAAkBhB,EAAOiG,iBACjDoD,KAAK0sC,uBAAyB,KAC9B1sC,KAAK2sC,sBACL3sC,KAAK4sC,gBAAkB,GAAIzD,IAAUnpC,KAAKrJ,QAC1CqJ,KAAKoH,mBA84BT,MAt4BAklC,GAAK9vC,UAAUoG,cAAgB,WAC3B,MAAO,QAMX0pC,EAAK9vC,UAAU4K,iBAAmB,WAC9BpH,KAAKrJ,OAAO0Q,G7BgBI,a6BhBkBrH,KAAK6sC,WAAY7sC,MACnDA,KAAKrJ,OAAO0Q,G7BiBG,Y6BjBkBrH,KAAKsoB,UAAWtoB,MACjDA,KAAKrJ,OAAO0Q,G7BkBE,W6BlBkBrH,KAAK8sC,SAAU9sC,MAC/CA,KAAKrJ,OAAO0Q,G7BmBW,oB6BnBkBrH,KAAK2lB,kBAAmB3lB,MACjEA,KAAKrJ,OAAO0Q,G7BoBE,W6BpBkBrH,KAAKyoB,SAAUzoB,MAC/CA,KAAKrJ,OAAO0Q,G7B2BK,c6B3BkBrH,KAAKupB,YAAavpB,MACrDA,KAAKrJ,OAAOiB,KAAKyP,G7BsCD,c6BtCuBrH,KAAK+sC,WAAY/sC,MACxDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,iBAAkBrH,KAAKgtC,YAAahtC,MACxDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,gBAAiBrH,KAAKitC,aAAcjtC,MACxDA,KAAKrJ,OAAO0Q,G7BmBE,W6BnBkBrH,KAAKgpB,SAAUhpB,MAC/CA,KAAKrJ,OAAO0Q,GAAG,cAAerH,KAAKktC,iBAAkBltC,MACrDA,KAAKrJ,OAAO0Q,GAAG,iBAAkBrH,KAAKktC,iBAAkBltC,MACxDA,KAAKrJ,OAAOiB,KAAKyP,G7BoCF,a6BpCuBrH,KAAK2lB,kBAAmB3lB,MAC9DA,KAAKrJ,OAAOiB,KAAKyP,GAAG,WAAYrH,KAAKmtC,aAAcntC,MACnDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,cAAerH,KAAKotC,eAAgBptC,MACxDA,KAAKrJ,OAAO0Q,GAAG,0BAA2BrH,KAAKqtC,wBAAyBrtC,MAExEA,KAAKrJ,OAAOiB,KAAKyP,G7ByCI,Y6BzCuBrH,KAAKstC,gBAAiBttC,MAClEA,KAAKrJ,OAAOiB,KAAKyP,G7B0CM,sB6B1CuBrH,KAAKutC,kBAAmBvtC,MACtEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,mBAAoBrH,KAAKwtC,eAAgBxtC,MAC7DA,KAAKrJ,OAAOiB,KAAKyP,GAAG,mBAAoBrH,KAAKytC,eAAgBztC,OAEjEssC,EAAK9vC,UAAU2wC,aAAe,SAAU9vC,GACpC2C,KAAK0tC,kBAAoBrwC,EAAE+D,QAE/BkrC,EAAK9vC,UAAUixC,eAAiB,SAAUE,GACtCA,EAAQrxC,eAAiB0D,KAAKrJ,OAAOmF,aAAaQ,eAClDqxC,EAAQzyC,YAAc8E,KAAK9E,YAC3ByyC,EAAQC,cAAgB5tC,KAAKusC,kBAEjCD,EAAK9vC,UAAU8wC,gBAAkB,SAAUvqC,GACvC/C,KAAKrJ,OAAOwP,Q7B/DK,c6B+DuBpD,IAE5CupC,EAAK9vC,UAAU+wC,kBAAoB,SAAUxqC,GACH,SAAlC/C,KAAKrJ,OAAOmF,aAAaC,MACzBiE,KAAKrJ,OAAOwP,Q7B/DI,iB6B+D2BpD,IAOnDupC,EAAK9vC,UAAUkL,oBAAsB,WAC7B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,I7B9BI,a6B8BmB5H,KAAK6sC,YACxC7sC,KAAKrJ,OAAOiR,I7B7BG,Y6B6BmB5H,KAAKsoB,WACvCtoB,KAAKrJ,OAAOiR,I7B5BE,W6B4BmB5H,KAAK8sC,UACtC9sC,KAAKrJ,OAAOiR,I7B3BW,oB6B2BmB5H,KAAK2lB,mBAC/C3lB,KAAKrJ,OAAOiR,I7BlBK,c6BkBmB5H,KAAKupB,aACzCvpB,KAAKrJ,OAAOiB,KAAKgQ,I7BPD,c6BOwB5H,KAAK+sC,YAC7C/sC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,iBAAkB5H,KAAKgtC,aAC5ChtC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,gBAAiB5H,KAAKitC,cAC3CjtC,KAAKrJ,OAAOiR,I7B1BE,W6B0BmB5H,KAAKgpB,UACtChpB,KAAKrJ,OAAOiR,IAAI,cAAe5H,KAAKktC,kBACpCltC,KAAKrJ,OAAOiR,IAAI,iBAAkB5H,KAAKktC,kBACvCltC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,cAAe5H,KAAKotC,gBACzCptC,KAAKrJ,OAAOiB,KAAKgQ,I7BVF,a6BUwB5H,KAAK2lB,mBAC5C3lB,KAAKrJ,OAAOiR,IAAI,0BAA2B5H,KAAKqtC,yBAChDrtC,KAAKrJ,OAAOiB,KAAKgQ,I7BFI,Y6BEwB5H,KAAKstC,iBAClDttC,KAAKrJ,OAAOiB,KAAKgQ,I7BDM,sB6BCwB5H,KAAKutC,mBACpDvtC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,WAAY5H,KAAKmtC,cACtCntC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,mBAAoB5H,KAAKwtC,gBAC9CxtC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,mBAAoB5H,KAAKytC,kBASlDnB,EAAK9vC,UAAUsK,QAAU,WACrB9G,KAAK0H,uBAOT4kC,EAAK9vC,UAAUqxC,oBAAsB,SAAUvd,GAC3CtwB,KAAKrJ,OAAOiB,KAAKoE,WAAW6xC,oBAAoBvd,IAEpDgc,EAAK9vC,UAAU0wC,iBAAmB,SAAUnqC,GACxC,GAAI+qC,GAAYt1C,YAAU,aAAcuK,GACpC+d,EAAYtoB,YAAU,OAAQs1C,GAC9BC,EAAU/tC,KAAKrJ,OACfG,EAAUi3C,EAAQn3C,WAAWE,OACjC,KAAKJ,EAAaq3C,IAAYj3C,YAAmBypB,uBAClB,SAA1ButB,EAAUjuC,aAA+C,QAArBiuC,EAAUvyC,SACN,UAAxCwyC,EAAQjyC,aAAaQ,gBAAsE,UAAxCyxC,EAAQjyC,aAAaQ,gBAC1B,UAAxCyxC,EAAQjyC,aAAaQ,gBAC5B,GAAkB,gBAAdwkB,EAA6B,CAC7B,GAAIla,GAAWjP,oBAAkBm2C,EAAUnvC,OAASrG,OAAOC,KAAKu1C,EAAUnvC,KAAKnH,OAASwI,KAAK7E,cACzF2yC,EAAUnvC,IAAIiI,SAAW,EACzBonC,EAAYr2C,oBAAkBiP,KAA2B,IAAdA,GACwC,EAAnFmnC,EAAQtwC,wBAAwBmJ,GAAUmnC,EAAQvyC,0BAA0B,GAChFuyC,GAAQn2C,KAAKyZ,MAAMM,UAAU,gBAAiBq8B,OAE7C,IAAkB,mBAAdltB,EAEL,IAAK,GADDmtB,GAAeF,EAAQn2C,KAAKyZ,MAAMG,OAAOha,OACpCF,EAAI,EAAGA,EAAI22C,EAAc32C,IACW,kBAArCy2C,EAAQn2C,KAAKyZ,MAAMG,OAAOla,GAAGQ,KAC7Bi2C,EAAQn2C,KAAKyZ,MAAMG,OAAO1U,OAAOxF,EAK7C0I,MAAKrJ,OAAOif,yBAAyC,mBAAdkL,GACvC9gB,KAAKkuC,kBAAkBJ,GAEW,UAAlC9tC,KAAKrJ,OAAOmF,aAAaC,MAA8C,WAA1B+xC,EAAUjuC,aACvDG,KAAKrJ,OAAOwY,OAAO,uBAG3Bm9B,EAAK9vC,UAAU0xC,kBAAoB,SAAUnrC,GACzC,GAA0B,SAArBA,EAAKlD,aAA0C,QAAhBkD,EAAKxH,QAA0C,WAArBwH,EAAKlD,YAA0B,CACzF,GAAgD,QAA5CG,KAAKrJ,OAAOmF,aAAaQ,iBAAoD,IAAxB0D,KAAK7E,eACjC,SAArB4H,EAAKlD,aAA0C,QAAhBkD,EAAKxH,OAAmB,CAC3D,GAAI4yC,GAAanuC,KAAKrJ,OAAOiB,KAAKmd,gBAC9Bq5B,EAAeD,EAAWrxC,OAAO,EAAG,GAAG,GACvCuxC,EAAoBruC,KAAK9E,YACzBob,EAActW,KAAKrJ,OAAO8G,uBACkB,WAA5CuC,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,iBAChF+xC,GAAqBh1C,EAAoBid,EAAY+3B,EAAoB,IAAI72C,QAEjF62C,EAAgE,UAA5CruC,KAAKrJ,OAAOmF,aAAaQ,eAA6B+xC,EAAoB,EAAIA,EAClGF,EAAWrxC,OAAOuxC,EAAmB,EAAGD,EACxC,IAAIE,GAAYh4B,EAAYxZ,OAAO,EAAG,GAAG,EACzCwZ,GAAYxZ,OAAOuxC,EAAmB,EAAGC,GACzCtuC,KAAKuuC,8BAA8BD,EAAWtuC,KAAK9E,aAEvD,GAAIi4B,GAAcnzB,KAAKrJ,OAAOiB,KAAK07B,iBAC/Bkb,EAAoBxuC,KAAKrJ,OAAOiB,KAAK62C,uBACrCC,EAAU1uC,KAAKrJ,OAAOotB,uBAAuB4qB,WAC5CD,KACDE,gBAAc5uC,KAAKrJ,OAAOiB,KAAMoI,KAAKrJ,OAAOiB,KAAKmd,gBAAiB/U,KAAKrJ,OAAOiB,KAAKiH,UAAW,GAC9FmB,KAAK6uC,YAAY7uC,KAAKrJ,OAAOiB,KAAKhB,WAAYoJ,KAAKrJ,OAAOkI,UAAWmB,KAAKrJ,OAAO8G,2BAEhFixC,GAAW1uC,KAAKrJ,OAAOsI,mBAAqB,IAC7C2vC,gBAAc5uC,KAAKrJ,OAAOiB,KAAM42C,EAAmBrb,EAAa,GAChEnzB,KAAK6uC,YAAY7uC,KAAKrJ,OAAOiB,KAAKhB,WAAYu8B,EAAanzB,KAAKrJ,OAAO8G,4BAInF6uC,EAAK9vC,UAAU+xC,8BAAgC,SAAUD,EAAWQ,GAChE,GAAIvqC,GAAQvE,KAGRulC,EAAO/xB,KAAKC,KAAKq7B,EAAc9uC,KAAKrJ,OAAOiB,KAAKkW,aAAa03B,UAC7DrvB,EAAOovB,EAAO,EAAIA,EAAO,EACzBwJ,EAAYD,GAAgB34B,EAAO,GAAKnW,KAAKrJ,OAAOmX,aAAa03B,SACjEwJ,EAA0BhvC,KAAKrJ,OAAOiB,KAAKq3C,qBAAiC,uBAChFD,GAAwB,GAAGlyC,OAAO,EAAG,EACrC,IAAI2B,GAAOuwC,EAAwB74B,EAC9Bxe,qBAAkBqI,KAAK3E,gBACxBoD,EAAKrB,OAAO,SAAUC,EAAGlD,GACjBkD,EAAEpE,WAAasL,EAAMlJ,aAAapC,WAClC81C,EAAY50C,MAGhB6F,KAAK3E,aAAa/B,iBAAmB0G,KAAK3E,aAAa9B,aAAa/B,QACxB,UAA5CwI,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,kBAChFyyC,GAAa11C,EAAoB2G,KAAK3E,cAAc7D,SAGxDu3C,GAAa/uC,KAAKrJ,OAAOmX,aAAa03B,WAEtC/mC,EAAOuwC,EADP74B,GAAQ,GAER44B,EAAYA,EAAY/uC,KAAKrJ,OAAOmX,aAAa03B,UAAY,EAAIuJ,EAAY/uC,KAAKrJ,OAAOmX,aAAa03B,SAAW,GAErHuJ,EAAwD,UAA5C/uC,KAAKrJ,OAAOmF,aAAaQ,eAA6ByyC,EAAY,EAAIA,EAClFtwC,EAAK3B,OAAOiyC,EAAW,EAAGT,GAC1BtuC,KAAKrJ,OAAOiB,KAAKq3C,qBAA0C,yBAE/D3C,EAAK9vC,UAAUmpB,kBAAoB,SAAU5iB,GACzC,GAAI3B,GAAS2B,EAAK3B,MAClB,KAAIzJ,oBAAkByJ,EAAO6G,QAAQ,kBAG/BjI,KAAKrJ,OAAOiB,KAAKkE,4BAA8BkE,KAAKrJ,OAAOiB,KAAK4yB,OAAtE,CAGA,GAAI7qB,GAASK,KAAKrJ,OAAOiB,KAAK0yC,kBAAkBlpC,EAAO6G,QAAQ,gBAAgBmB,aAAa,iBAC5F,IAAsC,SAAlCpJ,KAAKrJ,OAAOmF,aAAaC,OAAoBiE,KAAKkvC,WAAavvC,IAAWA,EAAOsE,cACjFjE,KAAKrJ,OAAOmF,aAAamE,cAAgBN,EAAOM,eAAkBmB,EAAOkE,UAAUC,SAAS,sBAC5FnE,EAAOkE,UAAUC,SAAS,uBAA0BvF,KAAKrJ,OAAOmF,aAAa6uB,oBAAqB,CAGlG,GAFA3qB,KAAKkvC,WAAY,EACjBlvC,KAAKrJ,OAAOiB,KAAKyiB,eAAgBmK,iBAAkBzhB,EAAK6D,WAAY,GAChE5G,KAAKrJ,OAAOyH,qBAAsB,CAClC,GAAI8N,GAAKnE,eAAahF,EAAK3B,OAAQ,QACnCpB,MAAKusC,iBAAmBrgC,EAAG9C,aAAa,iBACxC8C,EAAGjC,aAAa,gBAAiBiC,EAAGtF,SAAW,IAEnD5G,KAAKmvC,mBAAmB,YAGhC7C,EAAK9vC,UAAU2yC,mBAAqB,SAAUpzC,GAC1CiE,KAAKrJ,OAAOiB,KAAKyiB,eAAgBve,cAAgBC,KAAMA,KAAU,GAC9CvD,YAAU,gBAAiBwH,KAAKrJ,OAAOiB,KAAKoE,YAClD+F,MAAM/B,KAAKrJ,OAAOiB,KAAKoE,YACpCgE,KAAKrJ,OAAOiB,KAAK4yB,QAAS,GAE9B8hB,EAAK9vC,UAAUgxC,eAAiB,WACxBxtC,KAAKrJ,OAAOyH,sBAA0D,SAAlC4B,KAAKrJ,OAAOmF,aAAaC,OAC7DiE,KAAKkvC,WAAY,EACjBlvC,KAAKmvC,mBAAmB,YAGhC7C,EAAK9vC,UAAUuwC,WAAa,SAAUhqC,GAC9B/C,KAAKkvC,YACLlvC,KAAKovC,SAAWrsC,EAAKxH,QAEL,OAAhBwH,EAAKxH,QACLyE,KAAK2lB,kBAAkB5iB,GAER,UAAfA,EAAKxH,QACLyE,KAAKrJ,OAAOy1B,aAGpBkgB,EAAK9vC,UAAUsvC,eAAiB,SAAU5xC,SAE/B8F,MAAKrJ,OAAe,yBAAEuD,SAEtB8F,MAAKrJ,OAAS,mBAAEuD,IAE3BoyC,EAAK9vC,UAAUwsB,SAAW,SAAUjmB,GAChC,GAAIwB,GAAQvE,KAERqvC,EAAOtsC,EAAY,OAoBvB,UAnBOA,GAAY,QACf/C,KAAKrJ,OAAOyH,uBAAyBzG,oBAAkBqI,KAAKusC,oBAC5DxpC,EAAKpE,IAAIsL,aAAa,gBAAiBjK,KAAKusC,kBAC5CvsC,KAAKusC,qBAAmB5yB,IAEN,UAAlB3Z,KAAKovC,UACLpvC,KAAKrJ,OAAOwP,Q7BjNF,W6BiN2BpD,EAAM,SAAUusC,GAC5CA,EAAappC,QAA6C,SAAnC3B,EAAM5N,OAAOmF,aAAaC,KAG7CuzC,EAAappC,QAA6C,SAAnC3B,EAAM5N,OAAOmF,aAAaC,OACtDwI,EAAM2qC,WAAY,EAClB3qC,EAAM4qC,mBAAmB,WAJzB5qC,EAAMspB,mBAAmB,QAMxBl2B,oBAAkB03C,IACnBA,EAAKrnB,QAAQsnB,KAIrBtvC,KAAK0tC,oBAAsB1tC,KAAK0tC,kBAAkBpoC,UAAUC,SAAS,qBACrEvF,KAAK0tC,kBAAkBpoC,UAAUC,SAAS,uBAAyBvF,KAAK0tC,kBAAkBpoC,UAAUC,SAAS,kBAG7G,MAFAxC,GAAKmD,QAAS,OACdlG,KAAK0tC,kBAAoB,KAGS,UAAlC1tC,KAAKrJ,OAAOmF,aAAaC,OACH,QAAlBiE,KAAKovC,UAAwC,aAAlBpvC,KAAKovC,SAChCpvC,KAAKovC,SAAW,KAEO,UAAlBpvC,KAAKovC,WACVrsC,EAAKmD,QAAS,EACdlG,KAAKovC,SAAW,KAChB98B,WAAS,kBAAkB,EAAOtS,KAAKrJ,SAEtCoM,EAAKsnC,aAAapqC,eACnB8C,EAAKmD,QAAS,KAO1BomC,EAAK9vC,UAAUqxB,mBAAqB,SAAU0hB,GAC1C,IAAK53C,oBAAkBqI,KAAKrJ,OAAOiB,KAAKm2B,eAAgB,CACpD,GAAIyhB,GAAYxvC,KAAKrJ,OAAOsZ,QAAQC,GAAK,eACzClQ,MAAKrJ,OAAOiB,KAAKm2B,cAAcC,aAAawhB,EAAY,MAAOA,EAAY,OAAQA,EAAY,UAAuB,SAAZD,GAC1GvvC,KAAKrJ,OAAOiB,KAAKm2B,cAAcC,aAAawhB,EAAY,SAAUA,EAAY,UAAuB,SAAZD,KAGjGjD,EAAK9vC,UAAU+sB,YAAc,WACzB,GAAsC,SAAlCvpB,KAAKrJ,OAAOmF,aAAaC,KAAiB,CAC1C,GAAI0zC,GAAcpxC,WAAS,yBAA0B2B,KAAKrJ,OAAOiB,KAAKoE,YAClE0zC,EAAW1vC,KAAKrJ,OAAOk4B,iBAAiB4gB,EAAY7oC,SAAU5G,KAAKrJ,OAAOyI,gBAC9EY,MAAKrJ,OAAO4I,aAAaC,YACrBf,KAAMgxC,EAAY9mC,QAClBlJ,KAAMiwC,EACN/vC,OAAQK,KAAKrJ,OAAOiB,KAAKgI,aAAaI,KAAKrJ,OAAOyI,mBAEtDY,KAAKmvC,mBAAmB,UACxBnvC,KAAKkvC,WAAY,EAEiB,UAAlClvC,KAAKrJ,OAAOmF,aAAaC,MACzBiE,KAAKrJ,OAAOwY,OAAO,yBAG3Bm9B,EAAK9vC,UAAU4wC,eAAiB,SAAUrqC,GAClC3L,EAAgB4I,KAAKrJ,SAA6C,SAAlCqJ,KAAKrJ,OAAOmF,aAAaC,MAAmC,SAAhBgH,EAAKxH,SACjFyE,KAAKutB,WAAWxqB,EAAMA,EAAK6D,UAC3B5G,KAAK2vC,cAAc5sC,EAAMA,EAAKpE,IAAKoE,EAAK6D,YAGhD0lC,EAAK9vC,UAAUisB,SAAW,SAAU1lB,GAChC,GAAIwB,GAAQvE,IACZ,IAAsC,SAAlCA,KAAKrJ,OAAOmF,aAAaC,MAAmBiE,KAAKrJ,OAAOsZ,QAAQjI,cAAc,QAAS,CACvFjF,EAAKmD,QAAS,CAEdoM,YAAS,UAAU,EAAOtS,KAAKrJ,OAAOiB,MACtC0a,WAAS,kBAAkB,EAAMtS,KAAKrJ,QACtCoM,EAAK4F,QAAQ5F,EAAK3H,YAAc2H,EAAK7I,KACrC,IAAImlB,EAEAA,GADA1nB,oBAAkBoL,EAAKtD,MACfO,KAAKrJ,OAAOiB,KAAKoE,WAAqB,WAAE4zC,KAAK3wB,cAAcgd,WAG3Dl5B,EAAKtD,KAAKw8B,UAEtB,IAAI4T,GACAC,EAAgB9vC,KAAKrJ,OAAO6E,yBAC5B7D,qBAAkB0nB,GAClBrf,KAAKrJ,OAAOiB,KAAK6F,wBAAwBL,OAAO,SAAUC,EAAG/F,GACzD,GAAI+F,EAAEyyC,EAAc,MAAQ/sC,EAAK4F,QAAQmnC,EAAc,IAEnD,YADAD,EAAav4C,KAMrBu4C,GAAwD,IAA1C7vC,KAAKrJ,OAAOkI,UAAUL,QAAQ6gB,IAAkBrf,KAAKrJ,OAAOsI,mBAAqB,EAC3Fe,KAAKrJ,OAAOiB,KAAK07B,iBAAiB90B,QAAQ6gB,GAASrf,KAAKrJ,OAAOkI,UAAUL,QAAQ6gB,EAEzF,IAAIqU,KAMJ,IALAr3B,SAAOq3B,EAAK3wB,GACZ2wB,EAAIxtB,QAAS,EACbwtB,EAAI1wB,KAAO,OACXqc,EAAQrf,KAAKrJ,OAAOiB,KAAKiH,UAAUwgB,EAAMzY,UACzC5G,KAAKrJ,OAAOwP,Q7BhXC,c6BgX2ButB,GACnCA,EAAIxtB,OAiCLlG,KAAKrJ,OAAOiB,KAAK4yB,QAAS,MA7B1B,IAHKnL,EAAMzY,WAAa5G,KAAKrJ,OAAO8G,wBAAwBjG,OAAS,GAAwB,QAAlBwI,KAAKovC,WAC5EpvC,KAAK+vC,cAAe,GAEnBr5C,EAAasJ,KAAKrJ,SACjBqJ,KAAKrJ,OAAOC,qBAAsBC,gBAAemJ,KAAKrJ,OAAOC,WAAWE,kBAAmBypB,sBAa5F,GAAI7pB,EAAasJ,KAAKrJ,SACtBqJ,KAAKrJ,OAAOC,qBAAsBC,gBAAemJ,KAAKrJ,OAAOC,WAAWE,kBAAmBypB,qBAAoB,CAChH,GAAIlP,GAAQrR,KAAKrJ,OAAOiB,KAAKyZ,KAEtBrR,MAAKrJ,OAAOiB,KAAKhB,WAAWo5C,OAAOF,EAAc,GAAI/sC,EAAK4F,QAAS0I,EAAM4+B,UAAW5+B,EAAOtO,EAAKmtC,eAClGj+B,KAAK,SAAU5U,GACX1F,oBAAkB0F,KACnB0F,EAAK4F,QAAQ5F,EAAK3H,YAAciC,EAAE0F,EAAK3H,aAE3CmJ,EAAMgpB,WAAWxqB,EAAM8sC,GACvBtrC,EAAMorC,cAAc5sC,EAAMsc,EAAOwwB,UAtBrC,IAAIz4C,EAAgB4I,KAAKrJ,QAAS,CAC9B,GACIw5C,IAAatwC,YAAa,OAAQpB,KAAMsE,EAAK4F,QAASpN,OAAQ,OAAQoD,IAAK0gB,EAC3EzY,SAAUipC,EAAYlnC,QAAS5F,EAAK4F,QAASvN,WAAY2H,EAAK3H,WAC9Dg1C,kBAAmB,KAAMC,oBAAqB,KAClDrwC,MAAKrJ,OAAOiB,KAAK4c,gBAA4B,aAAE27B,EAAUnwC,KAAKrJ,OAAOiB,KAAKyZ,WAG1ErR,MAAKutB,WAAWxqB,EAAM8sC,GACtB7vC,KAAK2vC,cAAc5sC,EAAMsc,EAAOwwB,KAsBpDvD,EAAK9vC,UAAUmzC,cAAgB,SAAU5sC,EAAMpE,EAAKiI,GAChD,GAAI0pC,EACAtwC,MAAKrJ,OAAOiB,KAAK24C,iBACjBvwC,KAAKrJ,OAAOiB,KAAK24C,gBAAgBtmB,QAAQlnB,EAAK4F,SAElD3I,KAAKrJ,OAAOiB,KAAKoE,WAAWw0C,gBAAgBxwC,KAAKrJ,OAAOiB,KAAKggB,iBAAiB7U,EAAK3H,cACnF4E,KAAKrJ,OAAOiB,KAAKoE,WAAWy0C,QAAQ3pC,UACd,QAAlB9G,KAAKovC,UAAwC,aAAlBpvC,KAAKovC,WAChCpvC,KAAKmvC,mBAAmB,UACxBnvC,KAAKkvC,WAAY,GAErBlvC,KAAK6tB,mBAAmB,QACpB7tB,KAAKrJ,OAAOsI,mBAAqB,IACjCqxC,EAAOtwC,KAAKrJ,OAAOiB,KAAK07B,iBAAiB1sB,GACzC0D,eAAagmC,IAAQ,cAAe,eACpChmC,cAAYgmC,EAAK7qC,iBAAiB,eAAgB,oBAAqB,iBAE3E6E,eAAa3L,IAAO,cAAe,eACnC2L,cAAY3L,EAAI8G,iBAAiB,eAAgB,oBAAqB,iBAC/B,IAAnCzF,KAAKrJ,OAAwB,iBAC7BqJ,KAAKrJ,OAAOiB,KAAKwzC,YAAYsF,eAEjC51C,GAAaZ,MAAO6I,EAAK4F,QAASpN,OAAQ,QAAUyE,KAAKrJ,OAAQqJ,KAAK/E,gBAAiB+E,KAAK9E,YAAa8E,KAAK7E,cAAe4H,EAAK3H,YAC7HuD,EAAIiI,WAAa5G,KAAKrJ,OAAO8G,wBAAwBjG,OAAS,GAAwB,UAAlBwI,KAAKovC,WAC1EpvC,KAAKovC,SAAW,KAEpB,IAAIuB,IACA3tC,KAAM,OAAQrD,OAAQK,KAAKrJ,OAAOihB,iBAAiB7U,EAAK3H,YAAaqD,KAAMsE,EAAK4F,QAChFioC,aAAc7tC,EAAKmtC,cAAevxC,IAAKA,EAAKyC,OAAQ2B,EAAKtD,KAEzDO,MAAKrJ,OAAOse,WAAW9W,IAAI,SAAU4rB,GAAM,MAA8B,IAAvBA,EAAGC,mBAA6BxyB,QAClFwI,KAAKrJ,OAAOiB,KAAKqyB,UAErBjqB,KAAKrJ,OAAOwP,Q7BnbQ,iB6BmbuBwqC,IAE/CrE,EAAK9vC,UAAUwwC,YAAc,YACpBhtC,KAAKrJ,OAAOiB,KAAK4yB,QAAUxqB,KAAKkvC,WAA+B,QAAlBlvC,KAAKovC,UAAwD,SAAlCpvC,KAAKrJ,OAAOmF,aAAaC,OAC7FiE,KAAKrJ,OAAOmF,aAAagvB,iBAM1B9qB,KAAK6tB,mBAAmB,SALxB7tB,KAAKmvC,mBAAmB,UACxBnvC,KAAKkvC,WAAY,EACjBlvC,KAAKovC,SAAW,QAO5B9C,EAAK9vC,UAAU+wB,WAAa,SAAUxqB,EAAM6D,GACxC5G,KAAKrJ,OAAOiB,KAAKoE,WAAWuxB,WAAW3mB,EAAU7D,EAAK3H,WAAY2H,EAAK4F,QAAQ5F,EAAK3H,aACpF4E,KAAKrJ,OAAOiB,KAAKmd,gBAAgBnO,GAAUnI,KAAOsE,EAAK4F,SAE3D2jC,EAAK9vC,UAAUqwC,WAAa,SAAU9xC,EAASK,GAC3CN,EAAWC,EAASiF,KAAKrJ,OAAQqJ,KAAK/E,gBAAiB+E,KAAK9E,YAAa8E,KAAK7E,cAAeC,EAAY4E,KAAK3E,cAC9G2E,KAAKrJ,OAAOuG,aAGZ,KAAK,GAFDuB,GAAOuB,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eAC9CmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,WAC1DU,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IAAK,CAClCmH,EAAKnH,GAAG6C,MAAQ7C,CAChB,IAAIQ,GAAMkI,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,EACjDT,GAAQb,MAAMpC,KAAS2G,EAAKnH,GAAGQ,IACR,QAAnBiD,EAAQQ,SACRkD,EAAKnH,GAAG8C,MAAQ4F,KAAK2sC,mBAAmBvyC,MACxCqE,EAAKnH,GAAG+C,SAAW2F,KAAK2sC,mBAAmBtyC,SAC3CoE,EAAKnH,GAAG2B,SAAW+G,KAAK2sC,mBAAmB1zC,SACtCtB,oBAAkBqI,KAAK2sC,mBAAmB5zC,cAC3C0F,EAAKnH,GAAGyB,WAAaiH,KAAK2sC,mBAAmB5zC,WAC7C0F,EAAKnH,GAAGgH,eAAiB0B,KAAK2sC,mBAAmBruC,gBAErDG,EAAKnH,GAAGiC,aAAeyG,KAAK2sC,mBAAmBpzC,cAGvD+Y,WAAS,sBAAwB7T,EAAKnH,GAAG2B,SAAW,SAAU3B,EAAG0I,KAAKrJ,QACjE8H,EAAKnH,GAAG8C,OACT4F,KAAKrJ,OAAOuG,WAAWzE,KAAKgG,EAAKnH,IAGlB,QAAnByD,EAAQQ,QAAmD,MAA/ByE,KAAK0sC,yBACjC1sC,KAAKrJ,OAAO0jB,eAAgBve,cAAgBQ,eAAgB0D,KAAK0sC,0BAA4B,GAC7F1sC,KAAK0sC,uBAAyB,OAGtCJ,EAAK9vC,UAAUqyC,YAAc,SAAUpwC,EAAMuG,EAAM7M,GAC/C,IAAK,GAAI6B,GAAI,EAAGA,EAAIgG,KAAKrJ,OAAOs5B,cAAcz4B,OAAQwC,IAAK,CACvD,GAAI62C,GAAQ14C,EAAQ6B,GAChBG,EAAQkE,WAAS,sBAAwBwyC,EAAM53C,SAAW,SAAU+G,KAAKrJ,OAE7E,IADAk6C,EAAM12C,MAAQA,GACTxC,oBAAkBk5C,EAAM93C,YAAa,CACtC,GAAI2mC,GAAcrhC,WAAS,sBAAwBwyC,EAAM93C,WAAWE,SAAW,SAAU+G,KAAKrJ,OAC9Fk6C,GAAM93C,WAAWoB,MAAQulC,GAGjC,GAAIp0B,IAAS,EACTwlC,EAAe9wC,KAAKrJ,OAAOyI,eAC/B,IAAIY,KAAKrJ,OAAOsI,mBAAqB,EAEjC,IAAK,GADDS,GAAQsF,EAAK,GAAGS,iBAAiB,cAC5BsrC,EAAI,EAAGA,EAAIrxC,EAAMlI,OAAQu5C,IAC9B,GAAIrxC,EAAMqxC,GAAGzrC,UAAUC,SAAS,yBAA0B,CACtDurC,EAAeC,CACf,OAIZ,IAAK,GAAIx0C,GAAI,EAAGA,EAAIyD,KAAKrJ,OAAOkI,UAAUrH,OAAQ+E,IAAK,CAC9CyI,EAAKzI,GAAG+I,UAAUC,SAAS,gBAC5B+F,GAEJ,IAAI0lC,GAAQ74C,EAAQmT,GAChBnR,EAAQ62C,EAAM72C,MACdC,EAAQ42C,EAAM52C,MACduE,EAAMqG,EAAKzI,EACV5E,qBAAkBq5C,EAAMj4C,cACzBoB,EAAQkE,WAAS,sBAAwB2yC,EAAMj4C,WAAWE,SAAW,SAAU+G,KAAKrJ,QAExF,IAAIs6C,GAAWtyC,EAAIe,MAAMoxC,EACzB,KAAKn5C,oBAAkBs5C,GAAW,CAC9B,IAASF,EAAI,EAAGA,EAAIE,EAAS3rC,UAAU9N,OAAQu5C,IAAK,CAChD,GAAI72C,GAAQ+2C,EAAS3rC,UAAUyrC,GAG3B3gC,EAASlW,EAAMoM,MAFN,mBAGT+Q,EAAUnd,EAAMoM,MAFN,wBAGA,OAAV8J,GACA9F,eAAa2mC,GAAW/2C,GAEb,MAAXmd,GACA/M,eAAa2mC,GAAW/2C,GAG3B8K,EAAKzI,GAAG+I,UAAUC,SAAS,eAI5B6H,YAAU6jC,GAAW,uBAAyB92C,EAAQ,QAAUC,GAHhEgT,YAAU6jC,GAAW,iBAAmB92C,EAAQ,QAAUC,MAQ1EkyC,EAAK9vC,UAAUswC,SAAW,WACtB,GAAIzf,GACAlzB,EAAQ6F,KAAK9E,YACb/C,EAAU6H,KAAKrJ,OAAOiB,KAAK6F,uBACO,WAAlCuC,KAAKrJ,OAAOmF,aAAaC,OACzB5B,EAAQ6F,KAAK4sC,gBAAgB5C,iBAC7BhqC,KAAK7E,cAAgB6E,KAAK4sC,gBAAgB3C,oBACtCjqC,KAAKrJ,OAAOsF,kBAAkB+D,KAAKsQ,cAAc9Y,OAAS,GACvDwI,KAAKrJ,OAAOsF,kBAAkB+D,KAAK+a,gBAAgBvjB,UACtDW,EAAU6H,KAAK4sC,gBAAgB7C,mBAGvC,IAAI/kC,GAAOhF,KAAKrJ,OAAOiB,KAAKq4B,cACxBihB,EAAiBlsC,EAAKxN,QAAUwN,EAAK,GAAGoE,aAAa,iBAAmB,EACxE+nC,EAAgBnsC,EAAKxN,QAAUwN,EAAKA,EAAKxN,OAAS,GAAG4R,aAAa,iBAAmB,EACrFgoC,EAAcpxC,KAAK7E,eAAiB+1C,GAAkBlxC,KAAK7E,eAAiBg2C,EAC5EE,EAAmBrxC,KAAKrJ,OAAOyH,sBAAwB4B,KAAK9E,aAAe,GAA+B,OAA1B8E,KAAKusC,gBACzF,IAAsC,WAAlCvsC,KAAKrJ,OAAOmF,aAAaC,OACuB,UAA5CiE,KAAKrJ,OAAOmF,aAAaQ,eACzB+wB,EAAW,UAEuC,UAA5CrtB,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,kBAClF0D,KAAK7E,eAAiB,GAAKk2C,IAAqBD,IACpD/jB,EAAW,SACN11B,oBAAkBQ,EAAQgC,KAAWhC,EAAQgC,GAAOf,WACf,UAAlC4G,KAAKrJ,OAAOmF,aAAaC,OAAqBiE,KAAKrJ,OAAOsF,kBAAkB+D,KAAKsQ,cAAc9Y,OAAS,GACrGwI,KAAKrJ,OAAOsF,kBAAkB+D,KAAK+a,gBAAgBvjB,SACtD2C,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OACG,UAA5CwI,KAAKrJ,OAAOmF,aAAaQ,iBAEzBnC,GADsB6F,KAAK4sC,gBAAgB1C,uBAK/C/vC,GAASd,EAAoBlB,EAAQgC,IAAQ3C,UAIpDwI,KAAK7E,eAAiB,GAAKk2C,IAAqBD,IAC7Cj3C,GAAsD,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,gBACY,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,iBAA8B,CAC1DnC,GAAS6K,EAAKxN,OAAS,IACvB2C,EAAQ6K,EAAKxN,OAAS,EAE1B,IAAIgK,GAAI,OACJ4sC,EAAepuC,KAAKrJ,OAAOiB,KAAKie,cAAcrU,GAAG,GACjD8vC,EAAkBnY,SAASoY,aAC/BvsC,GAAK7K,EAAQ,GAAGkzB,GAAUroB,EAAK,IAC/BsN,WAAS,aAAcnY,EAAQ,EAAG6F,KAAK4sC,gBACvC,IAAIjC,GAA6D,UAA5C3qC,KAAKrJ,OAAOmF,aAAaQ,eAA6BnC,EAAQA,EAAQ,CAK3F,IAJsC,UAAlC6F,KAAKrJ,OAAOmF,aAAaC,OACzBiE,KAAKrJ,OAAOiB,KAAKie,cAAcrU,GAAG1E,OAAO,EAAG,GAC5CkD,KAAKrJ,OAAOiB,KAAKie,cAAcrU,GAAG1E,OAAO6tC,EAAgB,EAAGyD,IAE5DpuC,KAAKrJ,OAAOqI,YAAcgB,KAAKrJ,OAAOsI,oBAAsBe,KAAKrJ,OAAO8X,cAAe,CACvF,GAAI0kB,GAAcnzB,KAAKrJ,OAAOyV,qBAE1BolC,EAAqBxxC,KAAKrJ,OAAOiB,KAAKmd,gBAAgB,EAC1Doe,GAAYh5B,EAAQ,GAAGkzB,GAAU8F,EAAY,IACP,UAAlCnzB,KAAKrJ,OAAOmF,aAAaC,OACzBiE,KAAKrJ,OAAOiB,KAAKie,cAAmB,WAAE/Y,OAAO,EAAG,GAChDkD,KAAKrJ,OAAOiB,KAAKie,cAAmB,WAAE/Y,OAAO6tC,EAAgB,EAAG6G,IAEpEl/B,WAAS,aAAcnY,EAAQ,EAAG6F,KAAK4sC,iBAE3C,GAAsC,QAAlC5sC,KAAKrJ,OAAOmF,aAAaC,MAAoD,SAAlCiE,KAAKrJ,OAAOmF,aAAaC,KAAiB,CAErF,IAAK,GADD01C,GAASzxC,KAAKrJ,OAAOiB,KAAKkc,kBAAkBrO,iBAAiB,gBACxDnO,EAAI,EAAGA,EAAIm6C,EAAOj6C,OAAQF,IAC/Bm6C,EAAOn6C,GAAG4qB,QAEd5P,YAAS,gBAAkBtS,KAAKrJ,OAAOiB,KAAKoE,WAAWy0C,SAEvDY,IACArxC,KAAKusC,iBAAmB,MAE5B+E,EAAgBI,UAsB5BpF,EAAK9vC,UAAU8rB,UAAY,SAAUvlB,GACjC,GAAyB,YAArBA,EAAKlD,aAA6BG,KAAKkvC,UAEvC,YADAnsC,EAAKmD,QAAS,EAGlB,IAAsC,SAAlClG,KAAKrJ,OAAOmF,aAAaC,MAAwC,cAArBgH,EAAKlD,YAEjD,YADAkD,EAAKmD,QAAS,EAGlB,IAAIlG,KAAK0tC,oBAAsB1tC,KAAK0tC,kBAAkBpoC,UAAUC,SAAS,qBACrEvF,KAAK0tC,kBAAkBpoC,UAAUC,SAAS,uBAAyBvF,KAAK0tC,kBAAkBpoC,UAAUC,SAAS,YAG7G,MAFAxC,GAAKmD,QAAS,OACdlG,KAAK0tC,kBAAoB,KAG7B,IAAyB,WAArB3qC,EAAKlD,YAEL,IAAK,GADDpB,GAAOsE,EAAKtE,KACPnH,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IAAK,CAClC0I,KAAK8rC,eAAertC,EAAKnH,GAAG2B,SAE5B,KAAK,GADDuyC,GAASnyC,EAAoBoF,EAAKnH,IAC7BgK,EAAI,EAAGA,EAAIkqC,EAAOh0C,OAAQ8J,IAC/BtB,KAAK8rC,eAAeN,EAAOlqC,GAAGrI,SAElC8J,GAAKtE,KAAOA,EAAKjF,OAAOgyC,GAGhC,GAAyB,QAArBzoC,EAAKlD,aAA0BG,KAAKwsC,qBAAuBxsC,KAAKrJ,OAAOyH,sBAAwB4B,KAAKrJ,OAAOif,yBAA2B,CAKtI,KAJ6C,IAAvC5V,KAAKrJ,OAAOiB,KAAK4sB,kBAA2BxkB,KAAKwsC,oBAChDzpC,EAAK5I,QAAU6F,KAAKrJ,OAAOiB,KAAK4sB,mBAAmC,IAAfzhB,EAAK5I,QAC5D6F,KAAK7E,cAAgB6E,KAAKrJ,OAAOiB,KAAK4sB,kBAEtCxkB,KAAKrJ,OAAOyH,qBAAsB,CAClC,GAAIuzC,GAAW,yBAA2B3xC,KAAK7E,cAAgB,KAC3DwD,MAAM,EACNqB,MAAK7E,eAAiB,GAAiD,QAA5C6E,KAAKrJ,OAAOmF,aAAaQ,gBACR,WAA5C0D,KAAKrJ,OAAOmF,aAAaQ,gBACzB0D,KAAKusC,iBAAmBvsC,KAAK7E,cAAc2J,WAC3CnG,EAAMqB,KAAKrJ,OAAOm5B,aAAa9nB,cAAc2pC,GAC7C3xC,KAAK9E,YAAcyD,EAAMA,EAAIiI,SAAW,GAGpC5G,KAAKusC,kBAA8C,OAA1BvsC,KAAKusC,kBAC9BoF,EAAW,yBAA2B3xC,KAAKusC,iBAAmB,KAC9D5tC,EAAMqB,KAAKrJ,OAAOm5B,aAAa9nB,cAAc2pC,GAC7C3xC,KAAK9E,YAAcyD,EAAMA,EAAIiI,SAAW,GAGxC5G,KAAK9E,YAAc,MAKvB8E,MAAKwsC,qBAAuBxsC,KAAKrJ,OAAOyH,sBAAwB4B,KAAKrJ,OAAOif,yBAC5E5V,KAAK9E,YAAc6H,EAAK5I,MAGxB6F,KAAK9E,YAAc8E,KAAKrJ,OAAOiB,KAAK4sB,kBAAoB,EAAIxkB,KAAKrJ,OAAOiB,KAAK4sB,iBAAmB,CAGpGxkB,MAAKwsC,qBAAuBxsC,KAAKrJ,OAAOyH,sBAAwB4B,KAAKrJ,OAAOif,yBAC5E5V,KAAK3E,aAAe2E,KAAKrJ,OAAOwG,SAAS4F,EAAK5I,OAG9C6F,KAAK3E,aAAe2E,KAAKrJ,OAAOgP,qBAAqB,GAGzD3F,KAAKwsC,oBAAqC,IAAfzpC,EAAK5I,QAChC6F,KAAK3E,aAAe2E,KAAKrJ,OAAOwG,SAAS4F,EAAK5I,QAEF,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,gBAA8B3E,oBAAkBqI,KAAK3E,gBAC1E1D,oBAAkBqI,KAAKrJ,OAAOgP,qBAAqB,MACvD3F,KAAK3E,aAAe2E,KAAKrJ,OAAOgP,qBAAqB,IAEzD3F,KAAKwsC,oBAAqB,EAC1BzpC,EAAO/C,KAAK4xC,aAAa7uC,IAU7BupC,EAAK9vC,UAAU6wC,wBAA0B,WACD,OAAhCrtC,KAAK0sC,yBACL1sC,KAAK0sC,uBAAyB1sC,KAAKrJ,OAAOmF,aAAaQ,iBAG/DgwC,EAAK9vC,UAAUo1C,aAAe,SAAU7uC,GACpC,GAAI7I,GAAQ6I,EAAKtE,IACjB,IAAoB,QAAhBsE,EAAKxH,OAAkB,CACvB,GAAIzD,GAAMkI,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,GACjD6xB,EAAW,IACfnzB,GAAMG,SAAW1C,oBAAkBuC,EAAMG,UAAYgC,YAAW0G,EAAKtE,MAAQvE,EAAMG,QACnF,IAAIic,GAActW,KAAKrJ,OAAOiB,KAAK6F,wBAC/BtD,EAAQ6F,KAAK9E,WACjBhB,GAAMjB,SAAWsa,SAAOvT,KAAKrJ,OAAOsZ,QAAQC,GAAK,UACjDoC,WAAS,sBAAwBpY,EAAMjB,SAAUiB,EAAO8F,KAAKrJ,OAC7D,IAAIyD,GAAQ,EACRyC,MAAY,GACZyB,MAAiB,GACjBvF,MAAa,GACb6D,MAAkB,GAClBy0C,EAAmBrxC,KAAKrJ,OAAOyH,sBAAwB4B,KAAK9E,aAAe,GAA+B,OAA1B8E,KAAKusC,iBACrFvnC,EAAOhF,KAAKrJ,OAAOkI,UACnBqyC,EAAiBlsC,EAAKxN,QAAUwN,EAAK,GAAGoE,aAAa,iBAAmB,EACxE+nC,EAAgBnsC,EAAKxN,QAAUwN,EAAKA,EAAKxN,OAAS,GAAG4R,aAAa,iBAAmB,EACrFgoC,EAAcpxC,KAAK7E,eAAiB+1C,GAAkBlxC,KAAK7E,eAAiBg2C,CAShF,IARI76B,EAAY9e,SACZqF,EAAYyZ,EAAYtW,KAAK9E,aAAa8E,KAAKrJ,OAAOkG,WACtDD,EAAkB0Z,EAAYtW,KAAK9E,aAAa8E,KAAKrJ,OAAOiG,iBACxD0Z,EAAYtW,KAAK9E,aAAanC,aAC9BuF,EAAiBgY,EAAYtW,KAAK9E,aAAanC,WAAWE,UAE9DF,EAAaud,EAAYtW,KAAK9E,aAAanC,YAEC,QAA5CiH,KAAKrJ,OAAOmF,aAAaQ,gBAA4Bga,EAAY9e,OAAQ,CAEzE,GADA4C,EAAQkc,EAAYtW,KAAK9E,aAAad,MACU,UAA5C4F,KAAKrJ,OAAOmF,aAAaQ,eACzB+wB,EAAW,SACXlzB,EAAQmc,EAAYtW,KAAK9E,aAAaf,UAErC,IAAgD,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,eAA4B,CAC1D+wB,EAAW,OACX,IAAI4d,GAAmB5xC,EAAoBid,EAAYtW,KAAK9E,cAAc1D,OACtEizC,EAAmBn0B,EAAYtW,KAAK9E,aAAaf,KACrDA,GAAS8wC,EAAmB,EAAMR,EAAmBQ,QAEpD,IAAgD,UAA5CjrC,KAAKrJ,OAAOmF,aAAaQ,eAA4B,CAC1D+wB,EAAW,SACNrtB,KAAK7E,eAAiB,GAAKk2C,IAAqBD,IACjDl3C,EAAMnB,WAAasD,YAAWia,EAAYtW,KAAK9E,cAC/ChB,EAAMoE,eAAiBpE,EAAMnB,WAAWE,eACjCiB,GAAMnB,WAAWQ,mBACjBW,GAAMnB,WAAWiH,KAAKrJ,OAAOoG,cAExC,IAAI80C,GAAoBx4C,EAAoBid,EAAYtW,KAAK9E,cAAc1D,OACvEs6C,EAAoBx7B,EAAYtW,KAAK9E,aAAaf,KAClD6F,MAAK7E,eAAiB,IACtBjB,EAAME,MAAQA,EAAQ,GAE1BD,EAAS03C,EAAoB,EAAMC,EAAoBD,IACnD7xC,KAAK/E,kBACLf,EAAMG,SAAS2F,KAAKrJ,OAAOiG,iBAAmB1C,EAAM8F,KAAKrJ,OAAOiG,iBAAmBC,EAC9ElF,oBAAkBuC,EAAMnB,aACzBiE,EAAgBlF,EAAKoC,EAAMnB,WAAY,MAAOiH,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBf,IAsB7F,GAlBgD,UAA5C8F,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,kBAC3E0D,KAAK7E,eAAiB,GAAKk2C,IAAqBj3C,GAASg3C,IAC1Dl3C,EAAMoE,eAAiBA,EACvBpE,EAAMnB,WAAasD,YAAWtD,SACvBmB,GAAMnB,WAAWQ,mBACjBW,GAAMnB,WAAWiH,KAAKrJ,OAAOoG,eAExC7C,EAAME,MAAQA,EACV4F,KAAK/E,kBACLf,EAAMG,SAAS2F,KAAKrJ,OAAOiG,iBAAmB1C,EAAM8F,KAAKrJ,OAAOiG,iBAAmBA,EAC9EjF,oBAAkBuC,EAAMnB,aACzBiE,EAAgBlF,EAAKoC,EAAMnB,WAAY,MAAOiH,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBf,KAI7E,MAAZmzB,IAAqBrtB,KAAK7E,eAAiB,GAAKk2C,IAAqBD,IACrEruC,EAAK5I,MAAqB,WAAbkzB,EAAwBlzB,EAAQA,EAAQ,GAET,WAA5C6F,KAAKrJ,OAAOmF,aAAaQ,eAA6B,CACtD,GAAI1F,GAAcoJ,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eACrDmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,UACnEmM,GAAK5I,MAAQvD,EAAWY,QAG5BG,oBAAkBuC,EAAME,SACxBF,EAAME,MAAQA,GAElBF,EAAMZ,iBAAkB,EACxBY,EAAMX,gBACNW,EAAMC,MAAQ,EAOlB,GALoB,QAAhB4I,EAAKxH,SACLyE,KAAK2sC,oBAAuBvyC,MAAOF,EAAME,MAAOrB,WAAYmB,EAAMnB,WAAYE,SAAUiB,EAAMjB,SAC1FoB,SAAUH,EAAMG,SAAUiE,eAAgB3G,oBAAkBuC,EAAMnB,gBAAc4gB,GAAYzf,EAAMnB,WAAWE,SAC7GM,aAAcW,EAAMX,eAEH,WAArBwJ,EAAKlD,YAEL,IAAK,GADDkyC,GAAgBhvC,EAAKtE,KAChBnH,EAAI,EAAGA,EAAIy6C,EAAcv6C,OAAQF,IACtC,GAAIy6C,EAAcz6C,GAAGyB,WAAY,CACzBA,EAAaC,EAAcgH,KAAKrJ,OAAQo7C,EAAcz6C,GAAGyB,WAAWE,SACxE,KAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,GAAIimC,GAAaxmC,EAAWQ,aAAaiF,QAAQuzC,EAAcz6C,GAC/DyB,GAAWQ,aAAauD,OAAOyiC,EAAY,IAK3D,MAAOx8B,IAOXupC,EAAK9vC,UAAU4wB,UAAY,SAAU3uB,EAAMtE,EAAOkzB,GAI9C,GAHIrtB,KAAKrJ,OAAOmF,aAAaQ,iBAAmB0D,KAAK0sC,wBAA0D,OAAhC1sC,KAAK0sC,yBAChF1sC,KAAK0sC,uBAAyB1sC,KAAKrJ,OAAOmF,aAAaQ,gBAEtD0D,KAAK/E,iBAAoBtD,oBAAkB8G,KAASnG,OAAOmE,eAAeC,KAAK+B,EAAMuB,KAAKrJ,OAAOoG,cAiB9F0B,GACItE,GAAS,GACT6F,KAAK7E,cAAgBhB,EACrB6F,KAAK9E,YAAcf,IAGnB6F,KAAK7E,cAAgB6E,KAAKrJ,OAAO6tB,iBACjCxkB,KAAK9E,YAAc8E,KAAKrJ,OAAO6tB,kBAE/B6I,GACArtB,KAAKrJ,OAAO0jB,eAAgBve,cAAgBQ,eAAgB+wB,KAAc,GAE9ErtB,KAAKrJ,OAAOiB,KAAKoE,WAAWoxB,UAAU3uB,EAAMtE,IAG5C6F,KAAKrJ,OAAOiB,KAAKoE,WAAWoxB,UAAU3uB,EAAMtE,OAhCiE,CACjH,GAAI+xC,MACA8F,EAAmBhyC,KAAKrJ,OAAOmF,aAAaC,KAC5Ck2C,EAAuBjyC,KAAKrJ,OAAOiB,KAAKkE,aAAaC,IACzDmwC,GAAWzzC,KAAKgG,GAChBuB,KAAKrJ,OAAO0jB,eAAgBve,cAAgBC,KAAM,WAAa,GAC/DiE,KAAKrJ,OAAOiB,KAAKyiB,eAAgBve,cAAgBC,KAAM,WAAa,GAC/DpE,oBAAkB01B,IACnBrtB,KAAKrJ,OAAO0jB,eAAgBve,cAAgBQ,eAAgB+wB,KAAc,EAE9E,IAAI2e,IAAmB17B,aAAc47B,EAAYpxB,kBAAoBC,kBACrE/a,MAAKrJ,OAAOwY,O7BlxBD,a6BkxB4B68B,eAAgBA,EAAgB7xC,MAAOA,IAC9E6F,KAAKrJ,OAAO0jB,eAAgBve,cAAgBC,KAAMi2C,KAAsB,GACxEhyC,KAAKrJ,OAAOiB,KAAKyiB,eAAgBve,cAAgBC,KAAMk2C,KAA0B,GACjFjyC,KAAKrJ,OAAOszB,YA2BpBqiB,EAAK9vC,UAAU01C,iBAAmB,WAC9B,MAAOlyC,MAAKrJ,OAAOiB,KAAKoE,WAAWk2C,oBAMvC5F,EAAK9vC,UAAU21C,YAAc,WACzBnyC,KAAKrJ,OAAOiB,KAAKoE,WAAWm2C,eAEhC7F,EAAK9vC,UAAUywC,aAAe,SAAU5vC,GAC/B1F,oBAAkB0F,EAAE0F,KAAKlD,cACY,WAAlCxC,EAAE0F,KAAKlD,YAAYiF,YAA6D,SAAlCzH,EAAE0F,KAAKlD,YAAYiF,aAC3B,UAAlC9E,KAAKrJ,OAAOmF,aAAaC,MAAsD,cAAlCsB,EAAE0F,KAAKlD,YAAYiF,cACxE9E,KAAK6uC,YAAY7uC,KAAKrJ,OAAOiB,KAAKhB,WAAYoJ,KAAKrJ,OAAOkI,UAAWmB,KAAKrJ,OAAO8G,0BAC7EuC,KAAKrJ,OAAOqI,YAAcgB,KAAKrJ,OAAOsI,oBAAsBe,KAAKrJ,OAAO8X,gBACpEzO,KAAKrJ,OAAOiB,KAAKhB,WAAWY,SAAWwI,KAAKrJ,OAAOyV,qBAAqB5U,QACxEwI,KAAK6uC,YAAY7uC,KAAKrJ,OAAOiB,KAAKhB,WAAYoJ,KAAKrJ,OAAOyV,qBAAsBpM,KAAKrJ,OAAO8G,2BAU5G6uC,EAAK9vC,UAAUoxB,SAAW,SAAUhnB,EAAU2I,GACJ,SAAlCvP,KAAKrJ,OAAOmF,aAAaC,MAAqD,UAAlCiE,KAAKrJ,OAAOmF,aAAaC,OAC/B,UAAlCiE,KAAKrJ,OAAOmF,aAAaC,OACzBiE,KAAKkvC,WAAY,EACjBlvC,KAAKmvC,mBAAmB,UAE5BnvC,KAAKrJ,OAAOiB,KAAKoE,WAAW4xB,SAAShnB,EAAU2I,KAGhD+8B,KCr6BP8F,GAA+B,WAC/B,QAASA,GAAcz7C,GACnB8L,OAAKC,OAAO2vC,iBACZryC,KAAKrJ,OAASA,EAoBlB,MAZAy7C,GAAc51C,UAAUoG,cAAgB,WACpC,MAAO,iBAQXwvC,EAAc51C,UAAUsK,QAAU,aAG3BsrC,KCpBPE,GAA2B,WAC3B,QAASA,GAAU37C,GACf8L,OAAKC,OAAO6vC,aACZvyC,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAyGT,MA9FAkrC,GAAU91C,UAAUoG,cAAgB,WAChC,MAAO,aAEX0vC,EAAU91C,UAAU4K,iBAAmB,WACnCpH,KAAKrJ,OAAO0Q,GAAG,eAAgBrH,KAAKwyC,aAAcxyC,MAClDA,KAAKrJ,OAAO0Q,GAAG,kBAAmBrH,KAAKyyC,gBAAiBzyC,MACxDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,yBAA0BrH,KAAK0yC,oBAAqB1yC,MACxEA,KAAKrJ,OAAO0Q,GAAG,iBAAkBrH,KAAK2yC,eAAgB3yC,MACtDA,KAAKrJ,OAAO0Q,GAAG,oBAAqBrH,KAAK4yC,kBAAmB5yC,MAC5DA,KAAKrJ,OAAO0Q,GAAG,iBAAkBrH,KAAK6yC,eAAgB7yC,OAM1DsyC,EAAU91C,UAAUkL,oBAAsB,WAClC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,eAAgB5H,KAAKwyC,cACrCxyC,KAAKrJ,OAAOiR,IAAI,kBAAmB5H,KAAKyyC,iBACxCzyC,KAAKrJ,OAAOiR,IAAI,iBAAkB5H,KAAK2yC,gBACvC3yC,KAAKrJ,OAAOiR,IAAI,oBAAqB5H,KAAK4yC,mBAC1C5yC,KAAKrJ,OAAOiR,IAAI,iBAAkB5H,KAAK6yC,gBACvC7yC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,yBAA0B5H,KAAK0yC,uBAExDJ,EAAU91C,UAAUk2C,oBAAsB,SAAU3vC,GAEhDA,EAAY,SAAI,GAEpBuvC,EAAU91C,UAAUg2C,aAAe,WAI/B,IAAK,GAHDM,GAAY9yC,KAAKrJ,OAAOkI,UAAUzB,OAAO,SAAUC,GACnD,OAAQA,EAAEiI,UAAUC,SAAS,iBAExBjO,EAAI,EAAGA,EAAIw7C,EAAUt7C,OAAQF,IAAK,CACvC,GAAIy7C,GAAWD,EAAUx7C,GAAG2c,uBAAuB,uBAC/C++B,EAAahzC,KAAKrJ,OAAOiB,KAAKsc,oBAAoB4+B,EAAUx7C,GAAG8R,aAAa,aAC5ErQ,EAAaP,YAAU,aAAcwH,KAAKrJ,OAAOiB,KAAK6F,wBAAwBnG,KAC9EK,oBAAkBoB,KAAgBpB,oBAAkBoB,IACpDL,EAAgBsH,KAAKrJ,OAAQq8C,EAAWv0C,KAAMuB,KAAKrJ,OAAOiB,KAAK6F,2BAC/DuC,KAAKrJ,OAAOiB,KAAK0c,gBAAgBrF,OAAO8jC,EAAS,MAI7DT,EAAU91C,UAAUm2C,eAAiB,SAAU5vC,GAC3C,GAAIkwC,GAAmBlwC,EAAKpE,IAAIsV,uBAAuB,sBAClDtc,qBAAkBs7C,EAAiB,KACpCjzC,KAAKrJ,OAAOiB,KAAK0c,gBAAgBrF,OAAOgkC,EAAiB,KAGjEX,EAAU91C,UAAUo2C,kBAAoB,SAAU7vC,GAC9C,IAAIrM,EAAasJ,KAAKrJ,QAGtB,IAAK,GAAIW,GAAI,EAAGA,EAAIyL,EAAKyvB,WAAWh7B,OAAQF,IACxCyL,EAAKyvB,WAAWl7B,GAAGmD,MAAMG,QAAUmI,EAAKxH,QAGhD+2C,EAAU91C,UAAUi2C,gBAAkB,SAAU1vC,GAC5C,GAAItE,GAAOsE,EAAKtE,KACZE,EAAMoE,EAAKmwC,cAAcj0B,cAAck0B,gBAEvCC,EAAc,kBADLz7C,oBAAkB8G,EAAK1F,YAAsC0F,EAAKtE,MAA7BsE,EAAK1F,WAAWoB,OACrB,QAAUsE,EAAKrE,MACxDi5C,EAAY10C,EAAIqJ,cAAc,IAAMorC,GAAa9tC,UACjDguC,KAAc9tC,MAAM9I,KAAK22C,GAAWj2C,OAAO,SAAUm2C,GAAa,MAAQA,KAAcH,IACxFI,EAAQF,EAAS,GAAG97C,OAEpBi8C,EAAc,eADDH,EAASxuC,WAAWU,MAAM,EAAGguC,EAE9CpmC,aAAUrK,EAAKmwC,cAAcj0B,eAAgBw0B,IAEjDnB,EAAU91C,UAAUq2C,eAAiB,SAAU9vC,GAC3C,GAAyB,cAArBA,EAAKlD,aAAoD,QAArBkD,EAAKlD,YAAuB,CAChE,GAAI6zC,GAAS3wC,EAAKpE,IAAI8G,iBAAiB,eAAe,GAAG2D,aAAa,WAElEuqC,GADQtkC,SAASqkC,EAAO,IAAM,GACX5uC,UACvB/B,GAAKpE,IAAI8G,iBAAiB,eAAe,GAAGwE,aAAa,UAAW0pC,GAGxE,IAAK,GADDC,GAAe5zC,KAAKrJ,OAAOiB,KAAKie,cAAchX,UACzCvH,EAAI,EAAGA,EAAIs8C,EAAap8C,OAAQF,IACrCs8C,EAAat8C,GAAGoI,MAAM,GAAG6wB,SAAU,CAErB/3B,aAAU,cAAewH,KAAKrJ,OAAOiB,MAErC,eAAE,IAAQoN,KAAMhF,KAAKrJ,OAAOiB,KAAKie,cAAchX,aAQrEyzC,EAAU91C,UAAUsK,QAAU,WAC1B9G,KAAK0H,uBAEF4qC,KCtHP7xC,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEnE,eAAea,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnE,UAAkB,OAANoE,EAAatI,OAAO2I,OAAOL,IAAMG,EAAGvE,UAAYoE,EAAEpE,UAAW,GAAIuE,QAWnF8yC,GAA4C,SAAU/xC,GAEtD,QAAS+xC,GAA2Bl9C,EAAQm9C,GACxC,GAAIvvC,GAAQzC,EAAOpF,KAAKsD,KAAMrJ,EAAQm9C,IAAY9zC,IAalD,OAZAuE,GAAMwvC,kBAAmB,EACzBxvC,EAAMyvC,WAAa,EACnBzvC,EAAM0vC,SAAW,EACjB1vC,EAAM2vC,aAAc,EAEpB3vC,EAAM4tB,YAAc,EACpB5tB,EAAM6nC,UAAY,EAClB7nC,EAAM4vC,aAAe,EACrB5vC,EAAM6vC,gBAAiB,EAEvB7vC,EAAM0nB,qBAAsB,EAC5B1nB,EAAM6C,mBACC7C,EAyYX,MAxZA9D,IAAUozC,EAA4B/xC,GAiBtC+xC,EAA2Br3C,UAAU63C,kBAAoB,WACrD,MAAO,IAAItU,IAA6B//B,KAAKrJ,SAEjDk9C,EAA2Br3C,UAAUoC,cAAgB,SAAUzE,GAC3D,MAAO6F,MAAKrJ,OAAOs5B,cAAc7yB,OAAO,SAAUC,GAAK,MAAOgS,UAAShS,EAAE+L,aAAa,iBAAkB,MAAQjP,IAAU,IAE9H05C,EAA2Br3C,UAAU4K,iBAAmB,WACpDpH,KAAKrJ,OAAO0Q,GhCmDW,sBgCnDkBrH,KAAKs0C,mBAAoBt0C,MAClEA,KAAKrJ,OAAO0Q,GhCsDO,iBgCtDkBrH,KAAKu0C,cAAev0C,OAE7D6zC,EAA2Br3C,UAAU83C,mBAAqB,SAAUvxC,GAC5DA,EAAKyxC,QACLx0C,KAAKg0C,WAAa,EAClBh0C,KAAKmyB,WAAa,EAClBnyB,KAAKosC,SAAWpsC,KAAKrJ,OAAOmX,aAAa03B,SAAW,GAE/CziC,EAAKgxC,mBACV/zC,KAAK+zC,kBAAmB,IAGhCF,EAA2Br3C,UAAU+3C,cAAgB,SAAUxxC,GAC3D,GAAIi5B,GAAUh8B,KAAKrJ,OAAOm5B,aAAa9nB,cAAc,aACrD,IAAIhI,KAAKk0C,aAAel0C,KAAKmyB,YAAc,GAAKnyB,KAAKosC,UAAY,EAAG,CAChE,GAAIpsC,KAAKosC,SAAWrpC,EAAKuI,MAAQtL,KAAKrJ,OAAOmX,aAAa03B,SAAU,CAChE,GAAIiP,MAAqBzY,EAAQpK,UAAY5xB,KAAKrJ,OAAOk7B,gBACrD6iB,EAAYD,EAAkBz0C,KAAKrJ,OAAOkI,UAAUrH,MACpDk9C,GAAY3xC,EAAKuI,QACjBopC,EAAYD,GACP1xC,EAAKuI,MAAQmpC,IAEtBz0C,KAAKmyB,WAAauiB,EAAY10C,KAAKrJ,OAAOkI,UAAUrH,OACpDwI,KAAKosC,SAAWsI,MAGhB10C,MAAKmyB,YAAc,EACnBnyB,KAAKosC,UAAY,CAErBpsC,MAAKk0C,aAAc,EAEnBl0C,KAAKisB,sBACLjsB,KAAKmyB,WAAa,EAClBnyB,KAAKosC,SAAWpsC,KAAKrJ,OAAOmX,aAAa03B,SAAW,GAExDziC,EAAKovB,WAAanyB,KAAKmyB,WACvBpvB,EAAKqpC,SAAWpsC,KAAKosC,UAEzByH,EAA2Br3C,UAAU0vB,cAAgB,SAAU3wB,GAC3D,GAAIgJ,GAAQvE,IACNA,MAAKrJ,OAAOC,qBAAsBC,oBAAyD8iB,KAA1C3Z,KAAKrJ,OAAOC,WAAWA,WAAWupC,KAClFngC,KAAKrJ,OAAOC,WAAWA,WAAW0pB,SAAqD,KAA1CtgB,KAAKrJ,OAAOC,WAAWA,WAAWupC,KAAgB/oC,EAAgB4I,KAAKrJ,QAuBvHmL,EAAOtF,UAAU0vB,cAAcxvB,KAAKsD,KAAM,OAtB1CA,KAAKrJ,OAAO4E,GAAQ,aAAcyE,KAAK20C,YAAa30C,MAEpDA,KAAK2U,GAAK,WACNpQ,EAAMqwC,UAAUC,SAAS,SAAUC,GAAc,MAAOvwC,GAAMwwC,gBAAgBD,KAC9EvwC,EAAM5N,OAAOiR,IAAI,gBAAiBrD,EAAMoQ,KAE5C3U,KAAKrJ,OAAOyQ,iBAAiB,YAAapH,KAAKg1C,eAAej9B,KAAK/X,OACnEA,KAAKrJ,OAAOyQ,iBAAiB,cAAepH,KAAKi1C,iBAAiBl9B,KAAK/X,OACvEA,KAAKrJ,OAAO4E,GAAQ,qBAAsByE,KAAKk1C,mBAAoBl1C,MACnEA,KAAKrJ,OAAO0Q,GAAG,gBAAiBrH,KAAK2U,GAAI3U,MACzCA,KAAKrJ,OAAOyQ,iBhClFI,iBgCkFoCpH,KAAKm1C,iBAAiBp9B,KAAK/X,OAC/EA,KAAKrJ,OAAO4E,GAAQ,mCAAoCyE,KAAKsoB,UAAWtoB,MACxEA,KAAKrJ,OAAO4E,GAAQ,kCAAmCyE,KAAK8sC,SAAU9sC,MACtEA,KAAKrJ,OAAO4E,GAAQ,8BAA+ByE,KAAKo1C,mBAAoBp1C,MAC5EA,KAAKrJ,OAAO4E,GAAQ,aAAcyE,KAAKq1C,iBAAkBr1C,MACzDA,KAAKrJ,OAAO4E,GAAQ,mBAAoByE,KAAKs1C,QAASt1C,MACtDA,KAAKrJ,OAAO4E,GAAQ,6BAA8ByE,KAAKu1C,WAAYv1C,MACnEA,KAAKrJ,OAAO4E,GAAQ,6BAA8ByE,KAAKw1C,yBAA0Bx1C,MACjFA,KAAKrJ,OAAO4E,GAAQ,iCAAkCyE,KAAKy1C,YAAaz1C,MACxEA,KAAKrJ,OAAO4E,GAAQ,qBAAsByE,KAAK01C,UAAW11C,QAMlE6zC,EAA2Br3C,UAAUk5C,UAAY,SAAUr4C,GAEvDyE,EAAOtF,UAA0B,iBAAEE,KAAKsD,KAAM3C,IAElDw2C,EAA2Br3C,UAAUm4C,YAAc,SAAUt3C,GACzDyE,EAAOtF,UAAUm4C,YAAYj4C,KAAKsD,KAAM3C,GAClC2C,KAAKrJ,OAAOC,qBAAsBC,oBAAyD8iB,KAA1C3Z,KAAKrJ,OAAOC,WAAWA,WAAWupC,KAClFngC,KAAKrJ,OAAOC,WAAWA,WAAW0pB,SAAqD,KAA1CtgB,KAAKrJ,OAAOC,WAAWA,WAAWupC,KAAgB/oC,EAAgB4I,KAAKrJ,UAClHgB,oBAAkB0F,EAAEiO,SACrBtL,KAAKmsC,aAAe9uC,EAAEiO,MACtBjN,WAAS,aAAc2B,MAAM21C,iBAAiB31C,KAAKrJ,OAAOk7B,eAAiBx0B,EAAEiO,MAAO,WAElF3T,oBAAkB0F,EAAEwC,cAA6C,gBAA7BxC,EAAEwC,YAAYiF,YAAiC9E,KAAKisB,uBAC1FjsB,KAAK41C,SAAShkB,UAAY,EAC1B5xB,KAAKisB,qBAAsB,KAIvC4nB,EAA2Br3C,UAAU2vB,YAAc,WAC/CrqB,EAAOtF,UAAU2vB,YAAYzvB,KAAKsD,MAC5BA,KAAKrJ,OAAOC,qBAAsBC,oBAAyD8iB,KAA1C3Z,KAAKrJ,OAAOC,WAAWA,WAAWupC,KAClFngC,KAAKrJ,OAAOC,WAAWA,WAAW0pB,SAAqD,KAA1CtgB,KAAKrJ,OAAOC,WAAWA,WAAWupC,KAAgB/oC,EAAgB4I,KAAKrJ,UACvH0H,WAAS,WAAY2B,MAAMD,QAAQ81C,eAAgB,EACnD71C,KAAK40C,UAAY,GAAIkB,IAAyBz3C,WAAS,WAAY2B,MAAMiQ,QAAS5R,WAAS,WAAY2B,MAAMD,SAC7GC,KAAK41C,SAAW51C,KAAK+1C,WAAWhsC,aAGxC8pC,EAA2Br3C,UAAUw5C,cAAgB,SAAUC,EAAMC,EAASC,EAAMC,GAChF,MAAKp2C,MAAKrJ,OAAOC,qBAAsBC,oBAAyD8iB,KAA1C3Z,KAAKrJ,OAAOC,WAAWA,WAAWupC,MAChFngC,KAAKrJ,OAAOC,WAAWA,WAAW0pB,SAAqD,KAA1CtgB,KAAKrJ,OAAOC,WAAWA,WAAWupC,KAAe/oC,EAAgB4I,KAAKrJ,QACnHqJ,KAAKo0C,gBACLp0C,KAAKo0C,gBAAiB,EACfp0C,KAAKm0C,eAGZn0C,KAAKm0C,aAAeryC,EAAOtF,UAAUw5C,cAAct5C,KAAKsD,KAAMi2C,EAAMC,EAASC,EAAMC,GAC5Et0C,EAAOtF,UAAUw5C,cAAct5C,KAAKsD,KAAMi2C,EAAMC,EAASC,EAAMC,IAInEt0C,EAAOtF,UAAUw5C,cAAct5C,KAAKsD,KAAMi2C,EAAMC,EAASC,EAAMC,IAG9EvC,EAA2Br3C,UAAUw4C,eAAiB,WAGlD,GAAIh1C,KAAKrJ,OAAOkI,UAAUrH,SAAWwI,KAAkB,gBAAMrI,oBAAkBqI,KAAKrJ,OAAOiI,cAAc,IAAK,CAC1G,GAAIq6B,GAASj5B,KAAKrJ,OAAOiI,cAAc,GAAG49B,wBAAwB/C,IAC9D4c,EAAUr2C,KAAKrJ,OAAOsZ,QAAQusB,wBAAwB/C,GAEtDz5B,MAAkB,cADlBi5B,EAAS,EACaj5B,KAAKrJ,OAAOiI,cAAc,GAAG49B,wBAAwB/C,IAAM4c,EAG3Dr2C,KAAKg8B,QAAQQ,wBAAwB/C,IACvDz5B,KAAKrJ,OAAOiI,cAAc,GAAG49B,wBAAwBzZ,OAGjEjhB,EAAOtF,UAAsB,UAAEE,KAAKsD,OAExC6zC,EAA2Br3C,UAAUy4C,iBAAmB,SAAUlyC,GAE9DjB,EAAOtF,UAAqB,YAAEE,KAAKsD,KAAM+C,IAE7C8wC,EAA2Br3C,UAAU04C,mBAAqB,SAAUnyC,GAChE,IAAI/C,KAAKrJ,OAAO6zB,OAAhB,CAIA1oB,EAAOtF,UAA0B,iBAAEE,KAAKsD,KAAM+C,KAElD8wC,EAA2Br3C,UAAUi5C,YAAc,SAAUvS,GACzDA,EAAOxjC,MAAQM,KAAKs2C,iBAExBzC,EAA2Br3C,UAAU85C,cAAgB,WAEjD,IAAK,GADD52C,MACKpI,EAAI,EAAGA,EAAI0I,KAAKrJ,OAAOY,QAAQC,OAAQF,IAC5CoI,EAAMjH,KAAKuH,KAAKu2C,aAAav2C,KAAKrJ,OAAOY,QAAQD,IAErD,OAAOoI,IAEXm0C,EAA2Br3C,UAAU+5C,aAAe,SAAU52C,EAAQ62C,EAAOC,EAAUC,EAASC,EAAQC,GACpG,GAAIxyC,IACAmsB,QAAW5wB,EAAO4wB,QAClBsmB,YAAel/C,oBAAkBgI,EAAO4P,OAAS5P,EAAOgQ,UACxDmnC,YAAen/C,oBAAkBgI,EAAOgQ,UACxConC,MAASP,EACT72C,OAAUA,EACV82C,SAAa9+C,oBAAkB8+C,GAAuB38B,WAASk9B,KAApBP,EAC3CC,QAAWA,EACX30B,SAAYpiB,EAAOoiB,SACnBk1B,aAAgBt3C,EAAOu3C,iBAAmBv3C,EAAOu3C,kBACjDN,eAAkBj3C,EAAOu3C,iBAAmBv3C,EAAOu3C,mBAAqB74C,WAASsB,EAAO4P,MAAOqnC,GAKnG,QAHIxyC,EAAIyyC,YAAkC,aAApBzyC,EAAIzE,OAAOqD,MAAuBoB,EAAI2d,YACxD3d,EAAIjK,MAAQw8C,GAET,GAAIQ,QAAK/yC,IAEpByvC,EAA2Br3C,UAAU8rB,UAAY,SAAUjrB,GACvD,GAAIs0C,GAAW,yBAA2Bt0C,EAAElD,MAAQ,KAChDA,EAAQ6F,KAAKrJ,OAAOm5B,aAAa9nB,cAAc2pC,GAAU/qC,SACzD+B,EAAU3I,KAAKrJ,OAAO8G,wBAAwBtD,EAClDkD,GAAEoB,KAAOkK,GAEbkrC,EAA2Br3C,UAAUswC,SAAW,SAAU/pC,GACtD,GAEI4qC,IAAYrxC,eAAgB0D,KAAKo3C,YAAal8C,YAAa8E,KAAK9E,YAAa0yC,aAAc5tC,KAAK4tC,aACpG5tC,MAAKrJ,OAAOwY,OAAO,mBAAoBw+B,GACvC3tC,KAAKo3C,YAAczJ,EAAQrxC,eAC3B0D,KAAK9E,YAAcyyC,EAAQzyC,YAC3B8E,KAAK4tC,aAAeD,EAAQC,YAC5B,IAAI5oC,GAAOhF,KAAKrJ,OAAOkI,UACnBqyC,EAAiBlsC,EAAKxN,QAAUwN,EAAK,GAAGoE,aAAa,iBAAmB,EACxE+nC,EAAgBnsC,EAAKxN,QAAUwN,EAAKA,EAAKxN,OAAS,GAAG4R,aAAa,iBAAmB,EACrFiuC,EAAcr3C,KAAKrJ,OAAO6tB,kBAAoB0sB,GAAkBlxC,KAAKrJ,OAAO6tB,kBAAoB2sB,CACzE,SAArBnxC,KAAKo3C,aAA8C,WAArBp3C,KAAKo3C,cACrCp3C,KAAU,OAAI,GAEO,QAArBA,KAAKo3C,aAA8C,WAArBp3C,KAAKo3C,cAChCp3C,KAAK9E,cAAqC,IAAtB8E,KAAK9E,cAA0D,IAAlC8E,KAAKrJ,OAAO6tB,kBAA4B6yB,IAC5Fv1C,EAAOtF,UAAmB,eAAEE,KAAKsD,KAAM+C,IAG/C8wC,EAA2Br3C,UAAU86C,iBAAmB,WAEpDx1C,EAAOtF,UAAqB,YAAEE,KAAKsD,OAEvC6zC,EAA2Br3C,UAAU64C,iBAAmB,WAGpDr1C,KAAKrJ,OAAOwY,OAAO,uBACO,QAArBnP,KAAKo3C,aAA8C,WAArBp3C,KAAKo3C,cAA6Bp3C,KAAU,OAC3E8B,EAAOtF,UAAqB,YAAEE,KAAKsD,OAG3C6zC,EAA2Br3C,UAAU44C,mBAAqB,WACtD,GACIpZ,GAAUh8B,KAAKrJ,OAAOm5B,aAAa9nB,cAAc,aACjDhI,MAAU,OAAKg8B,EAAQh0B,cAAc,iBACrChI,KAAKk0C,aAAc,IAG3BL,EAA2Br3C,UAAU+4C,WAAa,SAAUxyC,GAExDjB,EAAOtF,UAAoB,WAAEE,KAAKsD,KAAM+C,IAE5C8wC,EAA2Br3C,UAAUg5C,yBAA2B,SAAUzyC,GAEtEjB,EAAOtF,UAAgC,uBAAEE,KAAKsD,KAAM+C,IAExD8wC,EAA2Br3C,UAAU+6C,cAAgB,WACjD,GACIvb,GAAUh8B,KAAKrJ,OAAOm5B,aAAa9nB,cAAc,aACjDhI,MAAU,QAAMg8B,EAAQh0B,cAAc,iBACtChI,KAAKrJ,OAAO6zB,QAAS,EACrBxqB,KAAKrJ,OAAOy2B,cAGpBymB,EAA2Br3C,UAAU84C,QAAU,SAAU72C,GAErDqD,EAAOtF,UAAwB,eAAEE,KAAKsD,KAAMvB,IAEhDo1C,EAA2Br3C,UAAU24C,iBAAmB,SAAUpyC,GAC9D,GAAyB,QAArBA,EAAKlD,YAAuB,CAC5B,GAAI8tC,IAAYrxC,eAAgB0D,KAAKo3C,YAAal8C,YAAa8E,KAAK9E,YAAa0yC,aAAc5tC,KAAK4tC,aACpG5tC,MAAKrJ,OAAOwY,OAAO,mBAAoBw+B,GACvC3tC,KAAKo3C,YAAczJ,EAAQrxC,eAC3B0D,KAAK9E,YAAcyyC,EAAQzyC,YAC3B8E,KAAK4tC,aAAeD,EAAQC,aAGhC9rC,EAAOtF,UAAwB,eAAEE,KAAKsD,KAAM+C,IAEhD8wC,EAA2Br3C,UAAUu4C,gBAAkB,SAAUD,GAC7D,GAAIqB,GAAOrB,EAAW0C,SAElBxb,EAAUh8B,KAAKrJ,OAAOm5B,aAAa9nB,cAAc,cACjD2pB,EAFY,GAEe3xB,KAAKrJ,OAAOk7B,eACvC4lB,EAAY3C,EAAW4C,OAAOje,IAAMz5B,KAAKg0C,WAAc,EACvD2D,EAAankC,KAAKC,KAAKqhC,EAAW4C,OAAOje,IAAMz5B,KAAKg0C,aAAeriB,CAEvE,IAAI8lB,EAAU,CACV,GAAIG,KAAY53C,KAAKrJ,OAAOosB,OAAOje,WAAWtG,QAAQ,KAAO,EAAIwB,KAAKrJ,OAAOosB,OACzE/iB,KAAKrJ,OAAOsZ,QAAQusB,wBAAwBzZ,QAC5C5oB,KAAY6hC,EAAQpK,UAAY5xB,KAAKrJ,OAAOk7B,gBAC1Cre,KAAKC,KAAKmkC,EAAU53C,KAAKrJ,OAAOk7B,gBAChC7xB,KAAKrJ,OAAOmX,aAAa03B,QAO/B,IANArrC,EAASA,EAAQ,EAAKA,EAAQ,EACzBxC,oBAAkBqI,KAAqB,oBAAiC,GAA3BA,KAAqB,kBAAW7F,GAAS6F,KAAqB,mBAC5G7F,EAAQ6F,KAAqB,kBAEjCA,KAAKmyB,WAAah4B,EAClB6F,KAAKosC,SAAWjyC,EAAQ6F,KAAKrJ,OAAOmX,aAAa03B,SAC7CxlC,KAAKosC,SAAWpsC,KAAKmsC,aAAc,CACnC,GAAI0L,GAAU73C,KAAKmsC,aAAe,EAC9B2L,EAAU93C,KAAKosC,SAAWyL,CAC9B73C,MAAKosC,SAAWyL,EAChB73C,KAAKmyB,WAAcnyB,KAAKmyB,WAAa2lB,EAAW,EAAI,EAAK93C,KAAKmyB,WAAa2lB,EAG/E,GAAIC,GAAQvkC,KAAKC,KAAKqhC,EAAW4C,OAAOje,IAAMz5B,KAAKrJ,OAAOk7B,eAC1DkmB,IAAgB/3C,KAAKrJ,OAAOmX,aAAa03B,QACzC,IAAIwS,GAAa,CAOjB,IANKrgD,oBAAkBqI,KAAKrJ,OAAOkI,UAAUk5C,KACxCpgD,oBAAkBqI,KAAKrJ,OAAOm5B,aAAarqB,iBAAiB,iBAAiBsyC,MAG9EC,GAFWh4C,KAAKrJ,OAAOm5B,aAAarqB,iBAAiB,iBAAiBsyC,GACjE/vC,cAAc,MAAMoB,aAAa,UAGvB,IAAf4uC,EACAh4C,KAAKg0C,WAAac,EAAW4C,OAAOje,QAEnC,CACD,GAAI1W,GAAS/iB,KAAKrJ,OAAOk7B,cACzB7xB,MAAKg0C,WAAcc,EAAW4C,OAAOje,IAvC7B,GAuCgD1W,EAAU,EAC9D+xB,EAAW4C,OAAOje,IAxCd,GAwCiC1W,EAAU,GAAK,OAG3D,IAAI40B,EAAY,CACjB,GAAIlD,MAAqBzY,EAAQpK,UAAY5xB,KAAKrJ,OAAOk7B,gBACrDomB,IAAej4C,KAAqB,iBAAIA,KAAKrJ,OAAOmX,aAAa03B,SAAYxlC,KAAKmsC,aACjFx0C,qBAAkBqI,KAAqB,oBAAiC,GAA3BA,KAAqB,kBACnEy0C,GAAmBz0C,KAAqB,kBAAMi4C,IAC9CxD,EAAkBz0C,KAAqB,iBAE3C,IAAI00C,GAAYD,EAAkBz0C,KAAKrJ,OAAOmX,aAAa03B,QACvDkP,GAAY10C,KAAKmsC,eACjBuI,EAAYD,GACPz0C,KAAKmsC,aAAesI,IAE7Bz0C,KAAKmyB,WAAc8lB,EAA8DxD,EAAhDC,EAAY10C,KAAKrJ,OAAOmX,aAAa03B,SACtExlC,KAAKosC,SAAWsI,EACZI,EAAW4C,OAAOje,IAAOz5B,KAAKrJ,OAAOk7B,eAAiB7xB,KAAKmsC,aAC3DnsC,KAAKg0C,WAAah0C,KAAKg2C,cAAclB,EAAW4C,OAAOje,IAAKuC,EAAQQ,wBAAwBzZ,QAG5F/iB,KAAKg0C,WAAac,EAAW4C,OAAOje,IAG5C,GAAKke,GAAe7C,EAAW4C,OAAOje,IAAOz5B,KAAKrJ,OAAOk7B,eAAiB7xB,KAAKmsC,gBAC5D,CACf,GAAI+L,GAAW75C,WAAS,kBAAmB2B,MAAM+B,MAAM/B,MAAO80C,EAAW98B,UAAWm+B,EAAMrB,EAAW4C,QACrG13C,MAAKm4C,aAAeD,CACpB,IAAI/hC,GAAO+hC,EAASliC,WAAakiC,EAASE,SAAWF,EAAShiC,SAASC,KAAO+hC,EAAS/hC,IACvFnW,MAAKrJ,OAAO0jB,eAAgBvM,cAAgBmI,YAAaE,KAAU,GACnE+hC,EAASG,MAA2B,0BAAnBH,EAASG,MAAoC,gBAAkBH,EAASG,MACzFr4C,KAAKrJ,OAAOwY,OAAO+oC,EAASG,OAASx4C,YAAa,gBAAiB+zC,aAAckB,EAAWlB,iBAGpGC,EAA2Br3C,UAAU87C,cAAgB,SAAUl3C,EAAQm3C,EAAUl7C,GAC7E,GAAK2C,KAAKrJ,OAAOC,qBAAsBC,oBAAyD8iB,KAA1C3Z,KAAKrJ,OAAOC,WAAWA,WAAWupC,MAChFngC,KAAKrJ,OAAOC,WAAWA,WAAW0pB,SAAqD,KAA1CtgB,KAAKrJ,OAAOC,WAAWA,WAAWupC,KAAe/oC,EAAgB4I,KAAKrJ,QACnH0H,WAAS,mBAAoBhB,KAC7B2C,KAAKo0C,gBAAiB,GAE1BtyC,EAAOtF,UAAU87C,cAAc57C,KAAKsD,KAAMoB,EAAQm3C,EAAUl7C,OAE3D,CACD,GAAI84C,GAAO94C,EAAEm7C,YAAYC,cAAoD,MAApCp7C,EAAEm7C,YAAYC,aAAaC,MAChEr6C,WAAS,cAAe2B,MAAMmW,MAAQ9X,WAAS,cAAe2B,MAAMmW,OAAS9Y,EAAEm7C,YAAYriC,KAC3F9X,WAAS,cAAe2B,MAAQ3C,EAAEm7C,YAClCG,EAAUxC,EAAKyC,cAAc,GAAM,EACnCC,EAAU74C,KAAK84C,gBAAgBH,EACnC34C,MAAK+4C,WAAWC,gBAAgB,KAAO5yC,UAAQ6yC,MAA8B,SAAtB7yC,UAAQ+vC,KAAK+C,OACpE93C,EAASpB,KAAKrJ,OAAO4S,cAAc,UAC5BqB,YAAY2tC,EAEnBv4C,MAAKm5C,WAAWnxC,cAAc,SAAgB,YAAE5G,GAC3CpB,KAAK+zC,kBAAwC,IAApB/zC,KAAKg0C,WAI/Bh0C,KAAK+zC,kBAAmB,EAHxB11C,WAAS,aAAc2B,MAAMo5C,YAAYP,EAAS74C,KAAKg0C,YAK3D1hC,WAAS,WAAYtS,KAAKm4C,aAAen4C,KAAKm4C,aAAehC,EAAMn2C,KAGnE8B,GAAOtF,UAAmB,UAAEE,KAAKsD,KAAM3C,EAEnC2C,MAAU,QAAMA,KAAKrJ,OAAOm5B,aAAa9nB,cAAc,cAAcA,cAAc,gBACxD,QAArBhI,KAAKo3C,aAA8C,WAArBp3C,KAAKo3C,cACjCp3C,KAAK4tC,cAAgB5tC,KAAKmyB,WAC1BnyB,KAAKu3C,gBAEAv3C,KAAK9E,aAAe8E,KAAK9E,aAAe,IAC7C8E,KAAU,OAAI,EACdA,KAAKrJ,OAAO6zB,QAAS,IAIjCxqB,KAAKs3C,mBACLx1C,EAAOtF,UAAoB,WAAEE,KAAKsD,QAG1C6zC,EAA2Br3C,UAAUkL,oBAAsB,WACnD1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,aAAc5H,KAAK20C,aACnC30C,KAAKrJ,OAAOiR,IAAI,gBAAiB5H,KAAK2U,IACtC3U,KAAKrJ,OAAOiR,IAAI,qBAAsB5H,KAAKk1C,oBAC3Cl1C,KAAKrJ,OAAOiR,IAAI,YAAa5H,KAAKg1C,gBAClCh1C,KAAKrJ,OAAOiR,IAAI,cAAe5H,KAAKi1C,kBACpCj1C,KAAKrJ,OAAOiR,IhCjUW,sBgCiUmB5H,KAAKs0C,oBAC/Ct0C,KAAKrJ,OAAOiR,IhC9TO,iBgC8TmB5H,KAAKu0C,eAC3Cv0C,KAAKrJ,OAAOiR,IAAI,mCAAoC5H,KAAKsoB,WACzDtoB,KAAKrJ,OAAOiR,IAAI,kCAAmC5H,KAAK8sC,UACxD9sC,KAAKrJ,OAAOiR,IAAI,8BAA+B5H,KAAKo1C,oBACpDp1C,KAAKrJ,OAAOiR,IAAI,aAAc5H,KAAKq1C,kBACnCr1C,KAAKrJ,OAAOiR,IAAI,mBAAoB5H,KAAKs1C,SACzCt1C,KAAKrJ,OAAOiR,IAAI,6BAA8B5H,KAAKu1C,YACnDv1C,KAAKrJ,OAAOiR,IAAI,6BAA8B5H,KAAKw1C,0BACnDx1C,KAAKrJ,OAAOiR,IAAI,iCAAkC5H,KAAKy1C,aACvDz1C,KAAKrJ,OAAOiR,IAAI,qBAAsB5H,KAAK01C,aAExC7B,GACTwF,0BAEEvD,GAA0C,SAAUh0C,GAEpD,QAASg0C,KACL,GAAIvxC,GAAmB,OAAXzC,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,IAKhE,OAJAuE,GAAM+0C,YAAa,EACnB/0C,EAAMg1C,OAAS,EACfh1C,EAAMi1C,QAAU,EAChBj1C,EAAMk1C,MAAQ,EACPl1C,EA+CX,MAtDA9D,IAAUq1C,EAA0Bh0C,GASpCg0C,EAAyBt5C,UAAUq4C,SAAW,SAAU6E,GAEpD53C,EAAOtF,UAAuB,cAAI6B,WAAS,UAAW2B,MAAMuK,UAAUiyB,wBACtE/b,eAAa7W,IAAIvL,WAAS,UAAW2B,MAAMuK,UAAW,SAAUvK,KAAK25C,sBAAsBD,GAAW15C,OAE1G81C,EAAyBt5C,UAAU6jC,MAAQ,WACvCrgC,KAAKw5C,QAAU,MAEnB1D,EAAyBt5C,UAAUm9C,sBAAwB,SAAUD,GACjE,GAAIn1C,GAAQvE,KACR45C,EAAU,EACVC,EAAW,CACf,OAAO,UAAUx8C,GACb,GAAIu0B,GAAYv0B,EAAE+D,OAAOwwB,UACrBiL,EAAax/B,EAAE+D,OAAOy7B,WACtB7kB,EAAY4hC,EAAUhoB,EAAY,OAAS,IAC/C5Z,GAAY6hC,IAAahd,EAAa7kB,EAAY6hC,EAAWhd,EAAa,QAAU,OACpF+c,EAAUhoB,EACVioB,EAAWhd,CACX,IAAI3hB,GAAU7c,WAAS,eAAgBkG,GAAOyT,GAC1C8hC,EAAQ,CACZv1C,GAAMg1C,OAAS3nB,EACM,MAAjBrtB,EAAMi1C,UACNM,EAAQv1C,EAAMg1C,OAASh1C,EAAMi1C,SAEjCj1C,EAAMi1C,QAAUj1C,EAAMg1C,OAClBh1C,EAAMk1C,OACNM,aAAax1C,EAAMk1C,OAEvBl1C,EAAMk1C,MAAQO,WAAWz1C,EAAM87B,MAAO,IAOjCyZ,EAAQ,KAAOA,GAAS,MAASz8C,GAAKA,EAAE48C,iBACzC58C,EAAE68C,aAAc,EAChB78C,EAAE48C,kBAENP,GAAW1hC,UAAWA,EAAWmiC,QAAS51C,EAAM+0C,WAC5C9B,SAAUt8B,EAASw8B,QAAUje,IAAK7H,EAAWqL,KAAMJ,GACnD+W,aAAcza,SAASoY,kBAG5BuE,GACTsE,wBCzeE35C,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEnE,eAAea,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnE,UAAkB,OAANoE,EAAatI,OAAO2I,OAAOL,IAAMG,EAAGvE,UAAYoE,EAAEpE,UAAW,GAAIuE,QAenFs5C,GAA+B,WAM/B,QAASA,GAAc1jD,GACnBqJ,KAAKs6C,gBAAkB,EACvBt6C,KAAKu6C,cAAgB,EACrBv6C,KAAKrJ,OAASA,EACd8L,OAAKC,OAAO83C,IACZx6C,KAAKoH,mBA4HT,MA1HAizC,GAAc79C,UAAUi+C,iBAAmB,SAAU13C,GACjDA,EAAKtE,KAAOuB,KAAKigC,YAQrBoa,EAAc79C,UAAUoG,cAAgB,WACpC,MAAO,iBAMXy3C,EAAc79C,UAAU4K,iBAAmB,WACvCpH,KAAKrJ,OAAO0Q,GjCVkB,2BiCUkBrH,KAAK06C,4BAA6B16C,MAClFA,KAAKrJ,OAAO0Q,GjCTO,gBiCSkBrH,KAAK26C,kBAAmB36C,OAMjEq6C,EAAc79C,UAAUkL,oBAAsB,WACtC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IjCrBkB,2BiCqBmB5H,KAAK06C,6BACtD16C,KAAKrJ,OAAOiR,IjCpBO,gBiCoBmB5H,KAAK26C,qBAE/CN,EAAc79C,UAAUk+C,4BAA8B,SAAU/7C,GAC5DqB,KAAKrJ,OAAOiB,KAAKuX,OjC2BM,uBiC3B6B4kC,kBAAkB,IACtE/zC,KAAK46C,kBAAoBj8C,EAAIhG,OAC7BgG,EAAIhG,OAAOS,SAA0B,aAAfuF,EAAIpD,MAC1B,IAAIspC,IACAz0B,OAAQpQ,KAAKrJ,OAAOwG,SACpBwB,IAAKA,EAAIA,IACTpD,OAAQoD,EAAIpD,OACZ5C,OAAQgG,EAAIhG,OACZ2S,MAAOtL,KAAKrJ,OAAOwG,SAAS3F,OAEhCwI,MAAKrJ,OAAOiB,KAAK0nB,gBACjB,IAAIzf,GAAcxB,WAAS,gBAAiB2B,KAAKrJ,QAAU,cAAgB,SAC3E0H,YAAS,oBAAqB2B,KAAKrJ,QAAQ6b,mBAAmBqyB,GAAOhlC,YAAaA,KAEtFw6C,EAAc79C,UAAUm+C,kBAAoB,SAAUvV,GAClD,GAAI7gC,GAAQvE,KACRtG,EAAK,GAAI7C,eAAYuuC,EAAeh1B,QACpChX,EAAW,GAAIyI,aAAU,WAAY,WAAY,MAAM8jC,GAAG,WAAY,eAAYhsB,IAClF/gB,EAAUc,EAAGoZ,cAAa,GAAIxB,UAAQI,MAAMtY,IAC5C6mC,EAAarnC,EAAQwE,OAAO,SAAUC,GACtC,MAAO3E,GAAgB6L,EAAM5N,OAAQ0G,EAAGzE,IAE5CoH,MAAKigC,WAAaA,EAClBjgC,KAAKrJ,OAAOiB,KAAKuX,OjCMC,iBiCN6B1Q,KAAMwhC,GACrD,IAAI4a,IAAW1oB,YAAa,EAAGia,UAAW,EAAG9gC,MAAO85B,EAAe95B,MACnEtL,MAAKrJ,OAAOiB,KAAKuX,OjCME,iBiCN2B0rC,EAC9C,IAAI1oB,GAAa0oB,EAAO1oB,WACpBia,EAAWyO,EAAOzO,QAEtB,IADAhH,EAAe95B,MAAQ20B,EAAWzoC,QACd,IAAhB26B,IAAmC,IAAdia,EAAiB,CACtC,GAAI/6B,GAAQ,GAAIC,SACZi0B,EAAOvlC,KAAKrJ,OAAOiB,KAAKkW,aAAa03B,SAErCF,EAAOC,GADGvlC,KAAKrJ,OAAOiB,KAAKkW,aAAamI,YACf,EAC7B5E,GAAQA,EAAMi0B,KAAKA,GAAMG,KAAKF,GAC9B7rC,EAAG9C,WAAW8E,KAAOukC,EACrBmF,EAAeh1B,OAAS1W,EAAGoZ,aAAazB,OAEvC,CACD,GAAIxR,GAAculC,EAAexuB,WAAW/W,WAU5C,KAToB,cAAhBA,GAA+C,gBAAhBA,GACd,YAAhBA,GAA6BG,KAAKrJ,OAAOqX,mBAAqBo+B,EAAWnM,EAAWzoC,UACrF26B,EAAa,EACbia,EAAWpsC,KAAKrJ,OAAOiB,KAAKkW,aAAa03B,SAAW,EACpDxlC,KAAKrJ,OAAOiB,KAAKk4B,aAAa4B,kBAAkBE,UAAY,EAC5D5xB,KAAKrJ,OAAOiB,KAAKuX,OjClBF,uBiCkBqCqlC,QAAQ,MAI3D78C,oBAAkBqI,KAAK46C,mBAAoB,CAC5C,GAAIE,GAAgB96C,KAAKrJ,OAAOkI,UAC5Bk8C,EAAS9a,EAAWzhC,QAAQwB,KAAK46C,kBACtB3a,GAAWz6B,MAAMu1C,EAAQA,EAASD,EAActjD,QAClDA,OAASsjD,EAActjD,QAAUujD,GAAU,GAGpD5oB,EADA4oB,GADAA,EAAS9a,EAAWzoC,OAASsjD,EAActjD,QACzB,EAAIujD,EAAS,EAE/B3O,EAAWnM,EAAWzoC,QAEjB6G,WAAS,gBAAiB2B,KAAKrJ,UACpCw7B,EAAa,EACbia,EAAWpsC,KAAKrJ,OAAOiB,KAAKkW,aAAa03B,SAAW,EACpDxlC,KAAKrJ,OAAOiB,KAAKuX,OjCnCN,uBiCmCyCqlC,QAAQ,MAI/D78C,oBAAkBqI,KAAK46C,oBAAsB56C,KAAKrJ,OAAOqX,oBAEtDmkB,EADAiT,EAAe95B,MAAQtL,KAAKrJ,OAAOkI,UAAU,GAAG29B,wBAAwBzZ,OAC3Dkd,EAAW,GAAG9lC,OAGW,IAAzB6F,KAAKs6C,eAAwB,EAAIt6C,KAAKs6C,gBAG3Dt6C,KAAK46C,kBAAoB,KACzBxV,EAAeh1B,OAAS6vB,EAAWz6B,MAAM2sB,EAAYia,GACrDpsC,KAAKs6C,eAAiBnoB,EACtBnyB,KAAKu6C,aAAenO,EAExBpsC,KAAKrJ,OAAOwY,OAAO,eAAgBi2B,IAQvCiV,EAAc79C,UAAUsK,QAAU,WAC9B9G,KAAK0H,uBAEF2yC,KAGPG,GAA6B,SAAU14C,GAEvC,QAAS04C,GAAY7jD,EAAQm9C,GACzB,GAAIvvC,GAAQzC,EAAOpF,KAAKsD,KAAMrJ,EAAQm9C,IAAY9zC,IAGlD,OAFA3B,YAAS,SAAUkG,GAAOqD,IAAI,eAAgBvJ,WAAS,sBAAuBkG,GAAQA,GACtFlG,WAAS,SAAUkG,GAAO8C,GAAG,eAAgB9C,EAAMy2C,qBAAsBz2C,GAClEA,EA0BX,MA/BA9D,IAAU+5C,EAAa14C,GAOvB04C,EAAYh+C,UAAUoG,cAAgB,WAClC,MAAO,qBAEX43C,EAAYh+C,UAAUw+C,qBAAuB,WACzC38C,WAAS,SAAU2B,MAAM6C,KAAK,aAAc,kBAAmB,iBAC/D,IAAIo4C,GAAW58C,WAAS,UAAW2B,MAAMk7C,WAAW,kBACpD78C,YAAS,cAAe48C,GACnBl5C,MAAMk5C,GAAWE,aAAWC,QAAS,GAAIvH,IAA2Bx1C,WAAS,SAAU2B,MAAO3B,WAAS,UAAW2B,SAEvHA,KAAKq7C,kBAETb,EAAYh+C,UAAU6+C,eAAiB,WACnC,GAAIC,GAAaj9C,WAAS,SAAU2B,MAChCmkB,EAAYm3B,EAAWzpB,cACtBl6B,qBAAkB2jD,EAAWv4B,SAA0C,gBAAvBu4B,YAAuE,IAApCA,EAAWv4B,OAAOvkB,QAAQ,OAC9G88C,EAAWrrC,QAAQxV,MAAMsoB,OAASu4B,EAAWv4B,OAEjD,IAGIA,GAAqB,MAHXu4B,EAAWv4B,OAAOje,WAAWtG,QAAQ,KAAO,EAAI88C,EAAWv4B,OACrEu4B,EAAWrrC,QAAQusB,wBAAwBzZ,QAClBoB,GAEzBohB,EAAO+V,EAAWxtC,aAAa03B,QACnC8V,GAAWjhC,eAAgBvM,cAAgB03B,SAAUD,EAAOxiB,EAASA,EAASwiB,KAAU,IAErFiV,GACTe,iBC5LEC,GAAwB,WAMxB,QAASA,GAAO7kD,GACZ8L,OAAKC,OAAO+4C,UACZz7C,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAuET,MArEAo0C,GAAOh/C,UAAU4K,iBAAmB,WAChCpH,KAAKrJ,OAAO0Q,GAAG,oBAAqBrH,KAAK4yC,kBAAmB5yC,MAC5DA,KAAKrJ,OAAO0Q,GAAG,eAAgBrH,KAAKwyC,aAAcxyC,MAClDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,WAAYrH,KAAK07C,gBAAiB17C,OAE1Dw7C,EAAOh/C,UAAUkL,oBAAsB,WAC/B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,oBAAqB5H,KAAK4yC,mBAC1C5yC,KAAKrJ,OAAOiR,IAAI,eAAgB5H,KAAKwyC,cACrCxyC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,WAAY5H,KAAK07C,mBAE1CF,EAAOh/C,UAAUo2C,kBAAoB,SAAU7vC,GAC3C,GAEIiC,GAFAmuB,EAAcnzB,KAAKrJ,OAAOyV,qBAC1BuvC,EAAa37C,KAAKrJ,OAAOkI,SAQzBmG,GANCjC,EAAKyvB,WAAWh7B,OAMVuL,EAAKyvB,WALLW,EAAY/1B,OAAO,SAAUC,GAChC,MAAOA,GAAE2K,cAAc,kBAAoBjF,EAAKpK,OAAOwB,MAAQ,SAAW4I,EAAKpK,OAAOyB,MAAQ,KAMtG,KAAK,GAAI9C,GAAI,EAAGA,EAAI0N,EAAKxN,OAAQF,IAAK,CAClC,GAAIskD,GAAQ57C,KAAKrJ,OAAOiB,KAAKsc,oBAAoBlP,EAAK1N,GAAG8R,aAAa,aAAa3K,IACnFuG,GAAK1N,GAAGmD,MAAMG,QAAUmI,EAAKxH,MAC7B,IAAIsgD,GAAgC,SAAhB94C,EAAKxH,OAAoB,8CACvC,2CACN,IAAIogD,EAAW32C,EAAK1N,GAAGsP,UAAUoB,cAAc6zC,GAAgB,CAE3D,IAAK,GADD/nB,MACKE,EAAM,EAAGA,EAAMb,EAAY37B,OAAQw8B,IACpCb,EAAYa,GAAKhsB,cAAc,kBAAoB4zC,EAAMzhD,MAAQ,SAAWyhD,EAAMxhD,MAAQ,KAC1F05B,EAAKr7B,KAAK06B,EAAYa,GAG1BF,GAAKt8B,QACLwI,KAAK4yC,mBAAoBpgB,WAAYsB,EAAMv4B,OAAQwH,EAAKxH,YAKxEigD,EAAOh/C,UAAUk/C,gBAAkB,SAAUr+C,GACrC0K,eAAa1K,EAAE+D,OAAQ,cACvBpB,KAAKrJ,OAAOiB,KAAKkE,aAAa6uB,qBAAyD,SAAlC3qB,KAAKrJ,OAAOmF,aAAaC,MAC9EiE,KAAKrJ,OAAOiB,KAAKoE,WAAW2xB,UAAU5lB,eAAa1K,EAAE+D,OAAQ,WAGrEo6C,EAAOh/C,UAAUg2C,aAAe,WACPxyC,KAAKrJ,OAAOiJ,aAAaxC,OAAO,SAAUC,GAC3D,MAAOA,GAAE5F,eAEMD,QAAUwI,KAAKrJ,OAAOmlD,cAAgB97C,KAAKrJ,OAAOuC,eACjEkU,YAAUpN,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,UAAU,IAAK,qBAG5EunC,EAAOh/C,UAAUsK,QAAU,WACvB9G,KAAK0H,uBAQT8zC,EAAOh/C,UAAUoG,cAAgB,WAC7B,MAAO,UAEJ44C,KClFPO,GAA+B,WAM/B,QAASA,GAAcplD,GACnB8L,OAAKC,OAAOs5C,iBACZh8C,KAAKrJ,OAASA,EA8BlB,MArBAolD,GAAcv/C,UAAU0xB,kBAAoB,SAAU+tB,EAAGC,GACrD,MAAOl8C,MAAKrJ,OAAOiB,KAAKy2B,oBAAoBH,kBAAkB+tB,EAAGC,IAQrEH,EAAcv/C,UAAUsK,QAAU,aASlCi1C,EAAcv/C,UAAUoG,cAAgB,WACpC,MAAO,iBAEJm5C,KCjCPI,GAAgC,WAMhC,QAASA,GAAexlD,GACpBqJ,KAAKrJ,OAASA,EACd8L,OAAKC,OAAO05C,kBACZp8C,KAAKoH,mBA+RT,MAvRA+0C,GAAe3/C,UAAUoG,cAAgB,WACrC,MAAO,kBAMXu5C,EAAe3/C,UAAU4K,iBAAmB,WACxCpH,KAAKrJ,OAAO0Q,GpCWO,gBoCXkBrH,KAAKq8C,mBAAoBr8C,MAC9DA,KAAKrJ,OAAO0Q,GAAG,yBAA0BrH,KAAKs8C,qBAAsBt8C,MACpEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,kBAAmBrH,KAAKu8C,sBAAuBv8C,MACnEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,wBAAyBrH,KAAKw8C,oBAAqBx8C,MACvEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,uBAAwBrH,KAAKy8C,WAAYz8C,MAC7DA,KAAKrJ,OAAOiB,KAAKyP,GAAG,gBAAiBrH,KAAKitC,aAAcjtC,OAM5Dm8C,EAAe3/C,UAAUkL,oBAAsB,WACvC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,yBAA0B5H,KAAKs8C,sBAC/Ct8C,KAAKrJ,OAAOiB,KAAKgQ,IAAI,kBAAmB5H,KAAKu8C,uBAC7Cv8C,KAAKrJ,OAAOiB,KAAKgQ,IAAI,wBAAyB5H,KAAKw8C,qBACnDx8C,KAAKrJ,OAAOiR,IpCPO,gBoCOmB5H,KAAKq8C,oBAC3Cr8C,KAAKrJ,OAAOiB,KAAKgQ,IAAI,uBAAwB5H,KAAKy8C,YAClDz8C,KAAKrJ,OAAOiB,KAAKgQ,IAAI,gBAAiB5H,KAAKitC,gBAU/CkP,EAAe3/C,UAAU8/C,qBAAuB,SAAUv5C,GAWtD,IAAK,GAVDorC,GAAanuC,KAAKrJ,OAAOiB,KAAKmd,gBAG9B2nC,EAAiB18C,KAAKrJ,OAAOiB,KAAKq3C,qBAA4B,eAC9D0N,EAAc,GAAIC,eAAYF,EAAgB,KAAM18C,KAAKrJ,OAAOiB,MAChEoN,EAAOhF,KAAKrJ,OAAOkI,UACnBwuB,EAAWtqB,EAAK5I,QAAU6K,EAAKxN,OAAS,EAAI,QAAU,SACtD84B,EAAOtwB,KAAKrJ,OAAOiB,KAAKgI,aACxBi9C,EAAkB78C,KAAKrJ,OAAOiB,KAAKq3C,qBAAiC,aAAElsC,EAAKgE,UAAWhE,GACtF+5C,KACKxlD,EAAI,EAAGA,EAAIulD,EAAgBrlD,OAAQF,IACxCwlD,EAAiBrkD,KAAKkkD,EAAYv6B,OAAOy6B,EAAgBvlD,GAAIg5B,GAEjE6d,GAAWrxC,OAAOiF,MAAMosC,GAAaprC,EAAK5I,MAAQ,EAAG,GAAGX,OAAOqjD,GAC/D,KAASvlD,EAAI,EAAGA,EAAIwlD,EAAiBtlD,OAAQF,IACxB,UAAb+1B,EACAroB,EAAKjC,EAAK5I,MAAQ7C,GAAG+1B,GAAUyvB,EAAiBxlD,IAGhD0N,EAAKjC,EAAK5I,MAAQ7C,EAAI,GAAG+1B,GAAUyvB,EAAiBxlD,IAExD0N,EAAKlI,OAAOiG,EAAK5I,MAAQ,EAAI7C,EAAG,EAAGwlD,EAAiBxlD,GAExDs3C,iBAAc5uC,KAAKrJ,OAAOiB,KAAMoI,KAAKrJ,OAAOiB,KAAKmd,gBAAiB/U,KAAKrJ,OAAOiB,KAAKiH,UAAW,IAOlGs9C,EAAe3/C,UAAUywC,aAAe,WACpC,GAAIjtC,KAAKrJ,OAAOotB,uBAAuB4qB,cAAgBh3C,oBAAkBqI,KAAKrJ,OAAOqF,YAAa,CAE9FgE,KAAKrJ,OAAOqF,WAAsB,YAAEgE,KAAKrJ,OAAOiB,KAAKhB,WAAYoJ,KAAKrJ,OAAOkI,UAAWmB,KAAKrJ,OAAO8G,yBAChGuC,KAAKrJ,OAAOsI,oBACZe,KAAKrJ,OAAOqF,WAAsB,YAAEgE,KAAKrJ,OAAOiB,KAAKhB,WAAYoJ,KAAKrJ,OAAOyV,qBAAsBpM,KAAKrJ,OAAO8G,2BAa3H0+C,EAAe3/C,UAAU6/C,mBAAqB,SAAUjX,GACpD,GAAI1rC,GAAK,GAAI7C,eAAYuuC,EAAeh1B,QACpChX,EAAW,GAAIyI,aAAU,WAAY,WAAY,MAAM8jC,GAAG,WAAY,eAAYhsB,IAClFsmB,EAAavmC,EAAGoZ,cAAa,GAAIxB,UAAQI,MAAMtY,IAC/Cwd,EAAavY,WAAS,aAAc+mC,EAAexuB,YAGnD1d,IAFUmF,WAAS,UAAW2B,KAAKrJ,OAAOiB,KAAKq3C,sBAC7BntB,KAAK,SAAU5nB,GAAS,MAAOA,KAAU0c,EAAW/W,iBACrCG,KAAKrJ,OAAOuC,aAGjD,IAFA8G,KAAKigC,WAAaA,EAClBmF,EAAe95B,MAAQ20B,EAAWzoC,OAC9B6G,WAAS,aAAc+mC,EAAexuB,YACtCwuB,EAAeh1B,OAAS6vB,MAEvB,CACD,GAAI5uB,GAAQ,GAAIC,SACZo9B,EAAU1uC,KAAKrJ,OAAOotB,uBAAuB4qB,WAC7CD,IAAW1uC,KAAKrJ,OAAOotB,uBAAuBg5B,cAAgB/8C,KAAKrJ,OAAOotB,uBAAuBi5B,YACjGh9C,KAAKrJ,OAAOotB,uBAAuBg5B,cAAgB/8C,KAAKrJ,OAAOotB,uBAAuBi5B,UAE1F,IAAIzX,GAAOrsC,EACP8G,KAAKrJ,OAAOmX,aAAa03B,SAAWxlC,KAAKrJ,OAAOotB,uBAAuBg5B,cACvE/8C,KAAKrJ,OAAOmX,aAAa03B,SACzBtqB,EAAUlb,KAAKrJ,OAAOiB,KAAKkW,aAAamI,WAC5C,IAAKte,oBAAkBif,GAkBnBvF,EAAQA,EAAM8E,KAAK+E,EAASqqB,OAlBI,CAChC,GAAImP,GAAYr2C,WAAS,YAAa2B,KAAKrJ,OAAOiB,KAAKq3C,sBACnDgO,EAAa5+C,WAAS,aAAc2B,KAAKrJ,OAAOiB,KAAKq3C,qBACzD,IAAKP,GAAsC,WAA3B93B,EAAW/W,YAQvBwR,EAHKq9B,GAAsC,WAA3B93B,EAAW/W,aACC,SAA3B+W,EAAW/W,aAAgD,QAAtB+W,EAAWrb,QACjD8V,EAAQA,EAAMi0B,KAAK2X,IACLxX,KAAKzlC,KAAKrJ,OAAOotB,uBAAuBg5B,cAAgB/8C,KAAKrJ,OAAOmX,aAAa03B,UAGvFn0B,EAAM8E,KAAK+E,EAASqqB,OAXqB,CACjD,GAAID,GAAOoP,EAAY99B,EAAWnY,KAAKjH,OAAS,EAC5CiuC,EAAO7uB,EAAWnY,KAAKjH,MAC3B6Z,GAAQA,EAAMi0B,KAAKA,GAAMG,KAAKA,IActC/rC,EAAG9C,WAAW8E,KAAOukC,EAChByO,GAAY/2C,oBAAkBif,IAA0C,SAA3BA,EAAW/W,aAAgD,QAAtB+W,EAAWrb,OAI9F6pC,EAAeh1B,OAAS1W,EAAGoZ,aAAazB,GAHxC+zB,EAAeh1B,QAAUwG,EAAWnY,MAM5CuB,KAAKrJ,OAAOwY,OAAO,eAAgBi2B,IAUvC+W,EAAe3/C,UAAUggD,oBAAsB,SAAUz5C,GACrD,GACIisC,GAA0BhvC,KAAKrJ,OAAOiB,KAAKq3C,qBAAiC,wBAC5E12C,EAAOD,OAAOC,KAAKy2C,EACvB,IAA2B,WAAvBjsC,EAAK1F,EAAEwC,aAA4BkD,EAAKqN,OAAO5Y,OAAS,EACxD,IAAK,GAAIF,GAAI,EAAGA,EAAIyL,EAAKqN,OAAO5Y,OAAQF,IACpC03C,EAAwBz2C,EAAKA,EAAKf,OAAS,IAAIiB,KAAKsK,EAAKqN,OAAO9Y,KAU5E6kD,EAAe3/C,UAAU+/C,sBAAwB,SAAUx5C,GACvD,GAAyB,WAArBA,EAAKlD,YAA0B,CAC/B,GAAImF,GAAOhF,KAAKrJ,OAAOiB,KAAKmd,gBACxBmoC,EAAUl9C,KAAKrJ,OAAOkI,UACtBJ,EAAOsE,EAAKtE,eAAgBrC,OAAQ2G,EAAKtE,MAAQsE,EAAKtE,MACtD0+C,EAAWn9C,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,EAE1D,IADAwE,KAAKo9C,WAAWF,EAASl4C,EAAMvG,EAAM0+C,GAAU,GAC3Cn9C,KAAKrJ,OAAOsI,mBAAqB,EAAG,CACpC,GAAI4sC,GAAQ7rC,KAAKrJ,OAAOiB,KAAK62C,uBACzB4O,EAAWr9C,KAAKrJ,OAAOiB,KAAK07B,gBAChCtzB,MAAKo9C,WAAWC,EAAUxR,EAAOptC,EAAM0+C,MAcnDhB,EAAe3/C,UAAU4gD,WAAa,SAAUF,EAASl4C,EAAMvG,EAAM0+C,EAAU9nB,GAgB3E,IAAK,GAfD9wB,GAAQvE,KAeH1I,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,KAbnB,SAAUA,GACpB0N,EAAK5H,OAAO,SAAUC,EAAGlD,GACrB,GAAIkD,EAAEoB,KAAK0+C,KAAc1+C,EAAKnH,GAAG6lD,GAAW,CACxC,GAAI9nB,EAAU,CACV,GAAIlf,GAAO3C,KAAKC,MAAMtZ,EAAQ,GAAKoK,EAAM5N,OAAOiB,KAAKkW,aAAa03B,SAClEjhC,GAAM5N,OAAOiB,KAAKq3C,qBAAiD,6BAAE94B,EAAMhc,GAE/E6K,EAAKlI,OAAO3C,EAAO,GACnB+nB,SAAOg7B,EAAQ/iD,IACf+iD,EAAQpgD,OAAO3C,EAAO,OAKtB7C,IAMhB6kD,EAAe3/C,UAAUigD,WAAa,SAAU3O,GAC5C,GAKIwP,GAJA1mC,EAAak3B,EAAU/qC,KAAK1F,EAC5BsB,EAAMmvC,EAAUnvC,IAChB+9C,EAAiB18C,KAAKrJ,OAAOiB,KAAKq3C,qBAA4B,eAC9D0N,EAAc,GAAIC,eAAYF,EAAgB,KAAM18C,KAAKrJ,OAAOiB,MAEhE0e,EAActW,KAAKrJ,OAAO8G,wBAC1B8/C,EAAczP,EAAU0P,UAAYx9C,KAAKrJ,OAAOiB,KAAK07B,iBACnDtzB,KAAKrJ,OAAOiB,KAAKq4B,aAEnBqtB,GADAxP,EAAU2P,cACFz9C,KAAKrJ,OAAOsZ,QAAQjI,cAAc,2BAA2BA,cAAc,SAG1EhI,KAAKrJ,OAAOiB,KAAK8lD,eAAmE5P,EAAU0P,UACjGx9C,KAAKrJ,OAAOiB,KAAK+lD,2BAA2B31C,cAAc,SAC1DhI,KAAKrJ,OAAOiB,KAAKgmD,0BAA0B51C,cAAc,SAFpBhI,KAAKrJ,OAAOm5B,aAAa9nB,cAAc,SAIlFhI,KAAKrJ,OAAOqI,aACZs+C,EAAQxP,EAAU+P,cAAsE,QAAtD79C,KAAKrJ,OAAOiB,KAAKq3C,qBAAqBpvC,cAChEiuC,EAAU+P,cAAsE,QAAtD79C,KAAKrJ,OAAOiB,KAAKq3C,qBAAqBpvC,YACjEG,KAAKrJ,OAAOiB,KAAK8lD,eACd5P,EAAU0P,UAAYx9C,KAAKrJ,OAAOiB,KAAKkmD,0BAA0B91C,cAAc,SAC3E8lC,EAAU2P,cAAgBz9C,KAAKrJ,OAAOsZ,QAAQjI,cAAc,0BAA0BA,cAAc,SAChGhI,KAAKrJ,OAAOiB,KAAKmmD,yBAAyB/1C,cAAc,SAHjChI,KAAKrJ,OAAOwS,mBAAmBnB,cAAc,SAGDs1C,EAKzF,KAAK,GAHDjwB,GAEAyhB,EAAc9uC,KAAKrJ,OAAOqF,WAAsB,YAC3C1E,EAAI,EAAGA,EAAIqH,EAAInH,OAAQF,IAAK,CACjC,GAAI0mD,GAASrB,EAAYv6B,OAAOzjB,EAAIrH,GAAI0I,KAAKrJ,OAAOiB,KAAKgI,aAC1B,UAA3BgX,EAAW/W,aAAgD,QAAtB+W,EAAWrb,QACW,IAAvD8C,WAAS,gBAAiB2B,KAAKrJ,OAAOqF,aAAkE,QAA5CgE,KAAKrJ,OAAOmF,aAAaQ,eACrC,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,gBAChF+wB,EAAW,QACXyhB,GAAez1C,EAAoBid,EAAYw4B,EAAc,IAAIt3C,OACjB,UAA5CwI,KAAKrJ,OAAOmF,aAAaQ,iBACzBwyC,GAAe,GAEnByO,EAAYzO,GAAazhB,GAAU2wB,IAEc,UAA5Ch+C,KAAKrJ,OAAOmF,aAAaQ,iBAC9B+wB,EAAW,SACXkwB,EAAYv9C,KAAKrJ,OAAOqF,WAAsB,aAAGqxB,GAAU2wB,IAGd,WAA5Ch+C,KAAKrJ,OAAOmF,aAAaQ,eAC9BghD,EAAM1yC,YAAYozC,GAGlBV,EAAMzzC,aAAam0C,EAAQV,EAAM5rB,mBAGL,WAA3B9a,EAAW/W,aAChBy9C,EAAM1yC,YAAYozC,GAG1BlQ,EAAU5nC,QAAS,GAQvBi2C,EAAe3/C,UAAUsK,QAAU,WAC/B9G,KAAK0H,uBAEFy0C,WClTX8B,IAAev7C,OAAOw7C,GAAcC,GAAYC,GAAYC,GAAeC,GAAeC,GAAiBC,GAAcC,GAAkBC,GAAmBC,GAAiBC,GAAqBC,GAAmBC,GAAYC,EAAiBC,GAAqBC,GAAiBC,GAAaC,GAAcC,GAAqBC,EAAcC,yBrCEtU,sBAEQ,2BAEH,4BAEI,kCAEE,gCAEJ,gCAEI,mCAED,gCAEF,6BAED,+BAEG,iCAED,+BAED,mCAEK,sCAEF,+BAEL,wBAEF,uBAEC,wBAEA,yBAEC,4BAEE,0CAEY,2CAEX,gCAEA,mCAEE,qCAEC,gCAEN,2BAEC,wCAEY,uCAEb,yBAED,uBAED,+BAES,+BAET,uBAEC,uBAED,yBAEG,4BAEA,yBAEH,+BAES,qCAEH,mCAEC,8BAEN,yBAEC,2BAEA,0BAED,kCAES,yCAED,qCAEL,gCAEC,mCAEE,gCAEE,8CAEI,2CAEN,4BAER,+BAEW,+BAEX,yBAEK,yBAEL,wBAEG,2BAEA,2BAEA"}