{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length == 0) {\n                this.filteredList = filterResult;\n            }\n            else {\n                if (this.filteredList != filterResult) {\n                    this.filteredList = filterResult;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length) {\n                this.filteredList = [];\n            }\n        }\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            (this.filteredList.length > 0)) ? this.filteredList :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = [\"Children\", \"childRecords\", \"taskData\", \"uniqueID\", \"parentItem\", \"parentUniqueID\", \"index\"];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]] && excludeKeys.indexOf(keys[i]) === -1) {\n                        var isDate = old[keys[i]] instanceof Date && current[keys[i]] instanceof Date;\n                        if (!isDate || (old[keys[i]].getTime() !== current[keys[i]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @blazorType void\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[cellIndex];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[cIndex];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary == true; }).length) {\n                _this.grid.refresh();\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index === 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[i][prop])) {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, index);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            stackedHeader = true;\n        }\n        if (!stackedHeader) {\n            this.setProperties({ columns: this.columnModel }, true);\n        }\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        if (this.grid.getFrozenColumns() > 0) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                var pindex = this.flatData[record[i].parentItem.index].index;\n                if (this.flatData[pindex].expanded === false) {\n                    record.push(this.flatData[pindex]);\n                    this.flatData[pindex].expanded = true;\n                }\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = findChildrenRecords(records[i]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord.parentItem;\n                            draggedRecord.level = 0;\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                            draggedRecord.parentItem = droppedRecord.parentItem;\n                            draggedRecord.parentUniqueID = droppedRecord.parentUniqueID;\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                                draggedRecord.parentItem = droppedRecord.parentItem;\n                                draggedRecord.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                    }\n                    this.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[i_1]))) ?\n                                columns[i_1] : getObject('field', (columns[i_1]));\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[columnIndex])) ?\n                    columns[columnIndex] : getObject('field', columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray, isCountRequired } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function () {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        var uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('aria-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[i]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[i]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                if (isCountRequired(this.parent)) {\n                    data = getValue('result', data);\n                }\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                            .indexOf(currentViewRecords[0][primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action == 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary == true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    this.addRowIndex = args.index;\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[args.index];\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop] && !isNullOrUndefined(this.parent.getRowByIndex(0))) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[i]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (column, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': column.visible,\n            'isDataCell': !isNullOrUndefined(column.field || column.template),\n            'isTemplate': !isNullOrUndefined(column.template),\n            'rowID': rowId,\n            'column': column,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': column.commands,\n            'isForeignKey': column.isForeignColumn && column.isForeignColumn(),\n            'foreignKeyData': column.isForeignColumn && column.isForeignColumn() && getValue(column.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] != -1 && index != this[selectedRowIndex]) {\n                index = this[selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var isLastBlock = (this[selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] != -1 &&\n                nextSetResIndex != this[selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        var containerRect = 'containerRect';\n        _super.prototype[containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n            return;\n        }*/\n            /*if(delta > 45 || delta < -45){\n          this.isWheeling = true;\n        }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if (!isNullOrUndefined(this.expandCollapseRec) && this.parent.enableCollapseAll) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = visualData[0].index;\n                }\n                else {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","checkBoxRecord","checkAll","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","updateTreeCell","notify","checkboxElement","parseInt","summaryData","field","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","portals","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","renderComplete","destroyTemplateFn","clearTemplate","afterGridRender","clipboardModule","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","templateInstance","triggerEvents","bindGridEvents","rowSelecting","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","events.actionBegin","updateTreeGridModel","events.beginAdd","ag","showChildSummary","refresh","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","closeEdit","treeGridElement","hasTreeGridChild","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","selectionModule","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","getRecordDetails","pindex","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","this_1","pageingDetails","propname","skip","size","pageSize","take","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","parentRowIndex","getRowElementByUID","totalCount","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","initialRowTop","gridTop","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","setTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","serviceLocator","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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Ac,GACrCqE,IACIc,WAAS,aACVmc,EAASthB,UAAW,iBAAa,GACpCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,mBAAe,GACtCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,yBAAqB,GAC5CqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,qBAAiB,GACxCqE,IACIu4B,aAAYr3B,IACb+b,EAASthB,UAAW,wBAAoB,GAC3CqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,qBAAiB,GACxCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,0BAAsB,GAC7CqE,IACIu4B,aAAYrd,KACb+B,EAASthB,UAAW,oBAAgB,GACvCqE,IACIu4B,aAAYC,oBACbvb,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIc,cACDmc,EAASthB,UAAW,qBAAiB,GACxCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,sBAAkB,GACzCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,yBAAqB,GAC5CqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,oBAAgB,GACvCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,yBAAqB,GAC5CqE,IACIu4B,aAAYxb,KACbE,EAASthB,UAAW,oBAAgB,GACvCqE,IACIiB,gBAAe2b,KAChBK,EAASthB,UAAW,kBAAc,GACrCqE,IACIu4B,aAAY1b,KACbI,EAASthB,UAAW,oBAAgB,GACvCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,sBAAkB,GACzCqE,IACIc,cACDmc,EAASthB,UAAW,sBAAkB,GACzCqE,IACIu4B,aAAYv3B,IACbic,EAASthB,UAAW,sBAAkB,GACzCqE,IACIu4B,aAAYnpB,KACb6N,EAASthB,UAAW,sBAAkB,GACzCqE,IACIc,cACDmc,EAASthB,UAAW,eAAW,GAClCqE,IACIc,cACDmc,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIc,WAAS,YACVmc,EAASthB,UAAW,iBAAa,GACpCqE,IACIc,cACDmc,EAASthB,UAAW,wBAAoB,GAC3CqE,IACIc,cACDmc,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIc,cACDmc,EAASthB,UAAW,mBAAe,GACtCqE,IACIc,WAAS,WACVmc,EAASthB,UAAW,yBAAqB,GAC5CqE,IACIc,WAAS,OACVmc,EAASthB,UAAW,iBAAa,GACpCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,oBAAgB,GACvCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,qBAAiB,GACxCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,mBAAe,GACtCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,sBAAkB,GACzCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,2BAAuB,GAC9CqE,IACIc,WAAS,SACVmc,EAASthB,UAAW,cAAU,GACjCqE,IACIc,WAAS,SACVmc,EAASthB,UAAW,aAAS,GAChCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,4BAAwB,GAC/CqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,+BAA2B,GAClDqE,IACIu4B,aAAYvb,KACbC,EAASthB,UAAW,8BAA0B,GACjDqE,IACIc,WAAS,QACVmc,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIy4B,WACDxb,EAASthB,UAAW,eAAW,GAClCqE,IACIy4B,WACDxb,EAASthB,UAAW,YAAQ,GAC/BqE,IACIy4B,WACDxb,EAASthB,UAAW,iBAAa,GACpCqE,IACIy4B,WACDxb,EAASthB,UAAW,gBAAY,GACnCqE,IACIy4B,WACDxb,EAASthB,UAAW,kBAAc,GACrCqE,IACIy4B,WACDxb,EAASthB,UAAW,iBAAa,GACpCqE,IACIy4B,WACDxb,EAASthB,UAAW,gBAAY,GACnCqE,IACIy4B,WACDxb,EAASthB,UAAW,iBAAa,GACpCqE,IACIy4B,WACDxb,EAASthB,UAAW,mBAAe,GACtCqE,IACIy4B,WACDxb,EAASthB,UAAW,sBAAkB,GACzCqE,IACIy4B,WACDxb,EAASthB,UAAW,iBAAa,GACpCqE,IACIy4B,WACDxb,EAASthB,UAAW,gBAAY,GACnCqE,IACIy4B,WACDxb,EAASthB,UAAW,mBAAe,GACtCqE,IACIy4B,WACDxb,EAASthB,UAAW,mBAAe,GACtCqE,IACIy4B,WACDxb,EAASthB,UAAW,sBAAkB,GACzCqE,IACIy4B,WACDxb,EAASthB,UAAW,yBAAqB,GAC5CqE,IACIy4B,WACDxb,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIy4B,WACDxb,EAASthB,UAAW,gBAAY,GACnCqE,IACIy4B,WACDxb,EAASthB,UAAW,qBAAiB,GACxCqE,IACIy4B,WACDxb,EAASthB,UAAW,iBAAa,GACpCqE,IACIy4B,WACDxb,EAASthB,UAAW,yBAAqB,GAC5CqE,IACIy4B,WACDxb,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIy4B,WACDxb,EAASthB,UAAW,yBAAqB,GAC5CqE,IACIy4B,WACDxb,EAASthB,UAAW,oBAAgB,GACvCqE,IACIy4B,WACDxb,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIy4B,WACDxb,EAASthB,UAAW,qBAAiB,GACxCqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,sBAAkB,GACzCqE,IACIy4B,WACDxb,EAASthB,UAAW,oBAAgB,GACvCqE,IACIy4B,WACDxb,EAASthB,UAAW,mBAAe,GACtCqE,IACIy4B,WACDxb,EAASthB,UAAW,sBAAkB,GACzCqE,IACIy4B,WACDxb,EAASthB,UAAW,qBAAiB,GACxCqE,IACIy4B,WACDxb,EAASthB,UAAW,sBAAkB,GACzCqE,IACIy4B,WACDxb,EAASthB,UAAW,qBAAiB,GACxCqE,IACIy4B,WACDxb,EAASthB,UAAW,sBAAkB,GACzCqE,IACIy4B,WACDxb,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIy4B,WACDxb,EAASthB,UAAW,oBAAgB,GACvCqE,IACIy4B,WACDxb,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIy4B,WACDxb,EAASthB,UAAW,sBAAkB,GACzCqE,IACIy4B,WACDxb,EAASthB,UAAW,mBAAe,GACtCqE,IACIy4B,WACDxb,EAASthB,UAAW,gBAAY,GACnCqE,IACIy4B,WACDxb,EAASthB,UAAW,kBAAc,GACrCqE,IACIy4B,WACDxb,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIy4B,WACDxb,EAASthB,UAAW,kBAAc,GACrCqE,IACIy4B,WACDxb,EAASthB,UAAW,kBAAc,GACrCqE,IACIy4B,WACDxb,EAASthB,UAAW,sBAAkB,GACzCqE,IACIy4B,WACDxb,EAASthB,UAAW,qBAAiB,GACxCqE,IACIy4B,WACDxb,EAASthB,UAAW,mBAAe,GACtCqE,IACIy4B,WACDxb,EAASthB,UAAW,oBAAgB,GACvCqE,IACIy4B,WACDxb,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIy4B,WACDxb,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIy4B,WACDxb,EAASthB,UAAW,wBAAoB,GAC3CqE,IACIy4B,WACDxb,EAASthB,UAAW,kBAAc,GACrCqE,IACIy4B,WACDxb,EAASthB,UAAW,mBAAe,GACtCqE,IACIy4B,WACDxb,EAASthB,UAAW,eAAW,GAClCqE,IACIy4B,WACDxb,EAASthB,UAAW,oBAAgB,GACvCqE,IACIy4B,WACDxb,EAASthB,UAAW,0BAAsB,GAC7CqE,IACIy4B,WACDxb,EAASthB,UAAW,eAAW,GAClCqE,IACIc,YAAU,IACXmc,EAASthB,UAAW,wBAAoB,GAC3CqE,IACIu4B,aAAYlpB,KACb4N,EAASthB,UAAW,yBAAqB,GAC5CqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,wBAAoB,GAC3CqE,IACIc,YAAS,IACVmc,EAASthB,UAAW,sBAAkB,GACzCqE,IACIy4B,WACDxb,EAASthB,UAAW,wBAAoB,GAC3CqE,IACIy4B,WACDxb,EAASthB,UAAW,8BAA0B,GACjDqE,IACIy4B,WACDxb,EAASthB,UAAW,0BAAsB,GAC7CqE,IACIy4B,WACDxb,EAASthB,UAAW,gCAA4B,GACnDqE,IACIy4B,WACDxb,EAASthB,UAAW,yBAAqB,GAC5CqE,IACIy4B,WACDxb,EAASthB,UAAW,2BAAuB,GAC9CqE,IACIy4B,WACDxb,EAASthB,UAAW,uBAAmB,GAC1CqE,IACIy4B,WACDxb,EAASthB,UAAW,yBAAqB,GAC5CshB,EAAWY,EAAa7d,IACpB04B,yBACDzb,IAEL0b,aC71GEC,GAAyB,WAMzB,SAASA,EAAQpjC,GACb+L,OAAKC,OAAOq3B,WACZ/5B,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAgDT,OAxCA4vB,EAAQj9B,UAAU+F,cAAgB,WAC9B,MAAO,WAMXk3B,EAAQj9B,UAAUqN,iBAAmB,WACjClK,KAAKtJ,OAAOyT,GAAG,iBAAkBnK,KAAKg6B,cAAeh6B,OAEzD85B,EAAQj9B,UAAU2N,oBAAsB,WAChCxK,KAAKtJ,OAAO+T,aAGhBzK,KAAKtJ,OAAOgU,IAAI,iBAAkB1K,KAAKg6B,gBAQ3CF,EAAQj9B,UAAU+M,QAAU,WACxB5J,KAAKwK,uBAETsvB,EAAQj9B,UAAUm9B,cAAgB,WAK9B,IAAK,IAFDC,EADAxnB,EAAazS,KAAKtJ,OAAkB,YAAEsJ,KAAKtJ,OAAO0I,iBAElD86B,EAAcl6B,KAAKtJ,OAAOkJ,aACrBu6B,EAAI,EAAGA,EAAID,EAAY3iC,OAAQ4iC,IAAK,CAGzC,GAFsB5hC,YAAU,QAASka,KACjBla,YAAU,QAAS2hC,EAAYC,IACZ,CACvCF,EAAYE,EACZ,OAGRn6B,KAAKtJ,OAAOmnB,eAAgBze,gBAAiB66B,IAAa,IAEvDH,KCzDPM,GAAwB,WAMxB,SAASA,EAAO1jC,GACZ+L,OAAKC,OAAO23B,UACZr6B,KAAKtJ,OAASA,EAgClB,OAxBA0jC,EAAOv9B,UAAUykB,eAAiB,SAAUgZ,GACxCt6B,KAAKtJ,OAAOiB,KAAK2pB,eAAegZ,IAQpCF,EAAOv9B,UAAU+F,cAAgB,WAC7B,MAAO,UAQXw3B,EAAOv9B,UAAU+M,QAAU,WACnB5J,KAAKtJ,OAAO+T,aAGhBzK,KAAKtJ,OAAOiB,KAAK6pB,aAAa5X,WAE3BwwB,KClCPG,GAAuB,WAMvB,SAASA,EAAM7jC,GAEXsJ,KAAKw6B,SAAU,EAEfx6B,KAAKy6B,oBAAqB,EAE1Bz6B,KAAK06B,eAAgB,EACrBj4B,OAAKC,OAAOi4B,SACZ36B,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBA6lCT,OA3lCAqwB,EAAM19B,UAAU+9B,0BAA4B,SAAUznB,GAWlD,OATInT,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QAC3CsJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAGvCuE,KAAKtJ,OAAOiB,KAAKhB,YAEV8G,OAAO,SAAUC,GAC7C,OAAOA,EAAE1E,WAAama,KAQ9BonB,EAAM19B,UAAUqN,iBAAmB,WAC/BlK,KAAKtJ,OAAOyT,GAAG+jB,GAAmBluB,KAAK66B,WAAY76B,MACnDA,KAAKtJ,OAAOyT,GAAGikB,GAAmBpuB,KAAKkH,WAAYlH,MACnDA,KAAKtJ,OAAOyT,GAAG2wB,GAAgB96B,KAAK+6B,UAAW/6B,MAC/CA,KAAKtJ,OAAOyT,GAAG6wB,GAAmBh7B,KAAKi7B,YAAaj7B,OAUxDu6B,EAAM19B,UAAUw8B,YAAc,SAAUC,EAAaC,EAASvI,GAC1D,IAAIkK,EAAOl7B,KAAKtJ,OAChB,GAAI4iC,EAAY,KAAOC,IAA8D,KAAlD,QAAS,QAAS,SAAS/6B,QAAQwyB,GAAtE,CACqB,UAAbA,IACAhxB,KAAKm7B,aAAe,cAEP,UAAbnK,IACAhxB,KAAKm7B,aAAe,iBAEP,UAAbnK,IACAhxB,KAAKm7B,aAAe,iBAGxB,IAAK,IADD18B,KACKpH,EAAI,EAAGA,EAAIiiC,EAAY/hC,OAAQF,IACpCoH,EAAKpH,GAAK2I,KAAKtJ,OAAOyF,wBAAwBm9B,EAAYjiC,IAE9D,IACI0L,GACAtE,KAAMA,EACN28B,UAAW7B,GAUf,GARKpiC,EAAgB6I,KAAKtJ,SACtBsJ,KAAKq7B,SAASt4B,GAND,GASbm4B,EAAK5gB,cACL4gB,EAAK19B,SAAWwC,KAAKs7B,aAAaJ,EAAK19B,WAE3CwC,KAAKtJ,OAAOiB,KAAK81B,UACbztB,KAAKtJ,OAAO4I,qBAA6C,kBAAtBU,KAAKm7B,aAAkC,CAC1E,IAAIjhC,EAAQ8F,KAAKtJ,OAAO0I,gBAAkB,EACtCT,EAAMqB,KAAKtJ,OAAOmI,UAAUy6B,EAAY,IACxCiC,EAAWx4B,EAAKtE,KAAK,GACrB+8B,KACA1zB,KACJ0zB,EAAYhjC,KAAK+iC,GACjBzzB,EAAKtP,KAAKmG,GACV,IACIpB,EAAaxE,EAAciH,KAAKtJ,OAAQqM,EAAKtE,KAAK,GAAiB,gBACnEg9B,EAAYz7B,KAAKtJ,OAAOmI,UAAU06B,GACtCiC,EAAYhjC,KAAK+E,GACjBuK,EAAKtP,KAAKijC,GACV,IAASpkC,EAAI,EAAGA,EAAImkC,EAAYjkC,OAAQF,IACpC2I,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAM+8B,EAAYnkC,GAAIoI,KAAMqI,EAAKzQ,GAAGqI,MAAMxF,GAC1CyF,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,iBAClDS,YAAa,sBASjC06B,EAAM19B,UAAUy+B,aAAe,SAAU3hB,GAUrC,IAAK,IATD/c,EAAU,SAAUvF,GAEpB,GADAsiB,EAAYtiB,GAAG6C,MAAQ7C,GAClBK,oBAAkBiiB,EAAYtiB,GAAGyB,YAAa,CAC/C,IAAI4iC,EAAgB/hB,EAAYlc,OAAO,SAAUgB,GAC7C,OAAOA,EAAKzF,WAAa2gB,EAAYtiB,GAAGiH,iBACzC,GACHqb,EAAYtiB,GAAGyB,WAAWoB,MAAQwhC,EAAcxhC,QAG/C7C,EAAI,EAAGA,EAAIsiB,EAAYpiB,OAAQF,IACpCuF,EAAQvF,GAEZ,OAAOsiB,GAEX4gB,EAAM19B,UAAUk+B,UAAY,SAAUr9B,GAGlC,IAAK,IAFDi+B,EACAC,EAAcl+B,EAAExF,QACXb,EAAIqG,EAAExF,QAAQX,OAAS,EAAGF,GAAK,EAAGA,IAEvC,IADAskC,EAAgBC,EAAYvkC,IACViH,eAAgB,CAC9B,IAAI5F,EAASkjC,EAAYn+B,OAAO,SAAUgB,GACtC,OAAOA,EAAKzF,WAAa2iC,EAAcr9B,iBAE3C,GAAI5F,EAAOnB,OAAQ,CACf,IAAI2C,EAAQxB,EAAO,GAAGY,aAAakF,QAAQm9B,GACvC9iC,EAAeH,EAAO,IACX,IAAXwB,IACIxC,oBAAkBsI,KAAKtJ,OAAOwG,aAC9BrE,EAAaS,aAAa6D,OAAOjD,EAAO,GACnCrB,EAAaS,aAAa/B,SAC3BsB,EAAaQ,iBAAkB,EAC/BR,EAAakZ,yBAA0B,IAG/C/R,KAAKy6B,oBAAqB,IAK1C,GAAI/iC,oBAAkBsI,KAAKtJ,OAAOC,cAAgBqJ,KAAKtJ,OAAOC,WAAWY,OAAQ,CAKxE,IAHDskC,EADAX,EAAOl7B,KAAKtJ,OAEZolC,EAAgBp+B,EAAExF,QAEtB,IAASb,EADQqG,EAAExF,QAAQX,OACD,EAAGF,GAAK,EAAGA,IAAK,CACtCwkC,EAAkBC,EAAczkC,IAC3BA,GAAKwkC,EAAgBxiC,kBACtBwiC,EAAgBzhC,SAAS4F,KAAKtJ,OAAOuG,iBAAmB,MAU5D,GAPKvF,oBAAkBwjC,EAAKj+B,mBACxBi+B,EAAK99B,aAAe,MAEnB1F,oBAAkBmkC,EAAgBzhC,WAAc1C,oBAAkBwjC,EAAK99B,eACvE/E,OAAOwE,UAAUC,eAAeC,KAAK8+B,EAAgBzhC,SAAU8gC,EAAK99B,gBACrEy+B,EAAgBzhC,SAAS8gC,EAAK99B,kBAE9B/E,OAAOwE,UAAUC,eAAeC,KAAK8+B,EAAiBX,EAAK99B,eAC1Dy+B,EAAgBX,EAAK99B,cAAe7F,SAAWyI,KAAKy6B,qBACpD/iC,oBAAkBwjC,EAAKj+B,iBAExB,IAAK,IADD4M,EAAagyB,EAAgBX,EAAK99B,cAC7BrD,EAAI,EAAGA,EAAI8P,EAAUtS,OAAQwC,KACW,IAAzC+hC,EAAct9B,QAAQqL,EAAU9P,MAChC+hC,EAAc3+B,OAAOpD,EAAG,EAAG8P,EAAU9P,IACrC8P,EAAU9P,GAAGK,SAAWgC,YAAWyN,EAAU9P,IAC7C1C,GAAK,GAIbgB,OAAOwE,UAAUC,eAAeC,KAAK8+B,EAAiBX,EAAKj+B,kBAA6D,MAAzC4+B,EAAgBX,EAAKj+B,mBAChG+C,KAAKy6B,qBACToB,EAAgBzhC,SAAS8gC,EAAKj+B,iBAAmB,YAC1C4+B,EAAgB/iC,kBAChB+iC,EAAgBv9B,gBAEvB5G,oBAAkBwjC,EAAKvkC,cACvBukC,EAAKvkC,eAETukC,EAAKvkC,WAAWwG,OA7BG,EA6BkB,EAAG0+B,EAAgBzhC,UAE5D8gC,EAAKrd,eAAgBlnB,WAAYukC,EAAKvkC,aAAc,OAEnD,CACD,IAASU,EAAI,EAAGA,EAAIukC,EAAYrkC,OAAQF,IACpCoe,WAAS,sBAAwBmmB,EAAYvkC,GAAG2B,SAAU4iC,EAAYvkC,GAAI2I,KAAKtJ,QAEnF,IAAIqM,GAAStE,KAAMf,EAAExF,QAASkjC,UAAW19B,EAAE67B,SACvCv5B,KAAKtJ,OAAOC,sBAAsBC,eAClCoJ,KAAK0Z,aAAe1Z,KAAKtJ,OAAOC,WAAWA,WAAW8E,KACtDuE,KAAKxE,SAAWwE,KAAKtJ,OAAOC,WAAWA,WAAW8E,OAGlDuE,KAAK0Z,aAAe1Z,KAAKtJ,OAAOiB,KAAKhB,WACrCqJ,KAAKxE,SAAWwE,KAAKtJ,OAAOC,YAE5Be,oBAAkBsI,KAAKm7B,gBACvBn7B,KAAKm7B,aAAe,gBACpBp4B,EAAKq4B,UAAYp7B,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,EAAIyI,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,EAC3GwL,EAAKq4B,UACTr4B,EAAKtE,KAAOsE,EAAKtE,KAAKN,IAAI,SAAU9G,GAChC,OAAIA,EAAEgC,iBAAmB3B,oBAAkBL,EAAEyB,aACzCzB,EAAE8C,MAAQ,EACH9C,WAGAA,EAAEyB,kBACFzB,EAAEiH,eACTjH,EAAE8C,MAAQ,EACH9C,MAInB2I,KAAKq7B,SAASt4B,KAGtBw3B,EAAM19B,UAAUo+B,YAAc,SAAUv9B,GACpC,IAAK,IAAIrG,EAAI,EAAGA,EAAIqG,EAAExF,QAAQX,OAAQF,IAClC2I,KAAK27B,cAAgBj+B,EAAExF,QAAQb,IAC3B2I,KAAK27B,cAActiC,iBAAmB2G,KAAK27B,cAAc7iC,aAE8B,IADvFkH,KAAKtJ,OAAOiB,KAAKhB,WACb6H,QAAQwB,KAAK46B,0BAA0B56B,KAAK27B,cAAcr9B,gBAAgB,KACjD,IAA7B0B,KAAK27B,cAAcxhC,QACnB6F,KAAK+7B,iBAIjBxB,EAAM19B,UAAUm/B,sBAAwB,WACpC,IAGIC,EACAC,EAJAP,EAAgB37B,KAAK27B,cACrBQ,EAAgBn8B,KAAKm8B,cACrBC,EAAQp8B,KAAKtJ,OAUjB,KANIulC,EADAj8B,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QAC/C0lC,EAAMzlC,WAAWA,WAAW8E,KAG5B2gC,EAAMzlC,aAGHe,oBAAkBykC,IAAmBA,EAAcrjC,YAAgBpB,oBAAkBykC,EAAc/hC,WAiBtH,IAAK4F,KAAKtJ,OAAOuG,kBAAqBvF,oBAAkBykC,IAAkBA,EAAcrjC,aAC/D,eAAtBkH,KAAKm7B,cAAuD,kBAAtBn7B,KAAKm7B,cAGtC,CAAA,IADD7hC,EADS0G,KAAK46B,0BAA0BuB,EAAc79B,gBAAgB,GAChDhF,aAC1B,IAASjC,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrC8kC,EAAcrjC,WAAWsB,SAAS4F,KAAKtJ,OAAO0G,cAAc/F,GAAKiC,EAAajC,GAAG+C,cAtByC,CAClI,IAAK,IAAI/C,EAAI,EAAGA,EAAIgB,OAAOC,KAAK2jC,GAAgB1kC,OAAQF,IAChD4kC,EAAe5kC,GAAG2I,KAAKtJ,OAAO0G,gBAAkB++B,EAAc/hC,SAAS4F,KAAKtJ,OAAO0G,gBACnF8+B,EAAM7kC,GAGY,eAAtB2I,KAAKm7B,aACAn7B,KAAKtJ,OAAOwG,WACb++B,EAAe9+B,OAAO++B,EAAK,EAAGP,EAAcvhC,UAGrB,kBAAtB4F,KAAKm7B,eACLn7B,KAAKtJ,OAAOwG,WACb++B,EAAe9+B,OAAO++B,EAAM,EAAG,EAAGP,EAAcvhC,WAaxD4F,KAAKtJ,OAAOuG,kBACR0+B,EAAc7iC,WACY,eAAtBkH,KAAKm7B,cAAuD,kBAAtBn7B,KAAKm7B,cAC3CQ,EAAc37B,KAAKtJ,OAAOuG,iBAAmBk/B,EAAcn8B,KAAKtJ,OAAOuG,iBACvE0+B,EAAcvhC,SAAS4F,KAAKtJ,OAAOuG,iBAAmBk/B,EAAcn8B,KAAKtJ,OAAOuG,mBAGhF0+B,EAAc37B,KAAKtJ,OAAOuG,iBAAmBk/B,EAAcn8B,KAAKtJ,OAAOwG,WACvEy+B,EAAcvhC,SAAS4F,KAAKtJ,OAAOuG,iBAAmBk/B,EAAcn8B,KAAKtJ,OAAOwG,aAIpFy+B,EAAcvhC,SAAS4F,KAAKtJ,OAAOuG,iBAAmB,KACtD0+B,EAAc37B,KAAKtJ,OAAOuG,iBAAmB,QAIzDs9B,EAAM19B,UAAUw/B,qBAAuB,SAAUnpB,GAC7C,IAAIopB,EAAkC,kBAAtBt8B,KAAKm7B,aACjBn7B,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,qBAAqB7f,OAAS,GAAK2b,IACxD,IAArBA,EAAQxJ,UAAkB4yB,IAC3Bt8B,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,qBAAqB,GAAGsO,UAG3E6U,EAAM19B,UAAU0/B,oBAAsB,SAAUrpB,GAC5C,IAAIspB,EAAatpB,IAAYA,EAAQ9K,UAAUC,SAAS,eAAiB6K,EAAQ9K,UAAUC,SAAS,mBAC7F6K,EAAQ9K,UAAUC,SAAS,gBAC9Bo0B,EAAiBvpB,IAAYspB,GAC7Bx8B,KAAKtJ,OAAOkI,cAAcoB,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,GAAG4U,aAAa,cACnF+G,EAAQ/G,aAAa,YACzBmwB,EAAYG,GAAwC,eAAtBz8B,KAAKm7B,aACnCn7B,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,oBAAoB7f,OAAS,GAAK2b,IAAYupB,GAAkBH,IAC3Gt8B,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,oBAAoB,GAAGsO,UAG1E6U,EAAM19B,UAAU6/B,WAAa,SAAU/9B,EAAKzE,EAAO6I,GAC/C,IAAI45B,EAAS55B,EAAK3B,OAAS2J,UAAQhI,EAAK3B,OAAQ,MAAQ,KACxDpB,KAAKm7B,kBAAehe,EACpB,IAAIyf,EAAoB,EACxB58B,KAAKq8B,qBAAqBM,GAC1B38B,KAAKu8B,oBAAoBI,GACzB,IAAK,IAAItlC,EAAI,EAAGA,EAAI0L,EAAK+E,KAAKvQ,OAAQF,KAC7BK,oBAAkBilC,IAAWA,EAAOxwB,aAAa,cAAgBpJ,EAAK+E,KAAKzQ,GAAG8U,aAAa,cACxFtB,eAAa9H,EAAK3B,OAAQ,mBAC9BpB,KAAKm7B,aAAe,UACpBn7B,KAAK68B,gBAIb,IAAI3B,EAAOl7B,KAAKtJ,OACZomC,EAAS,EAETC,EAAa7B,EAAKvW,SAAWuW,EAAKvW,QAAQptB,OAC1CylC,SAASC,eAAe/B,EAAKhoB,QAAQC,GAAK,6BAA6B+pB,aAAe,EAEtFC,EAAiBn9B,KAAKo9B,UAAUlC,EAAKhoB,SAErCmqB,EAAgBnC,EAAKhvB,mBAAmBgxB,aAAeC,EAAeG,IAAMP,EAC5EvH,EAAY0F,EAAKzH,aAAa6B,kBAAkBE,UAC/C99B,oBAAkBilC,KACnBC,EAAoBD,EAAOY,UAAY/H,GAI3C,IAEIgI,IAHJV,EAASF,EAAoBS,EAZd,GAaU1+B,EAAI,GAAGu+B,aACHJ,GACH,EACtBW,EAAgBX,EAASU,EACzBE,EAAmBD,EAAgBD,EACnCG,EAAmBD,EAAmBF,EAEtCI,EADarlC,YAAU,sBAAuBwK,GAC5B86B,MAClBC,EAAeF,GAAQH,EACvBM,EAAsBH,EAAOH,GAAiBG,GAAQF,EACtDM,EAAsBJ,EAAOF,GAAoBE,GAAQD,EAC7D,GAAIG,GAAgBC,GAAsBC,EAAoB,CAU1D,GATIF,GAAsC,YAAtB99B,KAAKm7B,eACrBn7B,KAAKi+B,oBACLj+B,KAAKm7B,aAAe,aACpBn7B,KAAKk+B,0BACLl+B,KAAKm+B,kBAAkBxB,GACvB38B,KAAKo+B,kBACLp+B,KAAKu8B,oBAAoBI,GACzB38B,KAAKq+B,kBAAkBt7B,EAAK3B,SAE5B28B,GAA4C,YAAtB/9B,KAAKm7B,aAA4B,CACvDn7B,KAAKk+B,0BACL,IAAI3yB,KACA2H,EAAUnI,UAAQhI,EAAK3B,OAAQ,OACnCmK,KAAgBjD,MAAMvL,KAAKmW,EAAQ3K,iBAAiB,oDACrChR,OAAS,GACpByI,KAAKs+B,iBAAiB/yB,GAAY,EAAM,iBAE5CvL,KAAKu+B,iBAAiB5B,GACtB38B,KAAKm+B,kBAAkBxB,GACvB38B,KAAKm7B,aAAe,gBAEpB6C,GAA4C,YAAtBh+B,KAAKm7B,eAC3Bn7B,KAAKo+B,kBACLp+B,KAAKk+B,0BACLl+B,KAAKi+B,oBACLj+B,KAAKm7B,aAAe,gBACpBn7B,KAAKu+B,iBAAiB5B,GACtB38B,KAAKq8B,qBAAqBM,GAC1B38B,KAAKq+B,kBAAkBt7B,EAAK3B,SAGpC,OAAOpB,KAAKm7B,cAEhBZ,EAAM19B,UAAUohC,kBAAoB,WAChC,IAAIO,MACJA,KAAgBl2B,MAAMvL,KAAKiD,KAAKtJ,OAAOwc,QAAQ3K,iBAAiB,oBACjDhR,OAAS,GACpByI,KAAKs+B,iBAAiBE,GAAY,EAAO,kBAGjDjE,EAAM19B,UAAUshC,kBAAoB,SAAUM,GAC1C,IAAIC,EAAO1+B,KAAKtJ,OAAOwc,QACnBgoB,EAAOl7B,KAAKtJ,OAChB,GAAI+nC,GAAoC,IAAvBA,EAAU/0B,WAAmB+0B,EAAUr2B,UAAUC,SAAS,cAAe,CACtF,IAAIs2B,EAAM3+B,KAAKtJ,OAAO4V,cAAc,OAASC,UAAW,sBACpDqyB,EAAgB5+B,KAAKtJ,OAAOwV,mBAC5B2yB,EAAgB,EAChB3D,EAAKvW,UACLka,EAAgB3D,EAAKxJ,cAAcoN,aAAa5B,cAEpD,IAAI6B,GAAgBrnC,oBAAkBsI,KAAKtJ,OAAOwvB,gBAAgBC,UAC9D4Y,IACAJ,EAAInkC,MAAM8iC,IAAMt9B,KAAKtJ,OAAOiB,KAAKub,QAAQkE,uBAAuB,gBAAgB,GAAG8lB,aAC7E2B,EAAgB,MAE1BF,EAAInkC,MAAM2S,MAAQ4xB,EAAeL,EAAKM,YAAc,KAChDN,EAAKM,YAAch/B,KAAKi/B,iBAAmB,KAC1CL,EAAcr2B,iBAAiB,sBAAsBhR,QACtDqnC,EAAcjxB,YAAYgxB,KAItCpE,EAAM19B,UAAU0hC,iBAAmB,SAAUW,GACzC,IAAI1C,EAAa0C,IAAcA,EAAU92B,UAAUC,SAAS,eACxD62B,EAAU92B,UAAUC,SAAS,mBAAqB62B,EAAU92B,UAAUC,SAAS,gBACnF,GAAI62B,IAAc1C,GAAcx8B,KAAKtJ,OAAOkI,cAAcoB,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,GAAG4U,aAAa,cACnH+yB,EAAU/yB,aAAa,YAAa,CACpC,IAAIgzB,EAAen/B,KAAKtJ,OAAO4V,cAAc,OAASC,UAAW,qBAC7D6yB,EAAiBp/B,KAAKtJ,OAAO+8B,aACjC0L,EAAa3kC,MAAM2S,MAAQnN,KAAKtJ,OAAOwc,QAAQ8rB,YAAch/B,KAAKi/B,iBAAmB,KAChFG,EAAe72B,iBAAiB,qBAAqBhR,SACtD6nC,EAAeh3B,UAAUuE,IAAI,uBAC7ByyB,EAAezxB,YAAYwxB,GAC3BA,EAAa3kC,MAAM6kC,OAASr/B,KAAKi/B,iBAAmB,QAIhE1E,EAAM19B,UAAUoiC,eAAiB,WAC7B,IAAIK,EAAat/B,KAAKtJ,OAAO+8B,aAAa6B,kBAC1C,OAAOgK,EAAWC,YAAcD,EAAWN,YAAcQ,SAAOC,oBAAsB,GAE1FlF,EAAM19B,UAAUggC,aAAe,WAC3B,IAAI6C,EAAW1C,SAAS5lB,uBAAuB,qBAAqB,GAEpE,IADgBsoB,EAASn3B,iBAAiB,gBAAgBhR,SACvCyI,KAAKtJ,OAAOwvB,gBAAgBC,SAAU,CACrD,IAAIwZ,EAAM3C,SAAS1wB,cAAc,OACjClE,YAAUu3B,GAAM,wBAChBv3B,YAAUu3B,GAAM,UAAW,mBAC3B,IAAIC,EAAWF,EAAS50B,cAAc,eAClC+0B,EAAUH,EAAS50B,cAAc,cAAc2C,UAC/CmyB,IACAC,EAAUD,EAASnyB,UACnBmyB,EAASE,WAAWC,YAAYH,IAEpCF,EAAS50B,cAAc,cAAc2C,UAAY,GACjD,IAAIuyB,EAAchD,SAAS1wB,cAAc,QACzC0zB,EAAYzzB,UAAY,aACxByzB,EAAYxlC,MAAMylC,YAAc,OAChCD,EAAYvyB,UAAYoyB,EACxBH,EAAS50B,cAAc,cAAc6C,YAAYgyB,GACjDD,EAAS50B,cAAc,cAAc6C,YAAYqyB,KAGzDzF,EAAM19B,UAAUuhC,gBAAkB,WAC9B,IAAI8B,EAAYlD,SAASlyB,cAAc,gBACnCo1B,GACAA,EAAUxa,UAGlB6U,EAAM19B,UAAUwhC,kBAAoB,SAAUj9B,GAC1C,IAAImK,KACA2H,EAAUnI,UAAQ3J,EAAQ,OAC9BmK,EAAa2H,KAAa5K,MAAMvL,KAAKmW,EAAQ3K,iBAAiB,uDAC/ChR,SACe,eAAtByI,KAAKm7B,eACLn7B,KAAKs+B,iBAAiB/yB,GAAY,EAAM,aACpCvL,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,wBAAwB7f,OAAS,GAC5EyI,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,wBAAwB,GAAGsO,UAGpD,kBAAtB1lB,KAAKm7B,cACLn7B,KAAKs+B,iBAAiB/yB,GAAY,EAAM,kBAIpDgvB,EAAM19B,UAAUqhC,wBAA0B,WACtC,IAAIiC,MACJA,KAAY73B,MAAMvL,KAAKiD,KAAKtJ,OAAOwc,QAAQ3K,iBAAiB,+BACjDhR,SACPyI,KAAKs+B,iBAAiB6B,GAAQ,EAAO,gBACrCngC,KAAKs+B,iBAAiB6B,GAAQ,EAAO,eAG7C5F,EAAM19B,UAAUyhC,iBAAmB,SAAU5+B,EAAOiN,EAAKJ,GACrD,IAAK,IAAIlV,EAAI,EAAGe,EAAMsH,EAAMnI,OAAQF,EAAIe,EAAKf,IACrCsV,EACAjN,EAAMrI,GAAG+Q,UAAUuE,IAAIJ,GAGvB7M,EAAMrI,GAAG+Q,UAAUsd,OAAOnZ,IAItCguB,EAAM19B,UAAUugC,UAAY,SAAUlqB,GAClC,IAAIktB,EAAMltB,EAAQmtB,wBACdC,EAAOtD,SAASsD,KAChBC,EAAUvD,SAASwD,gBACnBhL,EAAY/6B,OAAOgmC,aAAeF,EAAQ/K,WAAa8K,EAAK9K,UAC5DkL,EAAajmC,OAAOkmC,aAAeJ,EAAQG,YAAcJ,EAAKI,WAC9DE,EAAYL,EAAQK,WAAaN,EAAKM,WAAa,EACnDC,EAAaN,EAAQM,YAAcP,EAAKO,YAAc,EACtDvD,EAAM8C,EAAI9C,IAAM9H,EAAYoL,EAC5BE,EAAOV,EAAIU,KAAOJ,EAAaG,EACnC,OAASvD,IAAK3mB,KAAKoqB,MAAMzD,GAAMwD,KAAMnqB,KAAKoqB,MAAMD,KAEpDvG,EAAM19B,UAAUg+B,WAAa,SAAU93B,GACnC,IAAIm4B,EAAOl7B,KAAKtJ,OACZsqC,EAAehhC,KAAKtJ,OAAOwc,QAAQpI,cAAc,sBACrDk2B,EAAaxmC,MAAMymC,OAAS,GAC5B,IAAItE,EAAS55B,EAAK3B,OAAS2J,UAAQhI,EAAK3B,OAAQ,MAAQ,KACpD8/B,EAASvE,EAASA,EAAOjzB,UAAY,EACrCkyB,KACAO,EAAgBjB,EAAK/+B,wBAAwB+kC,GAmBjD,GAlBAlhC,KAAKo+B,kBACLp+B,KAAKw6B,SAAU,EACVz3B,EAAKtE,KAAK,GAIXm9B,EAAc74B,EAAKtE,KAHnBm9B,EAAYpjC,KAAKuK,EAAKtE,OAKV,IAAZyiC,EACAlhC,KAAKmhC,mBAAmBvF,EAAaO,IAGrCn8B,KAAKw6B,SAAU,EACfx6B,KAAK68B,iBAEJ3B,EAAKhV,gBAAgBC,UAAYnmB,KAAKw6B,SACvCU,EAAK1B,qBAAqBkD,WAAW35B,EAAK+E,KAAMo5B,EAAQn+B,GAExDm4B,EAAKhV,gBAAgBC,SAAU,CAE/B,IADIib,EAAcv2B,eAAa9H,EAAK3B,OAAQ,gBACzBggC,EAAYjuB,KAAOnT,KAAKtJ,OAAOwvB,gBAAgBC,SAAU,CACvDib,EAAYC,cAAc,GAChC7H,qBAAqBkD,WAAW35B,EAAK+E,KAAMo5B,EAAQn+B,IAGtE,GAAIA,EAAK3B,QAAU2J,UAAQhI,EAAK3B,OAAQ,IAAM85B,EAAKhV,gBAAgBC,UAAW,CAC1E,IAAIib,GAAAA,EAAcv2B,eAAa9H,EAAK3B,OAAQ,iBAExC4/B,EAAaxmC,MAAMymC,OAAS,aAIxC1G,EAAM19B,UAAUqK,WAAa,SAAUnE,GACnC,IAAIm4B,EAAOl7B,KAAKtJ,OA6ChB,GA3CKwkC,EAAKhV,gBAAgBC,UAuBlBpjB,EAAK3B,QAAU2J,UAAQhI,EAAK3B,OAAQ,IAAM85B,EAAKhV,gBAAgBC,WAAatb,eAAa9H,EAAK3B,OAAQ,eACtGyJ,eAAa9H,EAAK3B,OAAQ,cAAc+R,KAAO+nB,EAAKhV,gBAAgBC,YACpE1Q,WAAS,eAAgBzV,KAAKm7B,aAAcp4B,GAC5Cm4B,EAAKjyB,QjBldA,UiBkdwBlG,IACxBA,EAAKiG,QAAUkyB,EAAKhV,gBAAgBC,WACrCnmB,KAAKshC,aAAav+B,GACdm4B,EAAK5gB,cACL4gB,EAAK19B,SAAWwC,KAAKs7B,aAAaJ,EAAK19B,aA7B/CqN,eAAa9H,EAAK3B,OAAQ,eACtBpB,KAAKtJ,OAAOwc,QAAQpI,cAAc,kBAClC9K,KAAKm7B,aAAe,WAExB1lB,WAAS,eAAgBzV,KAAKm7B,aAAcp4B,GAC5CA,EAAKq4B,UAAYr4B,EAAKq4B,YAAcr4B,EAAKw+B,UAAYvhC,KAAKwhC,aAAaz+B,EAAK3B,OAAOqhB,eAAiB1f,EAAKq4B,UACzGF,EAAKjyB,QjB/bA,UiB+bwBlG,GACxBA,EAAKiG,SACD7R,EAAgB6I,KAAKtJ,SACtBsJ,KAAKq7B,SAASt4B,GAEdm4B,EAAK5gB,cACL4gB,EAAK19B,SAAWwC,KAAKs7B,aAAaJ,EAAK19B,WAE3C09B,EAAKvjC,KAAK81B,UACL/1B,oBAAkBwjC,EAAKhvB,mBAAmBpB,cAAc,wBACzDowB,EAAKhvB,mBAAmBpB,cAAc,sBAAsB4a,WAkB5E1lB,KAAKk+B,0BACLl+B,KAAKi+B,oBACAvmC,oBAAkBsI,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,qBAAqB,IAG7E1f,oBAAkBsI,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,oBAAoB,KACvFpX,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,oBAAoB,GAAGsO,SAHlE1lB,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,qBAAqB,GAAGsO,SAKnE1lB,KAAKtJ,OAAO4I,sBAAwBU,KAAKtJ,OAAOma,cAAgBnZ,oBAAkBqL,EAAKtE,KAAK,GAAa,YAAI,CAC7G,IAAIvE,EAAQ8F,KAAKtJ,OAAO0I,gBACxBlF,GAAgB,EAChB,IAAI+8B,EAAkBj3B,KAAKtJ,OAAO6E,0BAA0B,GACxDmO,EAAW1J,KAAKtJ,OAAOiB,KAAKmH,wBAAwBiE,EAAKtE,KAAK,GAAGw4B,IACjEt4B,EAAMqB,KAAKtJ,OAAOmI,UAAU6K,GAC5BjL,EAAOsE,EAAKtE,KAAK,GACrB,GAA0B,kBAAtBuB,KAAKm7B,aAAkC,CACvC,IAAIziC,KACAoP,KACJpP,EAAOF,KAAKiG,GACZqJ,EAAKtP,KAAKmG,GAEVF,EAAO1F,EAAciH,KAAKtJ,OAAQqM,EAAKtE,KAAK,GAAiB,gBAC7DiL,EAAW1J,KAAKtJ,OAAOiB,KAAKmH,wBAAwBL,EAAKw4B,IACzD,IAAIwE,EAAYz7B,KAAKtJ,OAAOmI,UAAU6K,GACtChR,EAAOF,KAAKiG,GACZqJ,EAAKtP,KAAKijC,GACV,IAAK,IAAIpkC,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B2I,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAM/F,EAAOrB,GAAIoI,KAAMqI,EAAKzQ,GAAGqI,MAAMxF,GACrCyF,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,iBAClDS,YAAa,mBAGrB,IAAIsX,EAAYskB,EAAUrkB,uBAAuB,sBAAsB,GAClE1f,oBAAkByf,KACnB9J,eAAa8J,GAAY,sBACzB/G,YAAU+G,GAAY,0BAI1BnX,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAMA,EAAMgB,KAAMd,EAAIe,MAAMxF,GAC5ByF,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,iBAClDS,YAAa,qBAK7B06B,EAAM19B,UAAUykC,aAAe,SAAUv+B,GACrC,IAII0+B,EAJAvG,EAAOl7B,KAAKtJ,OACZ+nC,EAAY1zB,UAAQhI,EAAK3B,OAAQ,MACjCsgC,EAAcC,MAAM3hC,KAAKwhC,aAAa/C,IAAc,EAAIz+B,KAAKwhC,aAAa/C,GAC1E2C,EAAcv2B,eAAa9H,EAAK3B,OAAQ,cAE5C,GAAIggC,GAAeA,EAAYjuB,KAAOnT,KAAKtJ,OAAOwvB,gBAAgBC,WAAa1vB,EAAauJ,KAAKtJ,UACzFS,EAAgB6I,KAAKtJ,QAAS,CAClC+qC,EAAaL,EAAYC,cAAc,GAGvC,IAAK,IAFDnpC,EAAUgjC,EAAKzyB,qBACf6rB,KACKj9B,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChCi9B,EAAQj9B,GAAKa,EAAQb,GAAG6C,MAE5B,IAAIuE,EAAOgjC,EAAW9qC,WACtB,GAA6B,MAAzBqJ,KAAKtJ,OAAOwG,YAAsBxF,oBAAkBsI,KAAKm7B,eAAuC,kBAAtBn7B,KAAKm7B,cAA0D,YAAtBn7B,KAAKm7B,gBAAiC18B,EAAW,OAAG,CAElK,IADDmjC,KACJ,IAASvqC,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC,GAAIa,EAAQb,GAAGgC,gBAAiB,CAC5BuoC,EAAWppC,KAAKN,EAAQb,IAExB,IAAK,IADD2G,EAAQ5E,EAAoBlB,EAAQb,IAC/BugC,EAAM,EAAGA,EAAM55B,EAAMzG,OAAQqgC,IAClCgK,EAAWppC,KAAKwF,EAAM45B,IAI9BgK,EAAWrqC,SACXW,EAAU0pC,GAGlB1G,EAAK/oB,OAAO6oB,IAAqB1G,QAASA,EAASp8B,QAASA,IAC5DupC,EAAWtvB,OAAO2oB,IAAkBvB,QAASmI,EAAaxpC,QAASA,IACnE,IAAI2pC,EAAqBJ,EAAWjI,qBAAqB9f,aACzD,IAAKhiB,oBAAkBmqC,GACnB,IAASxqC,EAAI,EAAGA,EAAIwqC,EAAmBtqC,OAAQF,IAE3C,GADAwqC,EAAmBxqC,GAAG6C,MAAQ7C,GACzBK,oBAAkBmqC,EAAmBxqC,GAAGyB,YAAa,CACtD,IAAIgpC,EAAczjC,WAAS,sBAAwBwjC,EAAmBxqC,GAAGiH,eAAiB,SAAUmjC,GACpGI,EAAmBxqC,GAAGyB,WAAWoB,MAAQ4nC,EAIrD5G,EAAKvjC,KAAK81B,UACVgU,EAAW9pC,KAAK81B,UACZgU,EAAW9pC,KAAKhB,WAAWY,OAAS,IACpCkqC,EAAW9pC,KAAK81B,UACX/1B,oBAAkB+pC,EAAWv1B,mBAAmBpB,cAAc,wBAC/D22B,EAAWv1B,mBAAmBpB,cAAc,sBAAsB4a,SAEjEhuB,oBAAkB+pC,EAAWhO,aAAa3oB,cAAc,uBACzD22B,EAAWhO,aAAa3oB,cAAc,qBAAqB4a,UAInEvuB,EAAgB6I,KAAKtJ,UACrB+qC,EAAaL,EAAYC,cAAc,GACvCnG,EAAKvjC,KAAK81B,UACVgU,EAAW9pC,KAAK81B,YAGxB8M,EAAM19B,UAAU2kC,aAAe,SAAU/C,GACrC,OAAOA,EAAYpsB,SAASosB,EAAUtyB,aAAa,iBAAkB,IAAM,GAE/EouB,EAAM19B,UAAU9D,cAAgB,SAAUL,GACtC,IAAII,EAAaJ,EAAOI,WACxB,GAA0B,kBAAtBkH,KAAKm7B,aAAkC,CACvC,IAAI4G,EAAiB/hC,KAAKtJ,OAAO+R,qBAAqB,GACtDzI,KAAKm8B,cAAgBpjC,EAAciH,KAAKtJ,OAAQqrC,EAAejpC,WAAWE,UAE9E,GAA0B,kBAAtBgH,KAAKm7B,aAAkC,CAC3Bn7B,KAAKtJ,OAAO+R,qBAAqB,GAAGtO,QAClCrB,EAAWqB,MACrB6F,KAAKm8B,cAAgBpjC,EAAciH,KAAKtJ,OAAQoC,EAAWE,UAG3DgH,KAAKjH,cAAcD,KAI/ByhC,EAAM19B,UAAUw+B,SAAW,SAAUt4B,EAAMi/B,GACvC,GAA0B,YAAtBhiC,KAAKm7B,eAA+B1kC,EAAauJ,KAAKtJ,QAAS,CAC/D,IAAIwkC,EAAOl7B,KAAKtJ,OACZilC,OAAgB,EAChBQ,OAAgB,EACpB,GAAIzkC,oBAAkBqL,EAAKq4B,WAAY,CACnC,IAAI1xB,EAAWwxB,EAAKjzB,wBAAwB,GAAK,EAC7CvP,EAASwiC,EAAK/+B,wBAAwBuN,GAC1C1J,KAAKjH,cAAcL,QAGnBqK,EAAKq4B,UAAYr4B,EAAKq4B,YAAcr4B,EAAKw+B,UAAYvhC,KAAKwhC,aAAaz+B,EAAK3B,OAAOqhB,eAAiB1f,EAAKq4B,UACzGp7B,KAAKm8B,cAAgBjB,EAAK/+B,wBAAwB4G,EAAKq4B,WAE3D,IAAIQ,KACJO,EAAgBn8B,KAAKm8B,cAChBp5B,EAAKtE,KAAK,GAIXm9B,EAAc74B,EAAKtE,KAHnBm9B,EAAYpjC,KAAKuK,EAAKtE,MAK1B,IAAI4P,EAAQ,EACR0wB,EAAe/+B,KAAKtJ,OAAOwvB,gBAAgBC,SAC/CnmB,KAAKiiC,eAAiBlD,EACjBA,EAID/+B,KAAK06B,cAAgBqE,GAAgB/+B,KAAKy6B,mBAH1Cz6B,KAAKmhC,mBAAmBvF,EAAaO,GAKzC,IAAI+F,EAAatG,EAAYrkC,OACxBG,oBAAkBsI,KAAKtJ,OAAOwG,YAC/B0+B,EAAYuG,UAEhB,IAAK,IAAI9qC,EAAI,EAAGA,EAAI6qC,EAAY7qC,IAAK,CAGjC,GAFAskC,EAAgBC,EAAYvkC,GAC5B2I,KAAK27B,cAAgBA,EACK,YAAtB37B,KAAKm7B,aAA4B,CAIjC,GAHKD,EAAKhV,gBAAgBC,WAAY6b,GAClChiC,KAAK+7B,gBAEL/7B,KAAK27B,gBAAkB37B,KAAKm8B,cAAe,CAC3C,IAAIiG,EAAepiC,KAAKwhC,aAAaz+B,EAAK3B,OAAOihC,aAAa5f,eAC1Dkf,MAAMS,KACNA,EAAepiC,KAAKwhC,aAAaz+B,EAAK3B,OAAOqhB,gBAEjD1f,EAAKq4B,UAAYgH,EACjBjG,EAAgBn8B,KAAKm8B,cAAgBn8B,KAAKtJ,OAAOyF,wBAAwB4G,EAAKq4B,WAElF,IAAIkH,EAAetiC,KAAK0Z,aAAalb,QAAQ29B,GAE7C,GADAn8B,KAAKuiC,UAAUD,GACW,kBAAtBtiC,KAAKm7B,aAAkC,CAqBvC,GApBKgB,EAAc9iC,iBAOfgV,EAAQrO,KAAKwiC,cAAcrG,EAAe,GACtCn8B,KAAKtJ,OAAOuG,iBACZ+C,KAAKxE,SAAS2B,OAAOmlC,EAAej0B,EAAQ,EAAG,EAAGrO,KAAK27B,cAAcvhC,UAEzE4F,KAAK0Z,aAAavc,OAAOmlC,EAAej0B,EAAQ,EAAG,EAAGrO,KAAK27B,iBAVvD37B,KAAKtJ,OAAOuG,iBACZ+C,KAAKxE,SAAS2B,OAAOmlC,EAAe,EAAG,EAAGtiC,KAAK27B,cAAcvhC,UAEjE4F,KAAK0Z,aAAavc,OAAOmlC,EAAe,EAAG,EAAGtiC,KAAK27B,gBASnDjkC,oBAAkBykC,EAAcrjC,qBACzB6iC,EAAc7iC,WACrB6iC,EAAcxhC,MAAQ,EAClB6F,KAAKtJ,OAAOuG,kBACZ0+B,EAAc37B,KAAKtJ,OAAOuG,iBAAmB,OAGjDk/B,EAAcrjC,WAAY,CAC1B,IACIQ,EADM0G,KAAK46B,0BAA0BuB,EAAc79B,gBAChC,GAAGhF,aACtBmpC,EAAqBnpC,EAAakF,QAAQ29B,GAAiB,EAC/D7iC,EAAa6D,OAAOslC,EAAoB,EAAG9G,GAC3CA,EAAc7iC,WAAaqjC,EAAcrjC,WACzC6iC,EAAcr9B,eAAiB69B,EAAc79B,eACzC0B,KAAKtJ,OAAOuG,kBACZ0+B,EAAc37B,KAAKtJ,OAAOuG,iBAAmBk/B,EAAcn8B,KAAKtJ,OAAOuG,iBACvE0+B,EAAc7iC,WAAaqjC,EAAcrjC,WACzC6iC,EAAcxhC,MAAQgiC,EAAchiC,OAG5C,GAAIwhC,EAActiC,gBAAiB,CAE/B2G,KAAK0iC,uBAAuB/G,EADhB,GAEZ37B,KAAK2iC,kBAAkBhH,EAAe2G,EAAej0B,EAAQ,IAGrErO,KAAK4iC,WAAWN,GAEpB,GAAI5qC,oBAAkBikC,EAAc7iC,YAAa,CAC7C,IAAI2gB,EAAgByhB,EAAK39B,WACrBslC,EAAiBppB,EAAcjb,QAAQwB,KAAKm8B,eACtB,kBAAtBn8B,KAAKm7B,aACL1hB,EAActc,OAAO0lC,EAAiB,EAAG,EAAGlH,GAEjB,eAAtB37B,KAAKm7B,cACV1hB,EAActc,OAAO0lC,EAAgB,EAAGlH,GAGhDT,EAAK1B,qBAAqBwC,2BAItCzB,EAAM19B,UAAU+lC,WAAa,SAAU7zB,GACnC,IAAImsB,EAAOl7B,KAAKtJ,OACZ4C,EAAeF,EAAoB4G,KAAKm8B,eACxC2G,EAAsBprC,oBAAkB4B,IAChB,IAAxBA,EAAa/B,OAAgBwX,EAAc,EAC3CzV,EAAa/B,OAASwX,EAAc,EACd,kBAAtB/O,KAAKm7B,eACDD,EAAKj+B,iBACL+C,KAAKxE,SAAS2B,OAAO2lC,EAAoB,EAAG9iC,KAAK27B,cAAcvhC,UAC/D4F,KAAK0Z,aAAavc,OAAO2lC,EAAoB,EAAG9iC,KAAK27B,gBAGrD37B,KAAK0Z,aAAavc,OAAO2lC,EAAoB,EAAG9iC,KAAK27B,eAEzD37B,KAAK+iC,cACD/iC,KAAK27B,cAActiC,iBACnB2G,KAAK2iC,kBAAkB3iC,KAAK27B,cAAemH,KAIvDvI,EAAM19B,UAAU0lC,UAAY,SAAUD,GAClC,IAAIpH,EAAOl7B,KAAKtJ,OAChB,GAA0B,eAAtBsJ,KAAKm7B,aAA+B,CAQpC,GAPID,EAAKj+B,iBACL+C,KAAKxE,SAAS2B,OAAOmlC,EAAc,EAAGtiC,KAAK27B,cAAcvhC,UAE7D4F,KAAK27B,cAAc7iC,WAAakH,KAAK0Z,aAAa4oB,GAAcxpC,WAChEkH,KAAK27B,cAAcr9B,eAAiB0B,KAAK0Z,aAAa4oB,GAAchkC,eACpE0B,KAAK27B,cAAcxhC,MAAQ6F,KAAK0Z,aAAa4oB,GAAcnoC,MAC3D6F,KAAK0Z,aAAavc,OAAOmlC,EAAc,EAAGtiC,KAAK27B,eAC3C37B,KAAK27B,cAActiC,gBAAiB,CAEpC2G,KAAK2iC,kBAAkB3iC,KAAK27B,cAAe2G,GAC3CtiC,KAAK0iC,uBAAuB1iC,KAAK27B,cAFrB,GAIhB,GAAI37B,KAAKm8B,cAAcrjC,WAAY,CAC/B,IACIQ,EADM0G,KAAK46B,0BAA0B56B,KAAKm8B,cAAc79B,gBACrC,GAAGhF,aACtBmpC,EAAqBnpC,EAAakF,QAAQwB,KAAKm8B,eACnD7iC,EAAa6D,OAAOslC,EAAoB,EAAGziC,KAAK27B,kBAI5DpB,EAAM19B,UAAUkmC,YAAc,WAC1B,IAAI7H,EAAOl7B,KAAKtJ,OACZilC,EAAgB37B,KAAK27B,cACrBQ,EAAgBn8B,KAAKm8B,cACrB6G,EAAY9H,EAAK99B,aAWrB,GAVK++B,EAAc9iC,kBACf8iC,EAAc9iC,iBAAkB,EAChC8iC,EAAcpqB,yBAA0B,GACpCra,oBAAkBykC,EAAc7iC,eAAuD,IAAtC6iC,EAAc7iC,aAAa/B,UAC5E4kC,EAAc7iC,iBACT4hC,EAAKj+B,iBAAmBvF,oBAAkBykC,EAAc/hC,SAAS4oC,MAClE7G,EAAc/hC,SAAS4oC,SAIT,kBAAtBhjC,KAAKm7B,aAAkC,CACvC,IAAIriC,EAAasD,YAAW+/B,GAQ5B,UAPOrjC,EAAWQ,aAClBqiC,EAAc7iC,WAAaA,EAC3B6iC,EAAcr9B,eAAiB69B,EAAcnjC,SAC7CmjC,EAAc7iC,aAAa6D,OAAOg/B,EAAc7iC,aAAa/B,OAAQ,EAAGokC,GACnEjkC,oBAAkBikC,IAAmBT,EAAKj+B,iBAAoBvF,oBAAkBykC,EAAc/hC,SAAS4oC,KACxG7G,EAAc/hC,SAAS8gC,EAAK99B,cAAcD,OAAOg/B,EAAc7iC,aAAa/B,OAAQ,EAAGokC,EAAcvhC,UAEpGuhC,EAActiC,gBAGd,CAEDsiC,EAAcxhC,MAAQgiC,EAAchiC,MAAQ,EAC5C6F,KAAK0iC,uBAAuB/G,EAFhB,QAHZA,EAAcxhC,MAAQgiC,EAAchiC,MAAQ,EAOhDgiC,EAAchjC,UAAW,IAGjCohC,EAAM19B,UAAUk/B,cAAgB,WACxB/7B,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,SAChEsJ,KAAK0Z,aAAe1Z,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAC3DuE,KAAKxE,SAAWwE,KAAKtJ,OAAOC,WAAWA,WAAW8E,OAGlDuE,KAAK0Z,aAAe1Z,KAAKtJ,OAAOiB,KAAKhB,WACrCqJ,KAAKxE,SAAWwE,KAAKtJ,OAAOC,YAEhC,IAAIssC,EAAalqC,EAAciH,KAAKtJ,OAAQsJ,KAAK27B,cAAc3iC,WAC1DtB,oBAAkBurC,EAAW3pC,eAAiB2pC,EAAW3pC,aAAa/B,SACvE0rC,EAAW5pC,iBAAkB,GAEjC2G,KAAKkjC,cAAcD,IAEvB1I,EAAM19B,UAAU8lC,kBAAoB,SAAUjqC,EAAQ2V,GAClD,IAAIQ,EACAqsB,EAAOl7B,KAAKtJ,OACZa,EAAS,EACb,IAAKmB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IACxBwX,EAAgBnW,EAAOY,aAAajC,GACpCgX,IACA6sB,EAAK19B,SAASL,OAAOkR,EAAO,EAAGQ,GAC/B4G,WAAS,sBAAwB5G,EAAc7V,SAAU6V,EAAe7O,KAAKtJ,QACzEwkC,EAAKj+B,iBACL+C,KAAKxE,SAAS2B,OAAOkR,EAAO,EAAGQ,EAAczU,UAE7CyU,EAAcxV,kBACdgV,EAAQrO,KAAK2iC,kBAAkB9zB,EAAeR,IAGtD,OAAOA,GAEXksB,EAAM19B,UAAU6lC,uBAAyB,SAAUhqC,EAAQyB,GACvD,IACI0U,EADAtX,EAAS,EAGb,GADA4C,KACKzB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7BwX,EAAgBnW,EAAOY,aAAajC,GACpC,IAAIkG,OAAa,EACb7E,EAAOI,aACPyE,EAAaxE,EAAciH,KAAKtJ,OAAQgC,EAAOI,WAAWE,WAE1DtB,oBAAkB6F,KAAgB7F,oBAAkBgB,EAAOI,cAC3DyE,EAAa7E,EAAOI,YAExB+V,EAAc1U,MAAQzB,EAAOI,WAAayE,EAAWpD,MAAQA,EAAQzB,EAAOyB,MAAQ,EAChF0U,EAAcxV,kBACdc,IACAA,EAAQ6F,KAAK0iC,uBAAuB7zB,EAAe1U,IAG3D,OAAOA,GAEXogC,EAAM19B,UAAUqmC,cAAgB,SAAUxqC,GACtC,IACI/B,EADAukC,EAAOl7B,KAAKtJ,OAGZC,EADAqJ,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QACnDsJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KAGlCuE,KAAKtJ,OAAOC,WAE7B,IAAIssC,EAAavqC,EACbsC,GAAmBtD,oBAAkBwjC,EAAKj+B,iBAC1CkmC,EAAiBnjC,KAAK46B,0BAA0BqI,EAAW3kC,gBAAgB,GAC/E,GAAI2kC,EAAY,CACZ,GAAIA,EAAWnqC,WAAY,CACvB,IAAIQ,EAAe6pC,EAAiBA,EAAe7pC,gBAC/C8pC,EAAa,EACb9pC,GAAgBA,EAAa/B,OAAS,IACtC6rC,EAAa9pC,EAAakF,QAAQykC,GAClCE,EAAe7pC,aAAa6D,OAAOimC,EAAY,GAC1CpjC,KAAKtJ,OAAOuG,iBACbpC,GAAaZ,MAAOgpC,EAAY3nC,OAAQ,UAAY0E,KAAKtJ,OAAQsE,EAAiBioC,EAAW/oC,MAAO+oC,EAAW/oC,QAI3H,GAAIghC,EAAKj+B,gBAAiB,CAClBgmC,EAAW5pC,iBAAmB4pC,EAAW3pC,aAAa/B,OAAS,GAC/DyI,KAAKqjC,gBAAgBJ,GAKzB,IAAK,IAHD/G,OAAM,EACNoH,OAAM,EACN5pB,EAAe/iB,EACVU,EAAI,EAAGA,EAAIqiB,EAAaniB,OAAQF,IACjCqiB,EAAariB,GAAG2I,KAAKtJ,OAAOwG,aAAe+lC,EAAW7oC,SAAS4F,KAAKtJ,OAAOwG,aAC3Eg/B,EAAM7kC,GAGd,IAASA,EAAI,EAAGA,EAAI2I,KAAK0Z,aAAaniB,OAAQF,IACtC2I,KAAK0Z,aAAariB,GAAG2I,KAAKtJ,OAAOwG,aAAe+lC,EAAW7oC,SAAS4F,KAAKtJ,OAAOwG,aAChFomC,EAAMjsC,IAGD,IAAT6kC,GAAexkC,oBAAkBwkC,IACjCvlC,EAAWwG,OAAO++B,EAAK,IAEd,IAAToH,GAAe5rC,oBAAkB4rC,IACjCtjC,KAAK0Z,aAAavc,OAAOmmC,EAAK,GAGtC,IAAIv0B,EAAc/O,KAAK0Z,aAAalb,QAAQykC,GAC5C,IAAK/H,EAAKj+B,gBAAiB,CACvB,IAAIsmC,EAAcvjC,KAAKtJ,OAAO6G,WAAWiB,QAAQykC,IAC5B,IAAjBM,IACArI,EAAK39B,WAAWJ,OAAOomC,EAAa,GACpC5sC,EAAWwG,OAAOomC,EAAa,IAGvC,IAAqB,IAAjBx0B,IAAuBmsB,EAAKj+B,gBAE5B,IAAK,IADDg6B,EAAkBiE,EAAK3/B,0BAA0B,GAC5CxB,EAAI,EAAGA,EAAIiG,KAAK0Z,aAAaniB,OAAQwC,IACtCiG,KAAK0Z,aAAa3f,GAAGk9B,KAAqBgM,EAAWhM,KACrDloB,EAAchV,GAI1B,IAAKmhC,EAAKj+B,gBAAiB,CACvB,IAAIumC,EAAqBxjC,KAAKwiC,cAAcS,EAAY,GACxDjjC,KAAK0Z,aAAavc,OAAO4R,EAAay0B,EAAqB,GAE3DP,EAAWnqC,YAAcqqC,GAAkBA,EAAe7pC,eAAiB6pC,EAAe7pC,aAAa/B,SACvG4rC,EAAehqC,UAAW,EAC1BgqC,EAAe9pC,iBAAkB,EACjC8pC,EAAepxB,yBAA0B,KAIrDwoB,EAAM19B,UAAUwmC,gBAAkB,SAAU3qC,GACxC,IAAImW,EACAqtB,EACAoH,EACA3sC,EAEAA,EADAqJ,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QACnDsJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KAGlCuE,KAAKtJ,OAAOC,WAE7B,IAAK,IAAIU,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAAK,CACjDwX,EAAgBnW,EAAOY,aAAajC,IAC/BK,oBAAkBmX,EAAcvV,eAAiBuV,EAAcvV,aAAa/B,SAC7EsX,EAAcxV,iBAAkB,GAEpC,IAAIqgB,OAAe,EAEfA,EADA1Z,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QACjDsJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KAGlCuE,KAAKtJ,OAAOC,WAE/B,IAAK,IAAI8sC,EAAM,EAAGA,EAAM/pB,EAAaniB,OAAQksC,IACrC/pB,EAAa+pB,GAAKzjC,KAAKtJ,OAAOwG,aAAe2R,EAAczU,SAAS4F,KAAKtJ,OAAOwG,aAChFg/B,EAAMuH,GAGd,IAAK,IAAIC,EAAM,EAAGA,EAAM1jC,KAAK0Z,aAAaniB,OAAQmsC,IAC9C,GAAI1jC,KAAK0Z,aAAagqB,GAAK1jC,KAAKtJ,OAAOwG,aAAe2R,EAAczU,SAAS4F,KAAKtJ,OAAOwG,WAAY,CACjGomC,EAAMI,EACN,OAGK,IAATxH,GAAexkC,oBAAkBwkC,IACjCvlC,EAAWwG,OAAO++B,EAAK,IAEd,IAAToH,GAAe5rC,oBAAkB4rC,IACjCtjC,KAAK0Z,aAAavc,OAAOmmC,EAAK,GAE9Bz0B,EAAcxV,iBACd2G,KAAKqjC,gBAAgBx0B,KAIjC0rB,EAAM19B,UAAU2lC,cAAgB,SAAU9pC,EAAQ2V,GAC9C,IAAIQ,EACJ,IAAKnW,EAAOW,gBACR,OAAO,EAEX,IAAK,IAAIhC,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAE5CgX,KADAQ,EAAgBnW,EAAOY,aAAajC,IAElBgC,kBACdgV,EAAQrO,KAAKwiC,cAAc3zB,EAAeR,IAGlD,OAAOA,GAEXksB,EAAM19B,UAAUskC,mBAAqB,SAAUwC,EAAgB90B,GAC3D,IAAIzH,EAAQpH,KACZ2jC,EAAelmC,OAAO,SAAUC,GAC5B,GAAIA,EAAErE,kBAAoB3B,oBAAkBgG,EAAEpE,cAAe,CAEzD,IAAe,IADHoE,EAAEpE,aAAakF,QAAQqQ,GAQ/B,OAHAzH,EAAM+zB,aAAe,UACrB/zB,EAAMy1B,oBACNz1B,EAAMozB,SAAU,GALhBpzB,EAAM+5B,mBAAmBzjC,EAAEpE,aAAcuV,OAWzD0rB,EAAM19B,UAAU+M,QAAU,WACtB5J,KAAKwK,uBAMT+vB,EAAM19B,UAAU2N,oBAAsB,WAC9BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAIwjB,GAAmBluB,KAAK66B,YACxC76B,KAAKtJ,OAAOgU,IAAI0jB,GAAmBpuB,KAAKkH,YACxClH,KAAKtJ,OAAOgU,IAAIowB,GAAgB96B,KAAK+6B,WACrC/6B,KAAKtJ,OAAOgU,IAAIswB,GAAmBh7B,KAAKi7B,eAW5CV,EAAM19B,UAAU+F,cAAgB,WAC5B,MAAO,kBAEJ23B,KCxnCP95B,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5Dk4B,GAAiC,SAAU53B,GAE3C,SAAS43B,IACL,OAAkB,OAAX53B,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAK/D,OAPAS,GAAUi5B,EAAiB53B,GAI3BZ,IACIc,cACD03B,EAAgB78B,UAAW,gBAAY,GACnC68B,GACTz3B,iBChCExB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAuBxC6iC,GAA8C,SAAU9hC,GAExD,SAAS8hC,EAA6BltC,GAClC,IAAI0Q,EAAQtF,EAAO/E,KAAKiD,KAAMtJ,IAAWsJ,KAEzC,OADAoH,EAAM8C,mBACC9C,EAkDX,OAtDA3G,GAAUmjC,EAA8B9hC,GAMxC8hC,EAA6B/mC,UAAUqN,iBAAmB,WACtDlK,KAAKtJ,OAAOyT,GAAG05B,GAAqB7jC,KAAK8jC,SAAU9jC,OAEvD4jC,EAA6B/mC,UAAUinC,SAAW,SAAU/gC,GACxD/C,KAAK+jC,WAAahhC,EAAKtE,MAE3BmlC,EAA6B/mC,UAAUmnC,aAAe,SAAUvlC,EAAMsa,GAClE,GAAK/Y,KAAKtJ,OAAOC,sBAAsBC,oBAAyDumB,IAA1Cnd,KAAKtJ,OAAOC,WAAWA,WAAWstC,MAChFjkC,KAAKtJ,OAAOC,WAAWA,WAAWmtB,SAAqD,KAA1C9jB,KAAKtJ,OAAOC,WAAWA,WAAWstC,KAAe9sC,EAAgB6I,KAAKtJ,QACvH,OAAOoL,EAAOjF,UAAUmnC,aAAajnC,KAAKiD,KAAMvB,EAAMsa,GAGjDrhB,oBAAkBqhB,EAAWlZ,cAAsD,gBAAtCkZ,EAAWlZ,YAAY+H,aACrEmR,EAAWlZ,YAAc,WAG7B,IAAK,IADDiI,EAAOhG,EAAOjF,UAAUmnC,aAAajnC,KAAKiD,KAAMvB,EAAMsa,GACjDvX,EAAI,EAAGA,EAAIsG,EAAKvQ,OAAQiK,IAC7BsG,EAAKtG,GAAGtH,MAAS8F,KAAe,WAAExB,QAAQsJ,EAAKtG,GAAG/C,MAEtD,OAAOqJ,GAGf87B,EAA6B/mC,UAAUqnC,mBAAqB,SAAU5oC,GAClE,IAAI6oC,GAAS,SAAU,UAAW,UAAW,YAAa,YAAa,UACnE,OAAQ,UAAU7e,KAAK,SAAUrrB,GAAS,OAAOqB,IAAWrB,IAChE,GAAK+F,KAAKtJ,OAAOC,sBAAsBC,oBAAyDumB,IAA1Cnd,KAAKtJ,OAAOC,WAAWA,WAAWstC,MAChFjkC,KAAKtJ,OAAOC,WAAWA,WAAWmtB,SAAqD,KAA1C9jB,KAAKtJ,OAAOC,WAAWA,WAAWstC,KAAe9sC,EAAgB6I,KAAKtJ,QAAS,CAChI,IACI4iB,EAActZ,KAAU,MAAEsZ,YAC1B6qB,GACAnkC,KAAKokC,SACLpkC,KAAKvB,QACLuB,KAAKqkC,WAEW,kBAAX/oC,GAA8B0E,KAAKokC,MAAM9qB,IAC9CtZ,KAAKokC,MAAM9qB,GAAa/hB,OAAUyI,KAAKtJ,OAAoB,cAAE4tC,uBACtDtkC,KAAKokC,MAAM9qB,QAIlB6qB,GAAoB,kBAAX7oC,KACT0E,KAAKokC,SACLpkC,KAAKvB,QACLuB,KAAKqkC,WAGb,OAAOF,GAEJP,GACTW,4BCvEEC,GAAwB,WAMxB,SAASA,EAAO9tC,GACZ+L,OAAKC,OAAO+hC,UACZzkC,KAAKtJ,OAASA,EACdsJ,KAAK0kC,mBAAoB,EACzB1kC,KAAKmO,kBACLnO,KAAK2kC,oBACL3kC,KAAK4kC,sBACL5kC,KAAKkK,mBAiNT,OAzMAs6B,EAAO3nC,UAAU+F,cAAgB,WAC7B,MAAO,UAQX4hC,EAAO3nC,UAAU+M,QAAU,WACvB5J,KAAKwK,uBAMTg6B,EAAO3nC,UAAUqN,iBAAmB,WAChClK,KAAKtJ,OAAOyT,GAAG,mBAAoBnK,KAAK6kC,sBAAuB7kC,MAC/DA,KAAKtJ,OAAOyT,GAAG,eAAgBnK,KAAK8kC,iBAAkB9kC,OAM1DwkC,EAAO3nC,UAAU2N,oBAAsB,WAC/BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,mBAAoB1K,KAAK6kC,uBACzC7kC,KAAKtJ,OAAOgU,IAAI,eAAgB1K,KAAK8kC,oBAUzCN,EAAO3nC,UAAUgoC,sBAAwB,SAAUE,GAC/CtvB,WAAS,8BAAgCzV,KAAKtJ,QAC9CsJ,KAAK2kC,iBAAmBI,EAAYtmC,KACpCuB,KAAK4kC,sBACL5kC,KAAKmO,kBACLnO,KAAK0kC,mBAAoB,EACzB,IAAK,IAAIvK,EAAI,EAAGA,EAAIn6B,KAAK2kC,iBAAiBptC,OAAQ4iC,IAAK,CACnD,IAAIvrB,EAAM5O,KAAK2kC,iBAAiBxK,GAChCn6B,KAAKglC,gBAAgBp2B,GACrB,IAAI9W,EAAwD,KAAxCkI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAAamI,KAAKtJ,OAAOsB,eAAeF,cACtFkI,KAAKtJ,OAAOkB,eAAeE,cACT,UAAlBA,GAA+C,SAAlBA,GACqB,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,MACzFmI,KAAK0kC,mBAAoB,GAE7B,IAAIO,EAAU1sC,YAAU,eAAgBqW,IACnClX,oBAAkButC,IAAYA,EAAQ1tC,QACvCke,WAAS,0BAA2BzV,KAAKklC,iBAAiBt2B,GAAMA,GAEpE,IAAIu2B,EAAW5sC,YAAU,aAAcqW,GACvC,IAAKlX,oBAAkBytC,GAAW,CAC9B,IAAIC,EAAYrsC,EAAciH,KAAKtJ,OAAQkY,EAAI9V,WAAWE,UAAU,GAGpEyc,WAAS,2BAA2B,EAAM2vB,GACtCA,GAAaA,EAAUtsC,YACvBkH,KAAKqlC,2BAA2BD,IAIxCplC,KAAK2kC,iBAAiBptC,OAAS,GAAKyI,KAAK0kC,mBACzC1kC,KAAKslC,oBAETtlC,KAAKtJ,OAAOyb,OAAO,gBAAkBmB,OAAQtT,KAAKmO,kBAEtDq2B,EAAO3nC,UAAUwoC,2BAA6B,SAAU3sC,GACpD,IAAI0sC,EAAYrsC,EAAciH,KAAKtJ,OAAQgC,EAAOI,WAAWE,UAAU,GACnEusC,EAAgBlnC,WAAS,2BAA4B2B,KAAKtJ,QAC1D0uC,GAAa/sC,OAAOwE,UAAUC,eAAeC,KAAKwoC,EAAeH,EAAUpsC,WAC3Eyc,WAAS,2BAA2B,EAAM2vB,GAE1CA,GAAaA,EAAUtsC,YACvBkH,KAAKqlC,2BAA2BD,IAGxCZ,EAAO3nC,UAAUmoC,gBAAkB,SAAUtsC,GACzC,IAAIhC,EAASqC,EAAciH,KAAKtJ,OAAQgC,EAAO4F,gBAI/C,GAAsB,UAFsC,KAAxC0B,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAAamI,KAAKtJ,OAAOsB,eAAeF,cACtFkI,KAAKtJ,OAAOkB,eAAeE,gBACmD,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1B,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IA2BlC,CACD,IAAKH,oBAAkBhB,GAAS,CAGJ,WAFsC,KAAxCsJ,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAClDmI,KAAKtJ,OAAOsB,eAAeF,cAAgBkI,KAAKtJ,OAAOkB,eAAeE,gBACa,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC7B,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAMnCmI,KAAKglC,gBAAgBtuC,IAL0B,IAA3CsJ,KAAK2kC,iBAAiBnmC,QAAQ9H,IAC9BsJ,KAAKglC,gBAAgBtuC,IAOY,IAAzCsJ,KAAKmO,eAAe3P,QAAQ9F,KAC5BsH,KAAKmO,eAAe3V,KAAKE,GACzB+c,WAAS,4BAA8B/c,EAAOM,SAAUN,EAAQsH,KAAKtJ,cA1CzE,GAAIgB,oBAAkBhB,IAClB,IAA+C,IAA3CsJ,KAAK2kC,iBAAiBnmC,QAAQ9F,GAM9B,aAL6C,IAAzCsH,KAAKmO,eAAe3P,QAAQ9F,KAC5BsH,KAAKmO,eAAe3V,KAAKE,GACzB+c,WAAS,4BAA8B/c,EAAOM,SAAUN,EAAQsH,KAAKtJ,QACrEgC,EAAOqZ,yBAA0B,SAMzC/R,KAAKglC,gBAAgBtuC,IAC0B,IAA3CsJ,KAAK2kC,iBAAiBnmC,QAAQ9H,KAA2D,IAAzCsJ,KAAKmO,eAAe3P,QAAQ9H,IAC/B,IAAzCsJ,KAAKmO,eAAe3P,QAAQ9F,KAC5BsH,KAAKmO,eAAe3V,KAAKE,GACzB+c,WAAS,4BAA8B/c,EAAOM,SAAUN,EAAQsH,KAAKtJ,UAI5B,IAAzCsJ,KAAKmO,eAAe3P,QAAQ9F,KAA6D,IAA3CsH,KAAK2kC,iBAAiBnmC,QAAQ9F,KAC5EsH,KAAKmO,eAAe3V,KAAKE,GACzB+c,WAAS,4BAA8B/c,EAAOM,SAAUN,EAAQsH,KAAKtJ,UAyBzF8tC,EAAO3nC,UAAUqoC,iBAAmB,SAAUhtC,GAG1C,IAAK,IAFDstC,EAAWjtC,YAAU,eAAgBL,GACrCutC,GAAU,EACLp3B,EAAQ,EAAGA,EAAQm3B,EAASjuC,OAAQ8W,IAAS,CAClD,IAAI42B,EAAUO,EAASn3B,GAAO/U,aAC1BxB,EAAwD,KAAxCkI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAChDmI,KAAKtJ,OAAOsB,eAAeF,cAAgBkI,KAAKtJ,OAAOkB,eAAeE,cAC1E,KAAwB,UAAlBA,GAA+C,SAAlBA,GAAiF,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1D,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,KAAc,CACjD,IAAI0tC,EAAgBlnC,WAAS,2BAA4B2B,KAAKtJ,QACzD2B,OAAOwE,UAAUC,eAAeC,KAAKwoC,EAAeC,EAASn3B,GAAOrV,YACrEgH,KAAKmO,eAAe3V,KAAKgtC,EAASn3B,IAClCoH,WAAS,4BAA8B+vB,EAASn3B,GAAOrV,SAAUwsC,EAASn3B,GAAQrO,KAAKtJ,QACvF+uC,GAAU,GAGlB,GAAuB,SAAlB3tC,IACsD,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,OACpC,IAApDmI,KAAK2kC,iBAAiBnmC,QAAQgnC,EAASn3B,IAAgB,CACvDo3B,GAAU,EACV,OAGH/tC,oBAAkButC,IAAYA,EAAQ1tC,SACvCkuC,EAAUzlC,KAAKklC,iBAAiBM,EAASn3B,KAEtB,UAAlBvW,GAA+C,SAAlBA,IAA6B0tC,EAASjuC,SACpEkuC,GAAU,GAGlB,OAAOA,GAEXjB,EAAO3nC,UAAUyoC,kBAAoB,WAGjC,IAAK,IAFD5sC,EAASsH,KAAKmO,eACd/V,EAAM4H,KAAKmO,eAAe5W,OACrB+J,EAAI,EAAGA,EAAIlJ,EAAKkJ,IAAK,CAC1B,IAAIokC,EAAW3sC,EAAciH,KAAKtJ,OAAQgC,EAAO4I,GAAGhD,gBAEpD,IAD2C,IAA9B5F,EAAO8F,QAAQknC,GAChB,CACR,IAAIC,EAAW5sC,EAAciH,KAAKtJ,OAAQgC,EAAO4I,GAAGhD,gBAAgB,GACpE5F,EAAO4I,GAAG+P,YAAcs0B,EAASt0B,YAAc,OAG/C3Y,EAAO4I,GAAG+P,YAAc,EACxBrR,KAAK4kC,mBAAmBpsC,KAAKE,EAAO4I,MAIhDkjC,EAAO3nC,UAAUioC,iBAAmB,SAAUrmC,GAK1C,IAJA,IAGIoQ,EAHAR,EAAQ,EACR7Q,EAAWiB,EAAKjB,SAChBpF,EAAMoF,EAASjG,OAEP8W,EAAQjW,EAAKiW,IAAS,CAE9B,IAAIu3B,GADJ/2B,EAAgBrR,EAAS6Q,IACEgD,aACvBu0B,GAAqB,IAAXA,GAAiBluC,oBAAkBmX,EAAckD,2BAC3DlD,EAAckD,wBAA0B,KACxClD,EAAcwC,YAAc,MAGpCrR,KAAKmO,kBACLnO,KAAKtJ,OAAOyb,OAAO,iBAAmBmB,OAAQ9V,EAAU6Q,MAAO7Q,EAASjG,UAErEitC,KC5NPqB,GAA6B,WAM7B,SAASA,EAAYnvC,GACjBsJ,KAAK6b,yBAA0B,EAC/BpZ,OAAKC,OAAOojC,eACZ9lC,KAAKtJ,OAASA,EACdsJ,KAAK+T,eACL/T,KAAKkK,mBAiLT,OAzKA27B,EAAYhpC,UAAU+F,cAAgB,WAClC,MAAO,eAMXijC,EAAYhpC,UAAUqN,iBAAmB,WACrClK,KAAKtJ,OAAOyT,GAAG,gBAAiBnK,KAAK+lC,uBAAwB/lC,MAC7DA,KAAKtJ,OAAOyT,GAAG,gBAAiBnK,KAAK2oB,mBAAoB3oB,MACzDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,sBAAuBnK,KAAKgmC,mBAAoBhmC,MACpEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,iBAAkBnK,KAAKimC,eAAgBjmC,OAQ/D6lC,EAAYhpC,UAAU+M,QAAU,WAC5B5J,KAAKwK,uBAMTq7B,EAAYhpC,UAAU2N,oBAAsB,WACpCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,gBAAiB1K,KAAK+lC,wBACtC/lC,KAAKtJ,OAAOgU,IAAI,gBAAiB1K,KAAK2oB,oBACtC3oB,KAAKtJ,OAAOiB,KAAK+S,IAAI,sBAAuB1K,KAAKgmC,oBACjDhmC,KAAKtJ,OAAOiB,KAAK+S,IAAI,iBAAkB1K,KAAKimC,kBAEhDJ,EAAYhpC,UAAUkpC,uBAAyB,SAAUjO,GACrD93B,KAAK+T,YAAc+jB,GAEvB+N,EAAYhpC,UAAU4iB,IAAM,SAAUL,EAEtCC,EAAkBC,EAAUC,EAAQ2mB,GAChC,IAAI9+B,EAAQpH,KACRrJ,EAAaqJ,KAAKtJ,OAAOC,WACzB8mB,EAAWplB,SAMf,OALAod,WAAS,QAASywB,EAAOzoB,GACzBhI,WAAS,UAAU,EAAOgI,GACrB/lB,oBAAkB0nB,KACnBpf,KAAK6b,wBAA0BuD,EAAsBvD,yBAElD,IAAIsqB,QAAQ,SAAU5a,GACzB,IAAI9xB,GAAK2N,EAAMg/B,WAAezvC,aAAsBC,cAC9CwQ,EAAM1Q,OAAOC,WADgD,IAAIC,cAAYD,GAE/E6d,EAAQ,IAAIC,QAMhB,GALKrN,EAAMg/B,YACP5xB,EAAQpN,EAAMwQ,cAAcpD,GAC5BiB,WAAS,QAASjB,EAAOiJ,IAE7BrW,EAAM1Q,OAAOuS,QAAQo9B,EAAyBjqC,SAAOqhB,EAAU2B,IAC3D7mB,YAAU,SAAUklB,GACpB,OAAO,KAEXhkB,EAAG0b,aAAaX,GAAOY,KAAK,SAAU1X,GAClC,IAAI4oC,EAAa,KAKjB,OAJK5uC,oBAAkB0nB,IAA2B1nB,oBAAkB0nB,EAAsBzoB,cACtF2vC,EAAalnB,EAAsBzoB,YAEvCyoB,EAAwBhY,EAAMm/B,2BAA2BnnB,EAAuBzoB,EAAY+G,GACrF0J,EAAM1Q,OAAOiB,KAAK6nB,kBAAkBC,IAAIrY,EAAM1Q,OAAOiB,KAAMynB,EAAuBC,EAAkBC,EAAU4mB,EAAO3mB,GAAQnK,KAAK,SAAUoxB,GAC7H,MAAdF,EACAlnB,EAAsBzoB,WAAa2vC,SAG5BlnB,EAAsBzoB,WAEjC40B,EAAQib,UAKxBX,EAAYhpC,UAAU+a,cAAgB,SAAUpD,EAAOiJ,GAQnD,OAPK/lB,oBAAkB+lB,IAAqC,gBAAxBA,EAAS1D,YACtC/Z,KAAKtJ,OAAOma,cACf4M,EAAS1D,WAAa,WACtBvF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM7U,KAAKtJ,OAAOuG,gBAAiB,QAAS,MAClDuX,EAAQjc,YAAU,mCAAoCyH,KAAKtJ,OAAnD6B,CAA2Dic,IAEhEA,GAEXqxB,EAAYhpC,UAAU0pC,2BAA6B,SAAU9oB,EAAUgpB,EAAOC,GAE1E,IAAI3jC,EAAO1K,SAkBX,GAjBAod,WAAS,QAASzV,KAAKtJ,OAAOiB,KAAKggB,gBAAgBC,eAAc,GAAO7U,GACxE0S,WAAS,YAAY,EAAM1S,GACtBrL,oBAAkB+lB,IAAc/lB,oBAAkB+lB,EAAS1D,aAC5DtE,WAAS,aAAcgI,EAAS1D,WAAYhX,GAE3C/C,KAAKomC,YACNpmC,KAAKtJ,OAAO6G,cACZyC,KAAKtJ,OAAOovB,WAAWvR,kBAAkBhc,YAAU,SAAUmuC,IAC7DjxB,WAAS,aAAczV,KAAKtJ,OAAO8G,SAAUuF,IAEjD/C,KAAKtJ,OAAOyb,OAAO,gBAAiBpP,GAEpCA,EAAO/C,KAAK+T,YACZ0yB,EAAQ/uC,oBAAkBqL,EAAKuQ,QAAUtT,KAAKtJ,OAAO8G,SAAS8K,MAAM,GAAKvF,EAAKuQ,OACzEtT,KAAKomC,YACNpmC,KAAKtJ,OAAO8G,aAEZigB,GAAYA,EAAS9mB,YAAcqJ,KAAKomC,UAAW,CACnD,IAAIO,EAAY3mC,KAAKtJ,OAAO8G,SACxBopC,EAAUnpB,EAAS9mB,sBAAsBC,cAAc6mB,EAAS9mB,WAAWA,WAAW8E,KAAOgiB,EAAS9mB,WAC1GqJ,KAAKtJ,OAAOovB,WAAWvR,kBAAkBqyB,GACzCH,EAAQzmC,KAAKtJ,OAAO8G,SACpBwC,KAAKtJ,OAAO8G,SAAWmpC,EAI3B,OAFAlpB,EAAW/lB,oBAAkB+lB,GAAYplB,SAAWolB,EACpDA,EAAS9mB,WAAa,IAAIC,eAAc6E,KAAMgrC,IACvChpB,GASXooB,EAAYhpC,UAAU8rB,mBAAqB,SAAU5lB,GACjD,GAAI/C,KAAKtJ,OAAOiB,KAAK+Z,oBAAoB3O,EAAKpD,OAAOqM,OAAShM,KAAKtJ,OAAO0I,gBAAiB,CACvF,IAAI5E,KACAiE,EAAOsE,EAAKtE,KAEZ2S,EADc1Z,oBAAkB+G,EAAK4S,aACjB5S,EAAKtE,MAAQsE,EAAK4S,YAC1C7W,EAAMqsC,OAASz1B,EACfrO,EAAKvI,MAAQA,EAEjBwF,KAAKtJ,OAAOyb,OAAO,gBAAiBpP,GACpC/C,KAAKtJ,OAAOuS,QAAQ,qBAAsBlG,IAE9C8iC,EAAYhpC,UAAUmpC,mBAAqB,SAAUc,GACjD,GAAsB,UAAlBA,EAAS9jC,KAAkB,CAC3B,IAAI+jC,EAAcD,EAASE,OAAOvoC,KAC9BwoC,EAAqBjnC,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OACjE,GAAIwvC,EAAYjuC,YAAcC,EAAciH,KAAKtJ,OAAQqwC,EAAYjuC,WAAWE,SAAUkuC,QAAQD,IAAsB,CACpH,IAAIE,EAAYL,EAASM,UAAU7vC,OAC/B8vC,EAAWN,EAAY5sC,MACvBmtC,GAAiB,EACjBC,GAAgB,EAChBC,EAAQ/uC,EAAgBuH,KAAKtJ,OAAQqwC,EAAa/mC,KAAKtJ,OAAO6G,aAC9DyC,KAAK6b,yBAA6B2rB,GAAUxnC,KAAKtJ,OAAO4jB,cACxDgtB,GAAiB,EACjBC,GAAgBR,EAAY5tC,UAEhC2tC,EAASM,UAAUD,EAAY,GAAGM,UAAaC,aAAcL,EAAUM,YAAaJ,EAChFjtC,SAAUgtC,MAK1BzB,EAAYhpC,UAAUopC,eAAiB,SAAU3mB,GAC7C,IAAK,IAAIjoB,EAAI,EAAGA,EAAIioB,EAASsoB,WAAWrwC,OAAQF,IACxCioB,EAASsoB,WAAWvwC,GAAGyQ,OACvBwX,EAASsoB,WAAWvwC,GAAGwwC,WAAcC,mBAAmB,KAIpEjC,EAAYhpC,UAAUupC,QAAU,WAC5B,OAAQ3vC,EAAauJ,KAAKtJ,SAAW8C,EAAUwG,KAAKtJ,SAEjDmvC,KC5LPkC,GAA2B,WAM3B,SAASA,EAAUrxC,GACf+L,OAAKC,OAAOslC,aACZhoC,KAAKtJ,OAASA,EACdsJ,KAAK+T,eACL/T,KAAKkK,mBA+IT,OAvIA69B,EAAUlrC,UAAU+F,cAAgB,WAChC,MAAO,aAMXmlC,EAAUlrC,UAAUqN,iBAAmB,WACnClK,KAAKtJ,OAAOyT,GAAG,cAAenK,KAAK4oB,iBAAkB5oB,MACrDA,KAAKtJ,OAAOyT,GAAG,gBAAiBnK,KAAKioC,qBAAsBjoC,OAM/D+nC,EAAUlrC,UAAU2N,oBAAsB,WAClCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,cAAe1K,KAAK4oB,kBACpC5oB,KAAKtJ,OAAOgU,IAAI,gBAAiB1K,KAAKioC,wBAQ1CF,EAAUlrC,UAAU+M,QAAU,WAC1B5J,KAAKwK,uBAETu9B,EAAUlrC,UAAUorC,qBAAuB,SAAUnQ,GACjD93B,KAAK+T,YAAc+jB,GAEvBiQ,EAAUlrC,UAAU4iB,IAAM,SAAUG,EAAqBP,EAAkBQ,EAAQN,GAC/E,IAAInY,EAAQpH,KACRymC,EAAQzmC,KAAKtJ,OAAOC,WACpBinB,EAAOvlB,SACP+tC,GAAW3vC,EAAauJ,KAAKtJ,SAAW8C,EAAUwG,KAAKtJ,QAE3D,OADA+e,WAAS,UAAU,EAAOmI,GACnB,IAAIuoB,QAAQ,SAAU5a,GACzB,IAAI9xB,GAAK2sC,GAAaK,aAAiB7vC,cACjCwQ,EAAM1Q,OAAOC,WADmC,IAAIC,cAAY6vC,GAElEjyB,EAAQ,IAAIC,QAMhB,GALK2xB,IACD5xB,EAAQpN,EAAMwQ,cAAcpD,GAC5BiB,WAAS,QAASjB,EAAOoJ,IAE7BxW,EAAM1Q,OAAOuS,QAAQi/B,EAAuB9rC,SAAOwhB,EAAMgC,IACrDrnB,YAAU,SAAUqlB,GACpB,OAAO,KAEXnkB,EAAG0b,aAAaX,GAAOY,KAAK,SAAU1X,GAClC,IAAIyqC,EAAc,KAKlB,OAJKzwC,oBAAkBkoB,IAAyBloB,oBAAkBkoB,EAAoBjpB,cAClFwxC,EAAcvoB,EAAoBjpB,YAEtCipB,EAAsBxY,EAAMghC,wBAAwBxoB,EAAqB6mB,EAAO/oC,GACzE0J,EAAM1Q,OAAOiB,KAAKmoB,gBAAgBL,IAAIrY,EAAM1Q,OAAOiB,KAAMioB,EAAqBP,EAAkBQ,EAAQN,GAAQnK,KAAK,SAAU4nB,GAC/G,MAAfmL,EACAvoB,EAAoBjpB,WAAawxC,SAG1BvoB,EAAoBjpB,WAE/B40B,EAAQyR,UAKxB+K,EAAUlrC,UAAU+a,cAAgB,SAAUpD,EAAOoJ,GAQjD,OAPKlmB,oBAAkBkmB,IAA6B,gBAApBA,EAAK7D,YAC9B/Z,KAAKtJ,OAAOma,cACf+M,EAAK7D,WAAa,WAClBvF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM7U,KAAKtJ,OAAOuG,gBAAiB,QAAS,MAClDuX,EAAQjc,YAAU,mCAAoCyH,KAAKtJ,OAAnD6B,CAA2Dic,IAEhEA,GAEXuzB,EAAUlrC,UAAUurC,wBAA0B,SAAUxqB,EAAM6oB,EAAOC,GACjE,IAAI3jC,KAEAqjC,GAAW3vC,EAAauJ,KAAKtJ,SAAW8C,EAAUwG,KAAKtJ,QAsB3D,GArBA+e,WAAS,QAASzV,KAAKtJ,OAAOiB,KAAKggB,gBAAgBC,eAAc,GAAO7U,GACxE0S,WAAS,YAAY,EAAM1S,GAC3B0S,WAAS,eAAe,EAAM1S,GACzBrL,oBAAkBkmB,IAAUlmB,oBAAkBkmB,EAAK/B,0BACpDpG,WAAS,0BAA2BmI,EAAK/B,wBAAyB9Y,GAEjErL,oBAAkBkmB,IAAUlmB,oBAAkBkmB,EAAK7D,aACpDtE,WAAS,aAAcmI,EAAK7D,WAAYhX,GAEvCqjC,IACDpmC,KAAKtJ,OAAO6G,cACZyC,KAAKtJ,OAAOovB,WAAWvR,kBAAkBlW,WAAS,SAAUqoC,IAC5DjxB,WAAS,aAAczV,KAAKtJ,OAAO8G,SAAUuF,IAEjD/C,KAAKtJ,OAAOyb,OAAO,gBAAiBpP,GAEpCA,EAAO/C,KAAK+T,YACZ0yB,EAAQ/uC,oBAAkBqL,EAAKuQ,QAAUtT,KAAKtJ,OAAO8G,SAAS8K,MAAM,GAAKvF,EAAKuQ,OACzE8yB,IACDpmC,KAAKtJ,OAAO8G,aAEZogB,GAAQA,EAAKjnB,YAAcyvC,EAAS,CACpC,IAAIiC,EAAYroC,KAAKtJ,OAAO8G,SACxBopC,EAAUhpB,EAAKjnB,sBAAsBC,cAAcgnB,EAAKjnB,WAAWA,WAAW8E,KAAOmiB,EAAKjnB,WAC9FqJ,KAAKtJ,OAAOovB,WAAWvR,kBAAkBqyB,GACzCH,EAAQzmC,KAAKtJ,OAAO8G,SACpBwC,KAAKtJ,OAAO8G,SAAW6qC,EAI3B,OAFAzqB,EAAOlmB,oBAAkBkmB,MAAaA,EACtCA,EAAKjnB,WAAa,IAAIC,eAAc6E,KAAMgrC,IACnC7oB,GASXmqB,EAAUlrC,UAAU+rB,iBAAmB,SAAU7lB,GAC7C,GAAI/C,KAAKtJ,OAAOiB,KAAK+Z,oBAAoB3O,EAAKpD,OAAOqM,OAAShM,KAAKtJ,OAAO0I,gBAAiB,CACvF,IAAI5E,KACAiE,EAAOlG,YAAU,OAAQwK,GAEzBqO,EADc1Z,oBAAkB+G,EAAK4S,aACjB5S,EAAKtE,MAAQsE,EAAK4S,YAC1C7W,EAAM8tC,gBAAwB,EAANl3B,EACxBrO,EAAKvI,MAAQA,EAEjBwF,KAAKtJ,OAAOyb,OAAO,gBAAiBpP,GACpC/C,KAAKtJ,OAAOuS,QAAQ,mBAAoBlG,IAErCglC,KCxJPQ,GAAsB,WACtB,SAASA,EAAK7xC,GACV+L,OAAKC,OAAO8lC,QACZxoC,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAoLT,OA9KAq+B,EAAK1rC,UAAUqN,iBAAmB,WAC9BlK,KAAKtJ,OAAOyT,GAAGqsB,EAAiCx2B,KAAKyoC,0BAA2BzoC,MAChFA,KAAKtJ,OAAOyT,GAAGyR,EAAsB5b,KAAK0oC,WAAY1oC,OAM1DuoC,EAAK1rC,UAAU2N,oBAAsB,WAC7BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI8rB,EAAiCx2B,KAAKyoC,2BACtDzoC,KAAKtJ,OAAOgU,IAAIkR,EAAsB5b,KAAK0oC,cAQ/CH,EAAK1rC,UAAU+F,cAAgB,WAC3B,MAAO,SAOX2lC,EAAK1rC,UAAU4wB,QAAU,WACrBztB,KAAKtJ,OAAOiB,KAAK26B,YAAY7E,WAQjC8a,EAAK1rC,UAAU+M,QAAU,WACrB5J,KAAKwK,uBAQT+9B,EAAK1rC,UAAUu1B,SAAW,SAAUC,GAChCryB,KAAKtJ,OAAOiB,KAAK26B,YAAYF,SAASC,IAQ1CkW,EAAK1rC,UAAU01B,sBAAwB,SAAUjvB,GAC7CtD,KAAKtJ,OAAOiB,KAAK26B,YAAYC,sBAAsBjvB,IAWvDilC,EAAK1rC,UAAU4rC,0BAA4B,SAAU3xB,GAEjD,GADAA,EAAWpe,OAAOS,SAAiC,aAAtB2d,EAAWxb,OACpC0E,KAAKtJ,OAAO4I,oBAAqB,CACjC,IAAIqpC,EAAoB3oC,KAAKtJ,OAAO6E,0BAA0B,GAC1D7C,EAASsH,KAAKtJ,OAAO8G,SAASC,OAAO,SAAUC,GAC/C,OAAOA,EAAEirC,KAAuB7xB,EAAWpe,OAAOiwC,KAElDjwC,EAAOnB,SACPmB,EAAO,GAAGS,SAAW2d,EAAWpe,OAAOS,UAG/C,IAAIyvC,GACAt1B,OAAQtT,KAAKtJ,OAAO8G,SACpBmB,IAAKmY,EAAWnY,IAChBrD,OAAQwb,EAAWxb,OACnB5C,OAAQoe,EAAWpe,OACnB2V,MAAOrO,KAAKtJ,OAAO8G,SAASjG,QAGhC,GADA8G,WAAS,oBAAqB2B,KAAKtJ,QAAQif,mBAAmBizB,GAC1D5oC,KAAKtJ,OAAO4I,oBAAqB,CACjC,IAEI6X,OAAY,EACI,aAAhByxB,EAAU,QACVzxB,EAAYyxB,EAAO,IAAExxB,uBAAuB,oBAAoB,GAC3D1f,oBAAkByf,KACnB9J,eAAa8J,GAAY,oBACzB/G,YAAU+G,GAAY,wBAGL,WAAhByxB,EAAU,SACfzxB,EAAYyxB,EAAO,IAAExxB,uBAAuB,sBAAsB,GAC7D1f,oBAAkByf,KACnB9J,eAAa8J,GAAY,sBACzB/G,YAAU+G,GAAY,wBAKtCoxB,EAAK1rC,UAAUgsC,SAAW,SAAUC,EAActtB,EAAMlI,GAapD,IAAK,IAZDy1B,EAAarxC,oBAAkB4b,MAAeA,EAC9C1W,EAAU,SAAUosC,GACpBD,EAAWvwC,KAAKgjB,EAAKwtB,IACrB,IAAIC,KACAztB,EAAKwtB,GAAG3vC,kBACR4vC,EAAMH,EAAarrC,OAAO,SAAUC,GAChC,OAAO8d,EAAKwtB,GAAGhwC,WAAa0E,EAAEY,iBAElCyqC,EAAaG,EAAOL,SAASC,EAAcG,EAAKF,KAGpDG,EAASlpC,KACJgpC,EAAI,EAAGA,EAAIxtB,EAAKjkB,OAAQyxC,IAC7BpsC,EAAQosC,GAEZ,OAAOD,GAEXR,EAAK1rC,UAAU6rC,WAAa,SAAUS,GAClC,IAAI/hC,EAAQpH,KACRvG,EAAK,IAAI7C,cAAYuyC,EAAe71B,QACxC,GAA8C,SAA1CtT,KAAKtJ,OAAOoa,aAAaC,aAAyB,CAClD,IAAIyK,KACA4tB,EAAYppC,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,IACf,UAA7CyI,KAAKtJ,OAAOsB,eAAeF,eAA0E,SAA7CkI,KAAKtJ,OAAOsB,eAAeF,eACpF,cAAgB,QAChB0c,GAAQ,IAAIC,SAAQI,MAAMu0B,EAAU,QAAS,GACjD5tB,EAAO/hB,EAAGwc,aAAazB,GACvB20B,EAAe96B,MAAQmN,EAAKjkB,OAC5B,IAEI8xC,GAFAC,EAAOtpC,KAAKtJ,OAAOiB,KAAKmZ,aAAay4B,YACrC7qB,EAAU1e,KAAKtJ,OAAOiB,KAAKmZ,aAAawI,aACf,GAC7B9E,EAAQA,EAAM60B,KAAKA,GAAMG,KAAKF,GAC9B9tB,EAAO/hB,EAAGwc,aAAazB,GACvB,IAAIu0B,EAAa/oC,KAAK6oC,SAASM,EAAe71B,OAAQkI,GACtD2tB,EAAe71B,OAASy1B,MAEvB,CACD,IAAIU,EAAO,IAAI7yC,cAAYuyC,EAAe71B,QACtCna,EAAW,IAAI0I,YAAU,WAAY,WAAY,MAAM6nC,GAAG,WAAY,gBAAYvsB,GAClFwsB,EAAYF,EAAKxzB,cAAa,IAAIxB,SAAQI,MAAM1b,IAChD4qC,OAAa,EAMbA,GALAtsC,EAAuBuI,KAAKtJ,SAAasJ,KAAKtJ,OAAOkB,eAAeC,MAAQmI,KAAKtJ,OAAOiB,KAAKC,eAAeC,KAC3GmI,KAAKtJ,OAAOsB,eAAeV,QAAQC,SAAWyI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAI1EoyC,EAAUlsC,OAAO,SAAUC,GACpC,OAAOjF,EAAgB2O,EAAM1Q,OAAQgH,EAAGisC,KAJ/BA,EAOjBR,EAAe96B,MAAQ01B,EAAWxsC,OAC9Bid,EAAQ,IAAIC,QAAhB,IACI60B,EAAOtpC,KAAKtJ,OAAOiB,KAAKmZ,aAAay4B,SACrC7qB,EAAU1e,KAAKtJ,OAAOiB,KAAKmZ,aAAawI,YACxCyqB,EAAWxsC,OAAUmnB,EAAU4qB,IAE/B5qB,GADAA,EAAW/H,KAAKizB,MAAM7F,EAAWxsC,OAAS+xC,IAAWvF,EAAWxsC,OAAS+xC,EAAQ,EAAI,KACvD,EAC9BtpC,KAAKtJ,OAAOiB,KAAKkmB,eAAgB/M,cAAgBwI,YAAaoF,KAAa,IAE3E2qB,EAAOC,GAAQ5qB,EAAU,GAC7BlK,EAAQA,EAAM60B,KAAKA,GAAMG,KAAKF,GAC9BG,EAAK9yC,WAAW8E,KAAOsoC,EACvBoF,EAAe71B,OAASm2B,EAAKxzB,aAAazB,GAE9CxU,KAAKtJ,OAAOyb,OAAO,eAAgBg3B,IAEhCZ,KC3LPsB,GAAyB,WACzB,SAASA,EAAQnzC,GACb+L,OAAKC,OAAOonC,WACZ9pC,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAkIT,OA1HA2/B,EAAQhtC,UAAU+F,cAAgB,WAC9B,MAAO,WAMXinC,EAAQhtC,UAAUqN,iBAAmB,WACjClK,KAAKtJ,OAAOyT,GAAGqe,EAAoBxoB,KAAK+pC,eAAgB/pC,MACxDA,KAAKtJ,OAAOyT,GAAGshB,EAAqBzrB,KAAKgqC,oBAAqBhqC,OAMlE6pC,EAAQhtC,UAAU2N,oBAAsB,WAChCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI8d,EAAoBxoB,KAAK+pC,gBACzC/pC,KAAKtJ,OAAOgU,IAAI+gB,EAAqBzrB,KAAKgqC,uBAE9CH,EAAQhtC,UAAUktC,eAAiB,SAAUhnC,GACzC,IAAIm4B,EAAOl7B,KAAKtJ,OACU,IAAtBqM,EAAKpE,IAAI+K,UAAkBwxB,EAAKzyB,qBAAqBlR,OAAS,EAC9DyI,KAAK2xB,aAAauJ,EAAKhoB,QAAQC,GAAK,sBAAuB+nB,EAAKhoB,QAAQC,GAAK,yBAAyB,GAGjGzb,oBAAkBwjC,EAAK/+B,wBAAwB4G,EAAKpE,IAAI+K,cACpDhS,oBAAkBwjC,EAAK/+B,wBAAwB4G,EAAKpE,IAAI+K,YACxDwxB,EAAK/+B,wBAAwB4G,EAAKpE,IAAI+K,UAAUvP,MAC7C+gC,EAAK/+B,wBAAwB4G,EAAKpE,IAAI+K,SAAW,GAAGvP,MACxD6F,KAAK2xB,aAAauJ,EAAKhoB,QAAQC,GAAK,wBAAwB,GAG5DnT,KAAK2xB,aAAauJ,EAAKhoB,QAAQC,GAAK,wBAAwB,GAE5D+nB,EAAK/+B,wBAAwB4G,EAAKpE,IAAI+K,UAAUvP,QAChD+gC,EAAK/+B,wBAAwB4G,EAAKpE,IAAI+K,SAAW,GAAGvP,OACpD6F,KAAK2xB,aAAauJ,EAAKhoB,QAAQC,GAAK,wBAAwB,GAEF,IAA1D+nB,EAAK/+B,wBAAwB4G,EAAKpE,IAAI+K,UAAUvP,OAChD6F,KAAK2xB,aAAauJ,EAAKhoB,QAAQC,GAAK,yBAAyB,GAEH,IAA1D+nB,EAAK/+B,wBAAwB4G,EAAKpE,IAAI+K,UAAUvP,OAChD6F,KAAK2xB,aAAauJ,EAAKhoB,QAAQC,GAAK,yBAAyB,IAI/C,IAAtBpQ,EAAKpE,IAAI+K,UAAmBhS,oBAAkBqL,EAAKtE,KAAK3F,aACxDkH,KAAK2xB,aAAauJ,EAAKhoB,QAAQC,GAAK,yBAAyB,IAGrE02B,EAAQhtC,UAAUmtC,oBAAsB,SAAUjnC,GAC9C,IAAIm4B,EAAOl7B,KAAKtJ,OAYhB,GAXsC,SAAlCsJ,KAAKtJ,OAAOmF,aAAaC,MAA0D,UAAvCkE,KAAKtJ,OAAOiB,KAAKkE,aAAaC,MAC1EiH,EAAKE,KAAKkQ,KAAOnT,KAAKtJ,OAAOiB,KAAKub,QAAQC,GAAK,YAC/CpQ,EAAKiG,QAAS,EACdhJ,KAAKtJ,OAAOiB,KAAKoE,WAAWk1B,YAE5BluB,EAAKE,KAAKkQ,KAAOnT,KAAKtJ,OAAOiB,KAAKub,QAAQC,GAAK,cAC/CnT,KAAKtJ,OAAO4rB,YAEZvf,EAAKE,KAAKkQ,KAAOnT,KAAKtJ,OAAOiB,KAAKub,QAAQC,GAAK,gBAC/CnT,KAAKtJ,OAAO6rB,cAEZxf,EAAKE,KAAKkQ,KAAO+nB,EAAKvjC,KAAKub,QAAQC,GAAK,WAAa+nB,EAAKzyB,qBAAqBlR,OAAQ,CACvF,IAAImB,EAASwiC,EAAK/+B,wBAAwB++B,EAAKjzB,wBAAwB,GAAK,GACxEmzB,OAAY,EAChB,GAAI1iC,EAAOyB,MAAQ+gC,EAAKzyB,qBAAqB,GAAGtO,MAC5C,IAAK,IAAI9C,EAAI,EAAGA,EAAI6jC,EAAK/+B,wBAAwB5E,OAAQF,IACjD6jC,EAAK/+B,wBAAwB9E,GAAG+C,WAAa1B,EAAOI,WAAWsB,WAC/DghC,EAAY/jC,QAKpB+jC,EAAYF,EAAKjzB,wBAAwB,GAAK,EAElDizB,EAAK7B,aAAa6B,EAAKjzB,wBAAwB,IAAKmzB,EAAW,SAEnE,GAAIr4B,EAAKE,KAAKkQ,KAAO+nB,EAAKvjC,KAAKub,QAAQC,GAAK,YAAc+nB,EAAKzyB,qBAAqBlR,OAAQ,CAInF,IAHD2C,EAAQghC,EAAKjzB,wBAAwB,GAErCnP,GADAsiC,OAAY,EACCF,EAAKzyB,qBAAqB,GAAG3P,YAC9C,IAASzB,EAAI,EAAGA,EAAI6jC,EAAK/+B,wBAAwB5E,OAAQF,IACjD6jC,EAAK/+B,wBAAwB9E,GAAG+C,WAAatB,EAAWsB,WACxDghC,EAAY/jC,GAGpB6jC,EAAK7B,aAAan/B,GAAQkhC,EAAW,WAS7CyO,EAAQhtC,UAAUiiC,WAAa,WAC3B,OAAO9+B,KAAKtJ,OAAOiB,KAAK+5B,cAAcoN,cAU1C+K,EAAQhtC,UAAU80B,YAAc,SAAUvb,EAAOqb,GAC7CzxB,KAAKtJ,OAAOiB,KAAK+5B,cAAcC,YAAYvb,EAAOqb,IAQtDoY,EAAQhtC,UAAU+M,QAAU,WACxB5J,KAAKwK,uBAEFq/B,KCrIPI,GAA2B,WAM3B,SAASA,EAAUvzC,GACf+L,OAAKC,OAAOwnC,aACZlqC,KAAKtJ,OAASA,EACdsJ,KAAKmqC,oBACLnqC,KAAKwY,gBAoOT,OA5NAyxB,EAAUptC,UAAU+F,cAAgB,WAChC,MAAO,WAEXqnC,EAAUptC,UAAU2N,oBAAsB,WAClCxK,KAAKtJ,OAAO+T,aAapBw/B,EAAUptC,UAAU8b,sBAAwB,SAAUH,EAAcqC,EAAcuvB,GAC9EpqC,KAAKwY,aAAeA,EAIpB,IAAK,IAHD3f,EAEA0E,KACKI,EAAI,EAAGvF,EAFOC,OAAOC,KAAKuiB,GAActjB,OAEToG,EAAIvF,EAAKuF,IAAK,CACjCpF,YAAU,eAAgBsiB,EAAald,KAEpDJ,EAAW/E,KAAKqiB,EAAald,IAGrC,IAIImlC,EAJArpB,EAAgBxhB,EAAkBsF,GAClC8sC,EAAc9sC,EAAW+K,QACzBgiC,EAAgBjyC,OAAOC,KAAK0H,KAAKtJ,OAAO2hB,YAAY9gB,OACpDgzC,EAAalyC,OAAOC,KAAKmhB,GAAeliB,OAExCD,EAAU0I,KAAKtJ,OAAOkJ,aAC1B,GAAII,KAAKtJ,OAAO2hB,WAAW5a,OAAO,SAAUq0B,GAAK,OAAOA,EAAEtE,mBAAqBj2B,OACtE,CAAA,IAAIF,EAAI,EAAb,IAAgBe,EAAMmyC,EAAYlzC,EAAIe,EAAKf,IAGvC,GAFAwB,EAAe4gB,EAAcpiB,GAC7ByrC,EAAqB9iC,KAAKwqC,sBAAsB3xC,EAAcwxC,GACtC,CAwCpB,IAAK,IAvCDztC,EAAU,SAAU6tC,EAAiBC,GACrC,IAAIznC,OAAO,EACXA,KACA,IAAK,IAAI20B,EAAM,EAAGA,EAAMtgC,EAAQC,OAAQqgC,IAAO,CAG3C30B,EAFavL,oBAAkBa,YAAU,QAASjB,EAAQsgC,KACtDtgC,EAAQsgC,GAAOr/B,YAAU,QAAUjB,EAAQsgC,KACjC,KAGlB,GADA30B,EAAOimC,EAAOyB,kBAAkB1nC,EAAMimC,EAAOxyC,OAAO2hB,WAAWoyB,EAAkB,KAC7EvB,EAAOxyC,OAAO2hB,WAAWoyB,EAAkB,GAAGjd,iBA0B9C,MAAO,WAzBP,IAAIod,EACJP,EAAYlsC,IAAI,SAAUT,EAAGrG,GACrBqG,EAAE1E,WAAaH,EAAaG,WAC5B4xC,EAAQvzC,KAIhB,IAAIwzC,EAAeD,EAAQ9H,EAAqB2H,EAC5CK,EAAgB1uC,YAAWvD,UACxBiyC,EAAcxxC,oBACdwxC,EAAc5B,EAAOxyC,OAAO0G,cACnCqY,WAAS,aAAcq1B,EAAe7nC,GACtC,IAAI9I,EAAQ5B,YAAU,QAASuyC,GAI/B,GAHAr1B,WAAS,QAAStb,EAAQ,EAAG8I,GAC7BwS,WAAS,gBAAgB,EAAMxS,GAC/BwS,WAAS,iBAAkBq1B,EAAc9xC,SAAUiK,GAC/CmnC,EAAQ,CACR,IAAI9wC,EAAef,YAAU,eAAgBM,GACzCS,EAAa/B,QACb+B,EAAad,KAAKyK,GAG1BonC,EAAYltC,OAAO0tC,EAAc,EAAG5nC,IAMxCimC,EAASlpC,KACJyqC,EAAkB,EAAGC,EAAQJ,EAAeG,GAAmBC,EAAOD,IAC3E7tC,EAAQ6tC,GAEZzqC,KAAKmqC,yBAIZ,CAED,IAAK,IADD/zB,KACKtK,EAAc,EAAG6qB,EAAWr/B,EAAQC,OAAQuU,EAAc6qB,EAAU7qB,IAAe,CAGxFsK,EAFa1e,oBAAkBa,YAAU,QAASjB,EAAQwU,KACtDxU,EAAQwU,GAAevT,YAAU,QAASjB,EAAQwU,KACtC,KAEX2+B,EAAkB,EAA3B,IAAK,IAAyBM,EAAWT,EAAeG,GAAmBM,EAAUN,IACjFzqC,KAAK2qC,kBAAkBv0B,EAAOpW,KAAKtJ,OAAO2hB,WAAWoyB,EAAkB,IAG/E,OAAOJ,GAEXJ,EAAUptC,UAAU2tC,sBAAwB,SAAUjtC,EAAYC,GAG9D,IAAK,IADD9E,EACKrB,EAAI,EAAGe,EAFGC,OAAOC,KAAKkF,GAAUjG,OAELF,EAAIe,EAAKf,IAAK,CAC9CqB,EAAS8E,EAASnG,GAGlB,GAAIkG,KAFW7F,oBAAkBgB,EAAOI,YAAc,KAClD0E,EAASC,OAAO,SAAUC,GAAK,OAAOA,EAAE1E,WAAaN,EAAOI,WAAWE,WAAa,IAC3D,CACzBgH,KAAKmqC,iBAAiB3xC,KAAKE,GAE3B,IADeH,YAAU,kBAAmBG,GAKxC,SAHAsH,KAAKwqC,sBAAsB9xC,EAAQ8E,IAO/C,OAAOwC,KAAKmqC,iBAAiB5yC,QAEjC0yC,EAAUptC,UAAU8tC,kBAAoB,SAAUK,EAAUC,GAExD,IAAK,IAAI5zC,EAAI,EAAGe,EADUC,OAAOC,KAAK2yC,EAAQ3zC,SAASC,OACZF,EAAIe,EAAKf,IAIhD,IAAK,IAHD6zC,EAAgBxzC,oBAAkBuzC,EAAQ3zC,QAAQD,GAAG8D,YAAc8vC,EAAQ3zC,QAAQD,GAAGkb,MACtF04B,EAAQ3zC,QAAQD,GAAG8D,WAEdi0B,EAAK,EAAG+b,EADN9yC,OAAOC,KAAK0yC,GACS5b,EAAK+b,EAAO5zC,OAAQ63B,IAAM,CACtD,IAAIv3B,EAAMszC,EAAO/b,GACjB,GAAIv3B,IAAQqzC,EACR,GAAIlrC,KAAKmqC,iBAAiB5yC,OACtByzC,EAASnzC,GAAOmI,KAAKorC,iBAAiBH,EAAQ3zC,QAAQD,GAAI2I,KAAKmqC,uBAE9D,GAAInqC,KAAKtJ,OAAO4jB,YAAa,CAC9B,IAAI7b,EAAOuB,KAAKtJ,OAAOC,sBAAsBC,cAAcoJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KACvFuE,KAAKtJ,OAAO8G,SAClBwtC,EAASnzC,GAAOmI,KAAKorC,iBAAiBH,EAAQ3zC,QAAQD,GAAIoH,IAQ1E,OAAOusC,GAEXf,EAAUptC,UAAUuuC,iBAAmB,SAAUC,EAAe/4B,GAC5D,IAAI0C,EAAM,IAAIP,QACV62B,KACApuB,KACAla,EAAQtL,oBAAkB2zC,EAAc94B,YACiB4K,EAAzDnd,KAAKtJ,OAAOukB,iBAAiBowB,EAAc94B,OAAOvP,KACtDqoC,EAAc1tB,qBAAsBjB,OAAQ1c,KAAKurC,kBAAkBF,EAAc3uB,OAAQ1Z,KACzFqoC,EAAc7uB,aAAaxc,KAAKtJ,OAAOiB,KAAKkpB,QAC5C,IAAIjE,EAAWyuB,EAAcruB,gBAAwC,SAAU7U,GAAK,OAAOA,GAC3FkjC,EAAcpuB,YAAYC,GAC1B,IAAIsuB,EAAUH,EAAc3tB,YAAY,GACxC1I,EAAIE,QAAUlV,KAAKwY,aACnBxD,EAAIy2B,gBACJ,IAEIC,EAFAC,EAAU,IAAI/0C,cAAY0b,GAAa2D,aAAajB,GACpDlS,EAAQuoC,EAAcroC,KAE1BF,GAASuoC,EAAcroC,MACvB,IAAK,IAAI3L,EAAI,EAAGA,EAAIyL,EAAMvL,OAAQF,IAAK,CACnCq0C,EAAa5oC,EAAMzL,GACnB,IAAIQ,EAAMwzC,EAAc94B,MAAQ,MAAQzP,EAAMzL,GAAGu0C,cAC7CC,EAAmB,WAAb/oC,EAAMzL,GAAkBkB,YAAU,aAAcozC,GACtDG,qBAAmBhpC,EAAMzL,GAAIs0C,EAASN,EAAerrC,KAAKtJ,QAC1Dq1C,EAAOV,EAAclwC,WACrB6wC,EAAuB,WAAblpC,EAAMzL,GAAkBw0C,EAAIh0C,GAAOg0C,EACjDP,EAAOS,GAAQT,EAAOS,OACtBT,EAAOS,GAAMl0C,GAAOm0C,EACpBV,EAAOS,GAAMjpC,EAAMzL,IAAOK,oBAAkBm0C,GAA2B,IAApBjvB,EAASovB,GAEhE9uB,EAAOR,OAAS2uB,EAAcruB,eAC9B,IAAI7L,EAAc7E,gBAAc,MAC5BC,UAAW,cAEf,GAAIvM,KAAKtJ,OAAO2c,QAAS,CAErBm4B,EAAQ1zB,GAAGwzB,EAAOD,EAAclwC,YAAa6E,KAAKtJ,OAAQ80C,EAAQ/tB,SAAU,GAAI,KAAM,KAAMtM,GAC5FnR,KAAKtJ,OAA2B,4BAGhCqc,iBAAe5B,EAAaq6B,EAAQ1zB,GAAGwzB,EAAOD,EAAclwC,YAAa6E,KAAKtJ,OAAQ80C,EAAQ/tB,WAElG,IAAIxjB,EAAQqxC,EAAOD,EAAclwC,YAAYuwC,GAE7C,OAA8C,IAA1Cv6B,EAAY1D,UAAUjP,QAAQvE,GACfkX,EAAY1D,UAAYxT,EAIhCkX,EAAY1D,WAG3Bw8B,EAAUptC,UAAU0uC,kBAAoB,SAAUU,EAAejpC,GAC7D,GAAItL,oBAAkBsL,IAAkC,iBAAlBipC,EAClC,OAAOA,EAEX,IAAIpyC,EACJ,OAAQmJ,GACJ,IAAK,SACDnJ,GAAQ6iB,OAAQuvB,GAChB,MACJ,IAAK,WACDpyC,GAAQmJ,KAAM,WAAY2Z,SAAUsvB,GACpC,MACJ,IAAK,OACDpyC,GAAQmJ,KAAMA,EAAM2Z,SAAUsvB,GAGtC,OAAOpyC,GAQXowC,EAAUptC,UAAU+M,QAAU,WAC1B5J,KAAKwK,uBAEFy/B,KC9OPiC,GAAsB,WACtB,SAASA,EAAKv0C,GACV8K,OAAKC,OAAOypC,QACZnsC,KAAKtJ,OAASiB,EACdqI,KAAK0T,WACL1T,KAAKosC,kBACLpsC,KAAK4T,aAAe,EACpB5T,KAAKhF,iBAAmBtD,oBAAkBsI,KAAKtJ,OAAOuG,iBACtD+C,KAAKkK,mBAgGT,OAxFAgiC,EAAKrvC,UAAU+F,cAAgB,WAC3B,MAAO,QAKXspC,EAAKrvC,UAAUqN,iBAAmB,WAC9BlK,KAAKtJ,OAAOyT,GAAG,cAAenK,KAAKqsC,YAAarsC,MAChDA,KAAKtJ,OAAOyT,GAAG,aAAcnK,KAAKssC,qBAAsBtsC,OAM5DksC,EAAKrvC,UAAU2N,oBAAsB,WAC7BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,cAAe1K,KAAKqsC,aACpCrsC,KAAKtJ,OAAOgU,IAAI,aAAc1K,KAAKssC,wBAEvCJ,EAAKrvC,UAAUyvC,qBAAuB,SAAUC,GAC5C,IAAI9tC,EAAO8tC,EAAW7wC,aAClBqf,EAASwxB,EAAWxxB,OACxB/a,KAAKwsC,YAAY/tC,EAAMsc,GACvB/a,KAAK4T,aAAe,EACpB24B,EAAW7wC,aAAesE,KAAKosC,eAC/BpsC,KAAKosC,mBAETF,EAAKrvC,UAAU2vC,YAAc,SAAU/tC,EAAMsc,GACzC,IAAK,IAAIpa,EAAI,EAAGA,EAAIlC,EAAKlH,OAAQoJ,IAW7B,GAVIX,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,GAA6C,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IACjFH,oBAAkBqB,EAAciH,KAAKtJ,OAAQ+H,EAAKkC,GAAG3H,UAAU,MAChEgH,KAAK4T,cACL5T,KAAKosC,eAAepsC,KAAK4T,aAAenV,EAAKkC,KAIjDX,KAAK4T,cACL5T,KAAKosC,eAAepsC,KAAK4T,aAAenV,EAAKkC,IAE7ClC,EAAKkC,GAAGtH,gBAAiB,CACzB,IAAIozC,EAAa,IAAI71C,cAAY6H,EAAKkC,GAAGrH,cAAc2c,aAAa8E,GACpE/a,KAAKwsC,YAAYC,EAAW1xB,KAYxCmxB,EAAKrvC,UAAUokB,WAAa,SAAU9lB,EAAYkgB,EAAW0F,GACzD/gB,KAAKtJ,OAAOiB,KAAKspB,WAAW9lB,EAAYkgB,EAAW0F,IAEvDmrB,EAAKrvC,UAAUskB,iBAAmB,SAAU5O,GACxCvS,KAAKtJ,OAAOiB,KAAKwpB,iBAAiB5O,IAQtC25B,EAAKrvC,UAAUwvC,YAAc,WACzBrsC,KAAKtJ,OAAOmnB,eAAgBtf,aAAc6oB,sBAAoBpnB,KAAKtJ,OAAOiB,KAAK4G,gBAAiB,IAOpG2tC,EAAKrvC,UAAUqkB,aAAe,WAC1BlhB,KAAKtJ,OAAOiB,KAAKupB,eACjBlhB,KAAKqsC,eAQTH,EAAKrvC,UAAU+M,QAAU,WACrB5J,KAAKwK,uBAEF0hC,KC3GPQ,GAA4B,WAM5B,SAASA,EAAWh2C,GAChB+L,OAAKC,OAAOiqC,cACZ3sC,KAAKtJ,OAASA,EAiBlB,OAfAg2C,EAAW7vC,UAAU+vC,cAAgB,WACjC,OAAO5sC,KAAKtJ,OAAOiB,KAAKk1C,iBAAiBD,iBAE7CF,EAAW7vC,UAAU+M,QAAU,aAS/B8iC,EAAW7vC,UAAU+F,cAAgB,WACjC,MAAO,cAEJ8pC,KCxBPI,GAA6B,WAC7B,SAASA,EAAYp2C,GACjB+L,OAAKC,OAAOqqC,eACZ/sC,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAsET,OAhEA4iC,EAAYjwC,UAAUqN,iBAAmB,WACrClK,KAAKtJ,OAAOyT,GAAG,kBAAmBnK,KAAKsF,gBAAiBtF,MACxDA,KAAKtJ,OAAOyT,GAAG,mBAAoBnK,KAAKuF,iBAAkBvF,OAM9D8sC,EAAYjwC,UAAU2N,oBAAsB,WACpCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,kBAAmB1K,KAAKsF,iBACxCtF,KAAKtJ,OAAOgU,IAAI,mBAAoB1K,KAAKuF,oBAE7CunC,EAAYjwC,UAAUyI,gBAAkB,SAAUvC,GAC9C,IAAIiqC,EAAS1jC,SAAO,IAAMtJ,KAAKtJ,OAAOwc,QAAQC,GAAK,4BAA6BpQ,EAAKmQ,SACjF+5B,EAAa3jC,SAAO,IAAMtJ,KAAKtJ,OAAOwc,QAAQC,GAAK,0BAA2BpQ,EAAKmQ,SACnF85B,KACkD,IAA9ChtC,KAAKtJ,OAAOiB,KAAKkE,aAAaqpB,YAC9B8nB,EAAOxyC,MAAMG,QAAU,OAGvBqyC,EAAOxyC,MAAMG,QAAU,SAGQ,SAAlCqF,KAAKtJ,OAAOmF,aAAaC,MAAqD,UAAlCkE,KAAKtJ,OAAOmF,aAAaC,MACjEpE,oBAAkBu1C,IAAkBA,EAAW7kC,UAAUC,SAAS,iBACvE4kC,EAAWzyC,MAAMG,QAAU,SAGnCmyC,EAAYjwC,UAAU0I,iBAAmB,SAAUxC,GAC1B,UAAjBA,EAAKE,KAAKkQ,IAAmC,UAAjBpQ,EAAKE,KAAKkQ,IAAmC,UAAjBpQ,EAAKE,KAAKkQ,KAClEnT,KAAKtJ,OAAOyb,OAAO,0BAA2BpP,GAC9C/C,KAAKtJ,OAAOmnB,eAAgBhiB,cAAgBQ,eAAgB0G,EAAKE,KAAKkQ,MAAQ,GAC9EnT,KAAKtJ,OAAOq6B,cASpB+b,EAAYjwC,UAAU+F,cAAgB,WAClC,MAAO,eAQXkqC,EAAYjwC,UAAU+M,QAAU,WAC5B5J,KAAKwK,uBAOTsiC,EAAYjwC,UAAUmrB,eAAiB,WACnC,OAAOhoB,KAAKtJ,OAAOiB,KAAKw0B,kBAAkBnE,kBAEvC8kB,KCtEPI,GAA2B,WAC3B,SAASA,EAAUx2C,GACfsJ,KAAKmtC,gBAAkB,EACvBntC,KAAKwT,aAAe,eACpBxT,KAAKue,eAAiB,iBACtBve,KAAKotC,qBACLptC,KAAKqtC,uBACLrtC,KAAKstC,qBACLttC,KAAKtJ,OAASA,EACdsJ,KAAKhF,iBAAmBtD,oBAAkBhB,EAAOuG,iBACjD+C,KAAKutC,gBACLvtC,KAAK9D,sBACL8D,KAAKwtC,OAAQ,EACbxtC,KAAKkK,mBAuiBT,OAriBAgjC,EAAUrwC,UAAUqN,iBAAmB,WACnClK,KAAKtJ,OAAOyT,GAAGoiB,GAAkBvsB,KAAK6F,UAAW7F,MACjDA,KAAKtJ,OAAOyT,GAAGuiB,GAAiB1sB,KAAKiG,SAAUjG,MAC/CA,KAAKtJ,OAAOyT,GAAGyiB,GAAuB5sB,KAAKmG,eAAgBnG,MAC3DA,KAAKtJ,OAAOyT,GAAG8R,GAAkBjc,KAAKqG,UAAWrG,MACjDA,KAAKtJ,OAAOyT,GAAG2iB,GAA0B9sB,KAAKkG,kBAAmBlG,MACjEA,KAAKtJ,OAAOyT,GAAGwiB,GAAwB3sB,KAAKoG,gBAAiBpG,MAC7DA,KAAKtJ,OAAOyT,GAAG,kBAAmBnK,KAAKytC,gBAAiBztC,MACxDA,KAAKtJ,OAAOyT,GAAG,oBAAqBnK,KAAK0tC,kBAAmB1tC,MAC5DA,KAAKtJ,OAAOiB,KAAKwS,GAAG,yBAA0BnK,KAAK2tC,qBAAsB3tC,MACzEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,kBAAmBnK,KAAK4tC,cAAe5tC,OAM/DktC,EAAUrwC,UAAU2N,oBAAsB,WAClCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI6hB,GAAkBvsB,KAAK6F,WACvC7F,KAAKtJ,OAAOgU,IAAIgiB,GAAiB1sB,KAAKiG,UACtCjG,KAAKtJ,OAAOgU,IAAIuR,GAAkBjc,KAAKqG,WACvCrG,KAAKtJ,OAAOgU,IAAIkiB,GAAuB5sB,KAAKmG,gBAC5CnG,KAAKtJ,OAAOgU,IAAIoiB,GAA0B9sB,KAAKkG,mBAC/ClG,KAAKtJ,OAAOgU,IAAIiiB,GAAwB3sB,KAAKoG,iBAC7CpG,KAAKtJ,OAAOgU,IAAI,kBAAmB1K,KAAKytC,iBACxCztC,KAAKtJ,OAAOgU,IAAI,oBAAqB1K,KAAK0tC,mBAC1C1tC,KAAKtJ,OAAOiB,KAAK+S,IAAI,yBAA0B1K,KAAK2tC,sBACpD3tC,KAAKtJ,OAAOiB,KAAK+S,IAAI,kBAAmB1K,KAAK4tC,iBAQjDV,EAAUrwC,UAAU+M,QAAU,WAC1B5J,KAAKwK,uBAMT0iC,EAAUrwC,UAAUgxC,gBAAkB,WAClC,OAAO7tC,KAAKutC,cAMhBL,EAAUrwC,UAAUixC,eAAiB,WACjC,OAAO9tC,KAAK/E,aAMhBiyC,EAAUrwC,UAAUkxC,iBAAmB,WACnC,OAAO/tC,KAAK9E,eAMhBgyC,EAAUrwC,UAAUmxC,mBAAqB,WACrC,OAAOhuC,KAAKmtC,iBAEhBD,EAAUrwC,UAAU4wC,gBAAkB,WAClC,IAGIvzC,EAHAuE,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/Dw7B,EAAanyB,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAE5D,IAAK7D,oBAAkBsI,KAAKotC,oBAAsBptC,KAAKotC,kBAAkB71C,OACrE,IAAK,IAAIF,EAAI,EAAGA,EAAI2I,KAAKotC,kBAAkB71C,OAAQF,IAC/C6C,EAAQuE,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEy0B,KAAgB3zB,QAAQwB,KAAKotC,kBAAkB/1C,GAAG86B,IAC3F1zB,EAAKtB,OAAOjD,EAAO,GAG3B8F,KAAKotC,kBAAoBptC,KAAKutC,aAAevtC,KAAKstC,kBAAoBttC,KAAKqtC,oBAAsBrtC,KAAK9D,uBAE1GgxC,EAAUrwC,UAAUgJ,UAAY,SAAU9C,GACtC,IAAIkrC,EAAkBlrC,EAAKtD,KAAKmjB,UAC5BsrB,EAAaluC,KAAKtJ,OAAO+a,eAAiBzR,KAAKtJ,OAAOuI,mBAS1D,GARIivC,GAAcnrC,EAAKorC,aAAaj0C,MAAQg0C,IACxCD,GAAoCC,GAEpCD,IAAoBjuC,KAAKtJ,OAAO0I,iBAChCY,KAAKtJ,OAAO6I,aAAaC,YAAaf,KAAMsE,EAAK0I,QAAShM,KAAMsD,EAAKtD,KACjEE,OAAQK,KAAKtJ,OAAOiB,KAAKy2C,iBAAiBrrC,EAAKtD,KAAKmjB,aAGxD5iB,KAAKwtC,OAA2C,UAAlCxtC,KAAKtJ,OAAOmF,aAAaC,MAAgE,WAA5CkE,KAAKtJ,OAAOmF,aAAaQ,eAA6B,CACjH,IAAIoC,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/D03C,OAAQ,EAERC,EAAetuC,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAC1DgzC,OAAmB,EACnBC,OAAa,EACb11C,EAAa,aAEbD,EAAemH,KAAK9E,eAAiB,EAAI8E,KAAKutC,aAAavtC,KAAK/E,aAAanC,GAAc,KAC3FoE,OAAY,EACZoB,OAAiB,EACjBrB,OAAkB,EAClBwxC,EAA6D,QAA5CzuC,KAAKtJ,OAAOmF,aAAaQ,iBAAoD,IAAxB2D,KAAK9E,cAAuB,EACtD,UAA5C8E,KAAKtJ,OAAOmF,aAAaQ,eAA6B2D,KAAK/E,YACrD+E,KAAK/E,YAAc,EAE7B,GADAwzC,EAAiBzuC,KAAK0uC,wBAAwBD,GAC1CzuC,KAAK2uC,iBAAkB,CAcvB,GAbI3uC,KAAKutC,aAAah2C,SAClB2F,EAAY8C,KAAKutC,aAAavtC,KAAK/E,aAAa+E,KAAKtJ,OAAOwG,WAC5DD,EAAkB+C,KAAKutC,aAAavtC,KAAK/E,aAAa+E,KAAKtJ,OAAOuG,iBAC9D+C,KAAKutC,aAAavtC,KAAK/E,aAAanC,KACpCwF,EAAiB0B,KAAKutC,aAAavtC,KAAK/E,aAAanC,GAAoB,WAGjFkH,KAAKotC,kBAAoBzzC,EAAYqG,KAAKotC,mBAC1CptC,KAAKstC,kBAAoB3zC,EAAYqG,KAAKstC,mBAC1CttC,KAAKstC,kBAAkB90C,KAAKwH,KAAKutC,aAAavtC,KAAK/E,cACnDozC,EAAQruC,KAAKtJ,OAAOiB,KAAKugB,gBAAgBu2B,GAAgBG,QACzDP,EAAMr1C,SAAW0d,SAAO1W,KAAKtJ,OAAOwc,QAAQC,GAAK,UACjDsC,WAAS,sBAAwB44B,EAAMr1C,SAAUq1C,EAAOruC,KAAKtJ,SACxD2B,OAAOwE,UAAUC,eAAeC,KAAKsxC,EAAO,SAAU,CAEvD,GADAruC,KAAK6uC,YAAqC,IAAxB7uC,KAAK9E,cAAuB,EAAI8E,KAAK6uC,WACP,UAA5C7uC,KAAKtJ,OAAOmF,aAAaQ,gBAEzB,GADAgyC,EAAMS,cAAgBj2C,EAClBmH,KAAK9E,eAAiB,EAAG,CACzBmzC,EAAMv1C,WAAasD,YAAW4D,KAAKutC,aAAavtC,KAAK/E,cACrDozC,EAAM/vC,eAAiB+vC,EAAMv1C,WAAWE,gBACjCq1C,EAAMv1C,WAAWQ,oBACjB+0C,EAAMv1C,WAAWkH,KAAKtJ,OAAO0G,cACpCixC,EAAMl0C,MAAQk0C,EAAMv1C,WAAWqB,MAAQ,EACvCk0C,EAAMn0C,MAAQ8F,KAAK6uC,WACnB,IAAIE,EAAmB31C,EAAoB4G,KAAKutC,aAAavtC,KAAK/E,cAAc1D,OAC5EmB,EAASU,EAAoB4G,KAAKutC,aAAavtC,KAAK/E,cAAc8zC,EAAmB,GACzFr2C,EAAShB,oBAAkBgB,GAAUsH,KAAKutC,aAAavtC,KAAK/E,aAAevC,EAC3E61C,EAAmB9vC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAE4wC,KAAkB9vC,QAAQ9F,EAAO41C,IACjFtuC,KAAKhF,kBACLqzC,EAAMruC,KAAKtJ,OAAOuG,iBAAmBC,GAEzCG,EAAgBixC,EAAcD,EAAMv1C,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBqzC,SAG7F,IAAiD,UAA5CruC,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAClF3E,oBAAkBsI,KAAKutC,aAAavtC,KAAK/E,cAAe,CAS5D,GARAozC,EAAMl0C,MAAQ6F,KAAKutC,aAAavtC,KAAK/E,aAAkB,MACnDozC,EAAMl0C,OAAS6F,KAAK9E,eAAiB,IACrCmzC,EAAMv1C,WAAaD,EACnBw1C,EAAM/vC,eAAiBA,SAChB+vC,EAAMv1C,WAAWQ,oBACjB+0C,EAAMv1C,WAAWkH,KAAKtJ,OAAO0G,eAExCixC,EAAMn0C,MAAoD,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,eAA6B2D,KAAK6uC,WAAa7uC,KAAK6uC,WAAa,EACxD,UAA5C7uC,KAAKtJ,OAAOmF,aAAaQ,gBAA8B2D,KAAK9E,eAAiB,EAAG,CAC5E6zC,EAAmB31C,EAAoB4G,KAAKutC,aAAavtC,KAAK/E,cAAc1D,OAC5EmB,EAASU,EAAoB4G,KAAKutC,aAAavtC,KAAK/E,cAAc8zC,EAAmB,GACzFr2C,EAAShB,oBAAkBgB,GAAUsH,KAAKutC,aAAavtC,KAAK/E,aAAevC,EAC3E61C,EAAmB9vC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAE4wC,KAAkB9vC,QAAQ9F,EAAO41C,IAEzF,GAAgD,UAA5CtuC,KAAKtJ,OAAOmF,aAAaQ,gBAA8B2D,KAAK9E,eAAiB,EAAG,CAC5ExC,EAASsH,KAAKutC,aAAavtC,KAAK/E,aACpCszC,EAAmB9vC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAE4wC,KAAkB9vC,QAAQ9F,EAAO41C,IAErFtuC,KAAKhF,kBACLqzC,EAAMruC,KAAKtJ,OAAOuG,iBAAmBA,GAG7CoxC,EAAMn0C,OAAyB,IAAjBm0C,EAAMn0C,MAAe,EAAIm0C,EAAMn0C,MAC7Cm0C,EAAMh1C,iBAAkB,EACxBg1C,EAAM/0C,gBACN0G,KAAKutC,aAAapwC,OAAOkxC,EAAMn0C,MAAO,EAAGm0C,GACzCruC,KAAK9D,mBAAmBiB,OAAOkxC,EAAMn0C,MAAO,EAAGm0C,GAE3CG,EADAD,GAIaF,EAAMn0C,MAEyB,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,iBACzBmyC,EAA6B,IAAhBH,EAAMn0C,MAAcs0C,EAAaA,EAAa,GAE/D/vC,EAAKtB,OAAOqxC,EAAY,EAAGH,GAC3BruC,KAAKotC,kBAAkB50C,KAAK61C,GAEhCruC,KAAKtJ,OAAOiB,KAAKugB,gBAAgBu2B,GAAgBhwC,KAAO4vC,EACxDruC,KAAK2uC,kBAAmB,GAExB3uC,KAAKtJ,OAAO+a,eAAiBzR,KAAKtJ,OAAOuI,oBACoB,QAA1De,KAAKtJ,OAAOiB,KAAKugB,gBAAgBu2B,GAAgBvuC,OACpDM,QAAMR,KAAK9D,mBAAmBuyC,GAAiBzuC,KAAKtJ,OAAOiB,KAAKugB,gBAAgBu2B,GAAgBG,WAI5G1B,EAAUrwC,UAAUsJ,eAAiB,SAAUzI,GAE3C,GAAsC,SAAlCsC,KAAKtJ,OAAOmF,aAAaC,MAAmBkE,KAAKtJ,OAAOqF,WAAuB,aAG/E,OAFA2B,EAAEsL,QAAS,OACXhJ,KAAKtJ,OAAOqF,WAAuB,cAAI,GAG3CiE,KAAK9E,cAAgB8E,KAAKtJ,OAAOiB,KAAKowB,iBACtC/nB,KAAK/E,YAAc+E,KAAKtJ,OAAOiB,KAAKowB,kBAAoB,EAAI/nB,KAAKtJ,OAAOiB,KAAKowB,iBAAmB,EAChG/nB,KAAK5E,aAAe4E,KAAKtJ,OAAO+R,qBAAqB,IAEzDykC,EAAUrwC,UAAUoJ,SAAW,SAAUvI,GACrC,GAAgD,WAA5CsC,KAAKtJ,OAAOmF,aAAaQ,eAA6B,CACtD2D,KAAKwtC,OAAQ,EACbxtC,KAAK2uC,kBAAmB,EACxB,IAAI7M,EAAc,EAMlB,GALK9hC,KAAKutC,aAAah2C,SACnByI,KAAKotC,qBACLptC,KAAKutC,aAAe5zC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACjD6D,KAAK9D,mBAAqBvC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,0BAEX,QAA5C6D,KAAKtJ,OAAOmF,aAAaQ,eAA0B,CACnD,IAAInE,EAAU8H,KAAKtJ,OAAOiB,KAAKwE,wBACO,UAAlC6D,KAAKtJ,OAAOmF,aAAaC,OAAqBkE,KAAKtJ,OAAOsF,kBAAkBgE,KAAKwT,cAAcjc,OAAS,GACrGyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKue,gBAAgBhnB,UACtDW,EAAU8H,KAAKutC,cAEnBvtC,KAAKgvC,iBAAiB92C,GACtB8H,KAAKtJ,OAAOyb,OAAOmb,OACnBttB,KAAKmtC,gBAAkB,EAE3BntC,KAAKivC,iBAEL,IAAIC,EAAc7wC,WAAS,cAAe2B,KAAKtJ,OAAOiB,MAClDw3C,EAAQnvC,KAAKtJ,OAAOugB,kBACpBjX,KAAKtJ,OAAOsF,kBAAkBgE,KAAKue,gBAAgBhnB,QAAsD,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,gBACtFylC,EAAcpkC,EAAEiB,IAAI+K,SACpBwlC,EAAYzb,aAAa2b,OAAOA,OAASpvC,KAAKovC,QAG9CtN,EAAcqN,EAAM/3B,uBAAuB,cAAc,GAAG1N,SAKhEwlC,EAAYzb,aAAa2b,OAAO1wB,SAAWojB,EAAaoN,EAAYzb,aAAa2b,OAAO1wB,QAAQ,MAGxGwuB,EAAUrwC,UAAUqJ,kBAAoB,WAC/BlG,KAAKutC,aAAah2C,SACnByI,KAAKutC,aAAe5zC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACjD6D,KAAK9D,mBAAqBvC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,0BAE3D,IAAI+yC,EAAc7wC,WAAS,cAAe2B,KAAKtJ,OAAOiB,MACtDqI,KAAKovC,OAASF,EAAYzb,aAAa2b,OAAOA,OAC9C,IAAIzwC,KACAzG,KACAm3C,EAAarvC,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACxDkD,EAAOuB,KAAKtJ,OAAOiB,KAAK8Q,qBAAqBzI,KAAKtJ,OAAOiB,KAAK8Q,qBAAqBlR,OAAS,GAC5F+3C,EAASl2C,EAAoBqF,GAC7BuN,EAAMhM,KAAKtJ,OAAOmiC,kBAAkB,GAAG1sB,aAAa,YACpDojC,EAAiBl9B,SAASrS,KAAKtJ,OAAOiB,KAAK63C,mBAAmBxjC,GAAKG,aAAa,iBAAkB,IACtG,GAAImjC,EAAO/3C,OAGP,IAAK,IAFDk4C,EAAaF,EAAiBD,EAAO/3C,OAEhCF,EADak4C,EAAiB,EACTl4C,GAAKo4C,EAAYp4C,IAC3CsH,EAAInG,KAAKwH,KAAKtJ,OAAOiB,KAAKi8B,cAAcv8B,KACpC2I,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAO+a,eAAiBzR,KAAKtJ,OAAOuI,qBACnEN,EAAInG,KAAKwH,KAAKtJ,OAAOiB,KAAKu/B,iBAAiB7/B,IAIvD,IAAKK,oBAAkB+G,EAAK3F,YAAa,CACrC,IAAIA,EAAaC,EAAciH,KAAKtJ,OAAQ+H,EAAK3F,WAAWE,UAC5D,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAI+pC,EAAatqC,EAAWQ,aAAakF,QAAQC,GACjD3F,EAAWQ,aAAa6D,OAAOimC,EAAY,GAE/CpjC,KAAKqtC,oBAAsB1zC,EAAYqG,KAAKqtC,qBAC5CrtC,KAAKqtC,oBAAoB70C,KAAKiG,GAElC6wC,EAAO92C,KAAKiG,GACZvG,EAAUo3C,EACV,IAASj4C,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAAK,CACrC,IAAIm3C,EAAaxuC,KAAKutC,aAAapvC,IAAI,SAAUT,GAAK,OAAOA,EAAE2xC,KAAgB7wC,QAAQtG,EAAQb,GAAGg4C,KAC9E,IAAhBb,GACAxuC,KAAKutC,aAAapwC,OAAOqxC,EAAY,GAG7C,IAASn3C,EAAI,EAAGA,EAAIsH,EAAIpH,OAAQF,IACvBK,oBAAkBiH,EAAItH,KACvB2I,KAAKtJ,OAAOiB,KAAKw8B,gBAAgBub,gBAAgBl3C,KAAKmG,EAAItH,KAItE61C,EAAUrwC,UAAUoyC,eAAiB,WAEjC,IAAK,IADDnnC,EAAO9H,KAAKtJ,OAAOiB,KAAKi8B,cACnBv8B,EAAI,EAAGA,EAAIyQ,EAAKvQ,OAAQF,IAC7ByQ,EAAKzQ,GAAG2V,aAAa,gBAAiB3V,EAAEuQ,YAE5C,GAAI5H,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,oBAAsBe,KAAKtJ,OAAO+a,cAEnE,CAAA,IADDk+B,EAAQ3vC,KAAKtJ,OAAOiB,KAAKwX,qBAC7B,IAAS9X,EAAI,EAAGA,EAAIs4C,EAAMp4C,OAAQF,IAC9Bs4C,EAAMt4C,GAAG2V,aAAa,gBAAiB3V,EAAEuQ,cAIrDslC,EAAUrwC,UAAUmyC,iBAAmB,SAAU92C,GAI7C,IAAK,IAHDi6B,EAAanyB,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACxDiY,EAAe,eACf1a,EAAyD,UAA5CkH,KAAKtJ,OAAOmF,aAAaQ,eAA6B,gBAAkB,aAChFhF,EAAI,EAAGA,EAAI2I,KAAKtJ,OAAOsF,kBAAkBwX,GAAcjc,OAAQF,IAC/DK,oBAAkBsI,KAAKtJ,OAAOsF,kBAAkBwX,GAAcnc,GAAGyB,KAC9DkH,KAAKtJ,OAAOsF,kBAAkBwX,GAAcnc,GAAGyB,GAAYq5B,KAAgBj6B,EAAQ8H,KAAK/E,aAAak3B,KACrGnyB,KAAKmtC,gBAAkBntC,KAAKmtC,gBAAkB,IAK9DD,EAAUrwC,UAAUuJ,gBAAkB,SAAU1I,GAC5C,IACIkyC,EAAgB,iBAChBtxB,EAAiB5gB,EAAErC,aAA0B,eACjD,GAAIqC,EAAErC,aAA0B,eAAE9D,OAE9B,IAAK,IAAIF,EAAI,EAAGA,EAAIinB,EAAe/mB,OAAQF,IACvCwD,GAAaZ,MAAOqkB,EAAejnB,GAAIiE,OAAQ,QAAU0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBgF,KAAK/E,YAAa+E,KAAK9E,mBAFtG,GAKrB,GAAIwC,EAAErC,aAAau0C,GAAer4C,OAGzB,CAAA,IADDmB,EADiBgF,EAAErC,aAAau0C,GAEpC,IAASv4C,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAAK,CACpC2I,KAAK6vC,eAAen3C,EAAOrB,GAAG2B,UAE9B,IAAK,IADDs2C,EAASl2C,EAAoBV,EAAOrB,IAC/BiK,EAAI,EAAGA,EAAIguC,EAAO/3C,OAAQ+J,IAC/BtB,KAAK6vC,eAAeP,EAAOhuC,GAAGtI,UAElC0E,EAAErC,aAAau0C,GAAiBlyC,EAAErC,aAAau0C,GAAer2C,OAAO+1C,IAG7EtvC,KAAKwtC,OAAQ,GAEjBN,EAAUrwC,UAAUgzC,eAAiB,SAAU51C,UAEpC+F,KAAKtJ,OAAe,yBAAEuD,UAEtB+F,KAAKtJ,OAAS,mBAAEuD,IAE3BizC,EAAUrwC,UAAU6wC,kBAAoB,WACpC,IACIxzC,EADAw6B,EAAgB,gBAEhB57B,EAAa,aAEboD,EAAqB8D,KAAKtJ,OAAOiB,KAAKwE,wBACtC7C,EAAe,eACfmF,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/Dw7B,EAAanyB,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAC5D,IAAK7D,oBAAkBsI,KAAKtJ,OAAOg+B,IAAiB,CAChD,IAAI/1B,EAAMqB,KAAKtJ,OAAOg+B,GAAe3pB,QAAQ,MAC7C/K,KAAKtJ,OAAOk+B,YAAYj2B,GACxBqB,KAAKtJ,OAAOg+B,GAAiB,KAEjC,IAAKh9B,oBAAkBsI,KAAKotC,mBACxB,IAAK,IAAI/1C,EAAI,EAAGA,EAAI2I,KAAKotC,kBAAkB71C,OAAQF,IAG/C,GAFA6C,EAAQuE,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEy0B,KAAgB3zB,QAAQwB,KAAKotC,kBAAkB/1C,GAAG86B,IAC3F1zB,EAAKtB,OAAOjD,EAAO,GAC6B,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,iBACzBnC,EAAQgC,EAAmBiC,IAAI,SAAUT,GAAK,OAAOA,EAAEy0B,KAClD3zB,QAAQwB,KAAKotC,kBAAkB/1C,GAAGyB,GAAckH,KAAKotC,kBAAkB/1C,GAAGyB,GAAYq5B,GACrFnyB,KAAKotC,kBAAkB/1C,GAAG86B,KAC3Bz6B,oBAAkBwE,EAAmBhC,KAEtC,IAAK,IADD8Y,EAAW9W,EAAmBhC,GAAOZ,GAChCS,EAAI,EAAGiZ,GAAYjZ,EAAIiZ,EAASzb,OAAQwC,IACzCiZ,EAASjZ,GAAGo4B,KAAgBnyB,KAAKotC,kBAAkB/1C,GAAG86B,IACtDj2B,EAAmBhC,GAAOZ,GAAc6D,OAAOpD,EAAG,GAO1E,IAAKrC,oBAAkBsI,KAAKqtC,qBACxB,IAASh2C,EAAI,EAAGA,EAAI2I,KAAKqtC,oBAAoB91C,OAAQF,IACjD,IAAKK,oBAAkBsI,KAAKqtC,oBAAoBh2C,GAAGyB,IAAc,CAC7DoB,EAAQgC,EAAmBiC,IAAI,SAAUT,GAAK,OAAOA,EAAEy0B,KAClD3zB,QAAQwB,KAAKqtC,oBAAoBh2C,GAAGyB,GAAYq5B,IACrD,IAAI2d,EAA4D,IAA5C9vC,KAAKqtC,oBAAoBh2C,GAAa,MAAU2I,KAAKqtC,oBAAoBh2C,GAAa,MACtG2I,KAAKqtC,oBAAoBh2C,GAAa,MAAI,EACzCK,oBAAkBwE,EAAmBhC,KACtCgC,EAAmBhC,GAAOZ,GAAc6D,OAAO2yC,EAAe,EAAG9vC,KAAKqtC,oBAAoBh2C,IAK1G2I,KAAKotC,kBAAoBptC,KAAKutC,aAAevtC,KAAKstC,kBAAoBttC,KAAK9D,sBAC3E8D,KAAKutC,aAAe5zC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACjD6D,KAAK6uC,WAAa,EAClB7uC,KAAK9D,mBAAqBvC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACvD6D,KAAKqtC,uBACLrtC,KAAKtJ,OAAOiB,KAAK4H,aAAakuB,WAElCyf,EAAUrwC,UAAUwJ,UAAY,SAAUtD,GACtC,GAAsC,UAAlC/C,KAAKtJ,OAAOmF,aAAaC,KAAkB,CAC3C,IAAIzE,OAAI,EACJgE,EAAehD,OAAOyE,eAAeC,KAAKgG,EAAM,kBAAoBA,EAAKgtC,eAAiB/vC,KAAKtJ,OAAOsF,kBACtGuiB,EAAiB,iBAIjB9f,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/DuF,EAAqB8D,KAAKtJ,OAAOiB,KAAKwE,wBACtC6zC,EAAehwC,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAE1D00C,EAAa50C,EAAyB,aAEtCH,OAAgB,EAChBD,OAAc,EAEdG,OAAe,EAKnB,GAHI60C,EAAW14C,OAAS,GAAiD,WAA5CyI,KAAKtJ,OAAOmF,aAAaQ,gBAClD4zC,EAAW9N,UAEiC,WAA5CniC,KAAKtJ,OAAOmF,aAAaQ,iBAAgChE,OAAOyE,eAAeC,KAAKgG,EAAM,kBAK1F,GAJI5L,EAAgB6I,KAAKtJ,UACrB+H,EAAOJ,WAAS,SAAUI,IAE9BA,EAAKtB,OAAOsB,EAAKlH,OAAS04C,EAAW14C,OAAQ04C,EAAW14C,QACnDyI,KAAKtJ,OAAOma,aAAepS,EAAKlH,SAAW2E,EAAmB3E,OAK9D,CACD,IAAI24C,EAAev2C,EAAY8E,GAC/B,GAAIyxC,EAAa34C,OAAQ,CACrB,IAAIw+B,EAAama,EAAa/xC,IAAI,SAAUT,GAAK,OAAOA,EAAEsyC,KACrDxxC,QAAQtC,EAAmB,GAAG8zC,IAC/BG,EAAWpa,EAAa/1B,KAAKtJ,OAAOiB,KAAKmZ,aAAay4B,SAC1DrtC,EAAqBg0C,EAAa/yC,OAAO44B,EAAYoa,SAVrDj0C,EAAmB3E,OAAS04C,EAAW14C,QACvC2E,EAAmBiB,OAAOjB,EAAmB3E,OAAS04C,EAAW14C,OAAQ04C,EAAW14C,QAgBhG,IAHsC,IAAlCyI,KAAKstC,kBAAkB/1C,QACvByI,KAAKstC,kBAAkB90C,KAAKwH,KAAKtJ,OAAO8G,SAASuF,EAAK7I,QAErD7C,EAAI,EAAGA,EAAI44C,EAAW14C,OAAQF,IAAK,CACpC,IAAI+C,EAAWgC,YAAW6zC,EAAW54C,IAgCrC,UA/BO+C,EAAStB,kBACTsB,EAASpB,gBACToB,EAASF,aACTE,EAASD,aACTC,EAASf,uBACTe,EAASd,oBACTc,EAASkE,eACX5G,oBAAkB0C,EAAS00C,uBACrB10C,EAAS00C,cAEpBmB,EAAW54C,GAAG+C,SAAWA,EACzBgB,EAAe4E,KAAKstC,kBAAkBj2C,GAClCK,oBAAkB0D,KAClBA,EAAe4E,KAAKstC,kBAAkBj2C,EAAI,IAE1C2I,KAAKhF,kBACAtD,oBAAkBu4C,EAAW54C,GAAGyB,aACjCuE,EAAgB2yC,EAAcC,EAAW54C,GAAGyB,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBi1C,EAAW54C,KAGhHK,oBAAkB0D,KACnBH,EAAcG,EAAalB,OAEiB,QAA5C8F,KAAKtJ,OAAOmF,aAAaQ,gBAAwE,WAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBAC1E3E,oBAAkBu4C,EAAW54C,GAAGyB,cAAuC,IAAxBkH,KAAK9E,gBACpDA,GAAiB,EACjBE,EAAe,MAGvBP,GAAaZ,MAAOg2C,EAAW54C,GAAIiE,OAAQ,OAAS0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBC,EAAaC,OA5DvF,EA4DkHE,GAC/HF,EAAgB,KACgC,UAA5C8E,KAAKtJ,OAAOmF,aAAaQ,iBAA+B3E,oBAAkBu4C,EAAW54C,GAAa,YAIlG,IAAK,IAHD+4C,EAAal0C,EAAmBiC,IAAI,SAAUT,GAAK,OAAOA,EAAEsyC,KAC3DxxC,QAAQyxC,EAAW54C,GAAa,WAAE24C,IACnCh9B,EAAW9W,EAAmBk0C,GAAwB,aACjDr2C,EAAI,EAAGA,EAAIiZ,EAASzb,OAAQwC,IAC7BiZ,EAASjZ,GAAGi2C,KAAkBC,EAAW54C,GAAG24C,IAC5C9zC,EAAmBk0C,GAAwB,aAAEjzC,OAAOpD,EAAG,GAKvE,GAAIsB,EAAakjB,GAAgBhnB,OAC7B,IAAKF,EAAI,EAAGA,EAAIgE,EAAakjB,GAAgBhnB,OAAQF,IACjDwD,GAAaZ,MAAOoB,EAAakjB,GAAgBlnB,GAAIiE,OAAQ,UAAY0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBC,EAAaC,OA3EhH,EA2E2IE,GAG5J4E,KAAKtJ,OAAO6G,cACZ,IAAK,IAAIq6B,EAAM,EAAGA,EAAMn5B,EAAKlH,OAAQqgC,IACjCn5B,EAAKm5B,GAAU,MAAIA,EACnBniB,WAAS,sBAAwBhX,EAAKm5B,GAAa,SAAI,SAAUA,EAAK53B,KAAKtJ,QACtE+H,EAAKm5B,GAAU,OAChB53B,KAAKtJ,OAAO6G,WAAW/E,KAAKiG,EAAKm5B,IAI7C53B,KAAKstC,kBAAoBttC,KAAKotC,kBAAoBptC,KAAKutC,aAAevtC,KAAKqtC,oBAAsBrtC,KAAK9D,uBAE1GgxC,EAAUrwC,UAAU6xC,wBAA0B,SAAUx0C,GACpD,IAAI4N,EAAO9H,KAAKtJ,OAAOiB,KAAKi8B,cAC5B,IAAiD,UAA5C5zB,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,iBAC9E2D,KAAK9E,eAAiB,EAAG,CAC5B,IAAKxD,oBAAkBsI,KAAKutC,aAAavtC,KAAK/E,eAAiB+E,KAAKutC,aAAavtC,KAAK/E,aAAa9B,SAC/F,GAAI6G,KAAKtJ,OAAOsF,kBAAkBgE,KAAKwT,cAAcjc,OAAS,GACvDyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKue,gBAAgBhnB,QAEtD,GADA2C,GAASd,EAAoB4G,KAAKutC,aAAavtC,KAAK/E,cAAc1D,OAClB,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAErDnC,GADsB8F,KAAKguC,2BAK/B9zC,GAASd,EAAoB4G,KAAKutC,aAAavtC,KAAK/E,cAAc1D,OAGtE2C,GAAS4N,EAAKvQ,SACd2C,EAAQ4N,EAAKvQ,OAAS,GAE1ByI,KAAKgvC,iBAAiBhvC,KAAKtJ,OAAOiB,KAAKwE,yBACnC6D,KAAKmtC,kBACLjzC,GAAS8F,KAAKmtC,iBAElBntC,KAAKmtC,gBAAkB,EAE3B,OAAOjzC,GAEXgzC,EAAUrwC,UAAU8wC,qBAAuB,SAAUjwC,GACjDA,EAAEqF,KAAKiG,QAAS,EAChB,IAAI4lC,EAAU5uC,KAAKtJ,OAAOiB,KAAKqE,kBAC3BwX,KAEAnb,OAAOC,KAAKs2C,GAASr3C,SACrBic,EAAeo7B,EAAQp7B,cAE3B,IAAK,IAAInc,EAAI,EAAGA,EAAImc,EAAajc,OAAQF,IACrCqG,EAAEoK,KAAK3K,OAAOqW,EAAanc,GAAQ,MAAG,IAG9C61C,EAAUrwC,UAAU+wC,cAAgB,SAAU7qC,GAG1CA,EAAU,MAAI/C,KAAKtJ,OAAOmiC,kBAAkB,GAAW,UAEpDqU,KCnjBPmD,GAAsB,WAMtB,SAASA,EAAK35C,GACVsJ,KAAKwT,aAAe,eACpBxT,KAAKue,eAAiB,iBACtBve,KAAKswC,iBAAmB,KACxBtwC,KAAKuwC,oBAAqB,EAC1B9tC,OAAKC,OAAO8tC,QACZxwC,KAAKtJ,OAASA,EACdsJ,KAAKhF,iBAAmBtD,oBAAkBhB,EAAOuG,iBACjD+C,KAAKywC,uBAAyB,KAC9BzwC,KAAK0wC,sBACL1wC,KAAK2wC,gBAAkB,IAAIzD,GAAUltC,KAAKtJ,QAC1CsJ,KAAKkK,mBA84BT,OAt4BAmmC,EAAKxzC,UAAU+F,cAAgB,WAC3B,MAAO,QAMXytC,EAAKxzC,UAAUqN,iBAAmB,WAC9BlK,KAAKtJ,OAAOyT,GAAG6R,GAAmBhc,KAAKwF,WAAYxF,MACnDA,KAAKtJ,OAAOyT,GAAG0hB,GAAkB7rB,KAAKyF,UAAWzF,MACjDA,KAAKtJ,OAAOyT,GAAGmjB,GAAiBttB,KAAK0F,SAAU1F,MAC/CA,KAAKtJ,OAAOyT,GAAGujB,GAA0B1tB,KAAK2F,kBAAmB3F,MACjEA,KAAKtJ,OAAOyT,GAAGkiB,GAAiBrsB,KAAK4F,SAAU5F,MAC/CA,KAAKtJ,OAAOyT,GAAG4iB,GAAoB/sB,KAAKgG,YAAahG,MACrDA,KAAKtJ,OAAOiB,KAAKwS,GAAGymC,GAAmB5wC,KAAKsG,WAAYtG,MACxDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,iBAAkBnK,KAAK6wC,YAAa7wC,MACxDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,gBAAiBnK,KAAK8wC,aAAc9wC,MACxDA,KAAKtJ,OAAOyT,GAAGsiB,GAAiBzsB,KAAK8F,SAAU9F,MAC/CA,KAAKtJ,OAAOyT,GAAG,cAAenK,KAAK+wC,iBAAkB/wC,MACrDA,KAAKtJ,OAAOyT,GAAG,iBAAkBnK,KAAK+wC,iBAAkB/wC,MACxDA,KAAKtJ,OAAOiB,KAAKwS,GAAG6mC,GAAkBhxC,KAAK2F,kBAAmB3F,MAC9DA,KAAKtJ,OAAOiB,KAAKwS,GAAG,WAAYnK,KAAKixC,aAAcjxC,MACnDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,cAAenK,KAAKkxC,eAAgBlxC,MACxDA,KAAKtJ,OAAOyT,GAAG,0BAA2BnK,KAAKmxC,wBAAyBnxC,MAExEA,KAAKtJ,OAAOiB,KAAKwS,GAAGinC,GAAwBpxC,KAAK2G,gBAAiB3G,MAClEA,KAAKtJ,OAAOiB,KAAKwS,GAAGknC,GAA0BrxC,KAAK4G,kBAAmB5G,MACtEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,mBAAoBnK,KAAKsxC,eAAgBtxC,MAC7DA,KAAKtJ,OAAOiB,KAAKwS,GAAG,mBAAoBnK,KAAKuxC,eAAgBvxC,OAEjEqwC,EAAKxzC,UAAUo0C,aAAe,SAAUvzC,GACpCsC,KAAKwxC,kBAAoB9zC,EAAE0D,QAE/BivC,EAAKxzC,UAAU00C,eAAiB,SAAUE,GACtCA,EAAQp1C,eAAiB2D,KAAKtJ,OAAOmF,aAAaQ,eAClDo1C,EAAQx2C,YAAc+E,KAAK/E,YAC3Bw2C,EAAQC,cAAgB1xC,KAAKswC,kBAEjCD,EAAKxzC,UAAU8J,gBAAkB,SAAU5D,GACvC/C,KAAKtJ,OAAOuS,QAAQmkB,EAAoBrqB,IAE5CstC,EAAKxzC,UAAU+J,kBAAoB,SAAU7D,GACH,SAAlC/C,KAAKtJ,OAAOmF,aAAaC,MACzBkE,KAAKtJ,OAAOuS,QAAQmP,EAAuBrV,IAOnDstC,EAAKxzC,UAAU2N,oBAAsB,WAC7BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAIsR,GAAmBhc,KAAKwF,YACxCxF,KAAKtJ,OAAOgU,IAAImhB,GAAkB7rB,KAAKyF,WACvCzF,KAAKtJ,OAAOgU,IAAI4iB,GAAiBttB,KAAK0F,UACtC1F,KAAKtJ,OAAOgU,IAAIgjB,GAA0B1tB,KAAK2F,mBAC/C3F,KAAKtJ,OAAOgU,IAAIqiB,GAAoB/sB,KAAKgG,aACzChG,KAAKtJ,OAAOiB,KAAK+S,IAAIkmC,GAAmB5wC,KAAKsG,YAC7CtG,KAAKtJ,OAAOiB,KAAK+S,IAAI,iBAAkB1K,KAAK6wC,aAC5C7wC,KAAKtJ,OAAOiB,KAAK+S,IAAI,gBAAiB1K,KAAK8wC,cAC3C9wC,KAAKtJ,OAAOgU,IAAI+hB,GAAiBzsB,KAAK8F,UACtC9F,KAAKtJ,OAAOgU,IAAI,cAAe1K,KAAK+wC,kBACpC/wC,KAAKtJ,OAAOgU,IAAI,iBAAkB1K,KAAK+wC,kBACvC/wC,KAAKtJ,OAAOiB,KAAK+S,IAAI,cAAe1K,KAAKkxC,gBACzClxC,KAAKtJ,OAAOiB,KAAK+S,IAAIsmC,GAAkBhxC,KAAK2F,mBAC5C3F,KAAKtJ,OAAOgU,IAAI,0BAA2B1K,KAAKmxC,yBAChDnxC,KAAKtJ,OAAOiB,KAAK+S,IAAI0mC,GAAwBpxC,KAAK2G,iBAClD3G,KAAKtJ,OAAOiB,KAAK+S,IAAI2mC,GAA0BrxC,KAAK4G,mBACpD5G,KAAKtJ,OAAOiB,KAAK+S,IAAI,WAAY1K,KAAKixC,cACtCjxC,KAAKtJ,OAAOiB,KAAK+S,IAAI,mBAAoB1K,KAAKsxC,gBAC9CtxC,KAAKtJ,OAAOiB,KAAK+S,IAAI,mBAAoB1K,KAAKuxC,kBASlDlB,EAAKxzC,UAAU+M,QAAU,WACrB5J,KAAKwK,uBAOT6lC,EAAKxzC,UAAU80C,oBAAsB,SAAU1d,GAC3Cj0B,KAAKtJ,OAAOiB,KAAKoE,WAAW41C,oBAAoB1d,IAEpDoc,EAAKxzC,UAAUk0C,iBAAmB,SAAUhuC,GACxC,IAAI6uC,EAAYr5C,YAAU,aAAcwK,GACpCuhB,EAAY/rB,YAAU,OAAQq5C,GAC9BC,EAAU7xC,KAAKtJ,OACfG,EAAUg7C,EAAQl7C,WAAWE,QACjC,IAAKJ,EAAao7C,IAAYh7C,aAAmBktB,sBAClB,SAA1B6tB,EAAU/xC,aAA+C,QAArB+xC,EAAUt2C,SACN,UAAxCu2C,EAAQh2C,aAAaQ,gBAAsE,UAAxCw1C,EAAQh2C,aAAaQ,gBAC1B,UAAxCw1C,EAAQh2C,aAAaQ,gBAC5B,GAAkB,gBAAdioB,EAA6B,CAC7B,IAAI5a,EAAWhS,oBAAkBk6C,EAAUjzC,OAAStG,OAAOC,KAAKs5C,EAAUjzC,KAAKpH,OAASyI,KAAK9E,cACzF02C,EAAUjzC,IAAI+K,SAAW,EACzBooC,EAAYp6C,oBAAkBgS,KAA2B,IAAdA,GACwC,EAAnFmoC,EAAQ11C,wBAAwBuN,GAAUmoC,EAAQt2C,0BAA0B,IAChFs2C,EAAQl6C,KAAK6c,MAAMM,UAAU,gBAAiBg9B,QAE7C,GAAkB,mBAAdxtB,EAEL,IAAK,IADDytB,EAAeF,EAAQl6C,KAAK6c,MAAMG,OAAOpd,OACpCF,EAAI,EAAGA,EAAI06C,EAAc16C,IACW,kBAArCw6C,EAAQl6C,KAAK6c,MAAMG,OAAOtd,GAAGQ,KAC7Bg6C,EAAQl6C,KAAK6c,MAAMG,OAAOxX,OAAO9F,GAK7C2I,KAAKtJ,OAAOsiB,yBAAyC,mBAAdsL,GACvCtkB,KAAKgyC,kBAAkBJ,GAEW,UAAlC5xC,KAAKtJ,OAAOmF,aAAaC,MAA8C,WAA1B81C,EAAU/xC,aACvDG,KAAKtJ,OAAOyb,OAAO,uBAG3Bk+B,EAAKxzC,UAAUm1C,kBAAoB,SAAUjvC,GACzC,GAA0B,SAArBA,EAAKlD,aAA0C,QAAhBkD,EAAKzH,QAA0C,WAArByH,EAAKlD,YAA0B,CACzF,GAAgD,QAA5CG,KAAKtJ,OAAOmF,aAAaQ,iBAAoD,IAAxB2D,KAAK9E,eACjC,SAArB6H,EAAKlD,aAA0C,QAAhBkD,EAAKzH,OAAmB,CAC3D,IAAI22C,EAAajyC,KAAKtJ,OAAOiB,KAAKugB,gBAC9Bg6B,EAAeD,EAAW90C,OAAO,EAAG,GAAG,GACvCg1C,EAAoBnyC,KAAK/E,YACzB0e,EAAc3Z,KAAKtJ,OAAOyF,wBACkB,UAA5C6D,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,iBAChF81C,GAAqB/4C,EAAoBugB,EAAYw4B,EAAoB,IAAI56C,QAEjF46C,EAAgE,UAA5CnyC,KAAKtJ,OAAOmF,aAAaQ,eAA6B81C,EAAoB,EAAIA,EAClGF,EAAW90C,OAAOg1C,EAAmB,EAAGD,GACxC,IAAIE,EAAYz4B,EAAYxc,OAAO,EAAG,GAAG,GACzCwc,EAAYxc,OAAOg1C,EAAmB,EAAGC,GACzCpyC,KAAKqyC,8BAA8BD,EAAWpyC,KAAK/E,aAEvD,IAAI87B,EAAc/2B,KAAKtJ,OAAOiB,KAAKu/B,iBAC/Bob,EAAoBtyC,KAAKtJ,OAAOiB,KAAK46C,uBACrCC,EAAUxyC,KAAKtJ,OAAO4wB,uBAAuBmrB,YAC5CD,IACDE,gBAAc1yC,KAAKtJ,OAAOiB,KAAMqI,KAAKtJ,OAAOiB,KAAKugB,gBAAiBlY,KAAKtJ,OAAOiB,KAAKkH,UAAW,GAC9FmB,KAAK2yC,YAAY3yC,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOmI,UAAWmB,KAAKtJ,OAAOyF,2BAEhFq2C,GAAWxyC,KAAKtJ,OAAOuI,mBAAqB,IAC7CyzC,gBAAc1yC,KAAKtJ,OAAOiB,KAAM26C,EAAmBvb,EAAa,GAChE/2B,KAAK2yC,YAAY3yC,KAAKtJ,OAAOiB,KAAKhB,WAAYogC,EAAa/2B,KAAKtJ,OAAOyF,4BAInFk0C,EAAKxzC,UAAUw1C,8BAAgC,SAAUD,EAAWQ,GAChE,IAAIxrC,EAAQpH,KAGRspC,EAAO3yB,KAAKC,KAAKg8B,EAAc5yC,KAAKtJ,OAAOiB,KAAKmZ,aAAay4B,UAC7D/vB,EAAO8vB,EAAO,EAAIA,EAAO,EACzBuJ,EAAYD,GAAgBp5B,EAAO,GAAKxZ,KAAKtJ,OAAOoa,aAAay4B,SACjEuJ,EAA0B9yC,KAAKtJ,OAAOiB,KAAKo7C,qBAAiC,wBAChFD,EAAwB,GAAG31C,OAAO,EAAG,GACrC,IAAIsB,EAAOq0C,EAAwBt5B,GAC9B9hB,oBAAkBsI,KAAK5E,gBACxBqD,EAAKhB,OAAO,SAAUC,EAAGxD,GACjBwD,EAAE1E,WAAaoO,EAAMhM,aAAapC,WAClC65C,EAAY34C,MAGhB8F,KAAK5E,aAAa/B,iBAAmB2G,KAAK5E,aAAa9B,aAAa/B,QACxB,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAChFw2C,GAAaz5C,EAAoB4G,KAAK5E,cAAc7D,SAGxDs7C,GAAa7yC,KAAKtJ,OAAOoa,aAAay4B,WAEtC9qC,EAAOq0C,EADPt5B,GAAQ,GAERq5B,EAAYA,EAAY7yC,KAAKtJ,OAAOoa,aAAay4B,UAAY,EAAIsJ,EAAY7yC,KAAKtJ,OAAOoa,aAAay4B,SAAW,GAErHsJ,EAAwD,UAA5C7yC,KAAKtJ,OAAOmF,aAAaQ,eAA6Bw2C,EAAY,EAAIA,EAClFp0C,EAAKtB,OAAO01C,EAAW,EAAGT,GAC1BpyC,KAAKtJ,OAAOiB,KAAKo7C,qBAA0C,yBAE/D1C,EAAKxzC,UAAU8I,kBAAoB,SAAU5C,GACzC,IAAI3B,EAAS2B,EAAK3B,OAClB,IAAI1J,oBAAkB0J,EAAO2J,QAAQ,kBAG/B/K,KAAKtJ,OAAOiB,KAAKkE,aAAyB,eAAKmE,KAAKtJ,OAAOiB,KAAKs2B,OAAtE,CAGA,IAAItuB,EAASK,KAAKtJ,OAAOiB,KAAKy2C,kBAAkBhtC,EAAO2J,QAAQ,gBAAgBoB,aAAa,kBAC5F,GAAsC,SAAlCnM,KAAKtJ,OAAOmF,aAAaC,OAAoBkE,KAAKgzC,WAAarzC,IAAWA,EAAOsE,cACjFjE,KAAKtJ,OAAOmF,aAAaoE,cAAgBN,EAAOM,eAAkBmB,EAAOgH,UAAUC,SAAS,sBAC5FjH,EAAOgH,UAAUC,SAAS,uBAA0BrI,KAAKtJ,OAAOmF,aAAayyB,oBAAqB,CAGlG,GAFAtuB,KAAKgzC,WAAY,EACjBhzC,KAAKtJ,OAAOiB,KAAKkmB,eAAgBkK,iBAAkBhlB,EAAK2G,WAAY,GAChE1J,KAAKtJ,OAAO0H,qBAAsB,CAClC,IAAI6Q,EAAKpE,eAAa9H,EAAK3B,OAAQ,SACnCpB,KAAKswC,iBAAmBrhC,EAAG9C,aAAa,iBACxC8C,EAAGjC,aAAa,gBAAiBiC,EAAGvF,SAAW,IAEnD1J,KAAKizC,mBAAmB,YAGhC5C,EAAKxzC,UAAUo2C,mBAAqB,SAAUn3C,GAC1CkE,KAAKtJ,OAAOiB,KAAKkmB,eAAgBhiB,cAAgBC,KAAMA,KAAU,GAC9CvD,YAAU,gBAAiByH,KAAKtJ,OAAOiB,KAAKoE,YAClDgG,MAAM/B,KAAKtJ,OAAOiB,KAAKoE,YACpCiE,KAAKtJ,OAAOiB,KAAKs2B,QAAS,GAE9BoiB,EAAKxzC,UAAUy0C,eAAiB,WACxBtxC,KAAKtJ,OAAO0H,sBAA0D,SAAlC4B,KAAKtJ,OAAOmF,aAAaC,OAC7DkE,KAAKgzC,WAAY,EACjBhzC,KAAKizC,mBAAmB,YAGhC5C,EAAKxzC,UAAUyJ,WAAa,SAAUvD,GAC9B/C,KAAKgzC,YACLhzC,KAAKkzC,SAAWnwC,EAAKzH,QAEL,OAAhByH,EAAKzH,QACL0E,KAAK2F,kBAAkB5C,GAER,UAAfA,EAAKzH,QACL0E,KAAKtJ,OAAOq5B,aAGpBsgB,EAAKxzC,UAAUgzC,eAAiB,SAAU51C,UAE/B+F,KAAKtJ,OAAe,yBAAEuD,UAEtB+F,KAAKtJ,OAAS,mBAAEuD,IAE3Bo2C,EAAKxzC,UAAUiJ,SAAW,SAAU/C,GAChC,IAAIqE,EAAQpH,KAERmzC,EAAOpwC,EAAY,QAoBvB,UAnBOA,EAAY,QACf/C,KAAKtJ,OAAO0H,uBAAyB1G,oBAAkBsI,KAAKswC,oBAC5DvtC,EAAKpE,IAAIqO,aAAa,gBAAiBhN,KAAKswC,kBAC5CtwC,KAAKswC,sBAAmBnzB,GAEN,UAAlBnd,KAAKkzC,UACLlzC,KAAKtJ,OAAOuS,QAAQwjB,GAAiB1pB,EAAM,SAAUqwC,GAC5CA,EAAapqC,QAA6C,SAAnC5B,EAAM1Q,OAAOmF,aAAaC,KAG7Cs3C,EAAapqC,QAA6C,SAAnC5B,EAAM1Q,OAAOmF,aAAaC,OACtDsL,EAAM4rC,WAAY,EAClB5rC,EAAM6rC,mBAAmB,WAJzB7rC,EAAMoqB,mBAAmB,QAMxB95B,oBAAkBy7C,IACnBA,EAAK5nB,QAAQ6nB,KAIrBpzC,KAAKwxC,oBAAsBxxC,KAAKwxC,kBAAkBppC,UAAUC,SAAS,qBACrErI,KAAKwxC,kBAAkBppC,UAAUC,SAAS,uBAAyBrI,KAAKwxC,kBAAkBppC,UAAUC,SAAS,kBAG7G,OAFAtF,EAAKiG,QAAS,OACdhJ,KAAKwxC,kBAAoB,MAGS,SAAlCxxC,KAAKtJ,OAAOmF,aAAaC,OACH,QAAlBkE,KAAKkzC,UAAwC,aAAlBlzC,KAAKkzC,SAChClzC,KAAKkzC,SAAW,KAEO,UAAlBlzC,KAAKkzC,WACVnwC,EAAKiG,QAAS,EACdhJ,KAAKkzC,SAAW,KAChBz9B,WAAS,kBAAkB,EAAOzV,KAAKtJ,SAEtCqM,EAAKorC,aAAaluC,eACnB8C,EAAKiG,QAAS,KAO1BqnC,EAAKxzC,UAAU20B,mBAAqB,SAAU6hB,GAC1C,IAAK37C,oBAAkBsI,KAAKtJ,OAAOiB,KAAK+5B,eAAgB,CACpD,IAAI4hB,EAAYtzC,KAAKtJ,OAAOwc,QAAQC,GAAK,gBACzCnT,KAAKtJ,OAAOiB,KAAK+5B,cAAcC,aAAa2hB,EAAY,MAAOA,EAAY,OAAQA,EAAY,UAAuB,SAAZD,GAC1GrzC,KAAKtJ,OAAOiB,KAAK+5B,cAAcC,aAAa2hB,EAAY,SAAUA,EAAY,UAAuB,SAAZD,KAGjGhD,EAAKxzC,UAAUmJ,YAAc,WACzB,GAAsC,SAAlChG,KAAKtJ,OAAOmF,aAAaC,KAAiB,CAC1C,IAAIy3C,EAAcl1C,WAAS,yBAA0B2B,KAAKtJ,OAAOiB,KAAKoE,YAClEy3C,EAAWxzC,KAAKtJ,OAAO87B,iBAAiB+gB,EAAY7pC,SAAU1J,KAAKtJ,OAAO0I,iBAC9EY,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAM80C,EAAY9nC,QAClBhM,KAAM+zC,EACN7zC,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,mBAEtDY,KAAKizC,mBAAmB,UACxBjzC,KAAKgzC,WAAY,EAEiB,UAAlChzC,KAAKtJ,OAAOmF,aAAaC,MACzBkE,KAAKtJ,OAAOyb,OAAO,yBAG3Bk+B,EAAKxzC,UAAUq0C,eAAiB,SAAUnuC,GAClC5L,EAAgB6I,KAAKtJ,SAA6C,SAAlCsJ,KAAKtJ,OAAOmF,aAAaC,MAAmC,SAAhBiH,EAAKzH,SACjF0E,KAAKkxB,WAAWnuB,EAAMA,EAAK2G,UAC3B1J,KAAKyzC,cAAc1wC,EAAMA,EAAKpE,IAAKoE,EAAK2G,YAGhD2mC,EAAKxzC,UAAU+I,SAAW,SAAU7C,GAChC,IAAIqE,EAAQpH,KACZ,GAAsC,SAAlCA,KAAKtJ,OAAOmF,aAAaC,MAAmBkE,KAAKtJ,OAAOwc,QAAQpI,cAAc,QAAS,CACvF/H,EAAKiG,QAAS,EAEdyM,WAAS,UAAU,EAAOzV,KAAKtJ,OAAOiB,MACtC8d,WAAS,kBAAkB,EAAMzV,KAAKtJ,QACtCqM,EAAK0I,QAAQ1I,EAAK5H,YAAc4H,EAAK9I,MACrC,IAAI4oB,EAEAA,EADAnrB,oBAAkBqL,EAAKtD,MACfO,KAAKtJ,OAAOiB,KAAKoE,WAAqB,WAAE23C,KAAKjxB,cAAcqd,WAG3D/8B,EAAKtD,KAAKqgC,WAEtB,IAAI6T,EACAC,EAAgB5zC,KAAKtJ,OAAO6E,0BAC5B7D,oBAAkBmrB,GAClB7iB,KAAKtJ,OAAOiB,KAAKwE,wBAAwBsB,OAAO,SAAUC,EAAGrG,GACrDqG,EAAEk2C,EAAc,MAAQ7wC,EAAK0I,QAAQmoC,EAAc,MACnDD,EAAat8C,KAMrBs8C,GAAwD,IAA1C3zC,KAAKtJ,OAAOmI,UAAUL,QAAQqkB,IAAkB7iB,KAAKtJ,OAAOuI,mBAAqB,EAC3Fe,KAAKtJ,OAAOiB,KAAKu/B,iBAAiB14B,QAAQqkB,GAAS7iB,KAAKtJ,OAAOmI,UAAUL,QAAQqkB,GAEzF,IAAIyU,KAMJ,GALAl7B,SAAOk7B,EAAKv0B,GACZu0B,EAAItuB,QAAS,EACbsuB,EAAIt0B,KAAO,OACX6f,EAAQ7iB,KAAKtJ,OAAOiB,KAAKkH,UAAUgkB,EAAMnZ,UACzC1J,KAAKtJ,OAAOuS,QAAQmkB,EAAoBkK,GACnCA,EAAItuB,OAiCLhJ,KAAKtJ,OAAOiB,KAAKs2B,QAAS,OA7B1B,GAHKpL,EAAMnZ,WAAa1J,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,GAAwB,QAAlByI,KAAKkzC,WAC5ElzC,KAAK6zC,cAAe,GAEnBp9C,EAAauJ,KAAKtJ,SACjBsJ,KAAKtJ,OAAOC,sBAAsBC,eAAeoJ,KAAKtJ,OAAOC,WAAWE,mBAAmBktB,qBAa5F,GAAIttB,EAAauJ,KAAKtJ,SACtBsJ,KAAKtJ,OAAOC,sBAAsBC,eAAeoJ,KAAKtJ,OAAOC,WAAWE,mBAAmBktB,oBAAoB,CAChH,IAAIvP,EAAQxU,KAAKtJ,OAAOiB,KAAK6c,MAEtBxU,KAAKtJ,OAAOiB,KAAKhB,WAAWm9C,OAAOF,EAAc,GAAI7wC,EAAK0I,QAAS+I,EAAMu/B,UAAWv/B,EAAOzR,EAAKixC,eAClG5+B,KAAK,SAAU1X,GACXhG,oBAAkBgG,KACnBqF,EAAK0I,QAAQ1I,EAAK5H,YAAcuC,EAAEqF,EAAK5H,aAE3CiM,EAAM8pB,WAAWnuB,EAAM4wC,GACvBvsC,EAAMqsC,cAAc1wC,EAAM8f,EAAO8wB,WAtBrC,GAAIx8C,EAAgB6I,KAAKtJ,QAAS,CAC9B,IACIu9C,GAAap0C,YAAa,OAAQpB,KAAMsE,EAAK0I,QAASnQ,OAAQ,OAAQqD,IAAKkkB,EAC3EnZ,SAAUiqC,EAAYloC,QAAS1I,EAAK0I,QAAStQ,WAAY4H,EAAK5H,WAC9D+4C,kBAAmB,KAAMC,oBAAqB,MAClDn0C,KAAKtJ,OAAOiB,KAAKggB,gBAA4B,aAAEs8B,EAAUj0C,KAAKtJ,OAAOiB,KAAK6c,YAG1ExU,KAAKkxB,WAAWnuB,EAAM4wC,GACtB3zC,KAAKyzC,cAAc1wC,EAAM8f,EAAO8wB,KAsBpDtD,EAAKxzC,UAAU42C,cAAgB,SAAU1wC,EAAMpE,EAAK+K,GAChD,IAAI0qC,EACAp0C,KAAKtJ,OAAOiB,KAAK08C,iBACjBr0C,KAAKtJ,OAAOiB,KAAK08C,gBAAgB5mB,QAAQ1qB,EAAK0I,SAElDzL,KAAKtJ,OAAOiB,KAAKoE,WAAWu4C,gBAAgBt0C,KAAKtJ,OAAOiB,KAAKsjB,iBAAiBlY,EAAK5H,cACnF6E,KAAKtJ,OAAOiB,KAAKoE,WAAWw4C,QAAQ3qC,UACd,QAAlB5J,KAAKkzC,UAAwC,aAAlBlzC,KAAKkzC,WAChClzC,KAAKizC,mBAAmB,UACxBjzC,KAAKgzC,WAAY,GAErBhzC,KAAKwxB,mBAAmB,QACpBxxB,KAAKtJ,OAAOuI,mBAAqB,IACjCm1C,EAAOp0C,KAAKtJ,OAAOiB,KAAKu/B,iBAAiBxtB,GACzC2D,eAAa+mC,IAAQ,cAAe,eACpC/mC,cAAY+mC,EAAK7rC,iBAAiB,eAAgB,oBAAqB,iBAE3E8E,eAAa1O,IAAO,cAAe,eACnC0O,cAAY1O,EAAI4J,iBAAiB,eAAgB,oBAAqB,iBAC/B,IAAnCvI,KAAKtJ,OAAwB,iBAC7BsJ,KAAKtJ,OAAOiB,KAAKu3C,YAAYsF,eAEjC35C,GAAaZ,MAAO8I,EAAK0I,QAASnQ,OAAQ,QAAU0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBgF,KAAK/E,YAAa+E,KAAK9E,cAAe6H,EAAK5H,YAC7HwD,EAAI+K,WAAa1J,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,GAAwB,UAAlByI,KAAKkzC,WAC1ElzC,KAAKkzC,SAAW,MAEpB,IAAIuB,GACAzxC,KAAM,OAAQrD,OAAQK,KAAKtJ,OAAOukB,iBAAiBlY,EAAK5H,YAAasD,KAAMsE,EAAK0I,QAChFipC,aAAc3xC,EAAKixC,cAAer1C,IAAKA,EAAKyC,OAAQ2B,EAAKtD,MAEzDO,KAAKtJ,OAAO2hB,WAAWla,IAAI,SAAUovB,GAAM,OAA8B,GAAvBA,EAAGC,mBAA6Bj2B,QAClFyI,KAAKtJ,OAAOiB,KAAK81B,UAErBztB,KAAKtJ,OAAOuS,QAAQmP,EAAuBq8B,IAE/CpE,EAAKxzC,UAAUg0C,YAAc,YACpB7wC,KAAKtJ,OAAOiB,KAAKs2B,QAAUjuB,KAAKgzC,WAA+B,QAAlBhzC,KAAKkzC,UAAwD,SAAlClzC,KAAKtJ,OAAOmF,aAAaC,OAC7FkE,KAAKtJ,OAAOmF,aAAa4yB,iBAM1BzuB,KAAKwxB,mBAAmB,SALxBxxB,KAAKizC,mBAAmB,UACxBjzC,KAAKgzC,WAAY,EACjBhzC,KAAKkzC,SAAW,QAO5B7C,EAAKxzC,UAAUq0B,WAAa,SAAUnuB,EAAM2G,GACxC1J,KAAKtJ,OAAOiB,KAAKoE,WAAWm1B,WAAWxnB,EAAU3G,EAAK5H,WAAY4H,EAAK0I,QAAQ1I,EAAK5H,aACpF6E,KAAKtJ,OAAOiB,KAAKugB,gBAAgBxO,GAAUjL,KAAOsE,EAAK0I,SAE3D4kC,EAAKxzC,UAAU2I,WAAa,SAAU1K,EAASK,GAC3CN,EAAWC,EAASkF,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBgF,KAAK/E,YAAa+E,KAAK9E,cAAeC,EAAY6E,KAAK5E,cAC9G4E,KAAKtJ,OAAO6G,cAGZ,IAAK,IAFDkB,EAAOuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC9CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC1DU,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAAK,CAClCoH,EAAKpH,GAAG6C,MAAQ7C,EAChB,IAAIQ,EAAMmI,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACjDT,EAAQb,MAAMpC,KAAS4G,EAAKpH,GAAGQ,IACR,QAAnBiD,EAAQQ,SACRmD,EAAKpH,GAAG8C,MAAQ6F,KAAK0wC,mBAAmBv2C,MACxCsE,EAAKpH,GAAG+C,SAAW4F,KAAK0wC,mBAAmBt2C,SAC3CqE,EAAKpH,GAAG2B,SAAWgH,KAAK0wC,mBAAmB13C,SACtCtB,oBAAkBsI,KAAK0wC,mBAAmB53C,cAC3C2F,EAAKpH,GAAGyB,WAAakH,KAAK0wC,mBAAmB53C,WAC7C2F,EAAKpH,GAAGiH,eAAiB0B,KAAK0wC,mBAAmBpyC,gBAErDG,EAAKpH,GAAGiC,aAAe0G,KAAK0wC,mBAAmBp3C,cAGvDmc,WAAS,sBAAwBhX,EAAKpH,GAAG2B,SAAW,SAAU3B,EAAG2I,KAAKtJ,QACjE+H,EAAKpH,GAAG8C,OACT6F,KAAKtJ,OAAO6G,WAAW/E,KAAKiG,EAAKpH,IAGlB,QAAnByD,EAAQQ,QAAmD,MAA/B0E,KAAKywC,yBACjCzwC,KAAKtJ,OAAOmnB,eAAgBhiB,cAAgBQ,eAAgB2D,KAAKywC,0BAA4B,GAC7FzwC,KAAKywC,uBAAyB,OAGtCJ,EAAKxzC,UAAU81C,YAAc,SAAUl0C,EAAMqJ,EAAM5P,GAC/C,IAAK,IAAI6B,EAAI,EAAGA,EAAIiG,KAAKtJ,OAAOk9B,cAAcr8B,OAAQwC,IAAK,CACvD,IAAI46C,EAAQz8C,EAAQ6B,GAChBG,EAAQmE,WAAS,sBAAwBs2C,EAAM37C,SAAW,SAAUgH,KAAKtJ,QAE7E,GADAi+C,EAAMz6C,MAAQA,GACTxC,oBAAkBi9C,EAAM77C,YAAa,CACtC,IAAIyqC,EAAcllC,WAAS,sBAAwBs2C,EAAM77C,WAAWE,SAAW,SAAUgH,KAAKtJ,QAC9Fi+C,EAAM77C,WAAWoB,MAAQqpC,GAGjC,IAAIl1B,GAAS,EACTumC,EAAe50C,KAAKtJ,OAAO0I,gBAC/B,GAAIY,KAAKtJ,OAAOuI,mBAAqB,EAEjC,IAAK,IADDS,EAAQoI,EAAK,GAAGS,iBAAiB,cAC5BssC,EAAI,EAAGA,EAAIn1C,EAAMnI,OAAQs9C,IAC9B,GAAIn1C,EAAMm1C,GAAGzsC,UAAUC,SAAS,yBAA0B,CACtDusC,EAAeC,EACf,MAIZ,IAAK,IAAIl4C,EAAI,EAAGA,EAAIqD,KAAKtJ,OAAOmI,UAAUtH,OAAQoF,IAAK,CAC9CmL,EAAKnL,GAAGyL,UAAUC,SAAS,gBAC5BgG,IAEJ,IAAIymC,EAAQ58C,EAAQmW,GAEhBlU,GADAD,EAAQ46C,EAAM56C,MACN46C,EAAM36C,OACdwE,EAAMmJ,EAAKnL,GACVjF,oBAAkBo9C,EAAMh8C,cACzBoB,EAAQmE,WAAS,sBAAwBy2C,EAAMh8C,WAAWE,SAAW,SAAUgH,KAAKtJ,SAExF,IAAIq+C,EAAWp2C,EAAIe,MAAMk1C,GACzB,IAAKl9C,oBAAkBq9C,GAAW,CAC9B,IAASF,EAAI,EAAGA,EAAIE,EAAS3sC,UAAU7Q,OAAQs9C,IAAK,CAChD,IAAI56C,EAAQ86C,EAAS3sC,UAAUysC,GAG3BvhC,EAASrZ,EAAMmP,MAFN,mBAGTsR,EAAUzgB,EAAMmP,MAFN,yBAGA,MAAVkK,GACAjG,eAAa0nC,GAAW96C,GAEb,MAAXygB,GACArN,eAAa0nC,GAAW96C,GAG3B6N,EAAKnL,GAAGyL,UAAUC,SAAS,eAI5B+H,YAAU2kC,GAAW,uBAAyB76C,EAAQ,QAAUC,GAHhEiW,YAAU2kC,GAAW,iBAAmB76C,EAAQ,QAAUC,MAQ1Ek2C,EAAKxzC,UAAU6I,SAAW,WACtB,IAAIsrB,EACA92B,EAAQ8F,KAAK/E,YACb/C,EAAU8H,KAAKtJ,OAAOiB,KAAKwE,wBACO,UAAlC6D,KAAKtJ,OAAOmF,aAAaC,OACzB5B,EAAQ8F,KAAK2wC,gBAAgB7C,iBAC7B9tC,KAAK9E,cAAgB8E,KAAK2wC,gBAAgB5C,oBACtC/tC,KAAKtJ,OAAOsF,kBAAkBgE,KAAKwT,cAAcjc,OAAS,GACvDyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKue,gBAAgBhnB,UACtDW,EAAU8H,KAAK2wC,gBAAgB9C,oBAGvC,IAAI/lC,EAAO9H,KAAKtJ,OAAOiB,KAAKi8B,cACxBohB,EAAiBltC,EAAKvQ,QAAUuQ,EAAK,GAAGqE,aAAa,iBAAmB,EACxE8oC,EAAgBntC,EAAKvQ,QAAUuQ,EAAKA,EAAKvQ,OAAS,GAAG4U,aAAa,iBAAmB,EACrF+oC,EAAcl1C,KAAK9E,eAAiB85C,GAAkBh1C,KAAK9E,eAAiB+5C,EAC5EE,EAAmBn1C,KAAKtJ,OAAO0H,sBAAwB4B,KAAK/E,aAAe,GAA+B,OAA1B+E,KAAKswC,iBACzF,GAAsC,WAAlCtwC,KAAKtJ,OAAOmF,aAAaC,KAAmB,CAC5C,GAAgD,UAA5CkE,KAAKtJ,OAAOmF,aAAaQ,eACzB20B,EAAW,cAEV,IAAiD,UAA5ChxB,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAClF2D,KAAK9E,eAAiB,GAAKi6C,IAAqBD,IACpDlkB,EAAW,SACNt5B,oBAAkBQ,EAAQgC,KAAWhC,EAAQgC,GAAOf,UACrD,GAAsC,UAAlC6G,KAAKtJ,OAAOmF,aAAaC,OAAqBkE,KAAKtJ,OAAOsF,kBAAkBgE,KAAKwT,cAAcjc,OAAS,GACrGyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKue,gBAAgBhnB,SAEtD,GADA2C,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OACG,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAErDnC,GADsB8F,KAAK2wC,gBAAgB3C,2BAK/C9zC,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OAIzD,IAAKyI,KAAK9E,eAAiB,GAAKi6C,IAAqBD,IAC7Ch7C,GAAsD,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,gBACY,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBAA8B,CAC1DnC,GAAS4N,EAAKvQ,OAAS,IACvB2C,EAAQ4N,EAAKvQ,OAAS,GAE1B,IACI26C,EAAelyC,KAAKtJ,OAAOiB,KAAKuhB,cAAe,KAAE,GACjDk8B,EAAkBpY,SAASqY,cAC/BvtC,EAAK5N,EAAQ,GAAG82B,GAAUlpB,EAAK,IAC/B2N,WAAS,aAAcvb,EAAQ,EAAG8F,KAAK2wC,iBACvC,IAAIlC,EAA6D,UAA5CzuC,KAAKtJ,OAAOmF,aAAaQ,eAA6BnC,EAAQA,EAAQ,EAK3F,GAJsC,UAAlC8F,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAKtJ,OAAOiB,KAAKuhB,cAAe,KAAE/b,OAAO,EAAG,GAC5C6C,KAAKtJ,OAAOiB,KAAKuhB,cAAe,KAAE/b,OAAOsxC,EAAgB,EAAGyD,IAE5DlyC,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,oBAAsBe,KAAKtJ,OAAO+a,cAAe,CACvF,IAAIslB,EAAc/2B,KAAKtJ,OAAOyY,qBAE1BmmC,EAAqBt1C,KAAKtJ,OAAOiB,KAAKugB,gBAAgB,GAC1D6e,EAAY78B,EAAQ,GAAG82B,GAAU+F,EAAY,IACP,UAAlC/2B,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAKtJ,OAAOiB,KAAKuhB,cAAmB,WAAE/b,OAAO,EAAG,GAChD6C,KAAKtJ,OAAOiB,KAAKuhB,cAAmB,WAAE/b,OAAOsxC,EAAgB,EAAG6G,IAEpE7/B,WAAS,aAAcvb,EAAQ,EAAG8F,KAAK2wC,iBAE3C,GAAsC,QAAlC3wC,KAAKtJ,OAAOmF,aAAaC,MAAoD,SAAlCkE,KAAKtJ,OAAOmF,aAAaC,KAAiB,CAErF,IAAK,IADDy5C,EAASv1C,KAAKtJ,OAAOiB,KAAKsf,kBAAkB1O,iBAAiB,gBACxDlR,EAAI,EAAGA,EAAIk+C,EAAOh+C,OAAQF,IAC/Bk+C,EAAOl+C,GAAGquB,SAEdjQ,WAAS,gBAAkBzV,KAAKtJ,OAAOiB,KAAKoE,WAAWw4C,SAEvDY,IACAn1C,KAAKswC,iBAAmB,MAE5B8E,EAAgBI,WAsB5BnF,EAAKxzC,UAAU4I,UAAY,SAAU1C,GACjC,GAAyB,YAArBA,EAAKlD,aAA6BG,KAAKgzC,UACvCjwC,EAAKiG,QAAS,OAGlB,GAAsC,SAAlChJ,KAAKtJ,OAAOmF,aAAaC,MAAwC,cAArBiH,EAAKlD,YAArD,CAIA,GAAIG,KAAKwxC,oBAAsBxxC,KAAKwxC,kBAAkBppC,UAAUC,SAAS,qBACrErI,KAAKwxC,kBAAkBppC,UAAUC,SAAS,uBAAyBrI,KAAKwxC,kBAAkBppC,UAAUC,SAAS,YAG7G,OAFAtF,EAAKiG,QAAS,OACdhJ,KAAKwxC,kBAAoB,MAG7B,GAAyB,WAArBzuC,EAAKlD,YAEL,IAAK,IADDpB,EAAOsE,EAAKtE,KACPpH,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAAK,CAClC2I,KAAK6vC,eAAepxC,EAAKpH,GAAG2B,UAE5B,IAAK,IADDs2C,EAASl2C,EAAoBqF,EAAKpH,IAC7BiK,EAAI,EAAGA,EAAIguC,EAAO/3C,OAAQ+J,IAC/BtB,KAAK6vC,eAAeP,EAAOhuC,GAAGtI,UAElC+J,EAAKtE,KAAOA,EAAKlF,OAAO+1C,GAGhC,GAAyB,QAArBvsC,EAAKlD,aAA0BG,KAAKuwC,qBAAuBvwC,KAAKtJ,OAAO0H,sBAAwB4B,KAAKtJ,OAAOsiB,yBAA2B,CAKtI,KAJ6C,IAAvChZ,KAAKtJ,OAAOiB,KAAKowB,kBAA2B/nB,KAAKuwC,oBAChDxtC,EAAK7I,QAAU8F,KAAKtJ,OAAOiB,KAAKowB,mBAAmC,IAAfhlB,EAAK7I,QAC5D8F,KAAK9E,cAAgB8E,KAAKtJ,OAAOiB,KAAKowB,kBAEtC/nB,KAAKtJ,OAAO0H,qBAAsB,CAClC,IAAIq3C,EAAW,yBAA2Bz1C,KAAK9E,cAAgB,KAC3DyD,OAAM,EACNqB,KAAK9E,eAAiB,GAAiD,QAA5C8E,KAAKtJ,OAAOmF,aAAaQ,gBACR,WAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBACzB2D,KAAKswC,iBAAmBtwC,KAAK9E,cAAc0M,WAC3CjJ,EAAMqB,KAAKtJ,OAAO+8B,aAAa3oB,cAAc2qC,GAC7Cz1C,KAAK/E,YAAc0D,EAAMA,EAAI+K,SAAW,GAGpC1J,KAAKswC,kBAA8C,OAA1BtwC,KAAKswC,kBAC9BmF,EAAW,yBAA2Bz1C,KAAKswC,iBAAmB,KAC9D3xC,EAAMqB,KAAKtJ,OAAO+8B,aAAa3oB,cAAc2qC,GAC7Cz1C,KAAK/E,YAAc0D,EAAMA,EAAI+K,SAAW,GAGxC1J,KAAK/E,YAAc,OAKvB+E,KAAKuwC,qBAAuBvwC,KAAKtJ,OAAO0H,sBAAwB4B,KAAKtJ,OAAOsiB,yBAC5EhZ,KAAK/E,YAAc8H,EAAK7I,MAGxB8F,KAAK/E,YAAc+E,KAAKtJ,OAAOiB,KAAKowB,kBAAoB,EAAI/nB,KAAKtJ,OAAOiB,KAAKowB,iBAAmB,EAGpG/nB,KAAKuwC,qBAAuBvwC,KAAKtJ,OAAO0H,sBAAwB4B,KAAKtJ,OAAOsiB,yBAC5EhZ,KAAK5E,aAAe4E,KAAKtJ,OAAO8G,SAASuF,EAAK7I,OAG9C8F,KAAK5E,aAAe4E,KAAKtJ,OAAO+R,qBAAqB,GAGzDzI,KAAKuwC,oBAAqC,IAAfxtC,EAAK7I,QAChC8F,KAAK5E,aAAe4E,KAAKtJ,OAAO8G,SAASuF,EAAK7I,QAEF,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,gBAA8B3E,oBAAkBsI,KAAK5E,gBAC1E1D,oBAAkBsI,KAAKtJ,OAAO+R,qBAAqB,MACvDzI,KAAK5E,aAAe4E,KAAKtJ,OAAO+R,qBAAqB,IAEzDzI,KAAKuwC,oBAAqB,EAC1BxtC,EAAO/C,KAAK01C,aAAa3yC,QApErBA,EAAKiG,QAAS,GA8EtBqnC,EAAKxzC,UAAUs0C,wBAA0B,WACD,OAAhCnxC,KAAKywC,yBACLzwC,KAAKywC,uBAAyBzwC,KAAKtJ,OAAOmF,aAAaQ,iBAG/Dg0C,EAAKxzC,UAAU64C,aAAe,SAAU3yC,GACpC,IAAI9I,EAAQ8I,EAAKtE,KACjB,GAAoB,QAAhBsE,EAAKzH,OAAkB,CACvB,IAAIzD,EAAMmI,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACjDy1B,EAAW,KACf/2B,EAAMG,SAAW1C,oBAAkBuC,EAAMG,UAAYgC,YAAW2G,EAAKtE,MAAQxE,EAAMG,SACnF,IAAIuf,EAAc3Z,KAAKtJ,OAAOiB,KAAKwE,wBAC/BjC,EAAQ8F,KAAK/E,YACjBhB,EAAMjB,SAAW0d,SAAO1W,KAAKtJ,OAAOwc,QAAQC,GAAK,UACjDsC,WAAS,sBAAwBxb,EAAMjB,SAAUiB,EAAO+F,KAAKtJ,QAC7D,IAAIyD,EAAQ,EACR+C,OAAY,EACZoB,OAAiB,EACjBxF,OAAa,EACbmE,OAAkB,EAClBk4C,EAAmBn1C,KAAKtJ,OAAO0H,sBAAwB4B,KAAK/E,aAAe,GAA+B,OAA1B+E,KAAKswC,iBACrFxoC,EAAO9H,KAAKtJ,OAAOmI,UACnBm2C,EAAiBltC,EAAKvQ,QAAUuQ,EAAK,GAAGqE,aAAa,iBAAmB,EACxE8oC,EAAgBntC,EAAKvQ,QAAUuQ,EAAKA,EAAKvQ,OAAS,GAAG4U,aAAa,iBAAmB,EACrF+oC,EAAcl1C,KAAK9E,eAAiB85C,GAAkBh1C,KAAK9E,eAAiB+5C,EAShF,GARIt7B,EAAYpiB,SACZ2F,EAAYyc,EAAY3Z,KAAK/E,aAAa+E,KAAKtJ,OAAOwG,WACtDD,EAAkB0c,EAAY3Z,KAAK/E,aAAa+E,KAAKtJ,OAAOuG,iBACxD0c,EAAY3Z,KAAK/E,aAAanC,aAC9BwF,EAAiBqb,EAAY3Z,KAAK/E,aAAanC,WAAWE,UAE9DF,EAAa6gB,EAAY3Z,KAAK/E,aAAanC,YAEC,QAA5CkH,KAAKtJ,OAAOmF,aAAaQ,gBAA4Bsd,EAAYpiB,OAAQ,CAEzE,GADA4C,EAAQwf,EAAY3Z,KAAK/E,aAAad,MACU,UAA5C6F,KAAKtJ,OAAOmF,aAAaQ,eACzB20B,EAAW,SACX92B,EAAQyf,EAAY3Z,KAAK/E,aAAaf,WAErC,GAAgD,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAC1D20B,EAAW,QACX,IAAI+d,EAAmB31C,EAAoBugB,EAAY3Z,KAAK/E,cAAc1D,OACtEg3C,EAAmB50B,EAAY3Z,KAAK/E,aAAaf,MACrDA,EAAS60C,EAAmB,EAAMR,EAAmBQ,SAEpD,GAAgD,UAA5C/uC,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAC1D20B,EAAW,SACNhxB,KAAK9E,eAAiB,GAAKi6C,IAAqBD,IACjDj7C,EAAMnB,WAAasD,YAAWud,EAAY3Z,KAAK/E,cAC/ChB,EAAMqE,eAAiBrE,EAAMnB,WAAWE,gBACjCiB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAWkH,KAAKtJ,OAAO0G,eAExC,IAAIu4C,EAAoBv8C,EAAoBugB,EAAY3Z,KAAK/E,cAAc1D,OACvEq+C,EAAoBj8B,EAAY3Z,KAAK/E,aAAaf,MAClD8F,KAAK9E,eAAiB,IACtBjB,EAAME,MAAQA,EAAQ,GAE1BD,EAASy7C,EAAoB,EAAMC,EAAoBD,IACnD31C,KAAKhF,kBACLf,EAAMG,SAAS4F,KAAKtJ,OAAOuG,iBAAmBhD,EAAM+F,KAAKtJ,OAAOuG,iBAAmBC,EAC9ExF,oBAAkBuC,EAAMnB,aACzBuE,EAAgBxF,EAAKoC,EAAMnB,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBf,IAsB7F,GAlBgD,UAA5C+F,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAC3E2D,KAAK9E,eAAiB,GAAKi6C,IAAqBh7C,GAAS+6C,IAC1Dj7C,EAAMqE,eAAiBA,EACvBrE,EAAMnB,WAAasD,YAAWtD,UACvBmB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAWkH,KAAKtJ,OAAO0G,eAExCnD,EAAME,MAAQA,EACV6F,KAAKhF,kBACLf,EAAMG,SAAS4F,KAAKtJ,OAAOuG,iBAAmBhD,EAAM+F,KAAKtJ,OAAOuG,iBAAmBA,EAC9EvF,oBAAkBuC,EAAMnB,aACzBuE,EAAgBxF,EAAKoC,EAAMnB,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBf,KAI7E,MAAZ+2B,IAAqBhxB,KAAK9E,eAAiB,GAAKi6C,IAAqBD,IACrEnyC,EAAK7I,MAAqB,WAAb82B,EAAwB92B,EAAQA,EAAQ,GAET,WAA5C8F,KAAKtJ,OAAOmF,aAAaQ,eAA6B,CACtD,IAAI1F,EAAcqJ,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cACrDoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WACnEoM,EAAK7I,MAAQvD,EAAWY,QAG5BG,oBAAkBuC,EAAME,SACxBF,EAAME,MAAQA,GAElBF,EAAMZ,iBAAkB,EACxBY,EAAMX,gBACNW,EAAMC,MAAQ,EAOlB,GALoB,QAAhB6I,EAAKzH,SACL0E,KAAK0wC,oBAAuBv2C,MAAOF,EAAME,MAAOrB,WAAYmB,EAAMnB,WAAYE,SAAUiB,EAAMjB,SAC1FoB,SAAUH,EAAMG,SAAUkE,eAAgB5G,oBAAkBuC,EAAMnB,iBAAcqkB,EAAYljB,EAAMnB,WAAWE,SAC7GM,aAAcW,EAAMX,eAEH,WAArByJ,EAAKlD,YAEL,IAAK,IADDg2C,EAAgB9yC,EAAKtE,KAChBpH,EAAI,EAAGA,EAAIw+C,EAAct+C,OAAQF,IACtC,GAAIw+C,EAAcx+C,GAAGyB,WAAY,CACzBA,EAAaC,EAAciH,KAAKtJ,OAAQm/C,EAAcx+C,GAAGyB,WAAWE,UACxE,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAI+pC,EAAatqC,EAAWQ,aAAakF,QAAQq3C,EAAcx+C,IAC/DyB,EAAWQ,aAAa6D,OAAOimC,EAAY,IAK3D,OAAOrgC,GAOXstC,EAAKxzC,UAAUk0B,UAAY,SAAUtyB,EAAMvE,EAAO82B,GAI9C,GAHIhxB,KAAKtJ,OAAOmF,aAAaQ,iBAAmB2D,KAAKywC,wBAA0D,OAAhCzwC,KAAKywC,yBAChFzwC,KAAKywC,uBAAyBzwC,KAAKtJ,OAAOmF,aAAaQ,gBAEtD2D,KAAKhF,iBAAoBtD,oBAAkB+G,KAASpG,OAAOyE,eAAeC,KAAK0B,EAAMuB,KAAKtJ,OAAO0G,cAiB9FqB,GACIvE,GAAS,GACT8F,KAAK9E,cAAgBhB,EACrB8F,KAAK/E,YAAcf,IAGnB8F,KAAK9E,cAAgB8E,KAAKtJ,OAAOqxB,iBACjC/nB,KAAK/E,YAAc+E,KAAKtJ,OAAOqxB,kBAE/BiJ,GACAhxB,KAAKtJ,OAAOmnB,eAAgBhiB,cAAgBQ,eAAgB20B,KAAc,GAE9EhxB,KAAKtJ,OAAOiB,KAAKoE,WAAWg1B,UAAUtyB,EAAMvE,IAG5C8F,KAAKtJ,OAAOiB,KAAKoE,WAAWg1B,UAAUtyB,EAAMvE,OAhCiE,CACjH,IAAI+1C,KACA6F,EAAmB91C,KAAKtJ,OAAOmF,aAAaC,KAC5Ci6C,EAAuB/1C,KAAKtJ,OAAOiB,KAAKkE,aAAaC,KACzDm0C,EAAWz3C,KAAKiG,GAChBuB,KAAKtJ,OAAOmnB,eAAgBhiB,cAAgBC,KAAM,WAAa,GAC/DkE,KAAKtJ,OAAOiB,KAAKkmB,eAAgBhiB,cAAgBC,KAAM,WAAa,GAC/DpE,oBAAkBs5B,IACnBhxB,KAAKtJ,OAAOmnB,eAAgBhiB,cAAgBQ,eAAgB20B,KAAc,GAE9E,IAAI+e,GAAmBv8B,aAAcy8B,EAAY3xB,kBAAoBC,mBACrEve,KAAKtJ,OAAOyb,OAAO8J,IAAoB8zB,eAAgBA,EAAgB71C,MAAOA,IAC9E8F,KAAKtJ,OAAOmnB,eAAgBhiB,cAAgBC,KAAMg6C,KAAsB,GACxE91C,KAAKtJ,OAAOiB,KAAKkmB,eAAgBhiB,cAAgBC,KAAMi6C,KAA0B,GACjF/1C,KAAKtJ,OAAO+2B,YA2BpB4iB,EAAKxzC,UAAUm5C,iBAAmB,WAC9B,OAAOh2C,KAAKtJ,OAAOiB,KAAKoE,WAAWi6C,oBAMvC3F,EAAKxzC,UAAUo5C,YAAc,WACzBj2C,KAAKtJ,OAAOiB,KAAKoE,WAAWk6C,eAEhC5F,EAAKxzC,UAAUi0C,aAAe,SAAUpzC,GAC/BhG,oBAAkBgG,EAAEqF,KAAKlD,cACY,WAAlCnC,EAAEqF,KAAKlD,YAAY+H,YAA6D,SAAlClK,EAAEqF,KAAKlD,YAAY+H,aAC3B,UAAlC5H,KAAKtJ,OAAOmF,aAAaC,MAAsD,cAAlC4B,EAAEqF,KAAKlD,YAAY+H,cACxE5H,KAAK2yC,YAAY3yC,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOmI,UAAWmB,KAAKtJ,OAAOyF,0BAC7E6D,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,oBAAsBe,KAAKtJ,OAAO+a,gBACpEzR,KAAKtJ,OAAOiB,KAAKhB,WAAWY,SAAWyI,KAAKtJ,OAAOyY,qBAAqB5X,QACxEyI,KAAK2yC,YAAY3yC,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOyY,qBAAsBnP,KAAKtJ,OAAOyF,2BAU5Gk0C,EAAKxzC,UAAU00B,SAAW,SAAU7nB,EAAU6I,GACJ,SAAlCvS,KAAKtJ,OAAOmF,aAAaC,MAAqD,UAAlCkE,KAAKtJ,OAAOmF,aAAaC,OAC/B,UAAlCkE,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAKgzC,WAAY,EACjBhzC,KAAKizC,mBAAmB,UAE5BjzC,KAAKtJ,OAAOiB,KAAKoE,WAAWw1B,SAAS7nB,EAAU6I,KAGhD89B,KCr6BP6F,GAA+B,WAC/B,SAASA,EAAcx/C,GACnB+L,OAAKC,OAAOyzC,iBACZn2C,KAAKtJ,OAASA,EAoBlB,OAZAw/C,EAAcr5C,UAAU+F,cAAgB,WACpC,MAAO,iBAQXszC,EAAcr5C,UAAU+M,QAAU,aAG3BssC,KCpBPE,GAA2B,WAC3B,SAASA,EAAU1/C,GACf+L,OAAKC,OAAO2zC,aACZr2C,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAyGT,OA9FAksC,EAAUv5C,UAAU+F,cAAgB,WAChC,MAAO,aAEXwzC,EAAUv5C,UAAUqN,iBAAmB,WACnClK,KAAKtJ,OAAOyT,GAAG,eAAgBnK,KAAKs2C,aAAct2C,MAClDA,KAAKtJ,OAAOyT,GAAG,kBAAmBnK,KAAKu2C,gBAAiBv2C,MACxDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,yBAA0BnK,KAAKw2C,oBAAqBx2C,MACxEA,KAAKtJ,OAAOyT,GAAG,iBAAkBnK,KAAKy2C,eAAgBz2C,MACtDA,KAAKtJ,OAAOyT,GAAG,oBAAqBnK,KAAK02C,kBAAmB12C,MAC5DA,KAAKtJ,OAAOyT,GAAG,iBAAkBnK,KAAK22C,eAAgB32C,OAM1Do2C,EAAUv5C,UAAU2N,oBAAsB,WAClCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,eAAgB1K,KAAKs2C,cACrCt2C,KAAKtJ,OAAOgU,IAAI,kBAAmB1K,KAAKu2C,iBACxCv2C,KAAKtJ,OAAOgU,IAAI,iBAAkB1K,KAAKy2C,gBACvCz2C,KAAKtJ,OAAOgU,IAAI,oBAAqB1K,KAAK02C,mBAC1C12C,KAAKtJ,OAAOgU,IAAI,iBAAkB1K,KAAK22C,gBACvC32C,KAAKtJ,OAAOiB,KAAK+S,IAAI,yBAA0B1K,KAAKw2C,uBAExDJ,EAAUv5C,UAAU25C,oBAAsB,SAAUzzC,GAEhDA,EAAY,SAAI,GAEpBqzC,EAAUv5C,UAAUy5C,aAAe,WAI/B,IAAK,IAHDM,EAAY52C,KAAKtJ,OAAOmI,UAAUpB,OAAO,SAAUC,GACnD,OAAQA,EAAE0K,UAAUC,SAAS,iBAExBhR,EAAI,EAAGA,EAAIu/C,EAAUr/C,OAAQF,IAAK,CACvC,IAAIw/C,EAAWD,EAAUv/C,GAAG+f,uBAAuB,uBAC/C0/B,EAAa92C,KAAKtJ,OAAOiB,KAAK0f,oBAAoBu/B,EAAUv/C,GAAG8U,aAAa,aAC5ErT,EAAaP,YAAU,aAAcyH,KAAKtJ,OAAOiB,KAAKwE,wBAAwB9E,KAC9EK,oBAAkBoB,KAAgBpB,oBAAkBoB,IACpDL,EAAgBuH,KAAKtJ,OAAQogD,EAAWr4C,KAAMuB,KAAKtJ,OAAOiB,KAAKwE,2BAC/D6D,KAAKtJ,OAAOiB,KAAK8f,gBAAgBxF,OAAO4kC,EAAS,MAI7DT,EAAUv5C,UAAU45C,eAAiB,SAAU1zC,GAC3C,IAAIg0C,EAAmBh0C,EAAKpE,IAAIyY,uBAAuB,uBAClD1f,oBAAkBq/C,EAAiB,KACpC/2C,KAAKtJ,OAAOiB,KAAK8f,gBAAgBxF,OAAO8kC,EAAiB,KAGjEX,EAAUv5C,UAAU65C,kBAAoB,SAAU3zC,GAC9C,IAAItM,EAAauJ,KAAKtJ,QAGtB,IAAK,IAAIW,EAAI,EAAGA,EAAI0L,EAAKqzB,WAAW7+B,OAAQF,IACxC0L,EAAKqzB,WAAW/+B,GAAGmD,MAAMG,QAAUoI,EAAKzH,QAGhD86C,EAAUv5C,UAAU05C,gBAAkB,SAAUxzC,GAC5C,IAAItE,EAAOsE,EAAKtE,KACZE,EAAMoE,EAAKi0C,cAAcv0B,cAAcw0B,gBAEvCC,EAAc,kBADLx/C,oBAAkB+G,EAAK3F,YAAsC2F,EAAKvE,MAA7BuE,EAAK3F,WAAWoB,OACrB,QAAUuE,EAAKtE,MACxDg9C,EAAYx4C,EAAImM,cAAc,IAAMosC,GAAa9uC,UACjDgvC,KAAc9uC,MAAMvL,KAAKo6C,GAAW15C,OAAO,SAAU45C,GAAa,OAAQA,IAAcH,IACxFI,EAAQF,EAAS,GAAG7/C,OAEpBggD,EAAc,eADDH,EAASxvC,WAAWU,MAAM,EAAGgvC,GAE9ClnC,YAAUrN,EAAKi0C,cAAcv0B,eAAgB80B,IAEjDnB,EAAUv5C,UAAU85C,eAAiB,SAAU5zC,GAC3C,GAAyB,cAArBA,EAAKlD,aAAoD,QAArBkD,EAAKlD,YAAuB,CAChE,IAAI23C,EAASz0C,EAAKpE,IAAI4J,iBAAiB,eAAe,GAAG4D,aAAa,WAElEsrC,GADQplC,SAASmlC,EAAO,IAAM,GACX5vC,WACvB7E,EAAKpE,IAAI4J,iBAAiB,eAAe,GAAGyE,aAAa,UAAWyqC,GAGxE,IAAK,IADDC,EAAe13C,KAAKtJ,OAAOiB,KAAKuhB,cAAcra,UACzCxH,EAAI,EAAGA,EAAIqgD,EAAangD,OAAQF,IACrCqgD,EAAargD,GAAGqI,MAAM,GAAGw0B,SAAU,EAErB37B,YAAU,cAAeyH,KAAKtJ,OAAOiB,MAErC,eAAE,EAApBu3C,EAA4BpnC,KAAM9H,KAAKtJ,OAAOiB,KAAKuhB,cAAcra,aAQrEu3C,EAAUv5C,UAAU+M,QAAU,WAC1B5J,KAAKwK,uBAEF4rC,KCtHP31C,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAqBxC42C,GAA4C,SAAU71C,GAEtD,SAAS61C,EAA2BjhD,EAAQkhD,GACxC,IAAIxwC,EAAQtF,EAAO/E,KAAKiD,KAAMtJ,EAAQkhD,IAAY53C,KAalD,OAZAoH,EAAMywC,kBAAmB,EACzBzwC,EAAM0wC,WAAa,EACnB1wC,EAAM2wC,SAAW,EACjB3wC,EAAM4wC,aAAc,EAEpB5wC,EAAM2uB,YAAc,EACpB3uB,EAAM+oC,UAAY,EAClB/oC,EAAM6wC,aAAe,EACrB7wC,EAAM8wC,gBAAiB,EAEvB9wC,EAAMwoB,qBAAsB,EAC5BxoB,EAAM8C,mBACC9C,EAyYX,OAxZA3G,GAAUk3C,EAA4B71C,GAiBtC61C,EAA2B96C,UAAUs7C,kBAAoB,WACrD,OAAO,IAAIvU,GAA6B5jC,KAAKtJ,SAEjDihD,EAA2B96C,UAAU+B,cAAgB,SAAU1E,GAC3D,OAAO8F,KAAKtJ,OAAOk9B,cAAcn2B,OAAO,SAAUC,GAAK,OAAO2U,SAAS3U,EAAEyO,aAAa,iBAAkB,MAAQjS,IAAU,IAE9Hy9C,EAA2B96C,UAAUqN,iBAAmB,WACpDlK,KAAKtJ,OAAOyT,GAAGiuC,GAA0Bp4C,KAAKq4C,mBAAoBr4C,MAClEA,KAAKtJ,OAAOyT,GAAGmuC,GAAsBt4C,KAAK0G,cAAe1G,OAE7D23C,EAA2B96C,UAAUw7C,mBAAqB,SAAUt1C,GAC5DA,EAAKw1C,QACLv4C,KAAK83C,WAAa,EAClB93C,KAAK+1B,WAAa,EAClB/1B,KAAKmwC,SAAWnwC,KAAKtJ,OAAOoa,aAAay4B,SAAW,GAE/CxmC,EAAK80C,mBACV73C,KAAK63C,kBAAmB,IAGhCF,EAA2B96C,UAAU6J,cAAgB,SAAU3D,GAC3D,IAAI88B,EAAU7/B,KAAKtJ,OAAO+8B,aAAa3oB,cAAc,cACrD,GAAI9K,KAAKg4C,aAAeh4C,KAAK+1B,YAAc,GAAK/1B,KAAKmwC,UAAY,EAAG,CAChE,GAAInwC,KAAKmwC,SAAWptC,EAAKsL,MAAQrO,KAAKtJ,OAAOoa,aAAay4B,SAAU,CAChE,IAAIiP,KAAqB3Y,EAAQrK,UAAYx1B,KAAKtJ,OAAO++B,gBACrDgjB,EAAYD,EAAkBx4C,KAAKtJ,OAAOmI,UAAUtH,OACpDkhD,EAAY11C,EAAKsL,QACjBoqC,EAAYD,GACPz1C,EAAKsL,MAAQmqC,IAEtBx4C,KAAK+1B,WAAa0iB,EAAYz4C,KAAKtJ,OAAOmI,UAAUtH,OACpDyI,KAAKmwC,SAAWsI,OAGhBz4C,KAAK+1B,YAAc,EACnB/1B,KAAKmwC,UAAY,EAErBnwC,KAAKg4C,aAAc,EAEnBh4C,KAAK4vB,sBACL5vB,KAAK+1B,WAAa,EAClB/1B,KAAKmwC,SAAWnwC,KAAKtJ,OAAOoa,aAAay4B,SAAW,GAExDxmC,EAAKgzB,WAAa/1B,KAAK+1B,WACvBhzB,EAAKotC,SAAWnwC,KAAKmwC,UAEzBwH,EAA2B96C,UAAUgzB,cAAgB,SAAUv0B,GAC3D,IAAI8L,EAAQpH,KACNA,KAAKtJ,OAAOC,sBAAsBC,oBAAyDumB,IAA1Cnd,KAAKtJ,OAAOC,WAAWA,WAAWstC,KAClFjkC,KAAKtJ,OAAOC,WAAWA,WAAWmtB,SAAqD,KAA1C9jB,KAAKtJ,OAAOC,WAAWA,WAAWstC,KAAgB9sC,EAAgB6I,KAAKtJ,QAuBvHoL,EAAOjF,UAAUgzB,cAAc9yB,KAAKiD,KAAM,OAtB1CA,KAAKtJ,OAAO4E,GAAQ,aAAc0E,KAAK04C,YAAa14C,MAEpDA,KAAK8X,GAAK,WACN1Q,EAAMuxC,UAAUC,SAAS,SAAUC,GAAc,OAAOzxC,EAAM0xC,gBAAgBD,KAC9EzxC,EAAM1Q,OAAOgU,IAAI,gBAAiBtD,EAAM0Q,KAE5C9X,KAAKtJ,OAAOwT,iBAAiB,YAAalK,KAAK+4C,eAAe39B,KAAKpb,OACnEA,KAAKtJ,OAAOwT,iBAAiB,cAAelK,KAAKg5C,iBAAiB59B,KAAKpb,OACvEA,KAAKtJ,OAAO4E,GAAQ,qBAAsB0E,KAAKi5C,mBAAoBj5C,MACnEA,KAAKtJ,OAAOyT,GAAG,gBAAiBnK,KAAK8X,GAAI9X,MACzCA,KAAKtJ,OAAOwT,iBAAiBkO,EAAuBpY,KAAKk5C,iBAAiB99B,KAAKpb,OAC/EA,KAAKtJ,OAAO4E,GAAQ,mCAAoC0E,KAAKyF,UAAWzF,MACxEA,KAAKtJ,OAAO4E,GAAQ,kCAAmC0E,KAAK0F,SAAU1F,MACtEA,KAAKtJ,OAAO4E,GAAQ,8BAA+B0E,KAAKm5C,mBAAoBn5C,MAC5EA,KAAKtJ,OAAO4E,GAAQ,aAAc0E,KAAKo5C,iBAAkBp5C,MACzDA,KAAKtJ,OAAO4E,GAAQ,mBAAoB0E,KAAKq5C,QAASr5C,MACtDA,KAAKtJ,OAAO4E,GAAQ,6BAA8B0E,KAAKs5C,WAAYt5C,MACnEA,KAAKtJ,OAAO4E,GAAQ,6BAA8B0E,KAAKu5C,yBAA0Bv5C,MACjFA,KAAKtJ,OAAO4E,GAAQ,iCAAkC0E,KAAKw5C,YAAax5C,MACxEA,KAAKtJ,OAAO4E,GAAQ,qBAAsB0E,KAAKy5C,UAAWz5C,QAMlE23C,EAA2B96C,UAAU48C,UAAY,SAAU/7C,GAEvDoE,EAAOjF,UAA0B,iBAAEE,KAAKiD,KAAMtC,IAElDi6C,EAA2B96C,UAAU67C,YAAc,SAAUh7C,GACzDoE,EAAOjF,UAAU67C,YAAY37C,KAAKiD,KAAMtC,GAClCsC,KAAKtJ,OAAOC,sBAAsBC,oBAAyDumB,IAA1Cnd,KAAKtJ,OAAOC,WAAWA,WAAWstC,KAClFjkC,KAAKtJ,OAAOC,WAAWA,WAAWmtB,SAAqD,KAA1C9jB,KAAKtJ,OAAOC,WAAWA,WAAWstC,KAAgB9sC,EAAgB6I,KAAKtJ,UAClHgB,oBAAkBgG,EAAE2Q,SACrBrO,KAAKkwC,aAAexyC,EAAE2Q,MACtBhQ,WAAS,aAAc2B,MAAM05C,iBAAiB15C,KAAKtJ,OAAO++B,eAAiB/3B,EAAE2Q,MAAO,WAElF3W,oBAAkBgG,EAAEmC,cAA6C,gBAA7BnC,EAAEmC,YAAY+H,YAAiC5H,KAAK4vB,uBAC1F5vB,KAAK25C,SAASnkB,UAAY,EAC1Bx1B,KAAK4vB,qBAAsB,KAIvC+nB,EAA2B96C,UAAUizB,YAAc,WAC/ChuB,EAAOjF,UAAUizB,YAAY/yB,KAAKiD,MAC5BA,KAAKtJ,OAAOC,sBAAsBC,oBAAyDumB,IAA1Cnd,KAAKtJ,OAAOC,WAAWA,WAAWstC,KAClFjkC,KAAKtJ,OAAOC,WAAWA,WAAWmtB,SAAqD,KAA1C9jB,KAAKtJ,OAAOC,WAAWA,WAAWstC,KAAgB9sC,EAAgB6I,KAAKtJ,UACvH2H,WAAS,WAAY2B,MAAMD,QAAQ65C,eAAgB,EACnD55C,KAAK24C,UAAY,IAAIkB,GAAyBx7C,WAAS,WAAY2B,MAAMkT,QAAS7U,WAAS,WAAY2B,MAAMD,SAC7GC,KAAK25C,SAAW35C,KAAK85C,WAAWhtC,aAGxC6qC,EAA2B96C,UAAUk9C,cAAgB,SAAUC,EAAMC,EAASC,EAAMC,GAChF,OAAKn6C,KAAKtJ,OAAOC,sBAAsBC,oBAAyDumB,IAA1Cnd,KAAKtJ,OAAOC,WAAWA,WAAWstC,MAChFjkC,KAAKtJ,OAAOC,WAAWA,WAAWmtB,SAAqD,KAA1C9jB,KAAKtJ,OAAOC,WAAWA,WAAWstC,KAAe9sC,EAAgB6I,KAAKtJ,QACnHsJ,KAAKk4C,gBACLl4C,KAAKk4C,gBAAiB,EACfl4C,KAAKi4C,eAGZj4C,KAAKi4C,aAAen2C,EAAOjF,UAAUk9C,cAAch9C,KAAKiD,KAAMg6C,EAAMC,EAASC,EAAMC,GAC5Er4C,EAAOjF,UAAUk9C,cAAch9C,KAAKiD,KAAMg6C,EAAMC,EAASC,EAAMC,IAInEr4C,EAAOjF,UAAUk9C,cAAch9C,KAAKiD,KAAMg6C,EAAMC,EAASC,EAAMC,IAG9ExC,EAA2B96C,UAAUk8C,eAAiB,WAClD,IACIqB,EAAgB,gBACpB,GAAIp6C,KAAKtJ,OAAOmI,UAAUtH,SAAWyI,KAAKo6C,KAAmB1iD,oBAAkBsI,KAAKtJ,OAAOkI,cAAc,IAAK,CAC1G,IAAIk+B,EAAS98B,KAAKtJ,OAAOkI,cAAc,GAAGyhC,wBAAwB/C,IAC9D+c,EAAUr6C,KAAKtJ,OAAOwc,QAAQmtB,wBAAwB/C,IAEtDt9B,KAAKo6C,GADLtd,EAAS,EACa98B,KAAKtJ,OAAOkI,cAAc,GAAGyhC,wBAAwB/C,IAAM+c,EAG3Dr6C,KAAK6/B,QAAQQ,wBAAwB/C,IACvDt9B,KAAKtJ,OAAOkI,cAAc,GAAGyhC,wBAAwB/Z,OAGjExkB,EAAOjF,UAAsB,UAAEE,KAAKiD,OAExC23C,EAA2B96C,UAAUm8C,iBAAmB,SAAUj2C,GAE9DjB,EAAOjF,UAAqB,YAAEE,KAAKiD,KAAM+C,IAE7C40C,EAA2B96C,UAAUo8C,mBAAqB,SAAUl2C,GAChE,IAAI/C,KAAKtJ,OAAOu3B,OAAhB,CAIAnsB,EAAOjF,UAA0B,iBAAEE,KAAKiD,KAAM+C,KAElD40C,EAA2B96C,UAAU28C,YAAc,SAAUxS,GACzDA,EAAOtnC,MAAQM,KAAKs6C,iBAExB3C,EAA2B96C,UAAUy9C,cAAgB,WAEjD,IAAK,IADD56C,KACKrI,EAAI,EAAGA,EAAI2I,KAAKtJ,OAAOY,QAAQC,OAAQF,IAC5CqI,EAAMlH,KAAKwH,KAAKu6C,aAAav6C,KAAKtJ,OAAOY,QAAQD,KAErD,OAAOqI,GAEXi4C,EAA2B96C,UAAU09C,aAAe,SAAU56C,EAAQ66C,EAAOC,EAAUC,EAASC,EAAQC,GACpG,IAAIx2C,GACA8vB,QAAWv0B,EAAOu0B,QAClB2mB,YAAenjD,oBAAkBiI,EAAO4S,OAAS5S,EAAOiT,UACxDkoC,YAAepjD,oBAAkBiI,EAAOiT,UACxCmoC,MAASP,EACT76C,OAAUA,EACV86C,SAAa/iD,oBAAkB+iD,GAAuBn9B,WAAS09B,KAApBP,EAC3CC,QAAWA,EACXn1B,SAAY5lB,EAAO4lB,SACnB01B,aAAgBt7C,EAAOu7C,iBAAmBv7C,EAAOu7C,kBACjDN,eAAkBj7C,EAAOu7C,iBAAmBv7C,EAAOu7C,mBAAqB78C,WAASsB,EAAO4S,MAAOqoC,IAKnG,OAHIx2C,EAAIy2C,YAAkC,aAApBz2C,EAAIzE,OAAOqD,MAAuBoB,EAAImhB,YACxDnhB,EAAIlK,MAAQygD,GAET,IAAIQ,OAAK/2C,IAEpBuzC,EAA2B96C,UAAU4I,UAAY,SAAU/H,GACvD,IAAI+3C,EAAW,yBAA2B/3C,EAAExD,MAAQ,KAChDA,EAAQ8F,KAAKtJ,OAAO+8B,aAAa3oB,cAAc2qC,GAAU/rC,SACzD+B,EAAUzL,KAAKtJ,OAAOyF,wBAAwBjC,GAClDwD,EAAEe,KAAOgN,GAEbksC,EAA2B96C,UAAU6I,SAAW,SAAU3C,GACtD,IAEI0uC,GAAYp1C,eAAgB2D,KAAKo7C,YAAangD,YAAa+E,KAAK/E,YAAay2C,aAAc1xC,KAAK0xC,cACpG1xC,KAAKtJ,OAAOyb,OAAO,mBAAoBs/B,GACvCzxC,KAAKo7C,YAAc3J,EAAQp1C,eAC3B2D,KAAK/E,YAAcw2C,EAAQx2C,YAC3B+E,KAAK0xC,aAAeD,EAAQC,aAC5B,IAAI5pC,EAAO9H,KAAKtJ,OAAOmI,UACnBm2C,EAAiBltC,EAAKvQ,QAAUuQ,EAAK,GAAGqE,aAAa,iBAAmB,EACxE8oC,EAAgBntC,EAAKvQ,QAAUuQ,EAAKA,EAAKvQ,OAAS,GAAG4U,aAAa,iBAAmB,EACrFkvC,EAAcr7C,KAAKtJ,OAAOqxB,kBAAoBitB,GAAkBh1C,KAAKtJ,OAAOqxB,kBAAoBktB,EACzE,QAArBj1C,KAAKo7C,aAA8C,WAArBp7C,KAAKo7C,cACrCp7C,KAAU,OAAI,GAEO,QAArBA,KAAKo7C,aAA8C,WAArBp7C,KAAKo7C,cAChCp7C,KAAK/E,cAAqC,IAAtB+E,KAAK/E,cAA0D,IAAlC+E,KAAKtJ,OAAOqxB,kBAA4BszB,IAC5Fv5C,EAAOjF,UAAmB,eAAEE,KAAKiD,KAAM+C,IAG/C40C,EAA2B96C,UAAUy+C,iBAAmB,WAEpDx5C,EAAOjF,UAAqB,YAAEE,KAAKiD,OAEvC23C,EAA2B96C,UAAUu8C,iBAAmB,WAGpDp5C,KAAKtJ,OAAOyb,OAAO,uBACO,QAArBnS,KAAKo7C,aAA8C,WAArBp7C,KAAKo7C,cAA6Bp7C,KAAU,OAC3E8B,EAAOjF,UAAqB,YAAEE,KAAKiD,OAG3C23C,EAA2B96C,UAAUs8C,mBAAqB,WACtD,IACItZ,EAAU7/B,KAAKtJ,OAAO+8B,aAAa3oB,cAAc,cACjD9K,KAAU,OAAK6/B,EAAQ/0B,cAAc,iBACrC9K,KAAKg4C,aAAc,IAG3BL,EAA2B96C,UAAUy8C,WAAa,SAAUv2C,GAExDjB,EAAOjF,UAAoB,WAAEE,KAAKiD,KAAM+C,IAE5C40C,EAA2B96C,UAAU08C,yBAA2B,SAAUx2C,GAEtEjB,EAAOjF,UAAgC,uBAAEE,KAAKiD,KAAM+C,IAExD40C,EAA2B96C,UAAU0+C,cAAgB,WACjD,IACI1b,EAAU7/B,KAAKtJ,OAAO+8B,aAAa3oB,cAAc,cACjD9K,KAAU,QAAM6/B,EAAQ/0B,cAAc,iBACtC9K,KAAKtJ,OAAOu3B,QAAS,EACrBjuB,KAAKtJ,OAAOq6B,cAGpB4mB,EAA2B96C,UAAUw8C,QAAU,SAAU56C,GAErDqD,EAAOjF,UAAwB,eAAEE,KAAKiD,KAAMvB,IAEhDk5C,EAA2B96C,UAAUq8C,iBAAmB,SAAUn2C,GAC9D,GAAyB,QAArBA,EAAKlD,YAAuB,CAC5B,IAAI4xC,GAAYp1C,eAAgB2D,KAAKo7C,YAAangD,YAAa+E,KAAK/E,YAAay2C,aAAc1xC,KAAK0xC,cACpG1xC,KAAKtJ,OAAOyb,OAAO,mBAAoBs/B,GACvCzxC,KAAKo7C,YAAc3J,EAAQp1C,eAC3B2D,KAAK/E,YAAcw2C,EAAQx2C,YAC3B+E,KAAK0xC,aAAeD,EAAQC,aAGhC5vC,EAAOjF,UAAwB,eAAEE,KAAKiD,KAAM+C,IAEhD40C,EAA2B96C,UAAUi8C,gBAAkB,SAAUD,GAC7D,IAAIqB,EAAOrB,EAAW2C,SAElB3b,EAAU7/B,KAAKtJ,OAAO+8B,aAAa3oB,cAAc,cACjDyqB,EAFY,GAEev1B,KAAKtJ,OAAO++B,eACvCgmB,EAAY5C,EAAW6C,OAAOpe,IAAMt9B,KAAK83C,WAAc,EACvD6D,EAAahlC,KAAKC,KAAKiiC,EAAW6C,OAAOpe,IAAMt9B,KAAK83C,aAAeviB,EACnExN,EAAmB,mBACvB,GAAI0zB,EAAU,CACV,IAAIG,IAAY57C,KAAKtJ,OAAO4vB,OAAO1e,WAAWpJ,QAAQ,KAAO,EAAIwB,KAAKtJ,OAAO4vB,OACzEtmB,KAAKtJ,OAAOwc,QAAQmtB,wBAAwB/Z,QAC5CpsB,KAAY2lC,EAAQrK,UAAYx1B,KAAKtJ,OAAO++B,gBAC1C9e,KAAKC,KAAKglC,EAAU57C,KAAKtJ,OAAO++B,gBAChCz1B,KAAKtJ,OAAOoa,aAAay4B,SAO/B,GANArvC,EAASA,EAAQ,EAAKA,EAAQ,EACzBxC,oBAAkBsI,KAAK+nB,MAAiD,GAA3B/nB,KAAK+nB,IAA2B7tB,GAAS8F,KAAK+nB,KAC5F7tB,EAAQ8F,KAAK+nB,IAEjB/nB,KAAK+1B,WAAa77B,EAClB8F,KAAKmwC,SAAWj2C,EAAQ8F,KAAKtJ,OAAOoa,aAAay4B,SAC7CvpC,KAAKmwC,SAAWnwC,KAAKkwC,aAAc,CACnC,IAAI2L,EAAU77C,KAAKkwC,aAAe,EAC9B4L,EAAU97C,KAAKmwC,SAAW0L,EAC9B77C,KAAKmwC,SAAW0L,EAChB77C,KAAK+1B,WAAc/1B,KAAK+1B,WAAa+lB,EAAW,EAAI,EAAK97C,KAAK+1B,WAAa+lB,EAG/E,IAAIC,EAAQplC,KAAKC,KAAKiiC,EAAW6C,OAAOpe,IAAMt9B,KAAKtJ,OAAO++B,gBAC1DsmB,GAAgB/7C,KAAKtJ,OAAOoa,aAAay4B,SACzC,IAAIyS,EAAa,EACjB,IAAKtkD,oBAAkBsI,KAAKtJ,OAAOmI,UAAUk9C,MACxCrkD,oBAAkBsI,KAAKtJ,OAAO+8B,aAAalrB,iBAAiB,iBAAiBwzC,IAAS,CAGvFC,GAFWh8C,KAAKtJ,OAAO+8B,aAAalrB,iBAAiB,iBAAiBwzC,GACjEjxC,cAAc,MAAMqB,aAAa,SAG1C,GAAmB,IAAf6vC,EACAh8C,KAAK83C,WAAae,EAAW6C,OAAOpe,QAEnC,CACD,IAAIhX,EAAStmB,KAAKtJ,OAAO++B,eACzBz1B,KAAK83C,WAAce,EAAW6C,OAAOpe,IAvC7B,GAuCgDhX,EAAU,EAC9DuyB,EAAW6C,OAAOpe,IAxCd,GAwCiChX,EAAU,GAAK,QAG3D,GAAIq1B,EAAY,CACjB,IAAInD,KAAqB3Y,EAAQrK,UAAYx1B,KAAKtJ,OAAO++B,gBACrDwmB,IAAej8C,KAAK+nB,GAAoB/nB,KAAKtJ,OAAOoa,aAAay4B,SAAYvpC,KAAKkwC,cACjFx4C,oBAAkBsI,KAAK+nB,MAAiD,GAA3B/nB,KAAK+nB,IACnDywB,GAAmBx4C,KAAK+nB,IAAsBk0B,IAC9CzD,EAAkBx4C,KAAK+nB,IAE3B,IAAI0wB,EAAYD,EAAkBx4C,KAAKtJ,OAAOoa,aAAay4B,SACvDkP,EAAYz4C,KAAKkwC,eACjBuI,EAAYD,GACPx4C,KAAKkwC,aAAesI,IAE7Bx4C,KAAK+1B,WAAckmB,EAA8DzD,EAAhDC,EAAYz4C,KAAKtJ,OAAOoa,aAAay4B,SACtEvpC,KAAKmwC,SAAWsI,EACZI,EAAW6C,OAAOpe,IAAOt9B,KAAKtJ,OAAO++B,eAAiBz1B,KAAKkwC,aAC3DlwC,KAAK83C,WAAa93C,KAAK+5C,cAAclB,EAAW6C,OAAOpe,IAAKuC,EAAQQ,wBAAwB/Z,QAG5FtmB,KAAK83C,WAAae,EAAW6C,OAAOpe,IAG5C,GAAKqe,GAAe9C,EAAW6C,OAAOpe,IAAOt9B,KAAKtJ,OAAO++B,eAAiBz1B,KAAKkwC,gBAC5D,CACf,IAAIgM,EAAW79C,WAAS,kBAAmB2B,MAAM+B,MAAM/B,MAAO64C,EAAWx9B,UAAW6+B,EAAMrB,EAAW6C,SACrG17C,KAAKm8C,aAAeD,EACpB,IAAI1iC,EAAO0iC,EAAS7iC,WAAa6iC,EAASE,SAAWF,EAAS3iC,SAASC,KAAO0iC,EAAS1iC,KACvFxZ,KAAKtJ,OAAOmnB,eAAgB/M,cAAgBwI,YAAaE,KAAU,GACnE0iC,EAASG,MAA2B,0BAAnBH,EAASG,MAAoC,gBAAkBH,EAASG,MACzFr8C,KAAKtJ,OAAOyb,OAAO+pC,EAASG,OAASx8C,YAAa,gBAAiB63C,aAAcmB,EAAWnB,iBAGpGC,EAA2B96C,UAAUy/C,cAAgB,SAAUl7C,EAAQm7C,EAAU7+C,GAC7E,GAAKsC,KAAKtJ,OAAOC,sBAAsBC,oBAAyDumB,IAA1Cnd,KAAKtJ,OAAOC,WAAWA,WAAWstC,MAChFjkC,KAAKtJ,OAAOC,WAAWA,WAAWmtB,SAAqD,KAA1C9jB,KAAKtJ,OAAOC,WAAWA,WAAWstC,KAAe9sC,EAAgB6I,KAAKtJ,QACnH2H,WAAS,mBAAoBX,KAC7BsC,KAAKk4C,gBAAiB,GAE1Bp2C,EAAOjF,UAAUy/C,cAAcv/C,KAAKiD,KAAMoB,EAAQm7C,EAAU7+C,OAE3D,CACD,IAAIw8C,EAAOx8C,EAAE8+C,YAAYC,cAAoD,MAApC/+C,EAAE8+C,YAAYC,aAAaC,MAChEr+C,WAAS,cAAe2B,MAAMwZ,MAAQnb,WAAS,cAAe2B,MAAMwZ,OAAS9b,EAAE8+C,YAAYhjC,KAC3Fnb,WAAS,cAAe2B,MAAQtC,EAAE8+C,YAClCG,EAAUzC,EAAK0C,cAAc,GAAM,EACnCC,EAAU78C,KAAK88C,gBAAgBH,GACnC38C,KAAK+8C,WAAWC,gBAAgB,KAAO9zC,UAAQ+zC,MAA8B,SAAtB/zC,UAAQgxC,KAAKgD,OACpE97C,EAASpB,KAAKtJ,OAAO4V,cAAc,UAC5BqB,YAAY4uC,GAEnBv8C,KAAKm9C,WAAWryC,cAAc,SAAgB,YAAE1J,GAC3CpB,KAAK63C,kBAAwC,IAApB73C,KAAK83C,WAI/B93C,KAAK63C,kBAAmB,EAHxBx5C,WAAS,aAAc2B,MAAMo9C,YAAYP,EAAS78C,KAAK83C,YAK3DriC,WAAS,WAAYzV,KAAKm8C,aAAen8C,KAAKm8C,aAAejC,EAAMl6C,MAGnE8B,EAAOjF,UAAmB,UAAEE,KAAKiD,KAAMtC,GAEnCsC,KAAU,QAAMA,KAAKtJ,OAAO+8B,aAAa3oB,cAAc,cAAcA,cAAc,gBACxD,QAArB9K,KAAKo7C,aAA8C,WAArBp7C,KAAKo7C,cACjCp7C,KAAK0xC,cAAgB1xC,KAAK+1B,WAC1B/1B,KAAKu7C,gBAEAv7C,KAAK/E,aAAe+E,KAAK/E,aAAe,IAC7C+E,KAAU,OAAI,EACdA,KAAKtJ,OAAOu3B,QAAS,IAIjCjuB,KAAKs7C,mBACLx5C,EAAOjF,UAAoB,WAAEE,KAAKiD,QAG1C23C,EAA2B96C,UAAU2N,oBAAsB,WACnDxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,aAAc1K,KAAK04C,aACnC14C,KAAKtJ,OAAOgU,IAAI,gBAAiB1K,KAAK8X,IACtC9X,KAAKtJ,OAAOgU,IAAI,qBAAsB1K,KAAKi5C,oBAC3Cj5C,KAAKtJ,OAAOgU,IAAI,YAAa1K,KAAK+4C,gBAClC/4C,KAAKtJ,OAAOgU,IAAI,cAAe1K,KAAKg5C,kBACpCh5C,KAAKtJ,OAAOgU,IAAI0tC,GAA0Bp4C,KAAKq4C,oBAC/Cr4C,KAAKtJ,OAAOgU,IAAI4tC,GAAsBt4C,KAAK0G,eAC3C1G,KAAKtJ,OAAOgU,IAAI,mCAAoC1K,KAAKyF,WACzDzF,KAAKtJ,OAAOgU,IAAI,kCAAmC1K,KAAK0F,UACxD1F,KAAKtJ,OAAOgU,IAAI,8BAA+B1K,KAAKm5C,oBACpDn5C,KAAKtJ,OAAOgU,IAAI,aAAc1K,KAAKo5C,kBACnCp5C,KAAKtJ,OAAOgU,IAAI,mBAAoB1K,KAAKq5C,SACzCr5C,KAAKtJ,OAAOgU,IAAI,6BAA8B1K,KAAKs5C,YACnDt5C,KAAKtJ,OAAOgU,IAAI,6BAA8B1K,KAAKu5C,0BACnDv5C,KAAKtJ,OAAOgU,IAAI,iCAAkC1K,KAAKw5C,aACvDx5C,KAAKtJ,OAAOgU,IAAI,qBAAsB1K,KAAKy5C,aAExC9B,GACT0F,0BAEExD,GAA0C,SAAU/3C,GAEpD,SAAS+3C,IACL,IAAIzyC,EAAmB,OAAXtF,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAKhE,OAJAoH,EAAMk2C,YAAa,EACnBl2C,EAAMm2C,OAAS,EACfn2C,EAAMo2C,QAAU,EAChBp2C,EAAMq2C,MAAQ,EACPr2C,EA+CX,OAtDA3G,GAAUo5C,EAA0B/3C,GASpC+3C,EAAyBh9C,UAAU+7C,SAAW,SAAU8E,GAEpD57C,EAAOjF,UAAuB,cAAIwB,WAAS,UAAW2B,MAAMsN,UAAU+yB,wBACtEpc,eAAatX,IAAItO,WAAS,UAAW2B,MAAMsN,UAAW,SAAUtN,KAAK29C,sBAAsBD,GAAW19C,OAE1G65C,EAAyBh9C,UAAUsnC,MAAQ,WACvCnkC,KAAKw9C,QAAU,MAEnB3D,EAAyBh9C,UAAU8gD,sBAAwB,SAAUD,GACjE,IAAIt2C,EAAQpH,KACR49C,EAAU,EACVC,EAAW,EACf,OAAO,SAAUngD,GACb,IAAI83B,EAAY93B,EAAE0D,OAAOo0B,UACrBkL,EAAahjC,EAAE0D,OAAOs/B,WACtBrlB,EAAYuiC,EAAUpoB,EAAY,OAAS,KAC/Cna,EAAYwiC,IAAand,EAAarlB,EAAYwiC,EAAWnd,EAAa,QAAU,OACpFkd,EAAUpoB,EACVqoB,EAAWnd,EACX,IAAIhiB,EAAUrgB,WAAS,eAAgB+I,GAAOiU,GAC1CyiC,EAAQ,EACZ12C,EAAMm2C,OAAS/nB,EACM,MAAjBpuB,EAAMo2C,UACNM,EAAQ12C,EAAMm2C,OAASn2C,EAAMo2C,SAEjCp2C,EAAMo2C,QAAUp2C,EAAMm2C,OAClBn2C,EAAMq2C,OACNM,aAAa32C,EAAMq2C,OAEvBr2C,EAAMq2C,MAAQO,WAAW52C,EAAM+8B,MAAO,IAOjC2Z,EAAQ,KAAOA,GAAS,MAASpgD,GAAKA,EAAEugD,iBACzCvgD,EAAEwgD,aAAc,EAChBxgD,EAAEugD,kBAENP,GAAWriC,UAAWA,EAAW8iC,QAAS/2C,EAAMk2C,WAC5C9B,SAAU98B,EAASg9B,QAAUpe,IAAK9H,EAAWsL,KAAMJ,GACnDgX,aAAc1a,SAASqY,kBAG5BwE,GACTuE,wBCzeE39C,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAyBxCs9C,GAA+B,WAM/B,SAASA,EAAc3nD,GACnBsJ,KAAKs+C,gBAAkB,EACvBt+C,KAAKu+C,cAAgB,EACrBv+C,KAAKtJ,OAASA,EACd+L,OAAKC,OAAO87C,IACZx+C,KAAKkK,mBA4HT,OA1HAm0C,EAAcxhD,UAAU4hD,iBAAmB,SAAU17C,GACjDA,EAAKtE,KAAOuB,KAAK+jC,YAQrBsa,EAAcxhD,UAAU+F,cAAgB,WACpC,MAAO,iBAMXy7C,EAAcxhD,UAAUqN,iBAAmB,WACvClK,KAAKtJ,OAAOyT,GAAGqsB,EAAiCx2B,KAAK0+C,4BAA6B1+C,MAClFA,KAAKtJ,OAAOyT,GAAGyR,EAAsB5b,KAAK2+C,kBAAmB3+C,OAMjEq+C,EAAcxhD,UAAU2N,oBAAsB,WACtCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI8rB,EAAiCx2B,KAAK0+C,6BACtD1+C,KAAKtJ,OAAOgU,IAAIkR,EAAsB5b,KAAK2+C,qBAE/CN,EAAcxhD,UAAU6hD,4BAA8B,SAAU//C,GAC5DqB,KAAKtJ,OAAOiB,KAAKwa,OAAOimC,IAA4BP,kBAAkB,IACtE73C,KAAK4+C,kBAAoBjgD,EAAIjG,OAC7BiG,EAAIjG,OAAOS,SAA0B,aAAfwF,EAAIrD,OAC1B,IAAIstC,GACAt1B,OAAQtT,KAAKtJ,OAAO8G,SACpBmB,IAAKA,EAAIA,IACTrD,OAAQqD,EAAIrD,OACZ5C,OAAQiG,EAAIjG,OACZ2V,MAAOrO,KAAKtJ,OAAO8G,SAASjG,QAEhCyI,KAAKtJ,OAAOiB,KAAKmrB,iBACjB,IAAIjjB,EAAcxB,WAAS,gBAAiB2B,KAAKtJ,QAAU,cAAgB,UAC3E2H,WAAS,oBAAqB2B,KAAKtJ,QAAQif,mBAAmBizB,GAAO/oC,YAAaA,KAEtFw+C,EAAcxhD,UAAU8hD,kBAAoB,SAAUxV,GAClD,IAAI/hC,EAAQpH,KACRvG,EAAK,IAAI7C,cAAYuyC,EAAe71B,QACpCna,EAAW,IAAI0I,YAAU,WAAY,WAAY,MAAM6nC,GAAG,WAAY,gBAAYvsB,GAClFxkB,EAAUc,EAAGwc,cAAa,IAAIxB,SAAQI,MAAM1b,IAC5C4qC,EAAaprC,EAAQ8E,OAAO,SAAUC,GACtC,OAAOjF,EAAgB2O,EAAM1Q,OAAQgH,EAAG/E,KAE5CqH,KAAK+jC,WAAaA,EAClB/jC,KAAKtJ,OAAOiB,KAAKwa,OAAO0xB,IAAuBplC,KAAMslC,IACrD,IAAI8a,GAAW9oB,YAAa,EAAGoa,UAAW,EAAG9hC,MAAO86B,EAAe96B,OACnErO,KAAKtJ,OAAOiB,KAAKwa,OAAOmmC,GAAsBuG,GAC9C,IAAI9oB,EAAa8oB,EAAO9oB,WACpBoa,EAAW0O,EAAO1O,SAEtB,GADAhH,EAAe96B,MAAQ01B,EAAWxsC,QACd,IAAhBw+B,IAAmC,IAAdoa,EAAiB,CACtC,IAAI37B,EAAQ,IAAIC,QACZ60B,EAAOtpC,KAAKtJ,OAAOiB,KAAKmZ,aAAay4B,SAErCF,EAAOC,GADGtpC,KAAKtJ,OAAOiB,KAAKmZ,aAAawI,YACf,GAC7B9E,EAAQA,EAAM60B,KAAKA,GAAMG,KAAKF,GAC9B7vC,EAAG9C,WAAW8E,KAAOsoC,EACrBoF,EAAe71B,OAAS7Z,EAAGwc,aAAazB,OAEvC,CACD,IAAI3U,EAAcspC,EAAelvB,WAAWpa,YAU5C,IAToB,cAAhBA,GAA+C,gBAAhBA,GACd,YAAhBA,GAA6BG,KAAKtJ,OAAOsa,mBAAqBm/B,EAAWpM,EAAWxsC,UACrFw+B,EAAa,EACboa,EAAWnwC,KAAKtJ,OAAOiB,KAAKmZ,aAAay4B,SAAW,EACpDvpC,KAAKtJ,OAAOiB,KAAK87B,aAAa6B,kBAAkBE,UAAY,EAC5Dx1B,KAAKtJ,OAAOiB,KAAKwa,OAAOimC,IAA4BG,QAAQ,MAI3D7gD,oBAAkBsI,KAAK4+C,mBAAoB,CAC5C,IAAIE,EAAgB9+C,KAAKtJ,OAAOmI,UAC5BkgD,EAAShb,EAAWvlC,QAAQwB,KAAK4+C,mBACtB7a,EAAWz7B,MAAMy2C,EAAQA,EAASD,EAAcvnD,QAClDA,OAASunD,EAAcvnD,QAAUwnD,GAAU,GAGpDhpB,EADAgpB,GADAA,EAAShb,EAAWxsC,OAASunD,EAAcvnD,QACzB,EAAIwnD,EAAS,EAE/B5O,EAAWpM,EAAWxsC,QAEjB8G,WAAS,gBAAiB2B,KAAKtJ,UACpCq/B,EAAa,EACboa,EAAWnwC,KAAKtJ,OAAOiB,KAAKmZ,aAAay4B,SAAW,EACpDvpC,KAAKtJ,OAAOiB,KAAKwa,OAAOimC,IAA4BG,QAAQ,MAI/D7gD,oBAAkBsI,KAAK4+C,oBAAsB5+C,KAAKtJ,OAAOsa,oBAEtD+kB,EADAoT,EAAe96B,MAAQrO,KAAKtJ,OAAOmI,UAAU,GAAGwhC,wBAAwB/Z,OAC3Dyd,EAAW,GAAG7pC,OAGW,IAAzB8F,KAAKs+C,eAAwB,EAAIt+C,KAAKs+C,gBAG3Dt+C,KAAK4+C,kBAAoB,KACzBzV,EAAe71B,OAASywB,EAAWz7B,MAAMytB,EAAYoa,GACrDnwC,KAAKs+C,eAAiBvoB,EACtB/1B,KAAKu+C,aAAepO,EAExBnwC,KAAKtJ,OAAOyb,OAAO,eAAgBg3B,IAQvCkV,EAAcxhD,UAAU+M,QAAU,WAC9B5J,KAAKwK,uBAEF6zC,KAGPG,GAA6B,SAAU18C,GAEvC,SAAS08C,EAAY9nD,EAAQkhD,GACzB,IAAIxwC,EAAQtF,EAAO/E,KAAKiD,KAAMtJ,EAAQkhD,IAAY53C,KAGlD,OAFA3B,WAAS,SAAU+I,GAAOsD,IAAI,eAAgBrM,WAAS,sBAAuB+I,GAAQA,GACtF/I,WAAS,SAAU+I,GAAO+C,GAAG,eAAgB/C,EAAM43C,qBAAsB53C,GAClEA,EA0BX,OA/BA3G,GAAU+9C,EAAa18C,GAOvB08C,EAAY3hD,UAAU+F,cAAgB,WAClC,MAAO,qBAEX47C,EAAY3hD,UAAUmiD,qBAAuB,WACzC3gD,WAAS,SAAU2B,MAAM6C,KAAK,aAAc,kBAAmB,kBAC/D,IAAIo8C,EAAW5gD,WAAS,UAAW2B,MAAMk/C,WAAW,mBACpD7gD,WAAS,cAAe4gD,GACnBl9C,MAAMk9C,GAAWE,aAAWC,QAAS,IAAIzH,GAA2Bt5C,WAAS,SAAU2B,MAAO3B,WAAS,UAAW2B,SAEvHA,KAAKq/C,kBAETb,EAAY3hD,UAAUwiD,eAAiB,WACnC,IAAIC,EAAajhD,WAAS,SAAU2B,MAChC0nB,EAAY43B,EAAW7pB,eACtB/9B,oBAAkB4nD,EAAWh5B,SAA0C,iBAAvBg5B,EAAiB,SAAsD,IAApCA,EAAWh5B,OAAO9nB,QAAQ,OAC9G8gD,EAAWpsC,QAAQ1Y,MAAM8rB,OAASg5B,EAAWh5B,QAEjD,IAGIA,EAAqB,MAHXg5B,EAAWh5B,OAAO1e,WAAWpJ,QAAQ,KAAO,EAAI8gD,EAAWh5B,OACrEg5B,EAAWpsC,QAAQmtB,wBAAwB/Z,QAClBoB,GAEzB4hB,EAAOgW,EAAWxuC,aAAay4B,SACnC+V,EAAWzhC,eAAgB/M,cAAgBy4B,SAAUD,EAAOhjB,EAASA,EAASgjB,KAAU,IAErFkV,GACTe,iBC5LEC,GAAwB,WAMxB,SAASA,EAAO9oD,GACZ+L,OAAKC,OAAO+8C,UACZz/C,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAuET,OArEAs1C,EAAO3iD,UAAUqN,iBAAmB,WAChClK,KAAKtJ,OAAOyT,GAAG,oBAAqBnK,KAAK02C,kBAAmB12C,MAC5DA,KAAKtJ,OAAOyT,GAAG,eAAgBnK,KAAKs2C,aAAct2C,MAClDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,WAAYnK,KAAK0/C,gBAAiB1/C,OAE1Dw/C,EAAO3iD,UAAU2N,oBAAsB,WAC/BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,oBAAqB1K,KAAK02C,mBAC1C12C,KAAKtJ,OAAOgU,IAAI,eAAgB1K,KAAKs2C,cACrCt2C,KAAKtJ,OAAOiB,KAAK+S,IAAI,WAAY1K,KAAK0/C,mBAE1CF,EAAO3iD,UAAU65C,kBAAoB,SAAU3zC,GAC3C,IAEI+E,EAFAivB,EAAc/2B,KAAKtJ,OAAOyY,qBAC1BwwC,EAAa3/C,KAAKtJ,OAAOmI,UAQzBiJ,EANC/E,EAAKqzB,WAAW7+B,OAMVwL,EAAKqzB,WALLW,EAAYt5B,OAAO,SAAUC,GAChC,OAAOA,EAAEoN,cAAc,kBAAoB/H,EAAKrK,OAAOwB,MAAQ,SAAW6I,EAAKrK,OAAOyB,MAAQ,MAMtG,IAAK,IAAI9C,EAAI,EAAGA,EAAIyQ,EAAKvQ,OAAQF,IAAK,CAClC,IAAIuoD,EAAQ5/C,KAAKtJ,OAAOiB,KAAK0f,oBAAoBvP,EAAKzQ,GAAG8U,aAAa,aAAa1N,KACnFqJ,EAAKzQ,GAAGmD,MAAMG,QAAUoI,EAAKzH,OAC7B,IAAIukD,EAAgC,SAAhB98C,EAAKzH,OAAoB,8CACvC,4CACN,GAAIqkD,EAAW73C,EAAKzQ,GAAGqS,UAAUoB,cAAc+0C,GAAgB,CAE3D,IAAK,IADDnoB,KACKE,EAAM,EAAGA,EAAMb,EAAYx/B,OAAQqgC,IACpCb,EAAYa,GAAK9sB,cAAc,kBAAoB80C,EAAM1lD,MAAQ,SAAW0lD,EAAMzlD,MAAQ,KAC1Fu9B,EAAKl/B,KAAKu+B,EAAYa,IAG1BF,EAAKngC,QACLyI,KAAK02C,mBAAoBtgB,WAAYsB,EAAMp8B,OAAQyH,EAAKzH,YAKxEkkD,EAAO3iD,UAAU6iD,gBAAkB,SAAUhiD,GACrCmN,eAAanN,EAAE0D,OAAQ,cACvBpB,KAAKtJ,OAAOiB,KAAKkE,aAAayyB,qBAAyD,SAAlCtuB,KAAKtJ,OAAOmF,aAAaC,MAC9EkE,KAAKtJ,OAAOiB,KAAKoE,WAAWu1B,UAAUzmB,eAAanN,EAAE0D,OAAQ,WAGrEo+C,EAAO3iD,UAAUy5C,aAAe,WACPt2C,KAAKtJ,OAAOkJ,aAAanC,OAAO,SAAUC,GAC3D,OAAOA,EAAElG,eAEMD,QAAUyI,KAAKtJ,OAAOopD,cAAgB9/C,KAAKtJ,OAAOuC,eACjEmX,YAAUpQ,KAAKtJ,OAAOwc,QAAQkE,uBAAuB,UAAU,IAAK,qBAG5EooC,EAAO3iD,UAAU+M,QAAU,WACvB5J,KAAKwK,uBAQTg1C,EAAO3iD,UAAU+F,cAAgB,WAC7B,MAAO,UAEJ48C,KClFPO,GAA+B,WAM/B,SAASA,EAAcrpD,GACnB+L,OAAKC,OAAOs9C,iBACZhgD,KAAKtJ,OAASA,EA8BlB,OArBAqpD,EAAcljD,UAAUg1B,kBAAoB,SAAUouB,EAAGC,GACrD,OAAOlgD,KAAKtJ,OAAOiB,KAAKq6B,oBAAoBH,kBAAkBouB,EAAGC,IAQrEH,EAAcljD,UAAU+M,QAAU,aASlCm2C,EAAcljD,UAAU+F,cAAgB,WACpC,MAAO,iBAEJm9C,KCjCPI,GAAgC,WAMhC,SAASA,EAAezpD,GACpBsJ,KAAKtJ,OAASA,EACd+L,OAAKC,OAAO09C,kBACZpgD,KAAKkK,mBA+RT,OAvRAi2C,EAAetjD,UAAU+F,cAAgB,WACrC,MAAO,kBAMXu9C,EAAetjD,UAAUqN,iBAAmB,WACxClK,KAAKtJ,OAAOyT,GAAGyR,EAAsB5b,KAAKqgD,mBAAoBrgD,MAC9DA,KAAKtJ,OAAOyT,GAAG,yBAA0BnK,KAAKsgD,qBAAsBtgD,MACpEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,kBAAmBnK,KAAKugD,sBAAuBvgD,MACnEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,wBAAyBnK,KAAKwgD,oBAAqBxgD,MACvEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,uBAAwBnK,KAAKygD,WAAYzgD,MAC7DA,KAAKtJ,OAAOiB,KAAKwS,GAAG,gBAAiBnK,KAAK8wC,aAAc9wC,OAM5DmgD,EAAetjD,UAAU2N,oBAAsB,WACvCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,yBAA0B1K,KAAKsgD,sBAC/CtgD,KAAKtJ,OAAOiB,KAAK+S,IAAI,kBAAmB1K,KAAKugD,uBAC7CvgD,KAAKtJ,OAAOiB,KAAK+S,IAAI,wBAAyB1K,KAAKwgD,qBACnDxgD,KAAKtJ,OAAOgU,IAAIkR,EAAsB5b,KAAKqgD,oBAC3CrgD,KAAKtJ,OAAOiB,KAAK+S,IAAI,uBAAwB1K,KAAKygD,YAClDzgD,KAAKtJ,OAAOiB,KAAK+S,IAAI,gBAAiB1K,KAAK8wC,gBAU/CqP,EAAetjD,UAAUyjD,qBAAuB,SAAUv9C,GAWtD,IAAK,IAVDkvC,EAAajyC,KAAKtJ,OAAOiB,KAAKugB,gBAG9BwoC,EAAiB1gD,KAAKtJ,OAAOiB,KAAKo7C,qBAA4B,eAC9D4N,EAAc,IAAIC,cAAYF,EAAgB,KAAM1gD,KAAKtJ,OAAOiB,MAChEmQ,EAAO9H,KAAKtJ,OAAOmI,UACnBmyB,EAAWjuB,EAAK7I,QAAU4N,EAAKvQ,OAAS,EAAI,QAAU,SACtD08B,EAAOj0B,KAAKtJ,OAAOiB,KAAKiI,aACxBihD,EAAkB7gD,KAAKtJ,OAAOiB,KAAKo7C,qBAAiC,aAAEhwC,EAAK8G,UAAW9G,GACtF+9C,KACKzpD,EAAI,EAAGA,EAAIwpD,EAAgBtpD,OAAQF,IACxCypD,EAAiBtoD,KAAKmoD,EAAY/6B,OAAOi7B,EAAgBxpD,GAAI48B,IAEjEge,EAAW90C,OAAO4E,MAAMkwC,GAAalvC,EAAK7I,MAAQ,EAAG,GAAGX,OAAOsnD,IAC/D,IAASxpD,EAAI,EAAGA,EAAIypD,EAAiBvpD,OAAQF,IACxB,UAAb25B,EACAlpB,EAAK/E,EAAK7I,MAAQ7C,GAAG25B,GAAU8vB,EAAiBzpD,IAGhDyQ,EAAK/E,EAAK7I,MAAQ7C,EAAI,GAAG25B,GAAU8vB,EAAiBzpD,IAExDyQ,EAAK3K,OAAO4F,EAAK7I,MAAQ,EAAI7C,EAAG,EAAGypD,EAAiBzpD,IAExDq7C,gBAAc1yC,KAAKtJ,OAAOiB,KAAMqI,KAAKtJ,OAAOiB,KAAKugB,gBAAiBlY,KAAKtJ,OAAOiB,KAAKkH,UAAW,IAOlGshD,EAAetjD,UAAUi0C,aAAe,WACpC,GAAI9wC,KAAKtJ,OAAO4wB,uBAAuBmrB,cAAgB/6C,oBAAkBsI,KAAKtJ,OAAOqF,YAAa,CAE9FiE,KAAKtJ,OAAOqF,WAAsB,YAAEiE,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOmI,UAAWmB,KAAKtJ,OAAOyF,yBAChG6D,KAAKtJ,OAAOuI,oBACZe,KAAKtJ,OAAOqF,WAAsB,YAAEiE,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOyY,qBAAsBnP,KAAKtJ,OAAOyF,2BAa3HgkD,EAAetjD,UAAUwjD,mBAAqB,SAAUlX,GACpD,IAAI1vC,EAAK,IAAI7C,cAAYuyC,EAAe71B,QACpCna,EAAW,IAAI0I,YAAU,WAAY,WAAY,MAAM6nC,GAAG,WAAY,gBAAYvsB,GAClF4mB,EAAatqC,EAAGwc,cAAa,IAAIxB,SAAQI,MAAM1b,IAC/C8gB,EAAa5b,WAAS,aAAc8qC,EAAelvB,YAGnDhhB,IAFUoF,WAAS,UAAW2B,KAAKtJ,OAAOiB,KAAKo7C,sBAC7BztB,KAAK,SAAUrrB,GAAS,OAAOA,IAAUggB,EAAWpa,iBACrCG,KAAKtJ,OAAOuC,cAGjD,GAFA+G,KAAK+jC,WAAaA,EAClBoF,EAAe96B,MAAQ01B,EAAWxsC,OAC9B8G,WAAS,aAAc8qC,EAAelvB,YACtCkvB,EAAe71B,OAASywB,MAEvB,CACD,IAAIvvB,EAAQ,IAAIC,QACZ+9B,EAAUxyC,KAAKtJ,OAAO4wB,uBAAuBmrB,YAC7CD,GAAWxyC,KAAKtJ,OAAO4wB,uBAAuBy5B,cAAgB/gD,KAAKtJ,OAAO4wB,uBAAuB05B,YACjGhhD,KAAKtJ,OAAO4wB,uBAAuBy5B,cAAgB/gD,KAAKtJ,OAAO4wB,uBAAuB05B,WAE1F,IAAI1X,EAAOrwC,EACP+G,KAAKtJ,OAAOoa,aAAay4B,SAAWvpC,KAAKtJ,OAAO4wB,uBAAuBy5B,cACvE/gD,KAAKtJ,OAAOoa,aAAay4B,SACzB7qB,EAAU1e,KAAKtJ,OAAOiB,KAAKmZ,aAAawI,YAC5C,GAAK5hB,oBAAkBuiB,GAkBnBzF,EAAQA,EAAMgF,KAAKkF,EAAS4qB,OAlBI,CAChC,IAAImP,EAAYp6C,WAAS,YAAa2B,KAAKtJ,OAAOiB,KAAKo7C,sBACnDkO,EAAa5iD,WAAS,aAAc2B,KAAKtJ,OAAOiB,KAAKo7C,sBACzD,GAAKP,GAAsC,WAA3Bv4B,EAAWpa,YAQvB2U,EAHKg+B,GAAsC,WAA3Bv4B,EAAWpa,aACC,SAA3Boa,EAAWpa,aAAgD,QAAtBoa,EAAW3e,QACjDkZ,EAAQA,EAAM60B,KAAK4X,IACLzX,KAAKxpC,KAAKtJ,OAAO4wB,uBAAuBy5B,cAAgB/gD,KAAKtJ,OAAOoa,aAAay4B,UAGvF/0B,EAAMgF,KAAKkF,EAAS4qB,OAXqB,CACjD,IAAID,EAAOoP,EAAYx+B,EAAWxb,KAAKlH,OAAS,EAC5CiyC,EAAOvvB,EAAWxb,KAAKlH,OAC3Bid,EAAQA,EAAM60B,KAAKA,GAAMG,KAAKA,IActC/vC,EAAG9C,WAAW8E,KAAOsoC,EAChByO,GAAY96C,oBAAkBuiB,IAA0C,SAA3BA,EAAWpa,aAAgD,QAAtBoa,EAAW3e,OAI9F6tC,EAAe71B,OAAS7Z,EAAGwc,aAAazB,GAHxC20B,EAAe71B,QAAU2G,EAAWxb,MAM5CuB,KAAKtJ,OAAOyb,OAAO,eAAgBg3B,IAUvCgX,EAAetjD,UAAU2jD,oBAAsB,SAAUz9C,GACrD,IACI+vC,EAA0B9yC,KAAKtJ,OAAOiB,KAAKo7C,qBAAiC,wBAC5Ez6C,EAAOD,OAAOC,KAAKw6C,GACvB,GAA2B,WAAvB/vC,EAAKrF,EAAEmC,aAA4BkD,EAAKuQ,OAAO/b,OAAS,EACxD,IAAK,IAAIF,EAAI,EAAGA,EAAI0L,EAAKuQ,OAAO/b,OAAQF,IACpCy7C,EAAwBx6C,EAAKA,EAAKf,OAAS,IAAIiB,KAAKuK,EAAKuQ,OAAOjc,KAU5E8oD,EAAetjD,UAAU0jD,sBAAwB,SAAUx9C,GACvD,GAAyB,WAArBA,EAAKlD,YAA0B,CAC/B,IAAIiI,EAAO9H,KAAKtJ,OAAOiB,KAAKugB,gBACxBgpC,EAAUlhD,KAAKtJ,OAAOmI,UACtBJ,EAAOsE,EAAKtE,gBAAgB/B,MAAQqG,EAAKtE,MAAQsE,EAAKtE,MACtD0iD,EAAWnhD,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAE1D,GADAyE,KAAKohD,WAAWF,EAASp5C,EAAMrJ,EAAM0iD,GAAU,GAC3CnhD,KAAKtJ,OAAOuI,mBAAqB,EAAG,CACpC,IAAI0wC,EAAQ3vC,KAAKtJ,OAAOiB,KAAK46C,uBACzB8O,EAAWrhD,KAAKtJ,OAAOiB,KAAKu/B,iBAChCl3B,KAAKohD,WAAWC,EAAU1R,EAAOlxC,EAAM0iD,MAcnDhB,EAAetjD,UAAUukD,WAAa,SAAUF,EAASp5C,EAAMrJ,EAAM0iD,EAAUloB,GAgB3E,IAAK,IAfD7xB,EAAQpH,KAERpD,EAAU,SAAUvF,GACpByQ,EAAKrK,OAAO,SAAUC,EAAGxD,GACrB,GAAIwD,EAAEe,KAAK0iD,KAAc1iD,EAAKpH,GAAG8pD,GAAW,CACxC,GAAIloB,EAAU,CACV,IAAIzf,EAAO7C,KAAKC,MAAM1c,EAAQ,GAAKkN,EAAM1Q,OAAOiB,KAAKmZ,aAAay4B,UAClEniC,EAAM1Q,OAAOiB,KAAKo7C,qBAAiD,6BAAEv5B,EAAMtf,GAE/E4N,EAAK3K,OAAOjD,EAAO,GACnBwrB,SAAOw7B,EAAQhnD,IACfgnD,EAAQ/jD,OAAOjD,EAAO,OAIzB7C,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAC7BuF,EAAQvF,IAMhB8oD,EAAetjD,UAAU4jD,WAAa,SAAU7O,GAC5C,IAKI0P,EAJArnC,EAAa23B,EAAU7uC,KAAKrF,EAC5BiB,EAAMizC,EAAUjzC,IAChB+hD,EAAiB1gD,KAAKtJ,OAAOiB,KAAKo7C,qBAA4B,eAC9D4N,EAAc,IAAIC,cAAYF,EAAgB,KAAM1gD,KAAKtJ,OAAOiB,MAEhEgiB,EAAc3Z,KAAKtJ,OAAOyF,wBAC1BolD,EAAc3P,EAAU4P,UAAYxhD,KAAKtJ,OAAOiB,KAAKu/B,iBACnDl3B,KAAKtJ,OAAOiB,KAAKi8B,cAEnB0tB,EADA1P,EAAU6P,cACFzhD,KAAKtJ,OAAOwc,QAAQpI,cAAc,2BAA2BA,cAAc,SAG1E9K,KAAKtJ,OAAOiB,KAAK+pD,eAAmE9P,EAAU4P,UACjGxhD,KAAKtJ,OAAOiB,KAAKgqD,2BAA2B72C,cAAc,SAC1D9K,KAAKtJ,OAAOiB,KAAKiqD,0BAA0B92C,cAAc,SAFpB9K,KAAKtJ,OAAO+8B,aAAa3oB,cAAc,SAIlF9K,KAAKtJ,OAAOsI,aACZsiD,EAAQ1P,EAAUiQ,cAAsE,QAAtD7hD,KAAKtJ,OAAOiB,KAAKo7C,qBAAqBlzC,cAChE+xC,EAAUiQ,cAAsE,QAAtD7hD,KAAKtJ,OAAOiB,KAAKo7C,qBAAqBlzC,YACjEG,KAAKtJ,OAAOiB,KAAK+pD,eACd9P,EAAU4P,UAAYxhD,KAAKtJ,OAAOiB,KAAKmqD,0BAA0Bh3C,cAAc,SAC3E8mC,EAAU6P,cAAgBzhD,KAAKtJ,OAAOwc,QAAQpI,cAAc,0BAA0BA,cAAc,SAChG9K,KAAKtJ,OAAOiB,KAAKoqD,yBAAyBj3C,cAAc,SAHjC9K,KAAKtJ,OAAOwV,mBAAmBpB,cAAc,SAGDw2C,GAKzF,IAAK,IAHDtwB,EAEA4hB,EAAc5yC,KAAKtJ,OAAOqF,WAAsB,YAC3C1E,EAAI,EAAGA,EAAIsH,EAAIpH,OAAQF,IAAK,CACjC,IAAI2qD,EAASrB,EAAY/6B,OAAOjnB,EAAItH,GAAI2I,KAAKtJ,OAAOiB,KAAKiI,cAC1B,SAA3Bqa,EAAWpa,aAAgD,QAAtBoa,EAAW3e,QACW,IAAvD+C,WAAS,gBAAiB2B,KAAKtJ,OAAOqF,aAAkE,QAA5CiE,KAAKtJ,OAAOmF,aAAaQ,eACrC,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBAChF20B,EAAW,QACX4hB,GAAex5C,EAAoBugB,EAAYi5B,EAAc,IAAIr7C,OACjB,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,iBACzBu2C,GAAe,GAEnB2O,EAAY3O,GAAa5hB,GAAUgxB,IAEc,UAA5ChiD,KAAKtJ,OAAOmF,aAAaQ,iBAC9B20B,EAAW,SACXuwB,EAAYvhD,KAAKtJ,OAAOqF,WAAsB,aAAGi1B,GAAUgxB,IAGd,WAA5ChiD,KAAKtJ,OAAOmF,aAAaQ,eAC9BilD,EAAM3zC,YAAYq0C,GAGlBV,EAAM10C,aAAao1C,EAAQV,EAAMhsB,mBAGL,WAA3Brb,EAAWpa,aAChByhD,EAAM3zC,YAAYq0C,GAG1BpQ,EAAU5oC,QAAS,GAQvBm3C,EAAetjD,UAAU+M,QAAU,WAC/B5J,KAAKwK,uBAEF21C,0BrChTO,oCAIK,wHAYG,4IAcF,sCAID,uCAIC,sJAcA,2BAEC,wCAEY,qSAgCb,kDAIQ,qJAYG,wDAId,4CAIA,yBAEK"}