{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/legend/legend.js","../../src/circular-gauge/model/pdf-export.js","../../src/circular-gauge/model/image-export.js","../../src/circular-gauge/model/print.js","../../src/circular-gauge/axes/gradient.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id of the text.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n *\n * @param {HTMLElement} element - Specifies the html element.\n * @returns {ClientRect} - Returns the client rect.\n * @private\n */\nexport function measureElementRect(element) {\n    document.body.appendChild(element);\n    var bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        // eslint-disable-next-line max-len\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (gauge.isBlazor) {\n            var numb = template.match(/\\d+/g).toString();\n            template = numb ? template.replace(numb, '') : template;\n            template = template.indexOf('/') !== -1 ? template.replace('/', '') : template;\n        }\n        if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the file name.\n * @param {ExportType} type - Specifies the export type.\n * @param {string} url - Specifies the url.\n * @param {boolean} isDownload - Specifies the boolean value.\n * @returns {void}\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#6C757D',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/member-delimiter-style */\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement, updateBlazorTemplate, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(this.elementId + '_Secondary_Element'))) {\n            document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount && !this.gauge.isBlazor) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.gauge.renderReactTemplates();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        if (this.gauge.isBlazor) {\n            var cancel = argsData.cancel, name_1 = argsData.name, content = argsData.content, textStyle = argsData.textStyle;\n            argsData = { cancel: cancel, name: name_1, content: content, annotation: annotation, textStyle: textStyle };\n        }\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, _this.gauge);\n                if (templateFn && (!_this.gauge.isBlazor ? templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length : {})) {\n                    templateElement = Array.prototype.slice.call(templateFn(!_this.gauge.isBlazor ? axis : {}, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');\n                if (_this.gauge.isBlazor && annotationIndex === (_this.gauge.axes[axisIndex].annotations.length - 1) &&\n                    element && parentElement) {\n                    parentElement.appendChild(element);\n                    for (var i = 0; i < _this.gauge.axes[axisIndex].annotations.length; i++) {\n                        updateBlazorTemplate(_this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + i, 'ContentTemplate', _this.gauge.axes[axisIndex].annotations[i]);\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize, stringToNumber } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            if (this.gauge.isBlazor) {\n                var name_1 = tooltipArgs.name, cancel = tooltipArgs.cancel, content = tooltipArgs.content, location_1 = tooltipArgs.location, tooltip = tooltipArgs.tooltip, event_1 = tooltipArgs.event, appendInBodyTag = tooltipArgs.appendInBodyTag, type = tooltipArgs.type;\n                tooltipArgs = { name: name_1, cancel: cancel, content: content, location: location_1, tooltip: tooltip, event: event_1, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    tooltipArgs.tooltip.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                    tooltipArgs.tooltip.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        tooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, tooltipArgs.tooltip.textStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            if (this.gauge.isBlazor) {\n                var name_2 = rangeTooltipArgs.name, cancel = rangeTooltipArgs.cancel, content = rangeTooltipArgs.content, location_2 = rangeTooltipArgs.location, tooltip = rangeTooltipArgs.tooltip, event_2 = rangeTooltipArgs.event, appendInBodyTag = rangeTooltipArgs.appendInBodyTag, type = rangeTooltipArgs.type;\n                rangeTooltipArgs = { name: name_2, cancel: cancel, content: content, location: location_2, tooltip: tooltip, event: event_2, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipArgs.tooltip.rangeSettings.textStyle, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            if (this.gauge.isBlazor) {\n                var name_3 = annotationTooltipArgs.name, cancel = annotationTooltipArgs.cancel, content = annotationTooltipArgs.content, location_3 = annotationTooltipArgs.location, tooltip = annotationTooltipArgs.tooltip, event_3 = annotationTooltipArgs.event, appendInBodyTag = annotationTooltipArgs.appendInBodyTag, type = annotationTooltipArgs.type;\n                annotationTooltipArgs = { name: name_3, cancel: cancel, content: content, location: location_3, tooltip: tooltip, event: event_3, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        annotationTooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.clearTemplate();\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border,\n            blazorTemplate: { name: 'TooltipTemplate', parent: gauge.tooltip }\n        });\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {string} text - Specifies the text.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getDegree, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} textHeight - Specifies the text height.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @param {number} angle - Specifies the angle.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/dot-notation */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? startAngle + (axis.rangeGap / Math.PI) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    endAngle - (axis.rangeGap / Math.PI) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc, getLocationFromAngle, appendPath, textElement, PathOption, TextOption, calculateShapes, Size, stringToNumber } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                range = axis.visibleRange;\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                _this.setPointerValue(axis, pointer, pointer.currentValue);\n                pointerElement.appendChild(childElement);\n                if (animate || pointer.animation.enable) {\n                    _this.doPointerAnimation(pointer, axis);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            // eslint-disable-next-line no-constant-condition\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    var textangle = getAngleFromValue(pointer.value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n                    var textlocation = getLocationFromAngle((pointer.markerShape === 'Text') ? textangle : 0, pointer.currentRadius, _this.gauge.midPoint);\n                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                    element.setAttribute('x', String(textlocation.x));\n                    element.setAttribute('y', String(textlocation.y));\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            textElement(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer\n     * @param {number} radius - Specifies the radius\n     * @param {number} innerRadius - Specifies the innerRadius\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} radius - Specifies the radius.\n     * @param {number} innerRadius - Specifies the innerRadius.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        // eslint-disable-next-line prefer-const\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerX) && isNullOrUndefined(this_1.gauge.centerY)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            if (this_1.gauge.isBlazor) {\n                var cancel = args.cancel, name_1 = args.name, currentRadius_1 = args.currentRadius, midPoint = args.midPoint;\n                args = { cancel: cancel, name: name_1, currentRadius: currentRadius_1, midPoint: midPoint };\n            }\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                if (!_this.gauge.isBlazor) {\n                    _this.calculateVisibleLabels(axis);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var _this = this;\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                if (this_2.gauge.isBlazor) {\n                    var axis_1 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                    argsData = blazorArgsData;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                        if (i === max && _this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                            var currentLast = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value\n                                : null;\n                            if (currentLast === axis.visibleRange.max || axis.showLastLabel !== true) {\n                                _this.getMaxLabelWidth(_this.gauge, axis);\n                                axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                                axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                                _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                            }\n                        }\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            if (this.gauge.isBlazor) {\n                var axis_2 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                argsData = blazorArgsData;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                    if (_this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                        _this.getMaxLabelWidth(_this.gauge, axis);\n                        axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                        axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                        _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                    }\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { appendPath, textElement, PathOption, TextOption, calculateShapes, textTrim, removeElement } from '../utils/helper';\nimport { Rect, Size, GaugeLocation, stringToNumber, measureText, RectOption, getElement, showTooltip } from '../utils/helper';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                rangeElement.style.visibility = 'visible';\n                shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex].fill);\n                textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                rangeElement.style.visibility = 'hidden';\n                shapeElement.setAttribute('fill', hiddenColor);\n                textElement_1.setAttribute('fill', hiddenColor);\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @param {number} legendX - Specifies the legendX.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @param {boolean} redraw - Specifies the boolean value.\n     * @param {boolean} isAnimate - Specifies the boolean value.\n     * @param {string} x - Specifies the x value.\n     * @param {string} y - Specifies the y value.\n     * @param {GaugeLocation} start - Specifies the start value.\n     * @param {string} direction - Specifies the direction.\n     * @param {boolean} forceAnimate - Specifies the boolean value.\n     * @param {boolean} isRect - Specifies the rect value.\n     * @param {Rect} previousRect - Specifies the previous rect value.\n     * @param {number} animateDuration - Specifies the animate duration.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {CircularGauge} circulargauge - Specifies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = _this.control.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'TailwindDark')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable max-len */\n/* eslint-disable brace-style */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation } from './utils/helper';\nimport { getValueFromAngle, removeElement, getRange } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.isBlazor = isBlazor();\n        this.unWireEvents();\n        this.trigger(load, this.isBlazor ? null : { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var dragBlazorArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    dragBlazorArgs = {\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        pointerIndex: dragPointInd,\n                        axisIndex: dragAxisInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = dragBlazorArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    dragBlazorArgs = {\n                        name: dragMove,\n                        type: rangeMove,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : this.activeRange.start);\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : this.activeRange.end) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: pointerStart,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: rangeStart,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var blazorArgs = {\n            cancel: args.cancel, target: args.target, name: args.name, x: args.x, y: args.y\n        };\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, this.isBlazor ? blazorArgs : args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: pointerEnd,\n                currentValue: this.activePointer.currentValue,\n                pointerIndex: pointerInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: rangeEnd,\n                rangeIndex: rangeInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: !this.isBlazor ? this : null,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        if (!isNullOrUndefined(this.element)) {\n            if (this.element.classList.contains('e-circulargauge')) {\n                this.createSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            args.currentSize = this.availableSize;\n            this.animatePointer = false;\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            else if (this.element.classList.contains('e-circulargauge')) {\n                this.resizeTo = window.setTimeout(function () {\n                    _this.createSvg();\n                    _this.calculateBounds();\n                    _this.renderElements();\n                    args.currentSize = _this.availableSize;\n                    if (_this.isBlazor) {\n                        var previousSize = args.previousSize, name_1 = args.name, currentSize = args.currentSize;\n                        args = { previousSize: previousSize, name: name_1, currentSize: currentSize };\n                    }\n                    _this.trigger(resized, args);\n                }, 500);\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        for (var i = 0; i < this.axes.length; i++) {\n            for (var j = 0; j < this.axes[i].annotations.length; j++) {\n                resetBlazorTemplate(this.element.id + '_Axis' + i + '_ContentTemplate' + j, '_ContentTemplate');\n            }\n        }\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerX !== null ?\n                stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerX !== null ?\n                stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerY !== null ?\n                stringToNumber(this.centerY, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var bottom = margin.bottom + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, this.isBlazor ? {} : { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            this.titleStyle.fontWeight = this.titleStyle.fontWeight || this.themeStyle.titleFontWeight;\n            var titleSize = this.titleStyle.size;\n            if (!isNaN(Number(titleSize))) {\n                this.titleStyle.size = titleSize + 'px';\n            }\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param content - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n            if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                secondaryElement.appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param  orientation - Specified the orientation for the exported pdf document.\n     * @param allowDownload - Specifies whether to download as a file.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        range.start = start;\n        range.end = end;\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame && !this.isRangeUpdate) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n        this.isRangeUpdate = false;\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null, fontWeight: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations, index.Legend, index.Print, index.PdfExport, index.ImageExport, index.Gradient);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","roundedCornerRadius","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getCompleteArc","innerRadius","checkMinValue","getCompletePath","getElement","getTemplateFunction","template","templateFn","isBlazor","numb","match","toString","replace","isNaN","parseFloat","querySelectorAll","charAt","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","split","axisIndex","pointerIndex","getRange","rangeIndex","getElementSize","elementSize","tooltipData","templateElement","templateLength","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","calculateShapes","location","shape","url","path","space","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","triggerDownload","fileName","type","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","getRangePalette","theme","palette","toLowerCase","getThemeStyle","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","labelFontFamily","titleFontWeight","fontSize","tooltipFillOpacity","tooltipTextOpacity","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","Annotations","elementId","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","name_1","trigger","observedArgs","length_1","slice","updateLocation","updateBlazorTemplate","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","pointerTooltip","tooltipRect","findPosition","themeStyle","svgTooltip","svgTooltipCreate","arrowInverted","appendTo","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTooltip","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","name_3","location_3","event_3","annotationTooltip","annotationTemplate","elementSizeAn","tooltipPosition","removeTooltip","clearTemplate","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","blazorTemplate","className","child","roundingPlaces","toFixed","addLeft","addTop","addHeight","addWidth","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","minRadius","oldStartValue","oldEndValue","roundStartAngle","roundEndAngle","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","previousValue","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","__rest","s","t","getOwnPropertySymbols","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","this_1","_i","_a","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","currentRadius_1","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","this_2","blazorArgsData","axisLabelRenderSuccess","getMaxLabelWidth","lastLabel","maxVal","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","legendItemsId","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","PdfExport","control","export","orientation","allowDownload","Promise","resolve","reject","userAgent","PdfPageOrientation","Landscape","exportElement","cloneNode","childNodes","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","svgData","outerHTML","image_1","context_1","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","div","forEach","Element","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","dragBlazorArgs","tooltipModule","enableRangeDrag","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","blazorArgs","pointerInd","clientX","clientY","previousSize","currentSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","resetBlazorTemplate","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","titleSize","Number","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component","index.CircularGauge","Inject","index.GaugeTooltip","index.Annotations","index.Legend","index.Print","index.PdfExport","index.ImageExport","index.Gradient"],"mappings":"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"}