{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/legend/legend.js","../src/circular-gauge/model/pdf-export.js","../src/circular-gauge/model/image-export.js","../src/circular-gauge/model/print.js","../src/circular-gauge/axes/gradient.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id of the text.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n *\n * @param {HTMLElement} element - Specifies the html element.\n * @returns {ClientRect} - Returns the client rect.\n * @private\n */\nexport function measureElementRect(element) {\n    document.body.appendChild(element);\n    var bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        // eslint-disable-next-line max-len\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (gauge.isBlazor) {\n            var numb = template.match(/\\d+/g).toString();\n            template = numb ? template.replace(numb, '') : template;\n            template = template.indexOf('/') !== -1 ? template.replace('/', '') : template;\n        }\n        if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the file name.\n * @param {ExportType} type - Specifies the export type.\n * @param {string} url - Specifies the url.\n * @param {boolean} isDownload - Specifies the boolean value.\n * @returns {void}\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#6C757D',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/member-delimiter-style */\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement, updateBlazorTemplate, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(this.elementId + '_Secondary_Element'))) {\n            document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount && !this.gauge.isBlazor) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.gauge.renderReactTemplates();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        if (this.gauge.isBlazor) {\n            var cancel = argsData.cancel, name_1 = argsData.name, content = argsData.content, textStyle = argsData.textStyle;\n            argsData = { cancel: cancel, name: name_1, content: content, annotation: annotation, textStyle: textStyle };\n        }\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, _this.gauge);\n                if (templateFn && (!_this.gauge.isBlazor ? templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length : {})) {\n                    templateElement = Array.prototype.slice.call(templateFn(!_this.gauge.isBlazor ? axis : {}, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');\n                if (_this.gauge.isBlazor && annotationIndex === (_this.gauge.axes[axisIndex].annotations.length - 1) &&\n                    element && parentElement) {\n                    parentElement.appendChild(element);\n                    for (var i = 0; i < _this.gauge.axes[axisIndex].annotations.length; i++) {\n                        updateBlazorTemplate(_this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + i, 'ContentTemplate', _this.gauge.axes[axisIndex].annotations[i]);\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize, stringToNumber } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            if (this.gauge.isBlazor) {\n                var name_1 = tooltipArgs.name, cancel = tooltipArgs.cancel, content = tooltipArgs.content, location_1 = tooltipArgs.location, tooltip = tooltipArgs.tooltip, event_1 = tooltipArgs.event, appendInBodyTag = tooltipArgs.appendInBodyTag, type = tooltipArgs.type;\n                tooltipArgs = { name: name_1, cancel: cancel, content: content, location: location_1, tooltip: tooltip, event: event_1, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    tooltipArgs.tooltip.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                    tooltipArgs.tooltip.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        tooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, tooltipArgs.tooltip.textStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            if (this.gauge.isBlazor) {\n                var name_2 = rangeTooltipArgs.name, cancel = rangeTooltipArgs.cancel, content = rangeTooltipArgs.content, location_2 = rangeTooltipArgs.location, tooltip = rangeTooltipArgs.tooltip, event_2 = rangeTooltipArgs.event, appendInBodyTag = rangeTooltipArgs.appendInBodyTag, type = rangeTooltipArgs.type;\n                rangeTooltipArgs = { name: name_2, cancel: cancel, content: content, location: location_2, tooltip: tooltip, event: event_2, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipArgs.tooltip.rangeSettings.textStyle, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            if (this.gauge.isBlazor) {\n                var name_3 = annotationTooltipArgs.name, cancel = annotationTooltipArgs.cancel, content = annotationTooltipArgs.content, location_3 = annotationTooltipArgs.location, tooltip = annotationTooltipArgs.tooltip, event_3 = annotationTooltipArgs.event, appendInBodyTag = annotationTooltipArgs.appendInBodyTag, type = annotationTooltipArgs.type;\n                annotationTooltipArgs = { name: name_3, cancel: cancel, content: content, location: location_3, tooltip: tooltip, event: event_3, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        annotationTooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.clearTemplate();\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border,\n            blazorTemplate: { name: 'TooltipTemplate', parent: gauge.tooltip }\n        });\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {string} text - Specifies the text.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getDegree, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} textHeight - Specifies the text height.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @param {number} angle - Specifies the angle.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/dot-notation */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? startAngle + (axis.rangeGap / Math.PI) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    endAngle - (axis.rangeGap / Math.PI) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc, getLocationFromAngle, appendPath, textElement, PathOption, TextOption, calculateShapes, Size, stringToNumber } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                range = axis.visibleRange;\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                _this.setPointerValue(axis, pointer, pointer.currentValue);\n                pointerElement.appendChild(childElement);\n                if (animate || pointer.animation.enable) {\n                    _this.doPointerAnimation(pointer, axis);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            // eslint-disable-next-line no-constant-condition\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    var textangle = getAngleFromValue(pointer.value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n                    var textlocation = getLocationFromAngle((pointer.markerShape === 'Text') ? textangle : 0, pointer.currentRadius, _this.gauge.midPoint);\n                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                    element.setAttribute('x', String(textlocation.x));\n                    element.setAttribute('y', String(textlocation.y));\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            textElement(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer\n     * @param {number} radius - Specifies the radius\n     * @param {number} innerRadius - Specifies the innerRadius\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} radius - Specifies the radius.\n     * @param {number} innerRadius - Specifies the innerRadius.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        // eslint-disable-next-line prefer-const\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerX) && isNullOrUndefined(this_1.gauge.centerY)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            if (this_1.gauge.isBlazor) {\n                var cancel = args.cancel, name_1 = args.name, currentRadius_1 = args.currentRadius, midPoint = args.midPoint;\n                args = { cancel: cancel, name: name_1, currentRadius: currentRadius_1, midPoint: midPoint };\n            }\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                if (!_this.gauge.isBlazor) {\n                    _this.calculateVisibleLabels(axis);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var _this = this;\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                if (this_2.gauge.isBlazor) {\n                    var axis_1 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                    argsData = blazorArgsData;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                        if (i === max && _this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                            var currentLast = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value\n                                : null;\n                            if (currentLast === axis.visibleRange.max || axis.showLastLabel !== true) {\n                                _this.getMaxLabelWidth(_this.gauge, axis);\n                                axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                                axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                                _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                            }\n                        }\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            if (this.gauge.isBlazor) {\n                var axis_2 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                argsData = blazorArgsData;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                    if (_this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                        _this.getMaxLabelWidth(_this.gauge, axis);\n                        axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                        axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                        _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                    }\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { appendPath, textElement, PathOption, TextOption, calculateShapes, textTrim, removeElement } from '../utils/helper';\nimport { Rect, Size, GaugeLocation, stringToNumber, measureText, RectOption, getElement, showTooltip } from '../utils/helper';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                rangeElement.style.visibility = 'visible';\n                shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex].fill);\n                textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                rangeElement.style.visibility = 'hidden';\n                shapeElement.setAttribute('fill', hiddenColor);\n                textElement_1.setAttribute('fill', hiddenColor);\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @param {number} legendX - Specifies the legendX.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @param {boolean} redraw - Specifies the boolean value.\n     * @param {boolean} isAnimate - Specifies the boolean value.\n     * @param {string} x - Specifies the x value.\n     * @param {string} y - Specifies the y value.\n     * @param {GaugeLocation} start - Specifies the start value.\n     * @param {string} direction - Specifies the direction.\n     * @param {boolean} forceAnimate - Specifies the boolean value.\n     * @param {boolean} isRect - Specifies the rect value.\n     * @param {Rect} previousRect - Specifies the previous rect value.\n     * @param {number} animateDuration - Specifies the animate duration.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {CircularGauge} circulargauge - Specifies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = _this.control.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'TailwindDark')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable max-len */\n/* eslint-disable brace-style */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation } from './utils/helper';\nimport { getValueFromAngle, removeElement, getRange } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.isBlazor = isBlazor();\n        this.unWireEvents();\n        this.trigger(load, this.isBlazor ? null : { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var dragBlazorArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    dragBlazorArgs = {\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        pointerIndex: dragPointInd,\n                        axisIndex: dragAxisInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = dragBlazorArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    dragBlazorArgs = {\n                        name: dragMove,\n                        type: rangeMove,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : this.activeRange.start);\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : this.activeRange.end) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: pointerStart,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: rangeStart,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var blazorArgs = {\n            cancel: args.cancel, target: args.target, name: args.name, x: args.x, y: args.y\n        };\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, this.isBlazor ? blazorArgs : args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: pointerEnd,\n                currentValue: this.activePointer.currentValue,\n                pointerIndex: pointerInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: rangeEnd,\n                rangeIndex: rangeInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: !this.isBlazor ? this : null,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        if (!isNullOrUndefined(this.element)) {\n            if (this.element.classList.contains('e-circulargauge')) {\n                this.createSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            args.currentSize = this.availableSize;\n            this.animatePointer = false;\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            else if (this.element.classList.contains('e-circulargauge')) {\n                this.resizeTo = window.setTimeout(function () {\n                    _this.createSvg();\n                    _this.calculateBounds();\n                    _this.renderElements();\n                    args.currentSize = _this.availableSize;\n                    if (_this.isBlazor) {\n                        var previousSize = args.previousSize, name_1 = args.name, currentSize = args.currentSize;\n                        args = { previousSize: previousSize, name: name_1, currentSize: currentSize };\n                    }\n                    _this.trigger(resized, args);\n                }, 500);\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        for (var i = 0; i < this.axes.length; i++) {\n            for (var j = 0; j < this.axes[i].annotations.length; j++) {\n                resetBlazorTemplate(this.element.id + '_Axis' + i + '_ContentTemplate' + j, '_ContentTemplate');\n            }\n        }\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerX !== null ?\n                stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerX !== null ?\n                stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerY !== null ?\n                stringToNumber(this.centerY, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var bottom = margin.bottom + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, this.isBlazor ? {} : { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            this.titleStyle.fontWeight = this.titleStyle.fontWeight || this.themeStyle.titleFontWeight;\n            var titleSize = this.titleStyle.size;\n            if (!isNaN(Number(titleSize))) {\n                this.titleStyle.size = titleSize + 'px';\n            }\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param content - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n            if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                secondaryElement.appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param  orientation - Specified the orientation for the exported pdf document.\n     * @param allowDownload - Specifies whether to download as a file.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        range.start = start;\n        range.end = end;\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame && !this.isRangeUpdate) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n        this.isRangeUpdate = false;\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null, fontWeight: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","roundedCornerRadius","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getCompleteArc","innerRadius","checkMinValue","getCompletePath","getElement","getTemplateFunction","template","templateFn","isBlazor","numb","match","toString","replace","isNaN","parseFloat","querySelectorAll","charAt","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","split","axisIndex","pointerIndex","getRange","rangeIndex","getElementSize","elementSize","tooltipData","templateElement","templateLength","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","calculateShapes","location","shape","url","path","space","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","triggerDownload","fileName","type","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","gaugeMouseLeave","dragStart","dragMove","dragEnd","Annotations","elementId","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","name_1","trigger","observedArgs","length_1","slice","updateLocation","updateBlazorTemplate","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","tooltipRect","findPosition","themeStyle","tooltipFontColor","tooltipTextOpacity","svgTooltip","svgTooltipCreate","arrowInverted","tooltipFillOpacity","appendTo","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTemplate","elementSizeAn","tooltipPosition","removeTooltip","clearTemplate","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","tooltipFillColor","blazorTemplate","className","child","roundingPlaces","toFixed","addLeft","addTop","addHeight","addWidth","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","lineColor","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","labelColor","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","labelFontFamily","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","minorTickColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTickColor","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","theme","palette","toLowerCase","getRangePalette","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","needleColor","needleTailColor","capColor","minRadius","oldStartValue","oldEndValue","roundStartAngle","roundEndAngle","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","markerHeight","imageUrl","pointerColor","drawRangeBarPointer","gradientBarColor","previousValue","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","__rest","s","t","getOwnPropertySymbols","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_loop_1","this_1","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","currentRadius_1","calculateVisibleLabels","_i","_a","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","_loop_2","this_2","blazorArgsData","axisLabelRenderSuccess","getMaxLabelWidth","lastLabel","maxVal","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","PdfExport","control","export","orientation","allowDownload","Promise","resolve","reject","userAgent","PdfPageOrientation","Landscape","exportElement","cloneNode","backgroundColor","childNodes","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","svgData","outerHTML","image_1","context_1","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","div","forEach","Element","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","titleFontColor","titleFontWeight","fontSize","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","dragBlazorArgs","tooltipModule","enableRangeDrag","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","blazorArgs","pointerInd","clientX","clientY","previousSize","currentSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","resetBlazorTemplate","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","titleSize","Number","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component"],"mappings":"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"}